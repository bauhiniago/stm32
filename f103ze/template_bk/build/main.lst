ARM GAS  /tmp/ccQGa8z1.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.touchdev_test.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 783A2564 		.ascii	"x:%d y:%d\015\012\000"
  18      20793A25 
  18      640D0A00 
  19              		.section	.text.touchdev_test,"ax",%progbits
  20              		.align	1
  21              		.global	touchdev_test
  22              		.arch armv7-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	touchdev_test:
  29              	.LFB68:
  30              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** #include "fsmc.h"
  26:Core/Src/main.c **** 
ARM GAS  /tmp/ccQGa8z1.s 			page 2


  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <stdio.h>
  30:Core/Src/main.c **** #include <string.h>
  31:Core/Src/main.c **** #include "LCD.h"
  32:Core/Src/main.c **** #include "GT9147.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** void touchdev_test(void)
  59:Core/Src/main.c **** {
  31              		.loc 1 59 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 24
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 86B0     		sub	sp, sp, #24
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 32
  43 0004 2EE0     		b	.L6
  44              	.LVL0:
  45              	.L3:
  60:Core/Src/main.c **** 	uint8_t t=0;
  61:Core/Src/main.c **** 	uint8_t i=0;	  	    
  62:Core/Src/main.c ****  	uint16_t lastpos[5][2];		//最后一次的数据 
  63:Core/Src/main.c **** 	while(1)
  64:Core/Src/main.c **** 	{
  65:Core/Src/main.c **** 		touchdev.scan(0);
  66:Core/Src/main.c **** 		for(t=0;t<5;t++)
  67:Core/Src/main.c **** 		{
  68:Core/Src/main.c **** 			if((touchdev.sta)&(1<<t))
ARM GAS  /tmp/ccQGa8z1.s 			page 3


  69:Core/Src/main.c **** 			{
  70:Core/Src/main.c ****                 //printf("X坐标:%d,Y坐标:%d\r\n",touchdev.x[0],touchdev.y[0]);
  71:Core/Src/main.c **** 				if(touchdev.x[t]<lcddev.width&&touchdev.y[t]<lcddev.height)
  72:Core/Src/main.c **** 				{
  73:Core/Src/main.c **** 					printf("x:%d y:%d\r\n",touchdev.x[0],touchdev.y[0]);
  74:Core/Src/main.c **** 				}
  75:Core/Src/main.c **** 			}else lastpos[t][0]=0XFFFF;
  46              		.loc 1 75 10 view .LVU1
  47              		.loc 1 75 23 is_stmt 0 view .LVU2
  48 0006 4FF6FF72 		movw	r2, #65535
  49 000a 06AB     		add	r3, sp, #24
  50 000c 03EB8403 		add	r3, r3, r4, lsl #2
  51 0010 23F8142C 		strh	r2, [r3, #-20]	@ movhi
  52              	.L4:
  66:Core/Src/main.c **** 		{
  53              		.loc 1 66 15 is_stmt 1 discriminator 2 view .LVU3
  66:Core/Src/main.c **** 		{
  54              		.loc 1 66 16 is_stmt 0 discriminator 2 view .LVU4
  55 0014 0134     		adds	r4, r4, #1
  56              	.LVL1:
  66:Core/Src/main.c **** 		{
  57              		.loc 1 66 16 discriminator 2 view .LVU5
  58 0016 E4B2     		uxtb	r4, r4
  59              	.LVL2:
  60              	.L2:
  66:Core/Src/main.c **** 		{
  61              		.loc 1 66 11 is_stmt 1 discriminator 1 view .LVU6
  66:Core/Src/main.c **** 		{
  62              		.loc 1 66 3 is_stmt 0 discriminator 1 view .LVU7
  63 0018 042C     		cmp	r4, #4
  64 001a 20D8     		bhi	.L8
  68:Core/Src/main.c **** 			{
  65              		.loc 1 68 4 is_stmt 1 view .LVU8
  68:Core/Src/main.c **** 			{
  66              		.loc 1 68 16 is_stmt 0 view .LVU9
  67 001c 144B     		ldr	r3, .L9
  68 001e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
  68:Core/Src/main.c **** 			{
  69              		.loc 1 68 7 view .LVU10
  70 0022 2146     		mov	r1, r4
  71 0024 2341     		asrs	r3, r3, r4
  68:Core/Src/main.c **** 			{
  72              		.loc 1 68 6 view .LVU11
  73 0026 13F0010F 		tst	r3, #1
  74 002a ECD0     		beq	.L3
  71:Core/Src/main.c **** 				{
  75              		.loc 1 71 5 is_stmt 1 view .LVU12
  71:Core/Src/main.c **** 				{
  76              		.loc 1 71 18 is_stmt 0 view .LVU13
  77 002c 231D     		adds	r3, r4, #4
  78 002e 104A     		ldr	r2, .L9
  79 0030 02EB4303 		add	r3, r2, r3, lsl #1
  80 0034 9A88     		ldrh	r2, [r3, #4]
  71:Core/Src/main.c **** 				{
  81              		.loc 1 71 28 view .LVU14
  82 0036 0F4B     		ldr	r3, .L9+4
  83 0038 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/ccQGa8z1.s 			page 4


  71:Core/Src/main.c **** 				{
  84              		.loc 1 71 7 view .LVU15
  85 003a 9A42     		cmp	r2, r3
  86 003c EAD2     		bcs	.L4
  71:Core/Src/main.c **** 				{
  87              		.loc 1 71 46 discriminator 1 view .LVU16
  88 003e 0831     		adds	r1, r1, #8
  89 0040 0B4B     		ldr	r3, .L9
  90 0042 03EB4101 		add	r1, r3, r1, lsl #1
  91 0046 CA88     		ldrh	r2, [r1, #6]
  71:Core/Src/main.c **** 				{
  92              		.loc 1 71 56 discriminator 1 view .LVU17
  93 0048 0A4B     		ldr	r3, .L9+4
  94 004a 5B88     		ldrh	r3, [r3, #2]
  71:Core/Src/main.c **** 				{
  95              		.loc 1 71 34 discriminator 1 view .LVU18
  96 004c 9A42     		cmp	r2, r3
  97 004e E1D2     		bcs	.L4
  73:Core/Src/main.c **** 				}
  98              		.loc 1 73 6 is_stmt 1 view .LVU19
  73:Core/Src/main.c **** 				}
  99              		.loc 1 73 39 is_stmt 0 view .LVU20
 100 0050 074B     		ldr	r3, .L9
  73:Core/Src/main.c **** 				}
 101              		.loc 1 73 6 view .LVU21
 102 0052 DA8A     		ldrh	r2, [r3, #22]
 103 0054 9989     		ldrh	r1, [r3, #12]
 104 0056 0848     		ldr	r0, .L9+8
 105 0058 FFF7FEFF 		bl	printf
 106              	.LVL3:
 107 005c DAE7     		b	.L4
 108              	.L8:
  76:Core/Src/main.c **** 		}
  77:Core/Src/main.c **** 		HAL_Delay(5);
 109              		.loc 1 77 3 is_stmt 1 view .LVU22
 110 005e 0520     		movs	r0, #5
 111 0060 FFF7FEFF 		bl	HAL_Delay
 112              	.LVL4:
  63:Core/Src/main.c **** 	{
 113              		.loc 1 63 7 view .LVU23
 114              	.L6:
  62:Core/Src/main.c **** 	while(1)
 115              		.loc 1 62 3 view .LVU24
  63:Core/Src/main.c **** 	{
 116              		.loc 1 63 2 view .LVU25
  65:Core/Src/main.c **** 		for(t=0;t<5;t++)
 117              		.loc 1 65 3 view .LVU26
  65:Core/Src/main.c **** 		for(t=0;t<5;t++)
 118              		.loc 1 65 11 is_stmt 0 view .LVU27
 119 0064 024B     		ldr	r3, .L9
 120 0066 5B68     		ldr	r3, [r3, #4]
  65:Core/Src/main.c **** 		for(t=0;t<5;t++)
 121              		.loc 1 65 3 view .LVU28
 122 0068 0020     		movs	r0, #0
 123 006a 9847     		blx	r3
 124              	.LVL5:
  66:Core/Src/main.c **** 		{
ARM GAS  /tmp/ccQGa8z1.s 			page 5


 125              		.loc 1 66 3 is_stmt 1 view .LVU29
  66:Core/Src/main.c **** 		{
 126              		.loc 1 66 8 is_stmt 0 view .LVU30
 127 006c 0024     		movs	r4, #0
  66:Core/Src/main.c **** 		{
 128              		.loc 1 66 3 view .LVU31
 129 006e D3E7     		b	.L2
 130              	.L10:
 131              		.align	2
 132              	.L9:
 133 0070 00000000 		.word	touchdev
 134 0074 00000000 		.word	lcddev
 135 0078 00000000 		.word	.LC0
 136              		.cfi_endproc
 137              	.LFE68:
 139              		.section	.text.Error_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	Error_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu softvfp
 147              	Error_Handler:
 148              	.LFB71:
  78:Core/Src/main.c **** 	}	
  79:Core/Src/main.c **** }
  80:Core/Src/main.c **** /* USER CODE END PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
ARM GAS  /tmp/ccQGa8z1.s 			page 6


 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_FSMC_Init();
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 117:Core/Src/main.c ****   MX_I2C2_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c ****   HAL_GPIO_WritePin(LCD_BL_GPIO_Port,LCD_BL_Pin,GPIO_PIN_SET);
 120:Core/Src/main.c ****   LCD_Init();
 121:Core/Src/main.c ****   LCD_Display_Dir(0);
 122:Core/Src/main.c ****   LCD_Clear(WHITE);
 123:Core/Src/main.c ****   POINT_COLOR=WHITE;
 124:Core/Src/main.c ****   BACK_COLOR=BLACK;
 125:Core/Src/main.c ****   touchdev.init();
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   while (1)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     HAL_Delay(1500);
 133:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 134:Core/Src/main.c ****     if(touchdev.touchtype&0X80)touchdev_test();
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 161:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccQGa8z1.s 			page 7


 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END 4 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void Error_Handler(void)
 189:Core/Src/main.c **** {
 149              		.loc 1 189 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ Volatile: function does not return.
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 190:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 192:Core/Src/main.c ****   __disable_irq();
 155              		.loc 1 192 3 view .LVU33
 156              	.LBB4:
 157              	.LBI4:
 158              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccQGa8z1.s 			page 8


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccQGa8z1.s 			page 9


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccQGa8z1.s 			page 10


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 159              		.loc 2 140 27 view .LVU34
 160              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 161              		.loc 2 142 3 view .LVU35
 162              		.syntax unified
 163              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 164 0000 72B6     		cpsid i
 165              	@ 0 "" 2
 166              		.thumb
 167              		.syntax unified
 168              	.L12:
 169              	.LBE5:
 170              	.LBE4:
 193:Core/Src/main.c ****   while (1)
 171              		.loc 1 193 3 discriminator 1 view .LVU36
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****   }
 172              		.loc 1 195 3 discriminator 1 view .LVU37
 193:Core/Src/main.c ****   while (1)
 173              		.loc 1 193 9 discriminator 1 view .LVU38
 174 0002 FEE7     		b	.L12
 175              		.cfi_endproc
 176              	.LFE71:
 178              		.section	.text.SystemClock_Config,"ax",%progbits
 179              		.align	1
 180              		.global	SystemClock_Config
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	SystemClock_Config:
 187              	.LFB70:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 188              		.loc 1 147 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 64
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 00B5     		push	{lr}
 193              	.LCFI2:
 194              		.cfi_def_cfa_offset 4
 195              		.cfi_offset 14, -4
 196 0002 91B0     		sub	sp, sp, #68
 197              	.LCFI3:
 198              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 199              		.loc 1 148 3 view .LVU40
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 200              		.loc 1 148 22 is_stmt 0 view .LVU41
 201 0004 2822     		movs	r2, #40
 202 0006 0021     		movs	r1, #0
 203 0008 06A8     		add	r0, sp, #24
 204 000a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccQGa8z1.s 			page 11


 205              	.LVL6:
 149:Core/Src/main.c **** 
 206              		.loc 1 149 3 is_stmt 1 view .LVU42
 149:Core/Src/main.c **** 
 207              		.loc 1 149 22 is_stmt 0 view .LVU43
 208 000e 0023     		movs	r3, #0
 209 0010 0193     		str	r3, [sp, #4]
 210 0012 0293     		str	r3, [sp, #8]
 211 0014 0393     		str	r3, [sp, #12]
 212 0016 0493     		str	r3, [sp, #16]
 213 0018 0593     		str	r3, [sp, #20]
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 214              		.loc 1 154 3 is_stmt 1 view .LVU44
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 215              		.loc 1 154 36 is_stmt 0 view .LVU45
 216 001a 0122     		movs	r2, #1
 217 001c 0692     		str	r2, [sp, #24]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 218              		.loc 1 155 3 is_stmt 1 view .LVU46
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 219              		.loc 1 155 30 is_stmt 0 view .LVU47
 220 001e 4FF48033 		mov	r3, #65536
 221 0022 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 222              		.loc 1 156 3 is_stmt 1 view .LVU48
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 223              		.loc 1 157 3 view .LVU49
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 224              		.loc 1 157 30 is_stmt 0 view .LVU50
 225 0024 0A92     		str	r2, [sp, #40]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 226              		.loc 1 158 3 is_stmt 1 view .LVU51
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 227              		.loc 1 158 34 is_stmt 0 view .LVU52
 228 0026 0222     		movs	r2, #2
 229 0028 0D92     		str	r2, [sp, #52]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 230              		.loc 1 159 3 is_stmt 1 view .LVU53
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 231              		.loc 1 159 35 is_stmt 0 view .LVU54
 232 002a 0E93     		str	r3, [sp, #56]
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233              		.loc 1 160 3 is_stmt 1 view .LVU55
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 234              		.loc 1 160 32 is_stmt 0 view .LVU56
 235 002c 4FF4E013 		mov	r3, #1835008
 236 0030 0F93     		str	r3, [sp, #60]
 161:Core/Src/main.c ****   {
 237              		.loc 1 161 3 is_stmt 1 view .LVU57
 161:Core/Src/main.c ****   {
 238              		.loc 1 161 7 is_stmt 0 view .LVU58
 239 0032 06A8     		add	r0, sp, #24
 240 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 241              	.LVL7:
 161:Core/Src/main.c ****   {
 242              		.loc 1 161 6 view .LVU59
 243 0038 80B9     		cbnz	r0, .L17
ARM GAS  /tmp/ccQGa8z1.s 			page 12


 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 244              		.loc 1 167 3 is_stmt 1 view .LVU60
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 245              		.loc 1 167 31 is_stmt 0 view .LVU61
 246 003a 0F23     		movs	r3, #15
 247 003c 0193     		str	r3, [sp, #4]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248              		.loc 1 169 3 is_stmt 1 view .LVU62
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 249              		.loc 1 169 34 is_stmt 0 view .LVU63
 250 003e 0221     		movs	r1, #2
 251 0040 0291     		str	r1, [sp, #8]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 252              		.loc 1 170 3 is_stmt 1 view .LVU64
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 253              		.loc 1 170 35 is_stmt 0 view .LVU65
 254 0042 0023     		movs	r3, #0
 255 0044 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 256              		.loc 1 171 3 is_stmt 1 view .LVU66
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 257              		.loc 1 171 36 is_stmt 0 view .LVU67
 258 0046 4FF48062 		mov	r2, #1024
 259 004a 0492     		str	r2, [sp, #16]
 172:Core/Src/main.c **** 
 260              		.loc 1 172 3 is_stmt 1 view .LVU68
 172:Core/Src/main.c **** 
 261              		.loc 1 172 36 is_stmt 0 view .LVU69
 262 004c 0593     		str	r3, [sp, #20]
 174:Core/Src/main.c ****   {
 263              		.loc 1 174 3 is_stmt 1 view .LVU70
 174:Core/Src/main.c ****   {
 264              		.loc 1 174 7 is_stmt 0 view .LVU71
 265 004e 01A8     		add	r0, sp, #4
 266 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 267              	.LVL8:
 174:Core/Src/main.c ****   {
 268              		.loc 1 174 6 view .LVU72
 269 0054 20B9     		cbnz	r0, .L18
 178:Core/Src/main.c **** 
 270              		.loc 1 178 1 view .LVU73
 271 0056 11B0     		add	sp, sp, #68
 272              	.LCFI4:
 273              		.cfi_remember_state
 274              		.cfi_def_cfa_offset 4
 275              		@ sp needed
 276 0058 5DF804FB 		ldr	pc, [sp], #4
 277              	.L17:
 278              	.LCFI5:
 279              		.cfi_restore_state
 163:Core/Src/main.c ****   }
 280              		.loc 1 163 5 is_stmt 1 view .LVU74
 281 005c FFF7FEFF 		bl	Error_Handler
 282              	.LVL9:
 283              	.L18:
 176:Core/Src/main.c ****   }
 284              		.loc 1 176 5 view .LVU75
ARM GAS  /tmp/ccQGa8z1.s 			page 13


 285 0060 FFF7FEFF 		bl	Error_Handler
 286              	.LVL10:
 287              		.cfi_endproc
 288              	.LFE70:
 290              		.section	.text.main,"ax",%progbits
 291              		.align	1
 292              		.global	main
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	main:
 299              	.LFB69:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 300              		.loc 1 92 1 view -0
 301              		.cfi_startproc
 302              		@ Volatile: function does not return.
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 08B5     		push	{r3, lr}
 306              	.LCFI6:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 3, -8
 309              		.cfi_offset 14, -4
 100:Core/Src/main.c **** 
 310              		.loc 1 100 3 view .LVU77
 311 0002 FFF7FEFF 		bl	HAL_Init
 312              	.LVL11:
 107:Core/Src/main.c **** 
 313              		.loc 1 107 3 view .LVU78
 314 0006 FFF7FEFF 		bl	SystemClock_Config
 315              	.LVL12:
 114:Core/Src/main.c ****   MX_FSMC_Init();
 316              		.loc 1 114 3 view .LVU79
 317 000a FFF7FEFF 		bl	MX_GPIO_Init
 318              	.LVL13:
 115:Core/Src/main.c ****   MX_USART1_UART_Init();
 319              		.loc 1 115 3 view .LVU80
 320 000e FFF7FEFF 		bl	MX_FSMC_Init
 321              	.LVL14:
 116:Core/Src/main.c ****   MX_I2C2_Init();
 322              		.loc 1 116 3 view .LVU81
 323 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 324              	.LVL15:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 325              		.loc 1 117 3 view .LVU82
 326 0016 FFF7FEFF 		bl	MX_I2C2_Init
 327              	.LVL16:
 119:Core/Src/main.c ****   LCD_Init();
 328              		.loc 1 119 3 view .LVU83
 329 001a 0122     		movs	r2, #1
 330 001c 1146     		mov	r1, r2
 331 001e 1248     		ldr	r0, .L22
 332 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 333              	.LVL17:
 120:Core/Src/main.c ****   LCD_Display_Dir(0);
 334              		.loc 1 120 3 view .LVU84
ARM GAS  /tmp/ccQGa8z1.s 			page 14


 335 0024 FFF7FEFF 		bl	LCD_Init
 336              	.LVL18:
 121:Core/Src/main.c ****   LCD_Clear(WHITE);
 337              		.loc 1 121 3 view .LVU85
 338 0028 0020     		movs	r0, #0
 339 002a FFF7FEFF 		bl	LCD_Display_Dir
 340              	.LVL19:
 122:Core/Src/main.c ****   POINT_COLOR=WHITE;
 341              		.loc 1 122 3 view .LVU86
 342 002e 4FF6FF70 		movw	r0, #65535
 343 0032 FFF7FEFF 		bl	LCD_Clear
 344              	.LVL20:
 123:Core/Src/main.c ****   BACK_COLOR=BLACK;
 345              		.loc 1 123 3 view .LVU87
 123:Core/Src/main.c ****   BACK_COLOR=BLACK;
 346              		.loc 1 123 14 is_stmt 0 view .LVU88
 347 0036 0D4B     		ldr	r3, .L22+4
 348 0038 4FF6FF72 		movw	r2, #65535
 349 003c 1A60     		str	r2, [r3]
 124:Core/Src/main.c ****   touchdev.init();
 350              		.loc 1 124 3 is_stmt 1 view .LVU89
 124:Core/Src/main.c ****   touchdev.init();
 351              		.loc 1 124 13 is_stmt 0 view .LVU90
 352 003e 0C4B     		ldr	r3, .L22+8
 353 0040 0022     		movs	r2, #0
 354 0042 1A60     		str	r2, [r3]
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 355              		.loc 1 125 3 is_stmt 1 view .LVU91
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 356              		.loc 1 125 11 is_stmt 0 view .LVU92
 357 0044 0B4B     		ldr	r3, .L22+12
 358 0046 1B68     		ldr	r3, [r3]
 125:Core/Src/main.c ****   /* USER CODE END 2 */
 359              		.loc 1 125 3 view .LVU93
 360 0048 9847     		blx	r3
 361              	.LVL21:
 362              	.L20:
 130:Core/Src/main.c ****   {
 363              		.loc 1 130 3 is_stmt 1 view .LVU94
 132:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);
 364              		.loc 1 132 5 view .LVU95
 365 004a 40F2DC50 		movw	r0, #1500
 366 004e FFF7FEFF 		bl	HAL_Delay
 367              	.LVL22:
 133:Core/Src/main.c ****     if(touchdev.touchtype&0X80)touchdev_test();
 368              		.loc 1 133 5 view .LVU96
 369 0052 2021     		movs	r1, #32
 370 0054 0848     		ldr	r0, .L22+16
 371 0056 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 372              	.LVL23:
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
 373              		.loc 1 134 5 view .LVU97
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
 374              		.loc 1 134 8 is_stmt 0 view .LVU98
 375 005a 064B     		ldr	r3, .L22+12
 376 005c 93F93030 		ldrsb	r3, [r3, #48]
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
ARM GAS  /tmp/ccQGa8z1.s 			page 15


 377              		.loc 1 134 7 view .LVU99
 378 0060 002B     		cmp	r3, #0
 379 0062 F2DA     		bge	.L20
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
 380              		.loc 1 134 32 is_stmt 1 discriminator 1 view .LVU100
 381 0064 FFF7FEFF 		bl	touchdev_test
 382              	.LVL24:
 383              	.L23:
 384              		.align	2
 385              	.L22:
 386 0068 000C0140 		.word	1073810432
 387 006c 00000000 		.word	POINT_COLOR
 388 0070 00000000 		.word	BACK_COLOR
 389 0074 00000000 		.word	touchdev
 390 0078 00180140 		.word	1073813504
 391              		.cfi_endproc
 392              	.LFE69:
 394              		.text
 395              	.Letext0:
 396              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 397              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 398              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 399              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 400              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 401              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 402              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 403              		.file 10 "Core/Inc/LCD.h"
 404              		.file 11 "Core/Inc/GT9147.h"
 405              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 406              		.file 13 "Core/Inc/gpio.h"
 407              		.file 14 "Core/Inc/fsmc.h"
 408              		.file 15 "Core/Inc/usart.h"
 409              		.file 16 "Core/Inc/i2c.h"
 410              		.file 17 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/stdio.h"
 411              		.file 18 "<built-in>"
ARM GAS  /tmp/ccQGa8z1.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQGa8z1.s:16     .rodata.touchdev_test.str1.4:0000000000000000 $d
     /tmp/ccQGa8z1.s:20     .text.touchdev_test:0000000000000000 $t
     /tmp/ccQGa8z1.s:28     .text.touchdev_test:0000000000000000 touchdev_test
     /tmp/ccQGa8z1.s:133    .text.touchdev_test:0000000000000070 $d
     /tmp/ccQGa8z1.s:140    .text.Error_Handler:0000000000000000 $t
     /tmp/ccQGa8z1.s:147    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccQGa8z1.s:179    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQGa8z1.s:186    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQGa8z1.s:291    .text.main:0000000000000000 $t
     /tmp/ccQGa8z1.s:298    .text.main:0000000000000000 main
     /tmp/ccQGa8z1.s:386    .text.main:0000000000000068 $d

UNDEFINED SYMBOLS
printf
HAL_Delay
touchdev
lcddev
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_FSMC_Init
MX_USART1_UART_Init
MX_I2C2_Init
HAL_GPIO_WritePin
LCD_Init
LCD_Display_Dir
LCD_Clear
HAL_GPIO_TogglePin
POINT_COLOR
BACK_COLOR
