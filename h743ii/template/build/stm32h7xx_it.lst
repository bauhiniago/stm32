ARM GAS  /tmp/cc8U5QJH.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB144:
  27              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32h7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32h7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32h7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32h7xx_it.c ****   *
  17:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32h7xx_it.c ****   */
  19:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32h7xx_it.c **** 
  21:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32h7xx_it.c **** #include "main.h"
  23:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  24:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32h7xx_it.c **** 
  28:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32h7xx_it.c **** 
  31:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/cc8U5QJH.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** 
  33:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32h7xx_it.c **** 
  36:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32h7xx_it.c **** 
  38:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32h7xx_it.c **** 
  41:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32h7xx_it.c **** 
  43:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32h7xx_it.c **** 
  46:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32h7xx_it.c **** 
  48:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32h7xx_it.c **** 
  51:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32h7xx_it.c **** 
  53:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32h7xx_it.c **** 
  56:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32h7xx_it.c **** 
  58:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  60:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim14;
  61:Core/Src/stm32h7xx_it.c **** 
  62:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32h7xx_it.c **** 
  64:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32h7xx_it.c **** 
  66:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32h7xx_it.c **** /**
  70:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32h7xx_it.c ****   */
  72:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 73 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  74:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32h7xx_it.c **** 
  76:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32h7xx_it.c ****   while (1)
  35              		.loc 1 78 3 discriminator 1 view .LVU1
  79:Core/Src/stm32h7xx_it.c ****   {
  80:Core/Src/stm32h7xx_it.c ****   }
ARM GAS  /tmp/cc8U5QJH.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU2
  78:Core/Src/stm32h7xx_it.c ****   {
  37              		.loc 1 78 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE144:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HardFault_Handler:
  50              	.LFB145:
  81:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32h7xx_it.c **** }
  83:Core/Src/stm32h7xx_it.c **** 
  84:Core/Src/stm32h7xx_it.c **** /**
  85:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32h7xx_it.c ****   */
  87:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32h7xx_it.c **** {
  51              		.loc 1 88 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  89:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32h7xx_it.c **** 
  91:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32h7xx_it.c ****   while (1)
  58              		.loc 1 92 3 discriminator 1 view .LVU5
  93:Core/Src/stm32h7xx_it.c ****   {
  94:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32h7xx_it.c ****   }
  59              		.loc 1 96 3 discriminator 1 view .LVU6
  92:Core/Src/stm32h7xx_it.c ****   {
  60              		.loc 1 92 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE145:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MemManage_Handler:
  73              	.LFB146:
  97:Core/Src/stm32h7xx_it.c **** }
  98:Core/Src/stm32h7xx_it.c **** 
  99:Core/Src/stm32h7xx_it.c **** /**
 100:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 101:Core/Src/stm32h7xx_it.c ****   */
ARM GAS  /tmp/cc8U5QJH.s 			page 4


 102:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 103:Core/Src/stm32h7xx_it.c **** {
  74              		.loc 1 103 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.L6:
 104:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Core/Src/stm32h7xx_it.c **** 
 106:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Core/Src/stm32h7xx_it.c ****   while (1)
  81              		.loc 1 107 3 discriminator 1 view .LVU9
 108:Core/Src/stm32h7xx_it.c ****   {
 109:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32h7xx_it.c ****   }
  82              		.loc 1 111 3 discriminator 1 view .LVU10
 107:Core/Src/stm32h7xx_it.c ****   {
  83              		.loc 1 107 9 discriminator 1 view .LVU11
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE146:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	BusFault_Handler:
  96              	.LFB147:
 112:Core/Src/stm32h7xx_it.c **** }
 113:Core/Src/stm32h7xx_it.c **** 
 114:Core/Src/stm32h7xx_it.c **** /**
 115:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 116:Core/Src/stm32h7xx_it.c ****   */
 117:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 118:Core/Src/stm32h7xx_it.c **** {
  97              		.loc 1 118 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 119:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Core/Src/stm32h7xx_it.c **** 
 121:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Core/Src/stm32h7xx_it.c ****   while (1)
 104              		.loc 1 122 3 discriminator 1 view .LVU13
 123:Core/Src/stm32h7xx_it.c ****   {
 124:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 125:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Core/Src/stm32h7xx_it.c ****   }
 105              		.loc 1 126 3 discriminator 1 view .LVU14
 122:Core/Src/stm32h7xx_it.c ****   {
ARM GAS  /tmp/cc8U5QJH.s 			page 5


 106              		.loc 1 122 9 discriminator 1 view .LVU15
 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE147:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB148:
 127:Core/Src/stm32h7xx_it.c **** }
 128:Core/Src/stm32h7xx_it.c **** 
 129:Core/Src/stm32h7xx_it.c **** /**
 130:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Core/Src/stm32h7xx_it.c ****   */
 132:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 133:Core/Src/stm32h7xx_it.c **** {
 120              		.loc 1 133 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 134:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Core/Src/stm32h7xx_it.c **** 
 136:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Core/Src/stm32h7xx_it.c ****   while (1)
 127              		.loc 1 137 3 discriminator 1 view .LVU17
 138:Core/Src/stm32h7xx_it.c ****   {
 139:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32h7xx_it.c ****   }
 128              		.loc 1 141 3 discriminator 1 view .LVU18
 137:Core/Src/stm32h7xx_it.c ****   {
 129              		.loc 1 137 9 discriminator 1 view .LVU19
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE148:
 134              		.section	.text.DebugMon_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	DebugMon_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	DebugMon_Handler:
 142              	.LFB149:
 142:Core/Src/stm32h7xx_it.c **** }
 143:Core/Src/stm32h7xx_it.c **** 
 144:Core/Src/stm32h7xx_it.c **** /**
 145:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 146:Core/Src/stm32h7xx_it.c ****   */
 147:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 148:Core/Src/stm32h7xx_it.c **** {
 143              		.loc 1 148 1 view -0
ARM GAS  /tmp/cc8U5QJH.s 			page 6


 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 149:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 150:Core/Src/stm32h7xx_it.c **** 
 151:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 152:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 153:Core/Src/stm32h7xx_it.c **** 
 154:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 155:Core/Src/stm32h7xx_it.c **** }
 148              		.loc 1 155 1 view .LVU21
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE149:
 153              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 154              		.align	1
 155              		.global	DMA1_Stream0_IRQHandler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DMA1_Stream0_IRQHandler:
 161              	.LFB150:
 156:Core/Src/stm32h7xx_it.c **** 
 157:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 158:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 159:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 160:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 161:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 162:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 163:Core/Src/stm32h7xx_it.c **** 
 164:Core/Src/stm32h7xx_it.c **** /**
 165:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 166:Core/Src/stm32h7xx_it.c ****   */
 167:Core/Src/stm32h7xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 168:Core/Src/stm32h7xx_it.c **** {
 162              		.loc 1 168 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 08B5     		push	{r3, lr}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
 169:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 170:Core/Src/stm32h7xx_it.c **** 
 171:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 172:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 171              		.loc 1 172 3 view .LVU23
 172 0002 0248     		ldr	r0, .L14
 173 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 174              	.LVL0:
 173:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 174:Core/Src/stm32h7xx_it.c **** 
 175:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 176:Core/Src/stm32h7xx_it.c **** }
ARM GAS  /tmp/cc8U5QJH.s 			page 7


 175              		.loc 1 176 1 is_stmt 0 view .LVU24
 176 0008 08BD     		pop	{r3, pc}
 177              	.L15:
 178 000a 00BF     		.align	2
 179              	.L14:
 180 000c 00000000 		.word	hdma_usart1_tx
 181              		.cfi_endproc
 182              	.LFE150:
 184              		.section	.text.TIM8_TRG_COM_TIM14_IRQHandler,"ax",%progbits
 185              		.align	1
 186              		.global	TIM8_TRG_COM_TIM14_IRQHandler
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 191              	TIM8_TRG_COM_TIM14_IRQHandler:
 192              	.LFB151:
 177:Core/Src/stm32h7xx_it.c **** 
 178:Core/Src/stm32h7xx_it.c **** /**
 179:Core/Src/stm32h7xx_it.c ****   * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt
 180:Core/Src/stm32h7xx_it.c ****   */
 181:Core/Src/stm32h7xx_it.c **** void TIM8_TRG_COM_TIM14_IRQHandler(void)
 182:Core/Src/stm32h7xx_it.c **** {
 193              		.loc 1 182 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 183:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */
 184:Core/Src/stm32h7xx_it.c **** 
 185:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
 186:Core/Src/stm32h7xx_it.c ****   HAL_TIM_IRQHandler(&htim14);
 202              		.loc 1 186 3 view .LVU26
 203 0002 0248     		ldr	r0, .L18
 204 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 205              	.LVL1:
 187:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */
 188:Core/Src/stm32h7xx_it.c **** 
 189:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
 190:Core/Src/stm32h7xx_it.c **** }
 206              		.loc 1 190 1 is_stmt 0 view .LVU27
 207 0008 08BD     		pop	{r3, pc}
 208              	.L19:
 209 000a 00BF     		.align	2
 210              	.L18:
 211 000c 00000000 		.word	htim14
 212              		.cfi_endproc
 213              	.LFE151:
 215              		.text
 216              	.Letext0:
 217              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 218              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 219              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 220              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
ARM GAS  /tmp/cc8U5QJH.s 			page 8


 221              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 222              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
ARM GAS  /tmp/cc8U5QJH.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/cc8U5QJH.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc8U5QJH.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc8U5QJH.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc8U5QJH.s:49     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc8U5QJH.s:66     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc8U5QJH.s:72     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc8U5QJH.s:89     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc8U5QJH.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc8U5QJH.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc8U5QJH.s:118    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc8U5QJH.s:135    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc8U5QJH.s:141    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc8U5QJH.s:154    .text.DMA1_Stream0_IRQHandler:0000000000000000 $t
     /tmp/cc8U5QJH.s:160    .text.DMA1_Stream0_IRQHandler:0000000000000000 DMA1_Stream0_IRQHandler
     /tmp/cc8U5QJH.s:180    .text.DMA1_Stream0_IRQHandler:000000000000000c $d
     /tmp/cc8U5QJH.s:185    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000000000000 $t
     /tmp/cc8U5QJH.s:191    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000000000000 TIM8_TRG_COM_TIM14_IRQHandler
     /tmp/cc8U5QJH.s:211    .text.TIM8_TRG_COM_TIM14_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart1_tx
HAL_TIM_IRQHandler
htim14
