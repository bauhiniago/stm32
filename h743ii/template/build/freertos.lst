ARM GAS  /tmp/ccl4YbJL.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"freertos.c"
  15              		.section	.rodata.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 64656661 		.ascii	"defaultTask\000"
  18      756C7454 
  18      61736B00 
  19              		.align	2
  20              	.LC2:
  21 000c 6C76676C 		.ascii	"lvgl\000"
  21      00
  22 0011 000000   		.align	2
  23              	.LC4:
  24 0014 426C696E 		.ascii	"Blink\000"
  24      6B00
  25              		.text
  26              	.Ltext0:
  27              		.cfi_sections	.debug_frame
  28              		.section	.text.StartDefaultTask,"ax",%progbits
  29              		.align	1
  30              		.global	StartDefaultTask
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  35              	StartDefaultTask:
  36              	.LFB338:
  37              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****   *
  17:Core/Src/freertos.c ****   ******************************************************************************
ARM GAS  /tmp/ccl4YbJL.s 			page 2


  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include "LCD.h"
  30:Core/Src/freertos.c **** #include "Mytouch.h"
  31:Core/Src/freertos.c **** #include "lvgl.h"
  32:Core/Src/freertos.c **** /* USER CODE END Includes */
  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* USER CODE END PTD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  41:Core/Src/freertos.c **** #define LVGL_TICK 5
  42:Core/Src/freertos.c **** /* USER CODE END PD */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* USER CODE END PM */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  51:Core/Src/freertos.c **** osThreadId BlinkTaskHandle;
  52:Core/Src/freertos.c **** osThreadId lvglTaskHandle;
  53:Core/Src/freertos.c **** /* USER CODE END Variables */
  54:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  58:Core/Src/freertos.c **** void lvgl_init(void){
  59:Core/Src/freertos.c ****   /* lvgl init */
  60:Core/Src/freertos.c ****   lv_init();
  61:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
  62:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
  63:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
  64:Core/Src/freertos.c ****   lv_example_keyboard_1();
  65:Core/Src/freertos.c ****   // wave_chart_init();
  66:Core/Src/freertos.c ****   // wave_btn();
  67:Core/Src/freertos.c ****   // distortion_list();
  68:Core/Src/freertos.c ****   // THD_label();
  69:Core/Src/freertos.c ****   for (;;)
  70:Core/Src/freertos.c ****   {
  71:Core/Src/freertos.c ****     osDelay(LVGL_TICK);
  72:Core/Src/freertos.c ****     lv_task_handler();
  73:Core/Src/freertos.c ****   }
  74:Core/Src/freertos.c **** }
ARM GAS  /tmp/ccl4YbJL.s 			page 3


  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** void LED_Blinks(void){
  77:Core/Src/freertos.c ****   for(;;)
  78:Core/Src/freertos.c ****   {
  79:Core/Src/freertos.c ****     HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);
  80:Core/Src/freertos.c ****     //printf("hello world\r\n");
  81:Core/Src/freertos.c ****     osDelay(250);
  82:Core/Src/freertos.c ****   }
  83:Core/Src/freertos.c **** }
  84:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  85:Core/Src/freertos.c **** 
  86:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  89:Core/Src/freertos.c **** 
  90:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  91:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c **** /* Hook prototypes */
  94:Core/Src/freertos.c **** void vApplicationTickHook(void);
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c **** /* USER CODE BEGIN 3 */
  97:Core/Src/freertos.c **** __weak void vApplicationTickHook( void )
  98:Core/Src/freertos.c **** {
  99:Core/Src/freertos.c ****    /* This function will be called by each tick interrupt if
 100:Core/Src/freertos.c ****    configUSE_TICK_HOOK is set to 1 in FreeRTOSConfig.h. User code can be
 101:Core/Src/freertos.c ****    added here, but the tick hook is called from an interrupt context, so
 102:Core/Src/freertos.c ****    code must not attempt to block, and only the interrupt safe FreeRTOS API
 103:Core/Src/freertos.c ****    functions can be used (those that end in FromISR()). */
 104:Core/Src/freertos.c ****    lv_tick_inc(1);
 105:Core/Src/freertos.c **** }
 106:Core/Src/freertos.c **** /* USER CODE END 3 */
 107:Core/Src/freertos.c **** 
 108:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
 109:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
 110:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 113:Core/Src/freertos.c **** {
 114:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 115:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 116:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 117:Core/Src/freertos.c ****   /* place for user code */
 118:Core/Src/freertos.c **** }
 119:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c **** /**
 122:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 123:Core/Src/freertos.c ****   * @param  None
 124:Core/Src/freertos.c ****   * @retval None
 125:Core/Src/freertos.c ****   */
 126:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 127:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 128:Core/Src/freertos.c ****   /* USER CODE END Init */
 129:Core/Src/freertos.c **** 
 130:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 131:Core/Src/freertos.c ****   /* add mutexes, ... */
ARM GAS  /tmp/ccl4YbJL.s 			page 4


 132:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 133:Core/Src/freertos.c **** 
 134:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 135:Core/Src/freertos.c ****   /* add semaphores, ... */
 136:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 137:Core/Src/freertos.c **** 
 138:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 139:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 140:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 141:Core/Src/freertos.c **** 
 142:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 143:Core/Src/freertos.c ****   /* add queues, ... */
 144:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 145:Core/Src/freertos.c **** 
 146:Core/Src/freertos.c ****   /* Create the thread(s) */
 147:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 148:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 149:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 150:Core/Src/freertos.c **** 
 151:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 152:Core/Src/freertos.c ****   osThreadDef(lvgl, lvgl_init, osPriorityRealtime , 0, 1024);
 153:Core/Src/freertos.c ****   lvglTaskHandle = osThreadCreate(osThread(lvgl), NULL);
 154:Core/Src/freertos.c ****   osThreadDef(Blink, LED_Blinks, osPriorityNormal, 0, 256);
 155:Core/Src/freertos.c ****   BlinkTaskHandle = osThreadCreate(osThread(Blink), NULL);
 156:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 157:Core/Src/freertos.c **** 
 158:Core/Src/freertos.c **** }
 159:Core/Src/freertos.c **** 
 160:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 161:Core/Src/freertos.c **** /**
 162:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 163:Core/Src/freertos.c ****   * @param  argument: Not used
 164:Core/Src/freertos.c ****   * @retval None
 165:Core/Src/freertos.c ****   */
 166:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 167:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 168:Core/Src/freertos.c **** {
  38              		.loc 1 168 1 view -0
  39              		.cfi_startproc
  40              		@ Volatile: function does not return.
  41              		@ args = 0, pretend = 0, frame = 0
  42              		@ frame_needed = 0, uses_anonymous_args = 0
  43              	.LVL0:
  44              		.loc 1 168 1 is_stmt 0 view .LVU1
  45 0000 08B5     		push	{r3, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 3, -8
  49              		.cfi_offset 14, -4
  50              	.LVL1:
  51              	.L2:
 169:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 170:Core/Src/freertos.c ****   /* Infinite loop */
 171:Core/Src/freertos.c ****   for(;;)
  52              		.loc 1 171 3 is_stmt 1 discriminator 1 view .LVU2
 172:Core/Src/freertos.c ****   {
 173:Core/Src/freertos.c ****     osDelay(100);
ARM GAS  /tmp/ccl4YbJL.s 			page 5


  53              		.loc 1 173 5 discriminator 1 view .LVU3
  54 0002 6420     		movs	r0, #100
  55 0004 FFF7FEFF 		bl	osDelay
  56              	.LVL2:
 171:Core/Src/freertos.c ****   {
  57              		.loc 1 171 8 discriminator 1 view .LVU4
  58 0008 FBE7     		b	.L2
  59              		.cfi_endproc
  60              	.LFE338:
  62              		.section	.text.lvgl_init,"ax",%progbits
  63              		.align	1
  64              		.global	lvgl_init
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	lvgl_init:
  70              	.LFB333:
  58:Core/Src/freertos.c ****   /* lvgl init */
  71              		.loc 1 58 21 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 08B5     		push	{r3, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
  60:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
  81              		.loc 1 60 3 view .LVU6
  82 0002 FFF7FEFF 		bl	lv_init
  83              	.LVL3:
  61:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
  84              		.loc 1 61 3 view .LVU7
  85 0006 FFF7FEFF 		bl	lv_port_disp_init
  86              	.LVL4:
  62:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
  87              		.loc 1 62 3 view .LVU8
  88 000a FFF7FEFF 		bl	lv_port_indev_init
  89              	.LVL5:
  64:Core/Src/freertos.c ****   // wave_chart_init();
  90              		.loc 1 64 3 view .LVU9
  91 000e FFF7FEFF 		bl	lv_example_keyboard_1
  92              	.LVL6:
  93              	.L5:
  69:Core/Src/freertos.c ****   {
  94              		.loc 1 69 3 discriminator 1 view .LVU10
  71:Core/Src/freertos.c ****     lv_task_handler();
  95              		.loc 1 71 5 discriminator 1 view .LVU11
  96 0012 0520     		movs	r0, #5
  97 0014 FFF7FEFF 		bl	osDelay
  98              	.LVL7:
  72:Core/Src/freertos.c ****   }
  99              		.loc 1 72 5 discriminator 1 view .LVU12
 100              	.LBB4:
 101              	.LBI4:
 102              		.file 2 "Middlewares/lvgl/src/lv_api_map.h"
ARM GAS  /tmp/ccl4YbJL.s 			page 6


   1:Middlewares/lvgl/src/lv_api_map.h **** /**
   2:Middlewares/lvgl/src/lv_api_map.h ****  * @file lv_api_map.h
   3:Middlewares/lvgl/src/lv_api_map.h ****  *
   4:Middlewares/lvgl/src/lv_api_map.h ****  */
   5:Middlewares/lvgl/src/lv_api_map.h **** 
   6:Middlewares/lvgl/src/lv_api_map.h **** #ifndef LV_API_MAP_H
   7:Middlewares/lvgl/src/lv_api_map.h **** #define LV_API_MAP_H
   8:Middlewares/lvgl/src/lv_api_map.h **** 
   9:Middlewares/lvgl/src/lv_api_map.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/lv_api_map.h **** extern "C" {
  11:Middlewares/lvgl/src/lv_api_map.h **** #endif
  12:Middlewares/lvgl/src/lv_api_map.h **** 
  13:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  14:Middlewares/lvgl/src/lv_api_map.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  16:Middlewares/lvgl/src/lv_api_map.h **** #include "../lvgl.h"
  17:Middlewares/lvgl/src/lv_api_map.h **** 
  18:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  19:Middlewares/lvgl/src/lv_api_map.h ****  *      DEFINES
  20:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  21:Middlewares/lvgl/src/lv_api_map.h **** 
  22:Middlewares/lvgl/src/lv_api_map.h **** #define LV_NO_TASK_READY        LV_NO_TIMER_READY
  23:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_REL      LV_INDEV_STATE_RELEASED
  24:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_PR       LV_INDEV_STATE_PRESSED
  25:Middlewares/lvgl/src/lv_api_map.h **** #define LV_OBJ_FLAG_SNAPABLE    LV_OBJ_FLAG_SNAPPABLE   /*Fixed typo*/
  26:Middlewares/lvgl/src/lv_api_map.h **** 
  27:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  28:Middlewares/lvgl/src/lv_api_map.h ****  *      TYPEDEFS
  29:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  30:Middlewares/lvgl/src/lv_api_map.h **** 
  31:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  32:Middlewares/lvgl/src/lv_api_map.h ****  * GLOBAL PROTOTYPES
  33:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  34:Middlewares/lvgl/src/lv_api_map.h **** 
  35:Middlewares/lvgl/src/lv_api_map.h **** static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)
 103              		.loc 2 35 51 discriminator 1 view .LVU13
 104              	.LBB5:
  36:Middlewares/lvgl/src/lv_api_map.h **** {
  37:Middlewares/lvgl/src/lv_api_map.h ****     return lv_timer_handler();
 105              		.loc 2 37 5 discriminator 1 view .LVU14
 106              		.loc 2 37 12 is_stmt 0 discriminator 1 view .LVU15
 107 0018 FFF7FEFF 		bl	lv_timer_handler
 108              	.LVL8:
 109 001c F9E7     		b	.L5
 110              	.LBE5:
 111              	.LBE4:
 112              		.cfi_endproc
 113              	.LFE333:
 115              		.section	.text.LED_Blinks,"ax",%progbits
 116              		.align	1
 117              		.global	LED_Blinks
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	LED_Blinks:
 123              	.LFB334:
  76:Core/Src/freertos.c ****   for(;;)
ARM GAS  /tmp/ccl4YbJL.s 			page 7


 124              		.loc 1 76 22 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 08B5     		push	{r3, lr}
 130              	.LCFI2:
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 3, -8
 133              		.cfi_offset 14, -4
 134              	.L8:
  77:Core/Src/freertos.c ****   {
 135              		.loc 1 77 3 discriminator 1 view .LVU17
  79:Core/Src/freertos.c ****     //printf("hello world\r\n");
 136              		.loc 1 79 5 discriminator 1 view .LVU18
 137 0002 0121     		movs	r1, #1
 138 0004 0348     		ldr	r0, .L10
 139 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 140              	.LVL9:
  81:Core/Src/freertos.c ****   }
 141              		.loc 1 81 5 discriminator 1 view .LVU19
 142 000a FA20     		movs	r0, #250
 143 000c FFF7FEFF 		bl	osDelay
 144              	.LVL10:
  77:Core/Src/freertos.c ****   {
 145              		.loc 1 77 8 discriminator 1 view .LVU20
 146 0010 F7E7     		b	.L8
 147              	.L11:
 148 0012 00BF     		.align	2
 149              	.L10:
 150 0014 00040258 		.word	1476527104
 151              		.cfi_endproc
 152              	.LFE334:
 154              		.section	.text.vApplicationTickHook,"ax",%progbits
 155              		.align	1
 156              		.weak	vApplicationTickHook
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	vApplicationTickHook:
 162              	.LFB335:
  98:Core/Src/freertos.c ****    /* This function will be called by each tick interrupt if
 163              		.loc 1 98 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 104:Core/Src/freertos.c **** }
 172              		.loc 1 104 4 view .LVU22
 173 0002 0120     		movs	r0, #1
 174 0004 FFF7FEFF 		bl	lv_tick_inc
 175              	.LVL11:
 105:Core/Src/freertos.c **** /* USER CODE END 3 */
ARM GAS  /tmp/ccl4YbJL.s 			page 8


 176              		.loc 1 105 1 is_stmt 0 view .LVU23
 177 0008 08BD     		pop	{r3, pc}
 178              		.cfi_endproc
 179              	.LFE335:
 181              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 182              		.align	1
 183              		.global	vApplicationGetIdleTaskMemory
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	vApplicationGetIdleTaskMemory:
 189              	.LVL12:
 190              	.LFB336:
 113:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 191              		.loc 1 113 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 114:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 196              		.loc 1 114 3 view .LVU25
 114:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 197              		.loc 1 114 25 is_stmt 0 view .LVU26
 198 0000 034B     		ldr	r3, .L15
 199 0002 0360     		str	r3, [r0]
 115:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 200              		.loc 1 115 3 is_stmt 1 view .LVU27
 115:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 201              		.loc 1 115 27 is_stmt 0 view .LVU28
 202 0004 034B     		ldr	r3, .L15+4
 203 0006 0B60     		str	r3, [r1]
 116:Core/Src/freertos.c ****   /* place for user code */
 204              		.loc 1 116 3 is_stmt 1 view .LVU29
 116:Core/Src/freertos.c ****   /* place for user code */
 205              		.loc 1 116 25 is_stmt 0 view .LVU30
 206 0008 8023     		movs	r3, #128
 207 000a 1360     		str	r3, [r2]
 118:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 208              		.loc 1 118 1 view .LVU31
 209 000c 7047     		bx	lr
 210              	.L16:
 211 000e 00BF     		.align	2
 212              	.L15:
 213 0010 00000000 		.word	.LANCHOR0
 214 0014 00000000 		.word	.LANCHOR1
 215              		.cfi_endproc
 216              	.LFE336:
 218              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 219              		.align	1
 220              		.global	MX_FREERTOS_Init
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	MX_FREERTOS_Init:
 226              	.LFB337:
 126:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 227              		.loc 1 126 29 is_stmt 1 view -0
ARM GAS  /tmp/ccl4YbJL.s 			page 9


 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 88
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 10B5     		push	{r4, lr}
 232              	.LCFI4:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236 0002 96B0     		sub	sp, sp, #88
 237              	.LCFI5:
 238              		.cfi_def_cfa_offset 96
 148:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 239              		.loc 1 148 3 view .LVU33
 240 0004 1B4C     		ldr	r4, .L19
 241 0006 0DF13C0C 		add	ip, sp, #60
 242 000a A646     		mov	lr, r4
 243 000c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 244 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 245 0014 9EE80700 		ldm	lr, {r0, r1, r2}
 246 0018 8CE80700 		stm	ip, {r0, r1, r2}
 149:Core/Src/freertos.c **** 
 247              		.loc 1 149 3 view .LVU34
 149:Core/Src/freertos.c **** 
 248              		.loc 1 149 23 is_stmt 0 view .LVU35
 249 001c 0021     		movs	r1, #0
 250 001e 0FA8     		add	r0, sp, #60
 251 0020 FFF7FEFF 		bl	osThreadCreate
 252              	.LVL13:
 149:Core/Src/freertos.c **** 
 253              		.loc 1 149 21 view .LVU36
 254 0024 144B     		ldr	r3, .L19+4
 255 0026 1860     		str	r0, [r3]
 152:Core/Src/freertos.c ****   lvglTaskHandle = osThreadCreate(osThread(lvgl), NULL);
 256              		.loc 1 152 3 is_stmt 1 view .LVU37
 257 0028 0DF1200C 		add	ip, sp, #32
 258 002c 04F11C0E 		add	lr, r4, #28
 259 0030 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 260 0034 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 261 0038 9EE80700 		ldm	lr, {r0, r1, r2}
 262 003c 8CE80700 		stm	ip, {r0, r1, r2}
 153:Core/Src/freertos.c ****   osThreadDef(Blink, LED_Blinks, osPriorityNormal, 0, 256);
 263              		.loc 1 153 3 view .LVU38
 153:Core/Src/freertos.c ****   osThreadDef(Blink, LED_Blinks, osPriorityNormal, 0, 256);
 264              		.loc 1 153 20 is_stmt 0 view .LVU39
 265 0040 0021     		movs	r1, #0
 266 0042 08A8     		add	r0, sp, #32
 267 0044 FFF7FEFF 		bl	osThreadCreate
 268              	.LVL14:
 153:Core/Src/freertos.c ****   osThreadDef(Blink, LED_Blinks, osPriorityNormal, 0, 256);
 269              		.loc 1 153 18 view .LVU40
 270 0048 0C4B     		ldr	r3, .L19+8
 271 004a 1860     		str	r0, [r3]
 154:Core/Src/freertos.c ****   BlinkTaskHandle = osThreadCreate(osThread(Blink), NULL);
 272              		.loc 1 154 3 is_stmt 1 view .LVU41
 273 004c 0DF1040E 		add	lr, sp, #4
 274 0050 04F1380C 		add	ip, r4, #56
 275 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccl4YbJL.s 			page 10


 276 0058 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 277 005c 9CE80700 		ldm	ip, {r0, r1, r2}
 278 0060 8EE80700 		stm	lr, {r0, r1, r2}
 155:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 279              		.loc 1 155 3 view .LVU42
 155:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 280              		.loc 1 155 21 is_stmt 0 view .LVU43
 281 0064 0021     		movs	r1, #0
 282 0066 01A8     		add	r0, sp, #4
 283 0068 FFF7FEFF 		bl	osThreadCreate
 284              	.LVL15:
 155:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 285              		.loc 1 155 19 view .LVU44
 286 006c 044B     		ldr	r3, .L19+12
 287 006e 1860     		str	r0, [r3]
 158:Core/Src/freertos.c **** 
 288              		.loc 1 158 1 view .LVU45
 289 0070 16B0     		add	sp, sp, #88
 290              	.LCFI6:
 291              		.cfi_def_cfa_offset 8
 292              		@ sp needed
 293 0072 10BD     		pop	{r4, pc}
 294              	.L20:
 295              		.align	2
 296              	.L19:
 297 0074 00000000 		.word	.LANCHOR2
 298 0078 00000000 		.word	.LANCHOR3
 299 007c 00000000 		.word	.LANCHOR4
 300 0080 00000000 		.word	.LANCHOR5
 301              		.cfi_endproc
 302              	.LFE337:
 304              		.global	defaultTaskHandle
 305              		.global	lvglTaskHandle
 306              		.global	BlinkTaskHandle
 307              		.section	.rodata
 308              		.align	2
 309              		.set	.LANCHOR2,. + 0
 310              	.LC6:
 311 0000 00000000 		.word	.LC0
 312 0004 00000000 		.word	StartDefaultTask
 313 0008 0000     		.short	0
 314 000a 0000     		.space	2
 315 000c 00000000 		.word	0
 316 0010 80000000 		.word	128
 317 0014 00000000 		.word	0
 318 0018 00000000 		.word	0
 319              	.LC7:
 320 001c 0C000000 		.word	.LC2
 321 0020 00000000 		.word	lvgl_init
 322 0024 0300     		.short	3
 323 0026 0000     		.space	2
 324 0028 00000000 		.word	0
 325 002c 00040000 		.word	1024
 326 0030 00000000 		.word	0
 327 0034 00000000 		.word	0
 328              	.LC8:
 329 0038 14000000 		.word	.LC4
ARM GAS  /tmp/ccl4YbJL.s 			page 11


 330 003c 00000000 		.word	LED_Blinks
 331 0040 0000     		.short	0
 332 0042 0000     		.space	2
 333 0044 00000000 		.word	0
 334 0048 00010000 		.word	256
 335 004c 00000000 		.word	0
 336 0050 00000000 		.word	0
 337              		.section	.bss.BlinkTaskHandle,"aw",%nobits
 338              		.align	2
 339              		.set	.LANCHOR5,. + 0
 342              	BlinkTaskHandle:
 343 0000 00000000 		.space	4
 344              		.section	.bss.defaultTaskHandle,"aw",%nobits
 345              		.align	2
 346              		.set	.LANCHOR3,. + 0
 349              	defaultTaskHandle:
 350 0000 00000000 		.space	4
 351              		.section	.bss.lvglTaskHandle,"aw",%nobits
 352              		.align	2
 353              		.set	.LANCHOR4,. + 0
 356              	lvglTaskHandle:
 357 0000 00000000 		.space	4
 358              		.section	.bss.xIdleStack,"aw",%nobits
 359              		.align	2
 360              		.set	.LANCHOR1,. + 0
 363              	xIdleStack:
 364 0000 00000000 		.space	512
 364      00000000 
 364      00000000 
 364      00000000 
 364      00000000 
 365              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 366              		.align	2
 367              		.set	.LANCHOR0,. + 0
 370              	xIdleTaskTCBBuffer:
 371 0000 00000000 		.space	84
 371      00000000 
 371      00000000 
 371      00000000 
 371      00000000 
 372              		.text
 373              	.Letext0:
 374              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 375              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 376              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 377              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 378              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 379              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 380              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 381              		.file 10 "Middlewares/lvgl/src/core/lv_obj.h"
 382              		.file 11 "Middlewares/lvgl/src/widgets/lv_bar.h"
 383              		.file 12 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 384              		.file 13 "Middlewares/lvgl/src/hal/lv_hal_tick.h"
 385              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 386              		.file 15 "Middlewares/lvgl/src/misc/lv_timer.h"
ARM GAS  /tmp/ccl4YbJL.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccl4YbJL.s:16     .rodata.str1.4:0000000000000000 $d
     /tmp/ccl4YbJL.s:29     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccl4YbJL.s:35     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccl4YbJL.s:63     .text.lvgl_init:0000000000000000 $t
     /tmp/ccl4YbJL.s:69     .text.lvgl_init:0000000000000000 lvgl_init
     /tmp/ccl4YbJL.s:116    .text.LED_Blinks:0000000000000000 $t
     /tmp/ccl4YbJL.s:122    .text.LED_Blinks:0000000000000000 LED_Blinks
     /tmp/ccl4YbJL.s:150    .text.LED_Blinks:0000000000000014 $d
     /tmp/ccl4YbJL.s:155    .text.vApplicationTickHook:0000000000000000 $t
     /tmp/ccl4YbJL.s:161    .text.vApplicationTickHook:0000000000000000 vApplicationTickHook
     /tmp/ccl4YbJL.s:182    .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccl4YbJL.s:188    .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccl4YbJL.s:213    .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccl4YbJL.s:219    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccl4YbJL.s:225    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccl4YbJL.s:297    .text.MX_FREERTOS_Init:0000000000000074 $d
     /tmp/ccl4YbJL.s:349    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccl4YbJL.s:356    .bss.lvglTaskHandle:0000000000000000 lvglTaskHandle
     /tmp/ccl4YbJL.s:342    .bss.BlinkTaskHandle:0000000000000000 BlinkTaskHandle
     /tmp/ccl4YbJL.s:308    .rodata:0000000000000000 $d
     /tmp/ccl4YbJL.s:338    .bss.BlinkTaskHandle:0000000000000000 $d
     /tmp/ccl4YbJL.s:345    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccl4YbJL.s:352    .bss.lvglTaskHandle:0000000000000000 $d
     /tmp/ccl4YbJL.s:359    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccl4YbJL.s:363    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccl4YbJL.s:366    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccl4YbJL.s:370    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer

UNDEFINED SYMBOLS
osDelay
lv_init
lv_port_disp_init
lv_port_indev_init
lv_example_keyboard_1
lv_timer_handler
HAL_GPIO_TogglePin
lv_tick_inc
osThreadCreate
