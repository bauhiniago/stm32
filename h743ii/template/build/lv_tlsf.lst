ARM GAS  /tmp/ccoVZeFN.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_tlsf.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.block_size,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	block_size:
  25              	.LVL0:
  26              	.LFB3:
  27              		.file 1 "Middlewares/lvgl/src/misc/lv_tlsf.c"
   1:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "../lv_conf_internal.h"
   2:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if LV_MEM_CUSTOM == 0
   3:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
   4:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <limits.h>
   5:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <stddef.h>
   6:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_tlsf.h"
   7:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_mem.h"
   8:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_log.h"
   9:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_assert.h"
  10:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define printf LV_LOG_ERROR
  11:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  12:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_MAX_POOL_SIZE LV_MEM_SIZE
  13:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  14:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined(_DEBUG)
  15:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _DEBUG 0
  16:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  17:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  18:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined(__cplusplus)
  19:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl inline
  20:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  21:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl static
  22:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  23:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  24:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  25:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Architecture-specific bit manipulation routines.
  26:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  27:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF achieves O(1) cost for malloc and free operations by limiting
  28:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the search for a free block to a free list of guaranteed size
  29:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** adequate to fulfill the request, combined with efficient free list
  30:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** queries using bitmasks and architecture-specific bit-manipulation
  31:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** routines.
ARM GAS  /tmp/ccoVZeFN.s 			page 2


  32:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  33:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Most modern processors provide instructions to count leading zeroes
  34:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** in a word, find the lowest and highest set bit, etc. These
  35:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** specific implementations will be used when available, falling back
  36:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** to a reasonably efficient generic implementation.
  37:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  38:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** NOTE: TLSF spec relies on ffs/fls returning value 0..31.
  39:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** ffs/fls return 1-32 by default, returning 0 for error.
  40:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  41:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  42:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  43:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Detect whether or not we are building for a 32- or 64-bit (LP/LLP)
  44:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** architecture. There is no reliable portable method at compile-time.
  45:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  46:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) \
  47:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	|| defined (_WIN64) || defined (__LP64__) || defined (__LLP64__)
  48:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_64BIT
  49:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  50:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  51:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  52:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns one plus the index of the most significant 1-bit of n,
  53:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** or if n is zero, returns zero.
  54:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  55:Middlewares/lvgl/src/misc/lv_tlsf.c **** #ifdef TLSF_64BIT
  56:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) ((n) & 0xffffffff00000000ull ? 32 + TLSF_FLS32((size_t)(n) >> 32) : TLSF_FLS32(
  57:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  58:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) TLSF_FLS32(n)
  59:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  60:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  61:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS32(n) ((n) & 0xffff0000 ? 16 + TLSF_FLS16((n) >> 16) : TLSF_FLS16(n))
  62:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS16(n) ((n) & 0xff00     ?  8 + TLSF_FLS8 ((n) >>  8) : TLSF_FLS8 (n))
  63:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS8(n)  ((n) & 0xf0       ?  4 + TLSF_FLS4 ((n) >>  4) : TLSF_FLS4 (n))
  64:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS4(n)  ((n) & 0xc        ?  2 + TLSF_FLS2 ((n) >>  2) : TLSF_FLS2 (n))
  65:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS2(n)  ((n) & 0x2        ?  1 + TLSF_FLS1 ((n) >>  1) : TLSF_FLS1 (n))
  66:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS1(n)  ((n) & 0x1        ?  1 : 0)
  67:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  68:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  69:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns round up value of log2(n).
  70:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Note: it is used at compile time.
  71:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  72:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_LOG2_CEIL(n) ((n) & (n - 1) ? TLSF_FLS(n) : TLSF_FLS(n) - 1)
  73:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  74:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  75:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** gcc 3.4 and above have builtin support, specialized for architecture.
  76:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Some compilers masquerade as gcc; patchlevel test filters them out.
  77:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  78:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) \
  79:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	&& defined (__GNUC_PATCHLEVEL__)
  80:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  81:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__SNC__)
  82:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SNC for Playstation 3. */
  83:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  84:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  85:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  86:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
  87:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __builtin_clz(reverse);
  88:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
ARM GAS  /tmp/ccoVZeFN.s 			page 3


  89:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  90:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  91:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  92:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  93:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  97:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  98:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  99:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 100:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 105:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 106:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && (_MSC_VER >= 1400) && (defined (_M_IX86) || defined (_M_X64))
 107:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on x86/X64 architectures. */
 108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 109:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <intrin.h>
 110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 111:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanReverse)
 112:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanForward)
 113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 114:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 115:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 117:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanReverse(&index, word) ? index : -1;
 118:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 119:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 120:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 121:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanForward(&index, word) ? index : -1;
 124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 126:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && defined (_M_PPC)
 127:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on PowerPC architectures. */
 128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 129:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppcintrinsics.h>
 130:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 131:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 132:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 133:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(word);
 134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 137:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(reverse);
 141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 142:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 143:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 144:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ARMCC_VERSION)
 145:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* RealView Compilation Tools for ARM */
ARM GAS  /tmp/ccoVZeFN.s 			page 4


 146:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 147:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 148:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __clz(reverse);
 151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 152:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 154:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 155:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __clz(word) : 0;
 157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 158:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 160:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ghs__)
 161:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Green Hills support for PowerPC */
 162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 163:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppc_ghs.h>
 164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 165:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 166:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __CLZ32(reverse);
 169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 170:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 172:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 173:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __CLZ32(word) : 0;
 175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 176:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 178:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 179:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Fall back to generic implementation. */
 180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 181:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Implement ffs in terms of fls. */
 182:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 183:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(reverse) - 1;
 186:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 188:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 189:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(word) - 1;
 191:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 193:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 195:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Possibly 64-bit version of tlsf_fls. */
 196:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 197:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls_sizet(size_t size)
 198:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int high = (int)(size >> 32);
 200:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int bits = 0;
 201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (high)
 202:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  /tmp/ccoVZeFN.s 			page 5


 203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = 32 + tlsf_fls(high);
 204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = tlsf_fls((int)size & 0xffffffff);
 208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bits;
 211:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 212:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 213:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_fls_sizet tlsf_fls
 214:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 215:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 216:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_decl
 217:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 218:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Constants.
 220:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 221:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 222:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Public constants: may be modified. */
 223:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_public
 224:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 225:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* log2 of number of linear subdivisions of block sizes. Larger
 226:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** values require more memory in the control structure. Values of
 227:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** 4 or 5 are typical.
 228:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 229:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT_LOG2 = 5,
 230:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 231:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 232:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Private constants: do not modify. */
 233:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_private
 234:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 235:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 8 bytes. */
 237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 3,
 238:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 4 bytes. */
 240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 2,
 241:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),
 243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We support allocations of sizes up to (1 << FL_INDEX_MAX) bits.
 246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** However, because we linearly subdivide the second-level lists, and
 247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our minimum size granularity is 4 bytes, it doesn't make sense to
 248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** create first-level lists for sizes smaller than SL_INDEX_COUNT * 4,
 249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** or (1 << (SL_INDEX_COUNT_LOG2 + 2)) bytes, as there we will be
 250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trying to split size ranges into more slots than we have available.
 251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Instead, we calculate the minimum threshold size, and place all
 252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** blocks below that size into the 0th first-level list.
 253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 255:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_MAX_POOL_SIZE)
 256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),
 257:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (TLSF_64BIT)
 258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** TODO: We can increase this to support larger sizes, at the expense
ARM GAS  /tmp/ccoVZeFN.s 			page 6


 260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** of more overhead in the TLSF structure.
 261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 32,
 263:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 30,
 265:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),
 267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),
 268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),
 269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),
 271:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 273:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 274:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Cast and min/max macros.
 275:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 277:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_cast(t, exp)	((t) (exp))
 278:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_min(a, b)		((a) < (b) ? (a) : (b))
 279:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_max(a, b)		((a) > (b) ? (a) : (b))
 280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 281:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 282:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Set assert macro, if it has not been provided by the user.
 283:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 284:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert LV_ASSERT
 285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 286:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined (tlsf_assert)
 287:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert assert
 288:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 289:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 290:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 291:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Static assertion mechanism.
 292:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 293:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 294:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue2(x, y) x ## y
 295:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue(x, y) _tlsf_glue2(x, y)
 296:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_static_assert(exp) \
 297:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	typedef char _tlsf_glue(static_assert, __LINE__) [(exp) ? 1 : -1]
 298:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 299:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This code has been tested on 32- and 64-bit (LP/LLP) architectures. */
 300:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(int) * CHAR_BIT == 32);
 301:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT >= 32);
 302:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT <= 64);
 303:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 304:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SL_INDEX_COUNT must be <= number of bits in sl_bitmap's storage type. */
 305:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);
 306:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 307:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Ensure we've properly tuned our sizes. */
 308:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(ALIGN_SIZE == SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 309:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 310:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 311:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Data structures and associated constants.
 312:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 313:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 314:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 315:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Block header structure.
 316:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
ARM GAS  /tmp/ccoVZeFN.s 			page 7


 317:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** There are several implementation subtleties involved:
 318:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is only valid if the previous block is free.
 319:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is actually stored at the end of the
 320:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   previous block. It appears at the beginning of this structure only to
 321:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   simplify the implementation.
 322:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The next_free / prev_free fields are only valid if the block is free.
 323:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 324:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct block_header_t
 325:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 326:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Points to the previous physical block. */
 327:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_phys_block;
 328:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 329:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* The size of this block, excluding the block header. */
 330:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size;
 331:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 332:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Next and previous free blocks. */
 333:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* next_free;
 334:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_free;
 335:Middlewares/lvgl/src/misc/lv_tlsf.c **** } block_header_t;
 336:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 337:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 338:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Since block sizes are always at least a multiple of 4, the two least
 339:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** significant bits of the size field are used to store the block status:
 340:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 0: whether block is busy or free
 341:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 1: whether previous block is busy or free
 342:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 343:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_free_bit = 1 << 0;
 344:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_prev_free_bit = 1 << 1;
 345:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 346:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 347:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The size of the block header exposed to used blocks is the size field.
 348:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The prev_phys_block field is stored *inside* the previous free block.
 349:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 350:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_overhead = sizeof(size_t);
 351:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 352:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* User data starts directly after the size field in a used block. */
 353:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_start_offset =
 354:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	offsetof(block_header_t, size) + sizeof(size_t);
 355:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 356:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 357:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** A free block must be large enough to store its header minus the size of
 358:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the prev_phys_block field, and no larger than the number of addressable
 359:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** bits for FL_INDEX.
 360:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 361:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_min = 
 362:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sizeof(block_header_t) - sizeof(block_header_t*);
 363:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;
 364:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 365:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 366:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* The TLSF control structure. */
 367:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct control_t
 368:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 369:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Empty lists point at this block to indicate they are free. */
 370:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t block_null;
 371:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 372:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Bitmaps for free lists. */
 373:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int fl_bitmap;
ARM GAS  /tmp/ccoVZeFN.s 			page 8


 374:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_bitmap[FL_INDEX_COUNT];
 375:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 376:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Head of free lists. */
 377:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];
 378:Middlewares/lvgl/src/misc/lv_tlsf.c **** } control_t;
 379:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 380:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* A type used for casting when doing pointer arithmetic. */
 381:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef ptrdiff_t tlsfptr_t;
 382:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 383:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 384:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** block_header_t member functions.
 385:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 386:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 387:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t block_size(const block_header_t* block)
 388:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  28              		.loc 1 388 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 389:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->size & ~(block_header_free_bit | block_header_prev_free_bit);
  33              		.loc 1 389 2 view .LVU1
  34              		.loc 1 389 14 is_stmt 0 view .LVU2
  35 0000 4068     		ldr	r0, [r0, #4]
  36              	.LVL1:
 390:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  37              		.loc 1 390 1 view .LVU3
  38 0002 20F00300 		bic	r0, r0, #3
  39 0006 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE3:
  43              		.section	.text.block_set_size,"ax",%progbits
  44              		.align	1
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	block_set_size:
  50              	.LVL2:
  51              	.LFB4:
 391:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 392:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_size(block_header_t* block, size_t size)
 393:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  52              		.loc 1 393 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 394:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t oldsize = block->size;
  57              		.loc 1 394 2 view .LVU5
  58              		.loc 1 394 15 is_stmt 0 view .LVU6
  59 0000 4368     		ldr	r3, [r0, #4]
  60              	.LVL3:
 395:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size = size | (oldsize & (block_header_free_bit | block_header_prev_free_bit));
  61              		.loc 1 395 2 is_stmt 1 view .LVU7
  62              		.loc 1 395 32 is_stmt 0 view .LVU8
  63 0002 03F00303 		and	r3, r3, #3
  64              	.LVL4:
ARM GAS  /tmp/ccoVZeFN.s 			page 9


  65              		.loc 1 395 21 view .LVU9
  66 0006 0B43     		orrs	r3, r3, r1
  67              		.loc 1 395 14 view .LVU10
  68 0008 4360     		str	r3, [r0, #4]
  69              	.LVL5:
 396:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  70              		.loc 1 396 1 view .LVU11
  71 000a 7047     		bx	lr
  72              		.cfi_endproc
  73              	.LFE4:
  75              		.section	.text.block_is_last,"ax",%progbits
  76              		.align	1
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	block_is_last:
  82              	.LVL6:
  83              	.LFB5:
 397:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 398:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_last(const block_header_t* block)
 399:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  84              		.loc 1 399 1 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		.loc 1 399 1 is_stmt 0 view .LVU13
  89 0000 08B5     		push	{r3, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 400:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) == 0;
  94              		.loc 1 400 2 is_stmt 1 view .LVU14
  95              		.loc 1 400 9 is_stmt 0 view .LVU15
  96 0002 FFF7FEFF 		bl	block_size
  97              	.LVL7:
 401:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  98              		.loc 1 401 1 view .LVU16
  99 0006 B0FA80F0 		clz	r0, r0
 100 000a 4009     		lsrs	r0, r0, #5
 101 000c 08BD     		pop	{r3, pc}
 102              		.cfi_endproc
 103              	.LFE5:
 105              		.section	.text.block_is_free,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	block_is_free:
 112              	.LVL8:
 113              	.LFB6:
 402:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 403:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_free(const block_header_t* block)
 404:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 114              		.loc 1 404 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 10


 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 405:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_free_bit);
 119              		.loc 1 405 2 view .LVU18
 120              		.loc 1 405 9 is_stmt 0 view .LVU19
 121 0000 4068     		ldr	r0, [r0, #4]
 122              	.LVL9:
 406:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 123              		.loc 1 406 1 view .LVU20
 124 0002 00F00100 		and	r0, r0, #1
 125 0006 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE6:
 129              		.section	.text.block_set_free,"ax",%progbits
 130              		.align	1
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	block_set_free:
 136              	.LVL10:
 137              	.LFB7:
 407:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 408:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_free(block_header_t* block)
 409:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 138              		.loc 1 409 1 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 410:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_free_bit;
 143              		.loc 1 410 2 view .LVU22
 144              		.loc 1 410 14 is_stmt 0 view .LVU23
 145 0000 4368     		ldr	r3, [r0, #4]
 146 0002 43F00103 		orr	r3, r3, #1
 147 0006 4360     		str	r3, [r0, #4]
 411:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 148              		.loc 1 411 1 view .LVU24
 149 0008 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE7:
 153              		.section	.text.block_set_used,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	block_set_used:
 160              	.LVL11:
 161              	.LFB8:
 412:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 413:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_used(block_header_t* block)
 414:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 162              		.loc 1 414 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 415:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_free_bit;
ARM GAS  /tmp/ccoVZeFN.s 			page 11


 167              		.loc 1 415 2 view .LVU26
 168              		.loc 1 415 14 is_stmt 0 view .LVU27
 169 0000 4368     		ldr	r3, [r0, #4]
 170 0002 23F00103 		bic	r3, r3, #1
 171 0006 4360     		str	r3, [r0, #4]
 416:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 172              		.loc 1 416 1 view .LVU28
 173 0008 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE8:
 177              		.section	.text.block_is_prev_free,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	block_is_prev_free:
 184              	.LVL12:
 185              	.LFB9:
 417:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 418:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_prev_free(const block_header_t* block)
 419:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 186              		.loc 1 419 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 420:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_prev_free_bit);
 191              		.loc 1 420 2 view .LVU30
 192              		.loc 1 420 9 is_stmt 0 view .LVU31
 193 0000 4068     		ldr	r0, [r0, #4]
 194              	.LVL13:
 421:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 195              		.loc 1 421 1 view .LVU32
 196 0002 00F00200 		and	r0, r0, #2
 197 0006 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE9:
 201              		.section	.text.block_set_prev_free,"ax",%progbits
 202              		.align	1
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	block_set_prev_free:
 208              	.LVL14:
 209              	.LFB10:
 422:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 423:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_free(block_header_t* block)
 424:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 210              		.loc 1 424 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 425:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_prev_free_bit;
 215              		.loc 1 425 2 view .LVU34
 216              		.loc 1 425 14 is_stmt 0 view .LVU35
 217 0000 4368     		ldr	r3, [r0, #4]
ARM GAS  /tmp/ccoVZeFN.s 			page 12


 218 0002 43F00203 		orr	r3, r3, #2
 219 0006 4360     		str	r3, [r0, #4]
 426:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 220              		.loc 1 426 1 view .LVU36
 221 0008 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE10:
 225              		.section	.text.block_set_prev_used,"ax",%progbits
 226              		.align	1
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	block_set_prev_used:
 232              	.LVL15:
 233              	.LFB11:
 427:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 428:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_used(block_header_t* block)
 429:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 234              		.loc 1 429 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 430:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_prev_free_bit;
 239              		.loc 1 430 2 view .LVU38
 240              		.loc 1 430 14 is_stmt 0 view .LVU39
 241 0000 4368     		ldr	r3, [r0, #4]
 242 0002 23F00203 		bic	r3, r3, #2
 243 0006 4360     		str	r3, [r0, #4]
 431:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 244              		.loc 1 431 1 view .LVU40
 245 0008 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE11:
 249              		.section	.text.block_from_ptr,"ax",%progbits
 250              		.align	1
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	block_from_ptr:
 256              	.LVL16:
 257              	.LFB12:
 432:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 433:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_from_ptr(const void* ptr)
 434:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 258              		.loc 1 434 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 435:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*,
 263              		.loc 1 435 2 view .LVU42
 436:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, ptr) - block_start_offset);
 437:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 264              		.loc 1 437 1 is_stmt 0 view .LVU43
 265 0000 0838     		subs	r0, r0, #8
 266              	.LVL17:
ARM GAS  /tmp/ccoVZeFN.s 			page 13


 267              		.loc 1 437 1 view .LVU44
 268 0002 7047     		bx	lr
 269              		.cfi_endproc
 270              	.LFE12:
 272              		.section	.text.block_to_ptr,"ax",%progbits
 273              		.align	1
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	block_to_ptr:
 279              	.LVL18:
 280              	.LFB13:
 438:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 439:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_to_ptr(const block_header_t* block)
 440:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 281              		.loc 1 440 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 441:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*,
 286              		.loc 1 441 2 view .LVU46
 442:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, block) + block_start_offset);
 443:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 287              		.loc 1 443 1 is_stmt 0 view .LVU47
 288 0000 0830     		adds	r0, r0, #8
 289              	.LVL19:
 290              		.loc 1 443 1 view .LVU48
 291 0002 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE13:
 295              		.section	.text.offset_to_block,"ax",%progbits
 296              		.align	1
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 301              	offset_to_block:
 302              	.LVL20:
 303              	.LFB14:
 444:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 445:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next block after block of given size. */
 446:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* offset_to_block(const void* ptr, size_t size)
 447:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 304              		.loc 1 447 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 448:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*, tlsf_cast(tlsfptr_t, ptr) + size);
 309              		.loc 1 448 2 view .LVU50
 449:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 310              		.loc 1 449 1 is_stmt 0 view .LVU51
 311 0000 0844     		add	r0, r0, r1
 312              	.LVL21:
 313              		.loc 1 449 1 view .LVU52
 314 0002 7047     		bx	lr
 315              		.cfi_endproc
ARM GAS  /tmp/ccoVZeFN.s 			page 14


 316              	.LFE14:
 318              		.section	.text.block_prev,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	block_prev:
 325              	.LVL22:
 326              	.LFB15:
 450:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 451:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of previous block. */
 452:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_prev(const block_header_t* block)
 453:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 327              		.loc 1 453 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		.loc 1 453 1 is_stmt 0 view .LVU54
 332 0000 10B5     		push	{r4, lr}
 333              	.LCFI1:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 337 0002 0446     		mov	r4, r0
 454:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 338              		.loc 1 454 2 is_stmt 1 view .LVU55
 339              		.loc 1 454 2 view .LVU56
 340 0004 FFF7FEFF 		bl	block_is_prev_free
 341              	.LVL23:
 342              		.loc 1 454 2 is_stmt 0 view .LVU57
 343 0008 00B9     		cbnz	r0, .L15
 344              	.L16:
 345              		.loc 1 454 2 is_stmt 1 discriminator 1 view .LVU58
 346              		.loc 1 454 2 discriminator 1 view .LVU59
 347              		.loc 1 454 2 discriminator 1 view .LVU60
 348              		.loc 1 454 2 discriminator 1 view .LVU61
 349 000a FEE7     		b	.L16
 350              	.L15:
 351              		.loc 1 454 2 discriminator 4 view .LVU62
 455:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 352              		.loc 1 455 2 discriminator 4 view .LVU63
 456:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 353              		.loc 1 456 1 is_stmt 0 discriminator 4 view .LVU64
 354 000c 2068     		ldr	r0, [r4]
 355 000e 10BD     		pop	{r4, pc}
 356              		.loc 1 456 1 discriminator 4 view .LVU65
 357              		.cfi_endproc
 358              	.LFE15:
 360              		.section	.text.block_next,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	block_next:
 367              	.LVL24:
 368              	.LFB16:
 457:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccoVZeFN.s 			page 15


 458:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next existing block. */
 459:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_next(const block_header_t* block)
 460:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 369              		.loc 1 460 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		.loc 1 460 1 is_stmt 0 view .LVU67
 374 0000 38B5     		push	{r3, r4, r5, lr}
 375              	.LCFI2:
 376              		.cfi_def_cfa_offset 16
 377              		.cfi_offset 3, -16
 378              		.cfi_offset 4, -12
 379              		.cfi_offset 5, -8
 380              		.cfi_offset 14, -4
 381 0002 0446     		mov	r4, r0
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 382              		.loc 1 461 2 is_stmt 1 view .LVU68
 383              		.loc 1 461 41 is_stmt 0 view .LVU69
 384 0004 FFF7FEFF 		bl	block_to_ptr
 385              	.LVL25:
 386              		.loc 1 461 41 view .LVU70
 387 0008 0546     		mov	r5, r0
 462:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 388              		.loc 1 462 3 view .LVU71
 389 000a 2046     		mov	r0, r4
 390 000c FFF7FEFF 		bl	block_size
 391              	.LVL26:
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 392              		.loc 1 461 25 view .LVU72
 393 0010 011F     		subs	r1, r0, #4
 394 0012 2846     		mov	r0, r5
 395 0014 FFF7FEFF 		bl	offset_to_block
 396              	.LVL27:
 397 0018 0546     		mov	r5, r0
 398              	.LVL28:
 463:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(block));
 399              		.loc 1 463 2 is_stmt 1 view .LVU73
 400              		.loc 1 463 2 view .LVU74
 401 001a 2046     		mov	r0, r4
 402              	.LVL29:
 403              		.loc 1 463 2 is_stmt 0 view .LVU75
 404 001c FFF7FEFF 		bl	block_is_last
 405              	.LVL30:
 406 0020 00B1     		cbz	r0, .L18
 407              	.L20:
 408              		.loc 1 463 2 is_stmt 1 discriminator 1 view .LVU76
 409              		.loc 1 463 2 discriminator 1 view .LVU77
 410              		.loc 1 463 2 discriminator 1 view .LVU78
 411              		.loc 1 463 2 discriminator 1 view .LVU79
 412 0022 FEE7     		b	.L20
 413              	.L18:
 464:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 465:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 414              		.loc 1 465 1 is_stmt 0 view .LVU80
 415 0024 2846     		mov	r0, r5
 416 0026 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccoVZeFN.s 			page 16


 417              		.loc 1 465 1 view .LVU81
 418              		.cfi_endproc
 419              	.LFE16:
 421              		.section	.text.block_link_next,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 427              	block_link_next:
 428              	.LVL31:
 429              	.LFB17:
 466:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 467:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 468:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_link_next(block_header_t* block)
 469:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 430              		.loc 1 469 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		.loc 1 469 1 is_stmt 0 view .LVU83
 435 0000 10B5     		push	{r4, lr}
 436              	.LCFI3:
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 4, -8
 439              		.cfi_offset 14, -4
 440 0002 0446     		mov	r4, r0
 470:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 441              		.loc 1 470 2 is_stmt 1 view .LVU84
 442              		.loc 1 470 25 is_stmt 0 view .LVU85
 443 0004 FFF7FEFF 		bl	block_next
 444              	.LVL32:
 471:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 445              		.loc 1 471 2 is_stmt 1 view .LVU86
 446              		.loc 1 471 24 is_stmt 0 view .LVU87
 447 0008 0460     		str	r4, [r0]
 472:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 448              		.loc 1 472 2 is_stmt 1 view .LVU88
 473:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 449              		.loc 1 473 1 is_stmt 0 view .LVU89
 450 000a 10BD     		pop	{r4, pc}
 451              		.loc 1 473 1 view .LVU90
 452              		.cfi_endproc
 453              	.LFE17:
 455              		.section	.text.block_mark_as_free,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	block_mark_as_free:
 462              	.LVL33:
 463              	.LFB18:
 474:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 475:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_free(block_header_t* block)
 476:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 464              		.loc 1 476 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 17


 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		.loc 1 476 1 is_stmt 0 view .LVU92
 469 0000 10B5     		push	{r4, lr}
 470              	.LCFI4:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
 474 0002 0446     		mov	r4, r0
 477:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 478:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_link_next(block);
 475              		.loc 1 478 2 is_stmt 1 view .LVU93
 476              		.loc 1 478 25 is_stmt 0 view .LVU94
 477 0004 FFF7FEFF 		bl	block_link_next
 478              	.LVL34:
 479:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 479              		.loc 1 479 2 is_stmt 1 view .LVU95
 480 0008 FFF7FEFF 		bl	block_set_prev_free
 481              	.LVL35:
 480:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 482              		.loc 1 480 2 view .LVU96
 483 000c 2046     		mov	r0, r4
 484 000e FFF7FEFF 		bl	block_set_free
 485              	.LVL36:
 481:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 486              		.loc 1 481 1 is_stmt 0 view .LVU97
 487 0012 10BD     		pop	{r4, pc}
 488              		.loc 1 481 1 view .LVU98
 489              		.cfi_endproc
 490              	.LFE18:
 492              		.section	.text.block_mark_as_used,"ax",%progbits
 493              		.align	1
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	block_mark_as_used:
 499              	.LVL37:
 500              	.LFB19:
 482:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 483:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_used(block_header_t* block)
 484:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 501              		.loc 1 484 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		.loc 1 484 1 is_stmt 0 view .LVU100
 506 0000 10B5     		push	{r4, lr}
 507              	.LCFI5:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
 510              		.cfi_offset 14, -4
 511 0002 0446     		mov	r4, r0
 485:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 512              		.loc 1 485 2 is_stmt 1 view .LVU101
 513              		.loc 1 485 25 is_stmt 0 view .LVU102
 514 0004 FFF7FEFF 		bl	block_next
 515              	.LVL38:
 486:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
ARM GAS  /tmp/ccoVZeFN.s 			page 18


 516              		.loc 1 486 2 is_stmt 1 view .LVU103
 517 0008 FFF7FEFF 		bl	block_set_prev_used
 518              	.LVL39:
 487:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(block);
 519              		.loc 1 487 2 view .LVU104
 520 000c 2046     		mov	r0, r4
 521 000e FFF7FEFF 		bl	block_set_used
 522              	.LVL40:
 488:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 523              		.loc 1 488 1 is_stmt 0 view .LVU105
 524 0012 10BD     		pop	{r4, pc}
 525              		.loc 1 488 1 view .LVU106
 526              		.cfi_endproc
 527              	.LFE19:
 529              		.section	.text.align_up,"ax",%progbits
 530              		.align	1
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	align_up:
 536              	.LVL41:
 537              	.LFB20:
 489:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 490:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_up(size_t x, size_t align)
 491:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 538              		.loc 1 491 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 492:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 543              		.loc 1 492 2 view .LVU108
 544              		.loc 1 492 2 view .LVU109
 545 0000 4B1E     		subs	r3, r1, #1
 546 0002 0B42     		tst	r3, r1
 547 0004 00D0     		beq	.L29
 548              	.L30:
 549              		.loc 1 492 2 discriminator 1 view .LVU110
 550              		.loc 1 492 2 discriminator 1 view .LVU111
 551              		.loc 1 492 2 discriminator 1 view .LVU112
 552              		.loc 1 492 2 discriminator 1 view .LVU113
 553 0006 FEE7     		b	.L30
 554              	.L29:
 555              		.loc 1 492 2 discriminator 2 view .LVU114
 493:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 556              		.loc 1 493 2 discriminator 2 view .LVU115
 557              		.loc 1 493 12 is_stmt 0 discriminator 2 view .LVU116
 558 0008 0844     		add	r0, r0, r1
 559              	.LVL42:
 560              		.loc 1 493 12 discriminator 2 view .LVU117
 561 000a 0138     		subs	r0, r0, #1
 562              		.loc 1 493 29 discriminator 2 view .LVU118
 563 000c 4942     		rsbs	r1, r1, #0
 564              	.LVL43:
 494:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 565              		.loc 1 494 1 discriminator 2 view .LVU119
 566 000e 0840     		ands	r0, r0, r1
ARM GAS  /tmp/ccoVZeFN.s 			page 19


 567 0010 7047     		bx	lr
 568              		.cfi_endproc
 569              	.LFE20:
 571              		.section	.text.align_down,"ax",%progbits
 572              		.align	1
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	align_down:
 578              	.LVL44:
 579              	.LFB21:
 495:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 496:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_down(size_t x, size_t align)
 497:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 580              		.loc 1 497 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 498:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 585              		.loc 1 498 2 view .LVU121
 586              		.loc 1 498 2 view .LVU122
 587 0000 4B1E     		subs	r3, r1, #1
 588 0002 0B42     		tst	r3, r1
 589 0004 00D0     		beq	.L32
 590              	.L33:
 591              		.loc 1 498 2 discriminator 1 view .LVU123
 592              		.loc 1 498 2 discriminator 1 view .LVU124
 593              		.loc 1 498 2 discriminator 1 view .LVU125
 594              		.loc 1 498 2 discriminator 1 view .LVU126
 595 0006 FEE7     		b	.L33
 596              	.L32:
 597              		.loc 1 498 2 discriminator 2 view .LVU127
 499:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 598              		.loc 1 499 2 discriminator 2 view .LVU128
 599              		.loc 1 499 11 is_stmt 0 discriminator 2 view .LVU129
 600 0008 4942     		rsbs	r1, r1, #0
 601              	.LVL45:
 500:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 602              		.loc 1 500 1 discriminator 2 view .LVU130
 603 000a 0840     		ands	r0, r0, r1
 604              	.LVL46:
 605              		.loc 1 500 1 discriminator 2 view .LVU131
 606 000c 7047     		bx	lr
 607              		.cfi_endproc
 608              	.LFE21:
 610              		.section	.text.align_ptr,"ax",%progbits
 611              		.align	1
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 616              	align_ptr:
 617              	.LVL47:
 618              	.LFB22:
 501:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 502:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* align_ptr(const void* ptr, size_t align)
 503:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccoVZeFN.s 			page 20


 619              		.loc 1 503 1 is_stmt 1 view -0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 504:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 624              		.loc 1 504 2 view .LVU133
 505:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		(tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 625              		.loc 1 505 30 is_stmt 0 view .LVU134
 626 0000 0844     		add	r0, r0, r1
 627              	.LVL48:
 628              		.loc 1 505 30 view .LVU135
 629 0002 0138     		subs	r0, r0, #1
 630              		.loc 1 505 47 view .LVU136
 631 0004 4B42     		rsbs	r3, r1, #0
 632              		.loc 1 505 45 view .LVU137
 633 0006 1840     		ands	r0, r0, r3
 634              	.LVL49:
 506:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 635              		.loc 1 506 2 is_stmt 1 view .LVU138
 636              		.loc 1 506 2 view .LVU139
 637 0008 4B1E     		subs	r3, r1, #1
 638 000a 0B42     		tst	r3, r1
 639 000c 00D0     		beq	.L35
 640              	.L36:
 641              		.loc 1 506 2 discriminator 1 view .LVU140
 642              		.loc 1 506 2 discriminator 1 view .LVU141
 643              		.loc 1 506 2 discriminator 1 view .LVU142
 644              		.loc 1 506 2 discriminator 1 view .LVU143
 645 000e FEE7     		b	.L36
 646              	.L35:
 647              		.loc 1 506 2 discriminator 2 view .LVU144
 507:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 648              		.loc 1 507 2 discriminator 2 view .LVU145
 508:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 649              		.loc 1 508 1 is_stmt 0 discriminator 2 view .LVU146
 650 0010 7047     		bx	lr
 651              		.cfi_endproc
 652              	.LFE22:
 654              		.section	.text.adjust_request_size,"ax",%progbits
 655              		.align	1
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	adjust_request_size:
 661              	.LVL50:
 662              	.LFB23:
 509:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 510:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 511:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 512:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** than internal minimum.
 513:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 514:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t adjust_request_size(size_t size, size_t align)
 515:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 663              		.loc 1 515 1 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 21


 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		.loc 1 515 1 is_stmt 0 view .LVU148
 668 0000 08B5     		push	{r3, lr}
 669              	.LCFI6:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 3, -8
 672              		.cfi_offset 14, -4
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 673              		.loc 1 516 2 is_stmt 1 view .LVU149
 674              	.LVL51:
 517:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 675              		.loc 1 517 2 view .LVU150
 676              		.loc 1 517 5 is_stmt 0 view .LVU151
 677 0002 00B9     		cbnz	r0, .L41
 678              	.LVL52:
 679              	.L38:
 518:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t aligned = align_up(size, align);
 520:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 521:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (aligned < block_size_max) 
 523:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			adjust = tlsf_max(aligned, block_size_min);
 525:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 526:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 527:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return adjust;
 680              		.loc 1 527 2 is_stmt 1 view .LVU152
 528:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 681              		.loc 1 528 1 is_stmt 0 view .LVU153
 682 0004 08BD     		pop	{r3, pc}
 683              	.LVL53:
 684              	.L41:
 685              	.LBB2:
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 686              		.loc 1 519 3 is_stmt 1 view .LVU154
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 687              		.loc 1 519 26 is_stmt 0 view .LVU155
 688 0006 FFF7FEFF 		bl	align_up
 689              	.LVL54:
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 690              		.loc 1 522 3 is_stmt 1 view .LVU156
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 691              		.loc 1 522 6 is_stmt 0 view .LVU157
 692 000a B0F5804F 		cmp	r0, #16384
 693 000e 03D2     		bcs	.L39
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 694              		.loc 1 524 4 is_stmt 1 view .LVU158
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 695              		.loc 1 524 11 is_stmt 0 view .LVU159
 696 0010 0C28     		cmp	r0, #12
 697 0012 38BF     		it	cc
 698 0014 0C20     		movcc	r0, #12
 699              	.LVL55:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 700              		.loc 1 524 11 view .LVU160
 701 0016 F5E7     		b	.L38
 702              	.LVL56:
ARM GAS  /tmp/ccoVZeFN.s 			page 22


 703              	.L39:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 704              		.loc 1 524 11 view .LVU161
 705              	.LBE2:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 706              		.loc 1 516 9 view .LVU162
 707 0018 0020     		movs	r0, #0
 708              	.LVL57:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 709              		.loc 1 516 9 view .LVU163
 710 001a F3E7     		b	.L38
 711              		.cfi_endproc
 712              	.LFE23:
 714              		.section	.text.remove_free_block,"ax",%progbits
 715              		.align	1
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 720              	remove_free_block:
 721              	.LVL58:
 722              	.LFB27:
 529:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 530:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 531:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF utility functions. In most cases, these are direct translations of
 532:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the documentation found in the white paper.
 533:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 534:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 535:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_insert(size_t size, int* fli, int* sli)
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 539:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 540:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* Store small blocks in first list. */
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = 0;
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 543:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 544:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 545:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_fls_sizet(size);
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 549:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*fli = fl;
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 553:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 554:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This version rounds up to the next block size (for allocations) */
 555:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_search(size_t size, int* fli, int* sli)
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 558:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 561:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(size, fli, sli);
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 564:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccoVZeFN.s 			page 23


 565:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* search_suitable_block(control_t* control, int* fli, int* sli)
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 569:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 570:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 571:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** First, search for a block in the list associated with the given
 572:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** fl/sl index.
 573:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_map = control->sl_bitmap[fl] & (~0U << sl);
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 576:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 577:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* No block exists. Search in the next largest first-level list. */
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const unsigned int fl_map = control->fl_bitmap & (~0U << (fl + 1));
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 580:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 581:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* No free blocks available, memory has been exhausted. */
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			return 0;
 583:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 584:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_ffs(fl_map);
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 588:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sl_map && "internal error - second level bitmap is null");
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 592:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 593:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Return the first block in the free list. */
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return control->blocks[fl][sl];
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 596:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 597:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a free block from the free list.*/
 598:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void remove_free_block(control_t* control, block_header_t* block, int fl, int sl)
 599:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 723              		.loc 1 599 1 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		.loc 1 599 1 is_stmt 0 view .LVU165
 728 0000 10B5     		push	{r4, lr}
 729              	.LCFI7:
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 4, -8
 732              		.cfi_offset 14, -4
 733 0002 9646     		mov	lr, r2
 600:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 734              		.loc 1 600 2 is_stmt 1 view .LVU166
 735              		.loc 1 600 18 is_stmt 0 view .LVU167
 736 0004 CA68     		ldr	r2, [r1, #12]
 737              	.LVL59:
 601:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 738              		.loc 1 601 2 is_stmt 1 view .LVU168
 739              		.loc 1 601 18 is_stmt 0 view .LVU169
 740 0006 8C68     		ldr	r4, [r1, #8]
 741              	.LVL60:
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
ARM GAS  /tmp/ccoVZeFN.s 			page 24


 742              		.loc 1 602 2 is_stmt 1 view .LVU170
 743              		.loc 1 602 2 view .LVU171
 744 0008 6AB1     		cbz	r2, .L44
 745              		.loc 1 602 2 discriminator 2 view .LVU172
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 746              		.loc 1 603 2 discriminator 2 view .LVU173
 747              		.loc 1 603 2 discriminator 2 view .LVU174
 748 000a 6CB1     		cbz	r4, .L46
 749              		.loc 1 603 2 discriminator 2 view .LVU175
 604:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 750              		.loc 1 604 2 discriminator 2 view .LVU176
 751              		.loc 1 604 18 is_stmt 0 discriminator 2 view .LVU177
 752 000c E260     		str	r2, [r4, #12]
 605:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 753              		.loc 1 605 2 is_stmt 1 discriminator 2 view .LVU178
 754              		.loc 1 605 18 is_stmt 0 discriminator 2 view .LVU179
 755 000e 9460     		str	r4, [r2, #8]
 606:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 607:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* If this block is the head of the free list, set new head. */
 608:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (control->blocks[fl][sl] == block)
 756              		.loc 1 608 2 is_stmt 1 discriminator 2 view .LVU180
 757              		.loc 1 608 25 is_stmt 0 discriminator 2 view .LVU181
 758 0010 03EB4E1C 		add	ip, r3, lr, lsl #5
 759 0014 0CF10C0C 		add	ip, ip, #12
 760 0018 00EB8C0C 		add	ip, r0, ip, lsl #2
 761 001c DCF80420 		ldr	r2, [ip, #4]
 762              	.LVL61:
 763              		.loc 1 608 5 discriminator 2 view .LVU182
 764 0020 8A42     		cmp	r2, r1
 765 0022 02D0     		beq	.L49
 766              	.LVL62:
 767              	.L42:
 609:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->blocks[fl][sl] = next;
 611:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 612:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the new head is null, clear the bitmap. */
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (next == &control->block_null)
 614:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->sl_bitmap[fl] &= ~(1U << sl);
 616:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 617:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* If the second bitmap is now empty, clear the fl bitmap. */
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!control->sl_bitmap[fl])
 619:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				control->fl_bitmap &= ~(1U << fl);
 621:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 622:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 623:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 624:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 768              		.loc 1 624 1 view .LVU183
 769 0024 10BD     		pop	{r4, pc}
 770              	.LVL63:
 771              	.L44:
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 772              		.loc 1 602 2 is_stmt 1 discriminator 1 view .LVU184
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 773              		.loc 1 602 2 discriminator 1 view .LVU185
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
ARM GAS  /tmp/ccoVZeFN.s 			page 25


 774              		.loc 1 602 2 discriminator 1 view .LVU186
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 775              		.loc 1 602 2 discriminator 1 view .LVU187
 776 0026 FEE7     		b	.L44
 777              	.L46:
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 778              		.loc 1 603 2 discriminator 2 view .LVU188
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 779              		.loc 1 603 2 discriminator 2 view .LVU189
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 780              		.loc 1 603 2 discriminator 2 view .LVU190
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 781              		.loc 1 603 2 discriminator 2 view .LVU191
 782 0028 FEE7     		b	.L46
 783              	.LVL64:
 784              	.L49:
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 785              		.loc 1 610 3 view .LVU192
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 786              		.loc 1 610 27 is_stmt 0 view .LVU193
 787 002a CCF80440 		str	r4, [ip, #4]
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 788              		.loc 1 613 3 is_stmt 1 view .LVU194
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 789              		.loc 1 613 6 is_stmt 0 view .LVU195
 790 002e A042     		cmp	r0, r4
 791 0030 F8D1     		bne	.L42
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 792              		.loc 1 615 4 is_stmt 1 view .LVU196
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 793              		.loc 1 615 35 is_stmt 0 view .LVU197
 794 0032 0121     		movs	r1, #1
 795              	.LVL65:
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 796              		.loc 1 615 35 view .LVU198
 797 0034 9940     		lsls	r1, r1, r3
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 798              		.loc 1 615 27 view .LVU199
 799 0036 0EF10402 		add	r2, lr, #4
 800 003a 00EB8202 		add	r2, r0, r2, lsl #2
 801 003e 5368     		ldr	r3, [r2, #4]
 802              	.LVL66:
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 803              		.loc 1 615 27 view .LVU200
 804 0040 23EA0103 		bic	r3, r3, r1
 805 0044 5360     		str	r3, [r2, #4]
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 806              		.loc 1 618 4 is_stmt 1 view .LVU201
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 807              		.loc 1 618 7 is_stmt 0 view .LVU202
 808 0046 002B     		cmp	r3, #0
 809 0048 ECD1     		bne	.L42
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 810              		.loc 1 620 5 is_stmt 1 view .LVU203
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 811              		.loc 1 620 32 is_stmt 0 view .LVU204
 812 004a 0123     		movs	r3, #1
ARM GAS  /tmp/ccoVZeFN.s 			page 26


 813 004c 03FA0EF2 		lsl	r2, r3, lr
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 814              		.loc 1 620 24 view .LVU205
 815 0050 0369     		ldr	r3, [r0, #16]
 816 0052 23EA0203 		bic	r3, r3, r2
 817 0056 0361     		str	r3, [r0, #16]
 818              		.loc 1 624 1 view .LVU206
 819 0058 E4E7     		b	.L42
 820              		.cfi_endproc
 821              	.LFE27:
 823              		.section	.text.insert_free_block,"ax",%progbits
 824              		.align	1
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 829              	insert_free_block:
 830              	.LVL67:
 831              	.LFB28:
 625:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 626:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a free block into the free block list. */
 627:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void insert_free_block(control_t* control, block_header_t* block, int fl, int sl)
 628:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 832              		.loc 1 628 1 is_stmt 1 view -0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              		.loc 1 628 1 is_stmt 0 view .LVU208
 837 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 838              	.LCFI8:
 839              		.cfi_def_cfa_offset 24
 840              		.cfi_offset 4, -24
 841              		.cfi_offset 5, -20
 842              		.cfi_offset 6, -16
 843              		.cfi_offset 7, -12
 844              		.cfi_offset 8, -8
 845              		.cfi_offset 14, -4
 846 0004 1F46     		mov	r7, r3
 629:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 847              		.loc 1 629 2 is_stmt 1 view .LVU209
 848              		.loc 1 629 18 is_stmt 0 view .LVU210
 849 0006 03EB421C 		add	ip, r3, r2, lsl #5
 850 000a 0CF10C0C 		add	ip, ip, #12
 851 000e 00EB8C0C 		add	ip, r0, ip, lsl #2
 852 0012 DCF80430 		ldr	r3, [ip, #4]
 853              	.LVL68:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 854              		.loc 1 630 2 is_stmt 1 view .LVU211
 855              		.loc 1 630 2 view .LVU212
 856 0016 83B1     		cbz	r3, .L52
 857 0018 0546     		mov	r5, r0
 858 001a 0C46     		mov	r4, r1
 859 001c 1646     		mov	r6, r2
 860              		.loc 1 630 2 discriminator 2 view .LVU213
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 861              		.loc 1 631 2 discriminator 2 view .LVU214
 862              		.loc 1 631 2 discriminator 2 view .LVU215
 863 001e 69B1     		cbz	r1, .L54
ARM GAS  /tmp/ccoVZeFN.s 			page 27


 864              		.loc 1 631 2 discriminator 2 view .LVU216
 632:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 865              		.loc 1 632 2 discriminator 2 view .LVU217
 866              		.loc 1 632 19 is_stmt 0 discriminator 2 view .LVU218
 867 0020 8B60     		str	r3, [r1, #8]
 633:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 868              		.loc 1 633 2 is_stmt 1 discriminator 2 view .LVU219
 869              		.loc 1 633 19 is_stmt 0 discriminator 2 view .LVU220
 870 0022 C860     		str	r0, [r1, #12]
 634:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 871              		.loc 1 634 2 is_stmt 1 discriminator 2 view .LVU221
 872              		.loc 1 634 21 is_stmt 0 discriminator 2 view .LVU222
 873 0024 D960     		str	r1, [r3, #12]
 635:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 636:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
 874              		.loc 1 636 2 is_stmt 1 discriminator 2 view .LVU223
 875              		.loc 1 636 2 discriminator 2 view .LVU224
 876 0026 0846     		mov	r0, r1
 877              	.LVL69:
 878              		.loc 1 636 2 is_stmt 0 discriminator 2 view .LVU225
 879 0028 FFF7FEFF 		bl	block_to_ptr
 880              	.LVL70:
 881              		.loc 1 636 2 discriminator 2 view .LVU226
 882 002c 8046     		mov	r8, r0
 883 002e 0421     		movs	r1, #4
 884 0030 FFF7FEFF 		bl	align_ptr
 885              	.LVL71:
 886 0034 8045     		cmp	r8, r0
 887 0036 02D0     		beq	.L55
 888              	.L56:
 889              		.loc 1 636 2 is_stmt 1 discriminator 3 view .LVU227
 890              		.loc 1 636 2 discriminator 3 view .LVU228
 891              		.loc 1 636 2 discriminator 3 view .LVU229
 892              		.loc 1 636 2 discriminator 3 view .LVU230
 893 0038 FEE7     		b	.L56
 894              	.LVL72:
 895              	.L52:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 896              		.loc 1 630 2 discriminator 1 view .LVU231
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 897              		.loc 1 630 2 discriminator 1 view .LVU232
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 898              		.loc 1 630 2 discriminator 1 view .LVU233
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 899              		.loc 1 630 2 discriminator 1 view .LVU234
 900 003a FEE7     		b	.L52
 901              	.L54:
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 902              		.loc 1 631 2 discriminator 2 view .LVU235
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 903              		.loc 1 631 2 discriminator 2 view .LVU236
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 904              		.loc 1 631 2 discriminator 2 view .LVU237
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 905              		.loc 1 631 2 discriminator 2 view .LVU238
 906 003c FEE7     		b	.L54
 907              	.LVL73:
ARM GAS  /tmp/ccoVZeFN.s 			page 28


 908              	.L55:
 909              		.loc 1 636 2 discriminator 2 view .LVU239
 637:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 638:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 639:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Insert the new block at the head of the list, and mark the first-
 640:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** and second-level bitmaps appropriately.
 641:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 642:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->blocks[fl][sl] = block;
 910              		.loc 1 642 2 discriminator 2 view .LVU240
 911              		.loc 1 642 26 is_stmt 0 discriminator 2 view .LVU241
 912 003e 07EB4613 		add	r3, r7, r6, lsl #5
 913 0042 0C33     		adds	r3, r3, #12
 914 0044 05EB8303 		add	r3, r5, r3, lsl #2
 915 0048 5C60     		str	r4, [r3, #4]
 643:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 916              		.loc 1 643 2 is_stmt 1 discriminator 2 view .LVU242
 917              		.loc 1 643 28 is_stmt 0 discriminator 2 view .LVU243
 918 004a 0123     		movs	r3, #1
 919 004c 03FA06F1 		lsl	r1, r3, r6
 920              		.loc 1 643 21 discriminator 2 view .LVU244
 921 0050 2A69     		ldr	r2, [r5, #16]
 922 0052 0A43     		orrs	r2, r2, r1
 923 0054 2A61     		str	r2, [r5, #16]
 644:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 924              		.loc 1 644 2 is_stmt 1 discriminator 2 view .LVU245
 925              		.loc 1 644 32 is_stmt 0 discriminator 2 view .LVU246
 926 0056 BB40     		lsls	r3, r3, r7
 927              		.loc 1 644 25 discriminator 2 view .LVU247
 928 0058 0436     		adds	r6, r6, #4
 929              	.LVL74:
 930              		.loc 1 644 25 discriminator 2 view .LVU248
 931 005a 05EB8605 		add	r5, r5, r6, lsl #2
 932              	.LVL75:
 933              		.loc 1 644 25 discriminator 2 view .LVU249
 934 005e 6A68     		ldr	r2, [r5, #4]
 935 0060 1343     		orrs	r3, r3, r2
 936 0062 6B60     		str	r3, [r5, #4]
 645:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 937              		.loc 1 645 1 discriminator 2 view .LVU250
 938 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 939              		.loc 1 645 1 discriminator 2 view .LVU251
 940              		.cfi_endproc
 941              	.LFE28:
 943              		.section	.text.block_can_split,"ax",%progbits
 944              		.align	1
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	block_can_split:
 950              	.LVL76:
 951              	.LFB31:
 646:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 647:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a given block from the free list. */
 648:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_remove(control_t* control, block_header_t* block)
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
ARM GAS  /tmp/ccoVZeFN.s 			page 29


 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 654:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 655:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a given block into the free list. */
 656:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_insert(control_t* control, block_header_t* block)
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 662:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 663:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_can_split(block_header_t* block, size_t size)
 664:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 952              		.loc 1 664 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              		.loc 1 664 1 is_stmt 0 view .LVU253
 957 0000 10B5     		push	{r4, lr}
 958              	.LCFI9:
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 4, -8
 961              		.cfi_offset 14, -4
 962 0002 0C46     		mov	r4, r1
 665:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) >= sizeof(block_header_t) + size;
 963              		.loc 1 665 2 is_stmt 1 view .LVU254
 964              		.loc 1 665 9 is_stmt 0 view .LVU255
 965 0004 FFF7FEFF 		bl	block_size
 966              	.LVL77:
 967              		.loc 1 665 53 view .LVU256
 968 0008 1034     		adds	r4, r4, #16
 969              	.LVL78:
 666:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 970              		.loc 1 666 1 view .LVU257
 971 000a A042     		cmp	r0, r4
 972 000c 34BF     		ite	cc
 973 000e 0020     		movcc	r0, #0
 974 0010 0120     		movcs	r0, #1
 975 0012 10BD     		pop	{r4, pc}
 976              		.loc 1 666 1 view .LVU258
 977              		.cfi_endproc
 978              	.LFE31:
 980              		.section	.text.block_split,"ax",%progbits
 981              		.align	1
 982              		.syntax unified
 983              		.thumb
 984              		.thumb_func
 986              	block_split:
 987              	.LVL79:
 988              	.LFB32:
 667:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 668:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Split a block into two, the second of which is free. */
 669:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_split(block_header_t* block, size_t size)
 670:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 989              		.loc 1 670 1 is_stmt 1 view -0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 30


 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              		.loc 1 670 1 is_stmt 0 view .LVU260
 994 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 995              	.LCFI10:
 996              		.cfi_def_cfa_offset 32
 997              		.cfi_offset 3, -32
 998              		.cfi_offset 4, -28
 999              		.cfi_offset 5, -24
 1000              		.cfi_offset 6, -20
 1001              		.cfi_offset 7, -16
 1002              		.cfi_offset 8, -12
 1003              		.cfi_offset 9, -8
 1004              		.cfi_offset 14, -4
 1005 0004 0746     		mov	r7, r0
 1006 0006 0C46     		mov	r4, r1
 671:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 672:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining =
 1007              		.loc 1 672 2 is_stmt 1 view .LVU261
 673:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(block_to_ptr(block), size - block_header_overhead);
 1008              		.loc 1 673 19 is_stmt 0 view .LVU262
 1009 0008 FFF7FEFF 		bl	block_to_ptr
 1010              	.LVL80:
 1011              		.loc 1 673 3 view .LVU263
 1012 000c 211F     		subs	r1, r4, #4
 1013 000e FFF7FEFF 		bl	offset_to_block
 1014              	.LVL81:
 1015 0012 0546     		mov	r5, r0
 1016              	.LVL82:
 674:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 675:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t remain_size = block_size(block) - (size + block_header_overhead);
 1017              		.loc 1 675 2 is_stmt 1 view .LVU264
 1018              		.loc 1 675 29 is_stmt 0 view .LVU265
 1019 0014 3846     		mov	r0, r7
 1020              	.LVL83:
 1021              		.loc 1 675 29 view .LVU266
 1022 0016 FFF7FEFF 		bl	block_size
 1023              	.LVL84:
 1024 001a 0646     		mov	r6, r0
 1025              		.loc 1 675 47 view .LVU267
 1026 001c 031B     		subs	r3, r0, r4
 1027              		.loc 1 675 15 view .LVU268
 1028 001e A3F10409 		sub	r9, r3, #4
 1029              	.LVL85:
 676:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 677:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
 1030              		.loc 1 677 2 is_stmt 1 view .LVU269
 1031              		.loc 1 677 2 view .LVU270
 1032 0022 2846     		mov	r0, r5
 1033 0024 FFF7FEFF 		bl	block_to_ptr
 1034              	.LVL86:
 1035 0028 8046     		mov	r8, r0
 1036 002a 0421     		movs	r1, #4
 1037 002c FFF7FEFF 		bl	align_ptr
 1038              	.LVL87:
 1039 0030 8045     		cmp	r8, r0
 1040 0032 00D0     		beq	.L61
 1041              	.L62:
ARM GAS  /tmp/ccoVZeFN.s 			page 31


 1042              		.loc 1 677 2 discriminator 1 view .LVU271
 1043              		.loc 1 677 2 discriminator 1 view .LVU272
 1044              		.loc 1 677 2 discriminator 1 view .LVU273
 1045              		.loc 1 677 2 discriminator 1 view .LVU274
 1046 0034 FEE7     		b	.L62
 1047              	.L61:
 1048              		.loc 1 677 2 discriminator 2 view .LVU275
 678:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 679:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 680:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
 1049              		.loc 1 680 2 discriminator 2 view .LVU276
 1050              		.loc 1 680 2 discriminator 2 view .LVU277
 1051 0036 04EB0903 		add	r3, r4, r9
 1052 003a 0433     		adds	r3, r3, #4
 1053 003c 9E42     		cmp	r6, r3
 1054 003e 00D0     		beq	.L63
 1055              	.L64:
 1056              		.loc 1 680 2 discriminator 2 view .LVU278
 1057              		.loc 1 680 2 discriminator 2 view .LVU279
 1058              		.loc 1 680 2 discriminator 2 view .LVU280
 1059              		.loc 1 680 2 discriminator 2 view .LVU281
 1060 0040 FEE7     		b	.L64
 1061              	.L63:
 1062              		.loc 1 680 2 discriminator 2 view .LVU282
 681:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1063              		.loc 1 681 2 discriminator 2 view .LVU283
 1064 0042 4946     		mov	r1, r9
 1065 0044 2846     		mov	r0, r5
 1066 0046 FFF7FEFF 		bl	block_set_size
 1067              	.LVL88:
 682:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
 1068              		.loc 1 682 2 discriminator 2 view .LVU284
 1069              		.loc 1 682 2 discriminator 2 view .LVU285
 1070 004a 2846     		mov	r0, r5
 1071 004c FFF7FEFF 		bl	block_size
 1072              	.LVL89:
 1073 0050 0B28     		cmp	r0, #11
 1074 0052 00D8     		bhi	.L65
 1075              	.L66:
 1076              		.loc 1 682 2 discriminator 3 view .LVU286
 1077              		.loc 1 682 2 discriminator 3 view .LVU287
 1078              		.loc 1 682 2 discriminator 3 view .LVU288
 1079              		.loc 1 682 2 discriminator 3 view .LVU289
 1080 0054 FEE7     		b	.L66
 1081              	.L65:
 1082              		.loc 1 682 2 discriminator 4 view .LVU290
 683:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 684:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, size);
 1083              		.loc 1 684 2 discriminator 4 view .LVU291
 1084 0056 2146     		mov	r1, r4
 1085 0058 3846     		mov	r0, r7
 1086 005a FFF7FEFF 		bl	block_set_size
 1087              	.LVL90:
 685:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_mark_as_free(remaining);
 1088              		.loc 1 685 2 discriminator 4 view .LVU292
 1089 005e 2846     		mov	r0, r5
 1090 0060 FFF7FEFF 		bl	block_mark_as_free
ARM GAS  /tmp/ccoVZeFN.s 			page 32


 1091              	.LVL91:
 686:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 687:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining;
 1092              		.loc 1 687 2 discriminator 4 view .LVU293
 688:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1093              		.loc 1 688 1 is_stmt 0 discriminator 4 view .LVU294
 1094 0064 2846     		mov	r0, r5
 1095 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1096              		.loc 1 688 1 discriminator 4 view .LVU295
 1097              		.cfi_endproc
 1098              	.LFE32:
 1100              		.section	.text.block_absorb,"ax",%progbits
 1101              		.align	1
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1106              	block_absorb:
 1107              	.LVL92:
 1108              	.LFB33:
 689:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 690:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 691:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_absorb(block_header_t* prev, block_header_t* block)
 692:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1109              		.loc 1 692 1 is_stmt 1 view -0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              		.loc 1 692 1 is_stmt 0 view .LVU297
 1114 0000 38B5     		push	{r3, r4, r5, lr}
 1115              	.LCFI11:
 1116              		.cfi_def_cfa_offset 16
 1117              		.cfi_offset 3, -16
 1118              		.cfi_offset 4, -12
 1119              		.cfi_offset 5, -8
 1120              		.cfi_offset 14, -4
 1121 0002 0446     		mov	r4, r0
 1122 0004 0D46     		mov	r5, r1
 693:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1123              		.loc 1 693 2 is_stmt 1 view .LVU298
 1124              		.loc 1 693 2 view .LVU299
 1125 0006 FFF7FEFF 		bl	block_is_last
 1126              	.LVL93:
 1127              		.loc 1 693 2 is_stmt 0 view .LVU300
 1128 000a 00B1     		cbz	r0, .L69
 1129              	.L70:
 1130              		.loc 1 693 2 is_stmt 1 discriminator 1 view .LVU301
 1131              		.loc 1 693 2 discriminator 1 view .LVU302
 1132              		.loc 1 693 2 discriminator 1 view .LVU303
 1133              		.loc 1 693 2 discriminator 1 view .LVU304
 1134 000c FEE7     		b	.L70
 1135              	.L69:
 1136              		.loc 1 693 2 discriminator 2 view .LVU305
 694:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 695:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->size += block_size(block) + block_header_overhead;
 1137              		.loc 1 695 2 discriminator 2 view .LVU306
 1138              		.loc 1 695 16 is_stmt 0 discriminator 2 view .LVU307
 1139 000e 2846     		mov	r0, r5
ARM GAS  /tmp/ccoVZeFN.s 			page 33


 1140 0010 FFF7FEFF 		bl	block_size
 1141              	.LVL94:
 1142              		.loc 1 695 34 discriminator 2 view .LVU308
 1143 0014 021D     		adds	r2, r0, #4
 1144              		.loc 1 695 13 discriminator 2 view .LVU309
 1145 0016 6368     		ldr	r3, [r4, #4]
 1146 0018 1344     		add	r3, r3, r2
 1147 001a 6360     		str	r3, [r4, #4]
 696:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1148              		.loc 1 696 2 is_stmt 1 discriminator 2 view .LVU310
 1149 001c 2046     		mov	r0, r4
 1150 001e FFF7FEFF 		bl	block_link_next
 1151              	.LVL95:
 697:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return prev;
 1152              		.loc 1 697 2 discriminator 2 view .LVU311
 698:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1153              		.loc 1 698 1 is_stmt 0 discriminator 2 view .LVU312
 1154 0022 2046     		mov	r0, r4
 1155 0024 38BD     		pop	{r3, r4, r5, pc}
 1156              		.loc 1 698 1 discriminator 2 view .LVU313
 1157              		.cfi_endproc
 1158              	.LFE33:
 1160              		.section	.text.control_constructor,"ax",%progbits
 1161              		.align	1
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1166              	control_constructor:
 1167              	.LVL96:
 1168              	.LFB41:
 699:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 700:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent previous free block. */
 701:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_prev(control_t* control, block_header_t* block)
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 704:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* prev = block_prev(block);
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 710:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 711:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 714:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 715:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent free block. */
 716:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_next(control_t* control, block_header_t* block)
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 720:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_free(next))
 722:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_last(block) && "previous block can't be last");
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
ARM GAS  /tmp/ccoVZeFN.s 			page 34


 726:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 727:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 730:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 731:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 732:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_free(control_t* control, block_header_t* block, size_t size)
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 736:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 741:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 743:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 744:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 745:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_used(control_t* control, block_header_t* block, size_t size)
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 749:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 750:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the next block is free, we must coalesce. */
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 753:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_merge_next(control, remaining_block);
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 756:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 758:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 759:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_trim_free_leading(control_t* control, block_header_t* block, size_t si
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 763:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 764:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* We want the 2nd block. */
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_split(block, size - block_header_overhead);
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 767:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 770:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 771:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining_block;
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 774:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 775:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_locate_free(control_t* control, size_t size)
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 779:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 781:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		mapping_search(size, &fl, &sl);
ARM GAS  /tmp/ccoVZeFN.s 			page 35


 783:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 784:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
 785:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** mapping_search can futz with the size, so for excessively large sizes it can sometimes wind up
 786:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** with indices that are off the end of the block array.
 787:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** So, we protect against that here, since this is the only callsite of mapping_search.
 788:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** Note that we don't need to check sl, since it comes from a modulo operation that guarantees it
 789:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (fl < FL_INDEX_COUNT)
 791:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = search_suitable_block(control, &fl, &sl);
 793:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 794:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 795:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 797:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_size(block) >= size);
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 800:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 801:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 804:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 805:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_prepare_used(control_t* control, block_header_t* block, size_t size)
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 809:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(size && "size must be non-zero");
 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 814:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 817:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 818:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Clear structure and point all empty lists at the null block. */
 819:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void control_constructor(control_t* control)
 820:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1169              		.loc 1 820 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 821:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 1174              		.loc 1 821 2 view .LVU315
 822:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 823:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.next_free = &control->block_null;
 1175              		.loc 1 823 2 view .LVU316
 1176              		.loc 1 823 32 is_stmt 0 view .LVU317
 1177 0000 8060     		str	r0, [r0, #8]
 824:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.prev_free = &control->block_null;
 1178              		.loc 1 824 2 is_stmt 1 view .LVU318
 1179              		.loc 1 824 32 is_stmt 0 view .LVU319
 1180 0002 C060     		str	r0, [r0, #12]
 825:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 826:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap = 0;
 1181              		.loc 1 826 2 is_stmt 1 view .LVU320
ARM GAS  /tmp/ccoVZeFN.s 			page 36


 1182              		.loc 1 826 21 is_stmt 0 view .LVU321
 1183 0004 0021     		movs	r1, #0
 1184 0006 0161     		str	r1, [r0, #16]
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1185              		.loc 1 827 2 is_stmt 1 view .LVU322
 1186              	.LVL97:
 1187              		.loc 1 827 2 is_stmt 0 view .LVU323
 1188 0008 09E0     		b	.L73
 1189              	.LVL98:
 1190              	.L75:
 828:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->sl_bitmap[i] = 0;
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 831:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 832:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->blocks[i][j] = &control->block_null;
 1191              		.loc 1 832 4 is_stmt 1 discriminator 3 view .LVU324
 1192              		.loc 1 832 26 is_stmt 0 discriminator 3 view .LVU325
 1193 000a 02EB4113 		add	r3, r2, r1, lsl #5
 1194 000e 0C33     		adds	r3, r3, #12
 1195 0010 00EB8303 		add	r3, r0, r3, lsl #2
 1196 0014 5860     		str	r0, [r3, #4]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1197              		.loc 1 830 35 is_stmt 1 discriminator 3 view .LVU326
 1198 0016 0132     		adds	r2, r2, #1
 1199              	.LVL99:
 1200              	.L74:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1201              		.loc 1 830 15 discriminator 1 view .LVU327
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1202              		.loc 1 830 3 is_stmt 0 discriminator 1 view .LVU328
 1203 0018 1F2A     		cmp	r2, #31
 1204 001a F6DD     		ble	.L75
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1205              		.loc 1 827 34 is_stmt 1 discriminator 2 view .LVU329
 1206 001c 0131     		adds	r1, r1, #1
 1207              	.LVL100:
 1208              	.L73:
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1209              		.loc 1 827 14 discriminator 1 view .LVU330
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1210              		.loc 1 827 2 is_stmt 0 discriminator 1 view .LVU331
 1211 001e 0729     		cmp	r1, #7
 1212 0020 05DC     		bgt	.L77
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1213              		.loc 1 829 3 is_stmt 1 view .LVU332
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1214              		.loc 1 829 25 is_stmt 0 view .LVU333
 1215 0022 0B1D     		adds	r3, r1, #4
 1216 0024 00EB8303 		add	r3, r0, r3, lsl #2
 1217 0028 0022     		movs	r2, #0
 1218 002a 5A60     		str	r2, [r3, #4]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1219              		.loc 1 830 3 is_stmt 1 view .LVU334
 1220              	.LVL101:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1221              		.loc 1 830 3 is_stmt 0 view .LVU335
 1222 002c F4E7     		b	.L74
ARM GAS  /tmp/ccoVZeFN.s 			page 37


 1223              	.LVL102:
 1224              	.L77:
 833:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 834:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 835:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1225              		.loc 1 835 1 view .LVU336
 1226 002e 7047     		bx	lr
 1227              		.cfi_endproc
 1228              	.LFE41:
 1230              		.section	.text.integrity_walker,"ax",%progbits
 1231              		.align	1
 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1236              	integrity_walker:
 1237              	.LVL103:
 1238              	.LFB42:
 836:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 837:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 838:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Debugging utilities.
 839:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 840:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 841:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct integrity_t
 842:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 843:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int prev_status;
 844:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status;
 845:Middlewares/lvgl/src/misc/lv_tlsf.c **** } integrity_t;
 846:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 847:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_insist(x) { tlsf_assert(x); if (!(x)) { status--; } }
 848:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 849:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void integrity_walker(void* ptr, size_t size, int used, void* user)
 850:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1239              		.loc 1 850 1 is_stmt 1 view -0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		.loc 1 850 1 is_stmt 0 view .LVU338
 1244 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1245              	.LCFI12:
 1246              		.cfi_def_cfa_offset 24
 1247              		.cfi_offset 4, -24
 1248              		.cfi_offset 5, -20
 1249              		.cfi_offset 6, -16
 1250              		.cfi_offset 7, -12
 1251              		.cfi_offset 8, -8
 1252              		.cfi_offset 14, -4
 1253 0004 0F46     		mov	r7, r1
 1254 0006 1D46     		mov	r5, r3
 851:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 1255              		.loc 1 851 2 is_stmt 1 view .LVU339
 1256              		.loc 1 851 26 is_stmt 0 view .LVU340
 1257 0008 FFF7FEFF 		bl	block_from_ptr
 1258              	.LVL104:
 1259              		.loc 1 851 26 view .LVU341
 1260 000c 0446     		mov	r4, r0
 1261              	.LVL105:
 852:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
ARM GAS  /tmp/ccoVZeFN.s 			page 38


 1262              		.loc 1 852 2 is_stmt 1 view .LVU342
 853:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 1263              		.loc 1 853 2 view .LVU343
 1264              		.loc 1 853 31 is_stmt 0 view .LVU344
 1265 000e FFF7FEFF 		bl	block_is_prev_free
 1266              	.LVL106:
 1267              		.loc 1 853 61 view .LVU345
 1268 0012 061E     		subs	r6, r0, #0
 1269 0014 18BF     		it	ne
 1270 0016 0126     		movne	r6, #1
 1271              	.LVL107:
 854:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 1272              		.loc 1 854 2 is_stmt 1 view .LVU346
 1273              		.loc 1 854 26 is_stmt 0 view .LVU347
 1274 0018 2046     		mov	r0, r4
 1275 001a FFF7FEFF 		bl	block_is_free
 1276              	.LVL108:
 1277              		.loc 1 854 51 view .LVU348
 1278 001e B0F10008 		subs	r8, r0, #0
 1279 0022 18BF     		it	ne
 1280 0024 4FF00108 		movne	r8, #1
 1281              	.LVL109:
 855:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 1282              		.loc 1 855 2 is_stmt 1 view .LVU349
 1283              		.loc 1 855 33 is_stmt 0 view .LVU350
 1284 0028 2046     		mov	r0, r4
 1285 002a FFF7FEFF 		bl	block_size
 1286              	.LVL110:
 856:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 857:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 1287              		.loc 1 857 2 is_stmt 1 view .LVU351
 858:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)used;
 1288              		.loc 1 858 2 view .LVU352
 859:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 1289              		.loc 1 859 2 view .LVU353
 1290              		.loc 1 859 2 view .LVU354
 1291 002e 2B68     		ldr	r3, [r5]
 1292 0030 B342     		cmp	r3, r6
 1293 0032 00D0     		beq	.L79
 1294              	.L80:
 1295              		.loc 1 859 2 discriminator 1 view .LVU355
 1296              		.loc 1 859 2 discriminator 1 view .LVU356
 1297              		.loc 1 859 2 discriminator 1 view .LVU357
 1298              		.loc 1 859 2 discriminator 1 view .LVU358
 1299 0034 FEE7     		b	.L80
 1300              	.L79:
 1301              		.loc 1 859 2 discriminator 5 view .LVU359
 1302              		.loc 1 859 2 discriminator 5 view .LVU360
 1303              		.loc 1 859 80 discriminator 5 view .LVU361
 860:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 1304              		.loc 1 860 2 discriminator 5 view .LVU362
 1305              		.loc 1 860 2 discriminator 5 view .LVU363
 1306 0036 B842     		cmp	r0, r7
 1307 0038 00D0     		beq	.L81
 1308              	.L82:
 1309              		.loc 1 860 2 discriminator 2 view .LVU364
 1310              		.loc 1 860 2 discriminator 2 view .LVU365
ARM GAS  /tmp/ccoVZeFN.s 			page 39


 1311              		.loc 1 860 2 discriminator 2 view .LVU366
 1312              		.loc 1 860 2 discriminator 2 view .LVU367
 1313 003a FEE7     		b	.L82
 1314              	.L81:
 1315              		.loc 1 860 2 discriminator 5 view .LVU368
 1316              		.loc 1 860 2 discriminator 5 view .LVU369
 1317              		.loc 1 860 64 discriminator 5 view .LVU370
 861:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 862:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->prev_status = this_status;
 1318              		.loc 1 862 2 discriminator 5 view .LVU371
 1319              		.loc 1 862 21 is_stmt 0 discriminator 5 view .LVU372
 1320 003c C5F80080 		str	r8, [r5]
 863:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 1321              		.loc 1 863 2 is_stmt 1 discriminator 5 view .LVU373
 864:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1322              		.loc 1 864 1 is_stmt 0 discriminator 5 view .LVU374
 1323 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1324              		.loc 1 864 1 discriminator 5 view .LVU375
 1325              		.cfi_endproc
 1326              	.LFE42:
 1328              		.section	.text.default_walker,"ax",%progbits
 1329              		.align	1
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1334              	default_walker:
 1335              	.LVL111:
 1336              	.LFB44:
 865:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 866:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check(lv_tlsf_t tlsf)
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 869:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 872:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 873:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the free lists and bitmaps are accurate. */
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 875:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 877:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int fl_map = control->fl_bitmap & (1U << i);
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 882:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 883:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that first- and second-level lists agree. */
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!fl_map)
 885:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!sl_map && "second-level map must be null");
 887:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 888:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!sl_map)
 890:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block == &control->block_null && "block list must be null");
 892:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 893:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
ARM GAS  /tmp/ccoVZeFN.s 			page 40


 894:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 895:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that there is at least one free block. */
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(sl_list && "no free blocks in second-level map");
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 898:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			while (block != &control->block_null)
 900:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				int fli, sli;
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 907:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				mapping_insert(block_size(block), &fli, &sli);
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 911:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 912:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 913:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 914:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return status;
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 917:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 918:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_insist
 919:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 920:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void default_walker(void* ptr, size_t size, int used, void* user)
 921:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1337              		.loc 1 921 1 is_stmt 1 view -0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              		@ link register save eliminated.
 922:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)user;
 1342              		.loc 1 922 2 view .LVU377
 923:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void*)block_fr
 1343              		.loc 1 923 112 view .LVU378
 924:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1344              		.loc 1 924 1 is_stmt 0 view .LVU379
 1345 0000 7047     		bx	lr
 1346              		.cfi_endproc
 1347              	.LFE44:
 1349              		.section	.text.tlsf_fls,"ax",%progbits
 1350              		.align	1
 1351              		.syntax unified
 1352              		.thumb
 1353              		.thumb_func
 1355              	tlsf_fls:
 1356              	.LVL112:
 1357              	.LFB2:
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 1358              		.loc 1 101 1 is_stmt 1 view -0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362              		@ link register save eliminated.
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
ARM GAS  /tmp/ccoVZeFN.s 			page 41


 1363              		.loc 1 102 2 view .LVU381
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1364              		.loc 1 102 50 is_stmt 0 view .LVU382
 1365 0000 28B1     		cbz	r0, .L87
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1366              		.loc 1 102 30 discriminator 1 view .LVU383
 1367 0002 B0FA80F0 		clz	r0, r0
 1368              	.LVL113:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1369              		.loc 1 102 50 discriminator 1 view .LVU384
 1370 0006 C0F12000 		rsb	r0, r0, #32
 1371              	.L86:
 1372              	.LVL114:
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1373              		.loc 1 103 2 is_stmt 1 discriminator 4 view .LVU385
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1374              		.loc 1 104 1 is_stmt 0 discriminator 4 view .LVU386
 1375 000a 0138     		subs	r0, r0, #1
 1376              	.LVL115:
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1377              		.loc 1 104 1 discriminator 4 view .LVU387
 1378 000c 7047     		bx	lr
 1379              	.LVL116:
 1380              	.L87:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1381              		.loc 1 102 50 view .LVU388
 1382 000e 0020     		movs	r0, #0
 1383              	.LVL117:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1384              		.loc 1 102 50 view .LVU389
 1385 0010 FBE7     		b	.L86
 1386              		.cfi_endproc
 1387              	.LFE2:
 1389              		.section	.text.mapping_insert,"ax",%progbits
 1390              		.align	1
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1395              	mapping_insert:
 1396              	.LVL118:
 1397              	.LFB24:
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1398              		.loc 1 536 1 is_stmt 1 view -0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1402              		.loc 1 536 1 is_stmt 0 view .LVU391
 1403 0000 70B5     		push	{r4, r5, r6, lr}
 1404              	.LCFI13:
 1405              		.cfi_def_cfa_offset 16
 1406              		.cfi_offset 4, -16
 1407              		.cfi_offset 5, -12
 1408              		.cfi_offset 6, -8
 1409              		.cfi_offset 14, -4
 1410 0002 0446     		mov	r4, r0
 1411 0004 0D46     		mov	r5, r1
ARM GAS  /tmp/ccoVZeFN.s 			page 42


 1412 0006 1646     		mov	r6, r2
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 1413              		.loc 1 537 2 is_stmt 1 view .LVU392
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1414              		.loc 1 538 2 view .LVU393
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1415              		.loc 1 538 5 is_stmt 0 view .LVU394
 1416 0008 7F28     		cmp	r0, #127
 1417 000a 08D8     		bhi	.L89
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1418              		.loc 1 541 3 is_stmt 1 view .LVU395
 1419              	.LVL119:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1420              		.loc 1 542 3 view .LVU396
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1421              		.loc 1 542 6 is_stmt 0 view .LVU397
 1422 000c 0028     		cmp	r0, #0
 1423 000e 04DB     		blt	.L93
 1424              	.LVL120:
 1425              	.L90:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1426              		.loc 1 542 6 view .LVU398
 1427 0010 8410     		asrs	r4, r0, #2
 1428              	.LVL121:
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1429              		.loc 1 541 6 view .LVU399
 1430 0012 0020     		movs	r0, #0
 1431              	.LVL122:
 1432              	.L91:
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1433              		.loc 1 550 2 is_stmt 1 view .LVU400
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1434              		.loc 1 550 7 is_stmt 0 view .LVU401
 1435 0014 2860     		str	r0, [r5]
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1436              		.loc 1 551 2 is_stmt 1 view .LVU402
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1437              		.loc 1 551 7 is_stmt 0 view .LVU403
 1438 0016 3460     		str	r4, [r6]
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1439              		.loc 1 552 1 view .LVU404
 1440 0018 70BD     		pop	{r4, r5, r6, pc}
 1441              	.LVL123:
 1442              	.L93:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1443              		.loc 1 542 6 view .LVU405
 1444 001a 0330     		adds	r0, r0, #3
 1445              	.LVL124:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1446              		.loc 1 542 6 view .LVU406
 1447 001c F8E7     		b	.L90
 1448              	.LVL125:
 1449              	.L89:
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1450              		.loc 1 546 3 is_stmt 1 view .LVU407
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1451              		.loc 1 546 8 is_stmt 0 view .LVU408
ARM GAS  /tmp/ccoVZeFN.s 			page 43


 1452 001e FFF7FEFF 		bl	tlsf_fls
 1453              	.LVL126:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1454              		.loc 1 547 3 is_stmt 1 view .LVU409
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1455              		.loc 1 547 8 is_stmt 0 view .LVU410
 1456 0022 431F     		subs	r3, r0, #5
 1457 0024 DC40     		lsrs	r4, r4, r3
 1458              	.LVL127:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1459              		.loc 1 547 6 view .LVU411
 1460 0026 84F02004 		eor	r4, r4, #32
 1461              	.LVL128:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1462              		.loc 1 548 3 is_stmt 1 view .LVU412
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1463              		.loc 1 548 6 is_stmt 0 view .LVU413
 1464 002a 0638     		subs	r0, r0, #6
 1465              	.LVL129:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1466              		.loc 1 548 6 view .LVU414
 1467 002c F2E7     		b	.L91
 1468              		.cfi_endproc
 1469              	.LFE24:
 1471              		.section	.text.block_insert,"ax",%progbits
 1472              		.align	1
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1477              	block_insert:
 1478              	.LVL130:
 1479              	.LFB30:
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1480              		.loc 1 657 1 is_stmt 1 view -0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 8
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1484              		.loc 1 657 1 is_stmt 0 view .LVU416
 1485 0000 30B5     		push	{r4, r5, lr}
 1486              	.LCFI14:
 1487              		.cfi_def_cfa_offset 12
 1488              		.cfi_offset 4, -12
 1489              		.cfi_offset 5, -8
 1490              		.cfi_offset 14, -4
 1491 0002 83B0     		sub	sp, sp, #12
 1492              	.LCFI15:
 1493              		.cfi_def_cfa_offset 24
 1494 0004 0546     		mov	r5, r0
 1495 0006 0C46     		mov	r4, r1
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1496              		.loc 1 658 2 is_stmt 1 view .LVU417
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1497              		.loc 1 659 2 view .LVU418
 1498 0008 0846     		mov	r0, r1
 1499              	.LVL131:
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
ARM GAS  /tmp/ccoVZeFN.s 			page 44


 1500              		.loc 1 659 2 is_stmt 0 view .LVU419
 1501 000a FFF7FEFF 		bl	block_size
 1502              	.LVL132:
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1503              		.loc 1 659 2 view .LVU420
 1504 000e 6A46     		mov	r2, sp
 1505 0010 01A9     		add	r1, sp, #4
 1506 0012 FFF7FEFF 		bl	mapping_insert
 1507              	.LVL133:
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1508              		.loc 1 660 2 is_stmt 1 view .LVU421
 1509 0016 009B     		ldr	r3, [sp]
 1510 0018 019A     		ldr	r2, [sp, #4]
 1511 001a 2146     		mov	r1, r4
 1512 001c 2846     		mov	r0, r5
 1513 001e FFF7FEFF 		bl	insert_free_block
 1514              	.LVL134:
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1515              		.loc 1 661 1 is_stmt 0 view .LVU422
 1516 0022 03B0     		add	sp, sp, #12
 1517              	.LCFI16:
 1518              		.cfi_def_cfa_offset 12
 1519              		@ sp needed
 1520 0024 30BD     		pop	{r4, r5, pc}
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1521              		.loc 1 661 1 view .LVU423
 1522              		.cfi_endproc
 1523              	.LFE30:
 1525              		.section	.text.block_trim_free,"ax",%progbits
 1526              		.align	1
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1531              	block_trim_free:
 1532              	.LVL135:
 1533              	.LFB36:
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1534              		.loc 1 733 1 is_stmt 1 view -0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1538              		.loc 1 733 1 is_stmt 0 view .LVU425
 1539 0000 70B5     		push	{r4, r5, r6, lr}
 1540              	.LCFI17:
 1541              		.cfi_def_cfa_offset 16
 1542              		.cfi_offset 4, -16
 1543              		.cfi_offset 5, -12
 1544              		.cfi_offset 6, -8
 1545              		.cfi_offset 14, -4
 1546 0002 0646     		mov	r6, r0
 1547 0004 0C46     		mov	r4, r1
 1548 0006 1546     		mov	r5, r2
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1549              		.loc 1 734 2 is_stmt 1 view .LVU426
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1550              		.loc 1 734 2 view .LVU427
ARM GAS  /tmp/ccoVZeFN.s 			page 45


 1551 0008 0846     		mov	r0, r1
 1552              	.LVL136:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1553              		.loc 1 734 2 is_stmt 0 view .LVU428
 1554 000a FFF7FEFF 		bl	block_is_free
 1555              	.LVL137:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1556              		.loc 1 734 2 view .LVU429
 1557 000e 00B9     		cbnz	r0, .L97
 1558              	.L98:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1559              		.loc 1 734 2 is_stmt 1 discriminator 1 view .LVU430
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1560              		.loc 1 734 2 discriminator 1 view .LVU431
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1561              		.loc 1 734 2 discriminator 1 view .LVU432
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1562              		.loc 1 734 2 discriminator 1 view .LVU433
 1563 0010 FEE7     		b	.L98
 1564              	.L97:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1565              		.loc 1 734 2 discriminator 4 view .LVU434
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1566              		.loc 1 735 2 discriminator 4 view .LVU435
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1567              		.loc 1 735 6 is_stmt 0 discriminator 4 view .LVU436
 1568 0012 2946     		mov	r1, r5
 1569 0014 2046     		mov	r0, r4
 1570 0016 FFF7FEFF 		bl	block_can_split
 1571              	.LVL138:
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1572              		.loc 1 735 5 discriminator 4 view .LVU437
 1573 001a 00B9     		cbnz	r0, .L101
 1574              	.LVL139:
 1575              	.L96:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1576              		.loc 1 742 1 view .LVU438
 1577 001c 70BD     		pop	{r4, r5, r6, pc}
 1578              	.LVL140:
 1579              	.L101:
 1580              	.LBB3:
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1581              		.loc 1 737 3 is_stmt 1 view .LVU439
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1582              		.loc 1 737 37 is_stmt 0 view .LVU440
 1583 001e 2946     		mov	r1, r5
 1584 0020 2046     		mov	r0, r4
 1585 0022 FFF7FEFF 		bl	block_split
 1586              	.LVL141:
 1587 0026 0546     		mov	r5, r0
 1588              	.LVL142:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1589              		.loc 1 738 3 is_stmt 1 view .LVU441
 1590 0028 2046     		mov	r0, r4
 1591              	.LVL143:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1592              		.loc 1 738 3 is_stmt 0 view .LVU442
ARM GAS  /tmp/ccoVZeFN.s 			page 46


 1593 002a FFF7FEFF 		bl	block_link_next
 1594              	.LVL144:
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 1595              		.loc 1 739 3 is_stmt 1 view .LVU443
 1596 002e 2846     		mov	r0, r5
 1597 0030 FFF7FEFF 		bl	block_set_prev_free
 1598              	.LVL145:
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1599              		.loc 1 740 3 view .LVU444
 1600 0034 2946     		mov	r1, r5
 1601 0036 3046     		mov	r0, r6
 1602 0038 FFF7FEFF 		bl	block_insert
 1603              	.LVL146:
 1604              	.LBE3:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1605              		.loc 1 742 1 is_stmt 0 view .LVU445
 1606 003c EEE7     		b	.L96
 1607              		.cfi_endproc
 1608              	.LFE36:
 1610              		.section	.text.block_prepare_used,"ax",%progbits
 1611              		.align	1
 1612              		.syntax unified
 1613              		.thumb
 1614              		.thumb_func
 1616              	block_prepare_used:
 1617              	.LVL147:
 1618              	.LFB40:
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1619              		.loc 1 806 1 is_stmt 1 view -0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 0
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1623              		.loc 1 806 1 is_stmt 0 view .LVU447
 1624 0000 10B5     		push	{r4, lr}
 1625              	.LCFI18:
 1626              		.cfi_def_cfa_offset 8
 1627              		.cfi_offset 4, -8
 1628              		.cfi_offset 14, -4
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1629              		.loc 1 807 2 is_stmt 1 view .LVU448
 1630              	.LVL148:
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1631              		.loc 1 808 2 view .LVU449
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1632              		.loc 1 808 5 is_stmt 0 view .LVU450
 1633 0002 0C46     		mov	r4, r1
 1634 0004 51B1     		cbz	r1, .L106
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1635              		.loc 1 810 3 is_stmt 1 view .LVU451
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1636              		.loc 1 810 3 view .LVU452
 1637 0006 02B9     		cbnz	r2, .L104
 1638              	.L105:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1639              		.loc 1 810 3 discriminator 1 view .LVU453
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
ARM GAS  /tmp/ccoVZeFN.s 			page 47


 1640              		.loc 1 810 3 discriminator 1 view .LVU454
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1641              		.loc 1 810 3 discriminator 1 view .LVU455
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1642              		.loc 1 810 3 discriminator 1 view .LVU456
 1643 0008 FEE7     		b	.L105
 1644              	.L104:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1645              		.loc 1 810 3 discriminator 2 view .LVU457
 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 1646              		.loc 1 811 3 discriminator 2 view .LVU458
 1647 000a FFF7FEFF 		bl	block_trim_free
 1648              	.LVL149:
 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 1649              		.loc 1 812 3 discriminator 2 view .LVU459
 1650 000e 2046     		mov	r0, r4
 1651 0010 FFF7FEFF 		bl	block_mark_as_used
 1652              	.LVL150:
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1653              		.loc 1 813 3 discriminator 2 view .LVU460
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1654              		.loc 1 813 7 is_stmt 0 discriminator 2 view .LVU461
 1655 0014 2046     		mov	r0, r4
 1656 0016 FFF7FEFF 		bl	block_to_ptr
 1657              	.LVL151:
 1658              	.L102:
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1659              		.loc 1 816 1 view .LVU462
 1660 001a 10BD     		pop	{r4, pc}
 1661              	.LVL152:
 1662              	.L106:
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1663              		.loc 1 807 8 view .LVU463
 1664 001c 0846     		mov	r0, r1
 1665              	.LVL153:
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1666              		.loc 1 815 2 is_stmt 1 view .LVU464
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1667              		.loc 1 815 9 is_stmt 0 view .LVU465
 1668 001e FCE7     		b	.L102
 1669              		.cfi_endproc
 1670              	.LFE40:
 1672              		.section	.text.block_trim_free_leading,"ax",%progbits
 1673              		.align	1
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1678              	block_trim_free_leading:
 1679              	.LVL154:
 1680              	.LFB38:
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1681              		.loc 1 760 1 is_stmt 1 view -0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1685              		.loc 1 760 1 is_stmt 0 view .LVU467
ARM GAS  /tmp/ccoVZeFN.s 			page 48


 1686 0000 70B5     		push	{r4, r5, r6, lr}
 1687              	.LCFI19:
 1688              		.cfi_def_cfa_offset 16
 1689              		.cfi_offset 4, -16
 1690              		.cfi_offset 5, -12
 1691              		.cfi_offset 6, -8
 1692              		.cfi_offset 14, -4
 1693 0002 0646     		mov	r6, r0
 1694 0004 0C46     		mov	r4, r1
 1695 0006 1546     		mov	r5, r2
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1696              		.loc 1 761 2 is_stmt 1 view .LVU468
 1697              	.LVL155:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1698              		.loc 1 762 2 view .LVU469
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1699              		.loc 1 762 6 is_stmt 0 view .LVU470
 1700 0008 1146     		mov	r1, r2
 1701              	.LVL156:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1702              		.loc 1 762 6 view .LVU471
 1703 000a 2046     		mov	r0, r4
 1704              	.LVL157:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1705              		.loc 1 762 6 view .LVU472
 1706 000c FFF7FEFF 		bl	block_can_split
 1707              	.LVL158:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1708              		.loc 1 762 5 view .LVU473
 1709 0010 08B9     		cbnz	r0, .L111
 1710              	.LVL159:
 1711              	.L109:
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1712              		.loc 1 772 2 is_stmt 1 view .LVU474
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1713              		.loc 1 773 1 is_stmt 0 view .LVU475
 1714 0012 2046     		mov	r0, r4
 1715 0014 70BD     		pop	{r4, r5, r6, pc}
 1716              	.LVL160:
 1717              	.L111:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1718              		.loc 1 765 3 is_stmt 1 view .LVU476
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1719              		.loc 1 765 21 is_stmt 0 view .LVU477
 1720 0016 291F     		subs	r1, r5, #4
 1721 0018 2046     		mov	r0, r4
 1722 001a FFF7FEFF 		bl	block_split
 1723              	.LVL161:
 1724 001e 0546     		mov	r5, r0
 1725              	.LVL162:
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1726              		.loc 1 766 3 is_stmt 1 view .LVU478
 1727 0020 FFF7FEFF 		bl	block_set_prev_free
 1728              	.LVL163:
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 1729              		.loc 1 768 3 view .LVU479
 1730 0024 2046     		mov	r0, r4
ARM GAS  /tmp/ccoVZeFN.s 			page 49


 1731 0026 FFF7FEFF 		bl	block_link_next
 1732              	.LVL164:
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1733              		.loc 1 769 3 view .LVU480
 1734 002a 2146     		mov	r1, r4
 1735 002c 3046     		mov	r0, r6
 1736 002e FFF7FEFF 		bl	block_insert
 1737              	.LVL165:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1738              		.loc 1 765 21 is_stmt 0 view .LVU481
 1739 0032 2C46     		mov	r4, r5
 1740              	.LVL166:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1741              		.loc 1 765 21 view .LVU482
 1742 0034 EDE7     		b	.L109
 1743              		.cfi_endproc
 1744              	.LFE38:
 1746              		.section	.text.block_remove,"ax",%progbits
 1747              		.align	1
 1748              		.syntax unified
 1749              		.thumb
 1750              		.thumb_func
 1752              	block_remove:
 1753              	.LVL167:
 1754              	.LFB29:
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1755              		.loc 1 649 1 is_stmt 1 view -0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 8
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1759              		.loc 1 649 1 is_stmt 0 view .LVU484
 1760 0000 30B5     		push	{r4, r5, lr}
 1761              	.LCFI20:
 1762              		.cfi_def_cfa_offset 12
 1763              		.cfi_offset 4, -12
 1764              		.cfi_offset 5, -8
 1765              		.cfi_offset 14, -4
 1766 0002 83B0     		sub	sp, sp, #12
 1767              	.LCFI21:
 1768              		.cfi_def_cfa_offset 24
 1769 0004 0546     		mov	r5, r0
 1770 0006 0C46     		mov	r4, r1
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1771              		.loc 1 650 2 is_stmt 1 view .LVU485
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1772              		.loc 1 651 2 view .LVU486
 1773 0008 0846     		mov	r0, r1
 1774              	.LVL168:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1775              		.loc 1 651 2 is_stmt 0 view .LVU487
 1776 000a FFF7FEFF 		bl	block_size
 1777              	.LVL169:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1778              		.loc 1 651 2 view .LVU488
 1779 000e 6A46     		mov	r2, sp
 1780 0010 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccoVZeFN.s 			page 50


 1781 0012 FFF7FEFF 		bl	mapping_insert
 1782              	.LVL170:
 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1783              		.loc 1 652 2 is_stmt 1 view .LVU489
 1784 0016 009B     		ldr	r3, [sp]
 1785 0018 019A     		ldr	r2, [sp, #4]
 1786 001a 2146     		mov	r1, r4
 1787 001c 2846     		mov	r0, r5
 1788 001e FFF7FEFF 		bl	remove_free_block
 1789              	.LVL171:
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1790              		.loc 1 653 1 is_stmt 0 view .LVU490
 1791 0022 03B0     		add	sp, sp, #12
 1792              	.LCFI22:
 1793              		.cfi_def_cfa_offset 12
 1794              		@ sp needed
 1795 0024 30BD     		pop	{r4, r5, pc}
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1796              		.loc 1 653 1 view .LVU491
 1797              		.cfi_endproc
 1798              	.LFE29:
 1800              		.section	.text.block_merge_prev,"ax",%progbits
 1801              		.align	1
 1802              		.syntax unified
 1803              		.thumb
 1804              		.thumb_func
 1806              	block_merge_prev:
 1807              	.LVL172:
 1808              	.LFB34:
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1809              		.loc 1 702 1 is_stmt 1 view -0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1813              		.loc 1 702 1 is_stmt 0 view .LVU493
 1814 0000 70B5     		push	{r4, r5, r6, lr}
 1815              	.LCFI23:
 1816              		.cfi_def_cfa_offset 16
 1817              		.cfi_offset 4, -16
 1818              		.cfi_offset 5, -12
 1819              		.cfi_offset 6, -8
 1820              		.cfi_offset 14, -4
 1821 0002 0546     		mov	r5, r0
 1822 0004 0C46     		mov	r4, r1
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1823              		.loc 1 703 2 is_stmt 1 view .LVU494
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1824              		.loc 1 703 6 is_stmt 0 view .LVU495
 1825 0006 0846     		mov	r0, r1
 1826              	.LVL173:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1827              		.loc 1 703 6 view .LVU496
 1828 0008 FFF7FEFF 		bl	block_is_prev_free
 1829              	.LVL174:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1830              		.loc 1 703 5 view .LVU497
ARM GAS  /tmp/ccoVZeFN.s 			page 51


 1831 000c 08B9     		cbnz	r0, .L121
 1832              	.L115:
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1833              		.loc 1 712 2 is_stmt 1 view .LVU498
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1834              		.loc 1 713 1 is_stmt 0 view .LVU499
 1835 000e 2046     		mov	r0, r4
 1836 0010 70BD     		pop	{r4, r5, r6, pc}
 1837              	.LVL175:
 1838              	.L121:
 1839              	.LBB4:
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1840              		.loc 1 705 3 is_stmt 1 view .LVU500
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1841              		.loc 1 705 26 is_stmt 0 view .LVU501
 1842 0012 2046     		mov	r0, r4
 1843 0014 FFF7FEFF 		bl	block_prev
 1844              	.LVL176:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1845              		.loc 1 706 3 is_stmt 1 view .LVU502
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1846              		.loc 1 706 3 view .LVU503
 1847 0018 0646     		mov	r6, r0
 1848 001a 18B1     		cbz	r0, .L117
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1849              		.loc 1 706 3 discriminator 2 view .LVU504
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1850              		.loc 1 707 3 discriminator 2 view .LVU505
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1851              		.loc 1 707 3 discriminator 2 view .LVU506
 1852 001c FFF7FEFF 		bl	block_is_free
 1853              	.LVL177:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1854              		.loc 1 707 3 is_stmt 0 discriminator 2 view .LVU507
 1855 0020 08B9     		cbnz	r0, .L118
 1856              	.L119:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1857              		.loc 1 707 3 is_stmt 1 discriminator 2 view .LVU508
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1858              		.loc 1 707 3 discriminator 2 view .LVU509
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1859              		.loc 1 707 3 discriminator 2 view .LVU510
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1860              		.loc 1 707 3 discriminator 2 view .LVU511
 1861 0022 FEE7     		b	.L119
 1862              	.LVL178:
 1863              	.L117:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1864              		.loc 1 706 3 discriminator 1 view .LVU512
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1865              		.loc 1 706 3 discriminator 1 view .LVU513
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1866              		.loc 1 706 3 discriminator 1 view .LVU514
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1867              		.loc 1 706 3 discriminator 1 view .LVU515
 1868 0024 FEE7     		b	.L117
 1869              	.LVL179:
ARM GAS  /tmp/ccoVZeFN.s 			page 52


 1870              	.L118:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1871              		.loc 1 707 3 discriminator 4 view .LVU516
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 1872              		.loc 1 708 3 discriminator 4 view .LVU517
 1873 0026 3146     		mov	r1, r6
 1874 0028 2846     		mov	r0, r5
 1875 002a FFF7FEFF 		bl	block_remove
 1876              	.LVL180:
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1877              		.loc 1 709 3 discriminator 4 view .LVU518
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1878              		.loc 1 709 11 is_stmt 0 discriminator 4 view .LVU519
 1879 002e 2146     		mov	r1, r4
 1880 0030 3046     		mov	r0, r6
 1881 0032 FFF7FEFF 		bl	block_absorb
 1882              	.LVL181:
 1883 0036 0446     		mov	r4, r0
 1884              	.LVL182:
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1885              		.loc 1 709 11 discriminator 4 view .LVU520
 1886 0038 E9E7     		b	.L115
 1887              	.LBE4:
 1888              		.cfi_endproc
 1889              	.LFE34:
 1891              		.section	.text.block_merge_next,"ax",%progbits
 1892              		.align	1
 1893              		.syntax unified
 1894              		.thumb
 1895              		.thumb_func
 1897              	block_merge_next:
 1898              	.LVL183:
 1899              	.LFB35:
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1900              		.loc 1 717 1 is_stmt 1 view -0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 0
 1903              		@ frame_needed = 0, uses_anonymous_args = 0
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1904              		.loc 1 717 1 is_stmt 0 view .LVU522
 1905 0000 70B5     		push	{r4, r5, r6, lr}
 1906              	.LCFI24:
 1907              		.cfi_def_cfa_offset 16
 1908              		.cfi_offset 4, -16
 1909              		.cfi_offset 5, -12
 1910              		.cfi_offset 6, -8
 1911              		.cfi_offset 14, -4
 1912 0002 0546     		mov	r5, r0
 1913 0004 0C46     		mov	r4, r1
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1914              		.loc 1 718 2 is_stmt 1 view .LVU523
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1915              		.loc 1 718 25 is_stmt 0 view .LVU524
 1916 0006 0846     		mov	r0, r1
 1917              	.LVL184:
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1918              		.loc 1 718 25 view .LVU525
ARM GAS  /tmp/ccoVZeFN.s 			page 53


 1919 0008 FFF7FEFF 		bl	block_next
 1920              	.LVL185:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1921              		.loc 1 719 2 is_stmt 1 view .LVU526
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1922              		.loc 1 719 2 view .LVU527
 1923 000c 40B1     		cbz	r0, .L124
 1924 000e 0646     		mov	r6, r0
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1925              		.loc 1 719 2 discriminator 2 view .LVU528
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1926              		.loc 1 721 2 discriminator 2 view .LVU529
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1927              		.loc 1 721 6 is_stmt 0 discriminator 2 view .LVU530
 1928 0010 FFF7FEFF 		bl	block_is_free
 1929              	.LVL186:
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1930              		.loc 1 721 5 discriminator 2 view .LVU531
 1931 0014 70B1     		cbz	r0, .L125
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1932              		.loc 1 723 3 is_stmt 1 view .LVU532
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1933              		.loc 1 723 3 view .LVU533
 1934 0016 2046     		mov	r0, r4
 1935 0018 FFF7FEFF 		bl	block_is_last
 1936              	.LVL187:
 1937 001c 08B1     		cbz	r0, .L126
 1938              	.L127:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1939              		.loc 1 723 3 discriminator 2 view .LVU534
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1940              		.loc 1 723 3 discriminator 2 view .LVU535
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1941              		.loc 1 723 3 discriminator 2 view .LVU536
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1942              		.loc 1 723 3 discriminator 2 view .LVU537
 1943 001e FEE7     		b	.L127
 1944              	.LVL188:
 1945              	.L124:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1946              		.loc 1 719 2 discriminator 1 view .LVU538
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1947              		.loc 1 719 2 discriminator 1 view .LVU539
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1948              		.loc 1 719 2 discriminator 1 view .LVU540
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1949              		.loc 1 719 2 discriminator 1 view .LVU541
 1950 0020 FEE7     		b	.L124
 1951              	.LVL189:
 1952              	.L126:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1953              		.loc 1 723 3 discriminator 2 view .LVU542
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 1954              		.loc 1 724 3 discriminator 2 view .LVU543
 1955 0022 3146     		mov	r1, r6
 1956 0024 2846     		mov	r0, r5
 1957 0026 FFF7FEFF 		bl	block_remove
ARM GAS  /tmp/ccoVZeFN.s 			page 54


 1958              	.LVL190:
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1959              		.loc 1 725 3 discriminator 2 view .LVU544
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1960              		.loc 1 725 11 is_stmt 0 discriminator 2 view .LVU545
 1961 002a 3146     		mov	r1, r6
 1962 002c 2046     		mov	r0, r4
 1963 002e FFF7FEFF 		bl	block_absorb
 1964              	.LVL191:
 1965 0032 0446     		mov	r4, r0
 1966              	.LVL192:
 1967              	.L125:
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1968              		.loc 1 728 2 is_stmt 1 view .LVU546
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1969              		.loc 1 729 1 is_stmt 0 view .LVU547
 1970 0034 2046     		mov	r0, r4
 1971 0036 70BD     		pop	{r4, r5, r6, pc}
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1972              		.loc 1 729 1 view .LVU548
 1973              		.cfi_endproc
 1974              	.LFE35:
 1976              		.section	.text.block_trim_used,"ax",%progbits
 1977              		.align	1
 1978              		.syntax unified
 1979              		.thumb
 1980              		.thumb_func
 1982              	block_trim_used:
 1983              	.LVL193:
 1984              	.LFB37:
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 1985              		.loc 1 746 1 is_stmt 1 view -0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 0
 1988              		@ frame_needed = 0, uses_anonymous_args = 0
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 1989              		.loc 1 746 1 is_stmt 0 view .LVU550
 1990 0000 70B5     		push	{r4, r5, r6, lr}
 1991              	.LCFI25:
 1992              		.cfi_def_cfa_offset 16
 1993              		.cfi_offset 4, -16
 1994              		.cfi_offset 5, -12
 1995              		.cfi_offset 6, -8
 1996              		.cfi_offset 14, -4
 1997 0002 0646     		mov	r6, r0
 1998 0004 0C46     		mov	r4, r1
 1999 0006 1546     		mov	r5, r2
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2000              		.loc 1 747 2 is_stmt 1 view .LVU551
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2001              		.loc 1 747 2 view .LVU552
 2002 0008 0846     		mov	r0, r1
 2003              	.LVL194:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2004              		.loc 1 747 2 is_stmt 0 view .LVU553
 2005 000a FFF7FEFF 		bl	block_is_free
 2006              	.LVL195:
ARM GAS  /tmp/ccoVZeFN.s 			page 55


 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2007              		.loc 1 747 2 view .LVU554
 2008 000e 00B1     		cbz	r0, .L130
 2009              	.L131:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2010              		.loc 1 747 2 is_stmt 1 discriminator 1 view .LVU555
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2011              		.loc 1 747 2 discriminator 1 view .LVU556
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2012              		.loc 1 747 2 discriminator 1 view .LVU557
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2013              		.loc 1 747 2 discriminator 1 view .LVU558
 2014 0010 FEE7     		b	.L131
 2015              	.L130:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2016              		.loc 1 747 2 discriminator 2 view .LVU559
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2017              		.loc 1 748 2 discriminator 2 view .LVU560
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2018              		.loc 1 748 6 is_stmt 0 discriminator 2 view .LVU561
 2019 0012 2946     		mov	r1, r5
 2020 0014 2046     		mov	r0, r4
 2021 0016 FFF7FEFF 		bl	block_can_split
 2022              	.LVL196:
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2023              		.loc 1 748 5 discriminator 2 view .LVU562
 2024 001a 00B9     		cbnz	r0, .L134
 2025              	.LVL197:
 2026              	.L129:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2027              		.loc 1 757 1 view .LVU563
 2028 001c 70BD     		pop	{r4, r5, r6, pc}
 2029              	.LVL198:
 2030              	.L134:
 2031              	.LBB5:
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2032              		.loc 1 751 3 is_stmt 1 view .LVU564
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2033              		.loc 1 751 37 is_stmt 0 view .LVU565
 2034 001e 2946     		mov	r1, r5
 2035 0020 2046     		mov	r0, r4
 2036 0022 FFF7FEFF 		bl	block_split
 2037              	.LVL199:
 2038 0026 0446     		mov	r4, r0
 2039              	.LVL200:
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2040              		.loc 1 752 3 is_stmt 1 view .LVU566
 2041 0028 FFF7FEFF 		bl	block_set_prev_used
 2042              	.LVL201:
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2043              		.loc 1 754 3 view .LVU567
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2044              		.loc 1 754 21 is_stmt 0 view .LVU568
 2045 002c 2146     		mov	r1, r4
 2046 002e 3046     		mov	r0, r6
 2047 0030 FFF7FEFF 		bl	block_merge_next
 2048              	.LVL202:
ARM GAS  /tmp/ccoVZeFN.s 			page 56


 2049 0034 0146     		mov	r1, r0
 2050              	.LVL203:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2051              		.loc 1 755 3 is_stmt 1 view .LVU569
 2052 0036 3046     		mov	r0, r6
 2053              	.LVL204:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2054              		.loc 1 755 3 is_stmt 0 view .LVU570
 2055 0038 FFF7FEFF 		bl	block_insert
 2056              	.LVL205:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2057              		.loc 1 755 3 view .LVU571
 2058              	.LBE5:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2059              		.loc 1 757 1 view .LVU572
 2060 003c EEE7     		b	.L129
 2061              		.cfi_endproc
 2062              	.LFE37:
 2064              		.section	.text.mapping_search,"ax",%progbits
 2065              		.align	1
 2066              		.syntax unified
 2067              		.thumb
 2068              		.thumb_func
 2070              	mapping_search:
 2071              	.LVL206:
 2072              	.LFB25:
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2073              		.loc 1 556 1 is_stmt 1 view -0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 0
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2077              		.loc 1 556 1 is_stmt 0 view .LVU574
 2078 0000 70B5     		push	{r4, r5, r6, lr}
 2079              	.LCFI26:
 2080              		.cfi_def_cfa_offset 16
 2081              		.cfi_offset 4, -16
 2082              		.cfi_offset 5, -12
 2083              		.cfi_offset 6, -8
 2084              		.cfi_offset 14, -4
 2085 0002 0446     		mov	r4, r0
 2086 0004 0D46     		mov	r5, r1
 2087 0006 1646     		mov	r6, r2
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2088              		.loc 1 557 2 is_stmt 1 view .LVU575
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2089              		.loc 1 557 5 is_stmt 0 view .LVU576
 2090 0008 7F28     		cmp	r0, #127
 2091 000a 06D9     		bls	.L136
 2092              	.LBB6:
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2093              		.loc 1 559 3 is_stmt 1 view .LVU577
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2094              		.loc 1 559 31 is_stmt 0 view .LVU578
 2095 000c FFF7FEFF 		bl	tlsf_fls
 2096              	.LVL207:
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
ARM GAS  /tmp/ccoVZeFN.s 			page 57


 2097              		.loc 1 559 52 view .LVU579
 2098 0010 431F     		subs	r3, r0, #5
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2099              		.loc 1 559 27 view .LVU580
 2100 0012 0120     		movs	r0, #1
 2101 0014 9840     		lsls	r0, r0, r3
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2102              		.loc 1 559 76 view .LVU581
 2103 0016 0138     		subs	r0, r0, #1
 2104              	.LVL208:
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2105              		.loc 1 560 3 is_stmt 1 view .LVU582
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2106              		.loc 1 560 8 is_stmt 0 view .LVU583
 2107 0018 0444     		add	r4, r4, r0
 2108              	.LVL209:
 2109              	.L136:
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2110              		.loc 1 560 8 view .LVU584
 2111              	.LBE6:
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2112              		.loc 1 562 2 is_stmt 1 view .LVU585
 2113 001a 3246     		mov	r2, r6
 2114 001c 2946     		mov	r1, r5
 2115 001e 2046     		mov	r0, r4
 2116 0020 FFF7FEFF 		bl	mapping_insert
 2117              	.LVL210:
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2118              		.loc 1 563 1 is_stmt 0 view .LVU586
 2119 0024 70BD     		pop	{r4, r5, r6, pc}
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2120              		.loc 1 563 1 view .LVU587
 2121              		.cfi_endproc
 2122              	.LFE25:
 2124              		.section	.text.tlsf_ffs,"ax",%progbits
 2125              		.align	1
 2126              		.syntax unified
 2127              		.thumb
 2128              		.thumb_func
 2130              	tlsf_ffs:
 2131              	.LVL211:
 2132              	.LFB1:
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2133              		.loc 1 94 1 is_stmt 1 view -0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 0
 2136              		@ frame_needed = 0, uses_anonymous_args = 0
 2137              		@ link register save eliminated.
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2138              		.loc 1 94 1 is_stmt 0 view .LVU589
 2139 0000 0346     		mov	r3, r0
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2140              		.loc 1 95 2 is_stmt 1 view .LVU590
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2141              		.loc 1 95 9 is_stmt 0 view .LVU591
 2142 0002 90FAA0F0 		rbit	r0, r0
 2143              	.LVL212:
ARM GAS  /tmp/ccoVZeFN.s 			page 58


  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2144              		.loc 1 95 9 view .LVU592
 2145 0006 B0FA80F0 		clz	r0, r0
 2146 000a 0BB9     		cbnz	r3, .L139
 2147 000c 4FF0FF30 		mov	r0, #-1
 2148              	.L139:
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2149              		.loc 1 96 1 view .LVU593
 2150 0010 7047     		bx	lr
 2151              		.cfi_endproc
 2152              	.LFE1:
 2154              		.section	.text.search_suitable_block,"ax",%progbits
 2155              		.align	1
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2160              	search_suitable_block:
 2161              	.LVL213:
 2162              	.LFB26:
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2163              		.loc 1 566 1 is_stmt 1 view -0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2167              		.loc 1 566 1 is_stmt 0 view .LVU595
 2168 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2169              	.LCFI27:
 2170              		.cfi_def_cfa_offset 24
 2171              		.cfi_offset 3, -24
 2172              		.cfi_offset 4, -20
 2173              		.cfi_offset 5, -16
 2174              		.cfi_offset 6, -12
 2175              		.cfi_offset 7, -8
 2176              		.cfi_offset 14, -4
 2177 0002 0446     		mov	r4, r0
 2178 0004 1646     		mov	r6, r2
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2179              		.loc 1 567 2 is_stmt 1 view .LVU596
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2180              		.loc 1 567 6 is_stmt 0 view .LVU597
 2181 0006 0D68     		ldr	r5, [r1]
 2182              	.LVL214:
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2183              		.loc 1 568 2 is_stmt 1 view .LVU598
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2184              		.loc 1 568 6 is_stmt 0 view .LVU599
 2185 0008 1268     		ldr	r2, [r2]
 2186              	.LVL215:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2187              		.loc 1 574 2 is_stmt 1 view .LVU600
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2188              		.loc 1 574 42 is_stmt 0 view .LVU601
 2189 000a 2B1D     		adds	r3, r5, #4
 2190 000c 00EB8303 		add	r3, r0, r3, lsl #2
 2191 0010 5B68     		ldr	r3, [r3, #4]
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
ARM GAS  /tmp/ccoVZeFN.s 			page 59


 2192              		.loc 1 574 54 view .LVU602
 2193 0012 4FF0FF30 		mov	r0, #-1
 2194              	.LVL216:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2195              		.loc 1 574 54 view .LVU603
 2196 0016 9040     		lsls	r0, r0, r2
 2197              	.LVL217:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2198              		.loc 1 575 2 is_stmt 1 view .LVU604
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2199              		.loc 1 575 5 is_stmt 0 view .LVU605
 2200 0018 1840     		ands	r0, r3, r0
 2201              	.LVL218:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2202              		.loc 1 575 5 view .LVU606
 2203 001a 10D1     		bne	.L141
 2204 001c 0F46     		mov	r7, r1
 2205              	.LBB7:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2206              		.loc 1 578 3 is_stmt 1 view .LVU607
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2207              		.loc 1 578 38 is_stmt 0 view .LVU608
 2208 001e 2269     		ldr	r2, [r4, #16]
 2209              	.LVL219:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2210              		.loc 1 578 64 view .LVU609
 2211 0020 0135     		adds	r5, r5, #1
 2212              	.LVL220:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2213              		.loc 1 578 57 view .LVU610
 2214 0022 4FF0FF33 		mov	r3, #-1
 2215 0026 AB40     		lsls	r3, r3, r5
 2216              	.LVL221:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2217              		.loc 1 579 3 is_stmt 1 view .LVU611
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2218              		.loc 1 579 6 is_stmt 0 view .LVU612
 2219 0028 12EA0300 		ands	r0, r2, r3
 2220              	.LVL222:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2221              		.loc 1 579 6 view .LVU613
 2222 002c 13D0     		beq	.L145
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2223              		.loc 1 585 3 is_stmt 1 view .LVU614
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2224              		.loc 1 585 8 is_stmt 0 view .LVU615
 2225 002e FFF7FEFF 		bl	tlsf_ffs
 2226              	.LVL223:
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2227              		.loc 1 585 8 view .LVU616
 2228 0032 0546     		mov	r5, r0
 2229              	.LVL224:
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2230              		.loc 1 586 3 is_stmt 1 view .LVU617
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2231              		.loc 1 586 8 is_stmt 0 view .LVU618
 2232 0034 3860     		str	r0, [r7]
ARM GAS  /tmp/ccoVZeFN.s 			page 60


 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2233              		.loc 1 587 3 is_stmt 1 view .LVU619
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2234              		.loc 1 587 10 is_stmt 0 view .LVU620
 2235 0036 031D     		adds	r3, r0, #4
 2236 0038 04EB8303 		add	r3, r4, r3, lsl #2
 2237 003c 5868     		ldr	r0, [r3, #4]
 2238              	.LVL225:
 2239              	.L141:
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2240              		.loc 1 587 10 view .LVU621
 2241              	.LBE7:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2242              		.loc 1 589 2 is_stmt 1 view .LVU622
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2243              		.loc 1 589 2 view .LVU623
 2244 003e 00B9     		cbnz	r0, .L143
 2245              	.L144:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2246              		.loc 1 589 2 discriminator 1 view .LVU624
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2247              		.loc 1 589 2 discriminator 1 view .LVU625
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2248              		.loc 1 589 2 discriminator 1 view .LVU626
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2249              		.loc 1 589 2 discriminator 1 view .LVU627
 2250 0040 FEE7     		b	.L144
 2251              	.L143:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2252              		.loc 1 589 2 discriminator 2 view .LVU628
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2253              		.loc 1 590 2 discriminator 2 view .LVU629
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2254              		.loc 1 590 7 is_stmt 0 discriminator 2 view .LVU630
 2255 0042 FFF7FEFF 		bl	tlsf_ffs
 2256              	.LVL226:
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2257              		.loc 1 591 2 is_stmt 1 discriminator 2 view .LVU631
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2258              		.loc 1 591 7 is_stmt 0 discriminator 2 view .LVU632
 2259 0046 3060     		str	r0, [r6]
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2260              		.loc 1 594 2 is_stmt 1 discriminator 2 view .LVU633
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2261              		.loc 1 594 28 is_stmt 0 discriminator 2 view .LVU634
 2262 0048 00EB4513 		add	r3, r0, r5, lsl #5
 2263 004c 0C33     		adds	r3, r3, #12
 2264 004e 04EB8304 		add	r4, r4, r3, lsl #2
 2265              	.LVL227:
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2266              		.loc 1 594 28 discriminator 2 view .LVU635
 2267 0052 6068     		ldr	r0, [r4, #4]
 2268              	.LVL228:
 2269              	.L140:
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2270              		.loc 1 595 1 view .LVU636
 2271 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccoVZeFN.s 			page 61


 2272              	.LVL229:
 2273              	.L145:
 2274              	.LBB8:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2275              		.loc 1 582 11 view .LVU637
 2276 0056 0020     		movs	r0, #0
 2277              	.LVL230:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2278              		.loc 1 582 11 view .LVU638
 2279 0058 FCE7     		b	.L140
 2280              	.LBE8:
 2281              		.cfi_endproc
 2282              	.LFE26:
 2284              		.section	.text.block_locate_free,"ax",%progbits
 2285              		.align	1
 2286              		.syntax unified
 2287              		.thumb
 2288              		.thumb_func
 2290              	block_locate_free:
 2291              	.LVL231:
 2292              	.LFB39:
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2293              		.loc 1 776 1 is_stmt 1 view -0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 8
 2296              		@ frame_needed = 0, uses_anonymous_args = 0
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2297              		.loc 1 776 1 is_stmt 0 view .LVU640
 2298 0000 70B5     		push	{r4, r5, r6, lr}
 2299              	.LCFI28:
 2300              		.cfi_def_cfa_offset 16
 2301              		.cfi_offset 4, -16
 2302              		.cfi_offset 5, -12
 2303              		.cfi_offset 6, -8
 2304              		.cfi_offset 14, -4
 2305 0002 82B0     		sub	sp, sp, #8
 2306              	.LCFI29:
 2307              		.cfi_def_cfa_offset 24
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2308              		.loc 1 777 2 is_stmt 1 view .LVU641
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2309              		.loc 1 777 6 is_stmt 0 view .LVU642
 2310 0004 0023     		movs	r3, #0
 2311 0006 0193     		str	r3, [sp, #4]
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2312              		.loc 1 777 14 view .LVU643
 2313 0008 0093     		str	r3, [sp]
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2314              		.loc 1 778 2 is_stmt 1 view .LVU644
 2315              	.LVL232:
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2316              		.loc 1 780 2 view .LVU645
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2317              		.loc 1 780 5 is_stmt 0 view .LVU646
 2318 000a E1B1     		cbz	r1, .L151
 2319 000c 0446     		mov	r4, r0
 2320 000e 0E46     		mov	r6, r1
ARM GAS  /tmp/ccoVZeFN.s 			page 62


 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2321              		.loc 1 782 3 is_stmt 1 view .LVU647
 2322 0010 6A46     		mov	r2, sp
 2323 0012 01A9     		add	r1, sp, #4
 2324              	.LVL233:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2325              		.loc 1 782 3 is_stmt 0 view .LVU648
 2326 0014 3046     		mov	r0, r6
 2327              	.LVL234:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2328              		.loc 1 782 3 view .LVU649
 2329 0016 FFF7FEFF 		bl	mapping_search
 2330              	.LVL235:
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2331              		.loc 1 790 3 is_stmt 1 view .LVU650
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2332              		.loc 1 790 10 is_stmt 0 view .LVU651
 2333 001a 019B     		ldr	r3, [sp, #4]
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2334              		.loc 1 790 6 view .LVU652
 2335 001c 072B     		cmp	r3, #7
 2336 001e 16DC     		bgt	.L152
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2337              		.loc 1 792 4 is_stmt 1 view .LVU653
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2338              		.loc 1 792 12 is_stmt 0 view .LVU654
 2339 0020 6A46     		mov	r2, sp
 2340 0022 01A9     		add	r1, sp, #4
 2341 0024 2046     		mov	r0, r4
 2342 0026 FFF7FEFF 		bl	search_suitable_block
 2343              	.LVL236:
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2344              		.loc 1 796 2 is_stmt 1 view .LVU655
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2345              		.loc 1 796 5 is_stmt 0 view .LVU656
 2346 002a 0546     		mov	r5, r0
 2347 002c 60B1     		cbz	r0, .L147
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2348              		.loc 1 798 3 is_stmt 1 view .LVU657
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2349              		.loc 1 798 3 view .LVU658
 2350 002e FFF7FEFF 		bl	block_size
 2351              	.LVL237:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2352              		.loc 1 798 3 is_stmt 0 view .LVU659
 2353 0032 B042     		cmp	r0, r6
 2354 0034 00D2     		bcs	.L149
 2355              	.L150:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2356              		.loc 1 798 3 is_stmt 1 discriminator 1 view .LVU660
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2357              		.loc 1 798 3 discriminator 1 view .LVU661
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2358              		.loc 1 798 3 discriminator 1 view .LVU662
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2359              		.loc 1 798 3 discriminator 1 view .LVU663
 2360 0036 FEE7     		b	.L150
ARM GAS  /tmp/ccoVZeFN.s 			page 63


 2361              	.L149:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2362              		.loc 1 798 3 discriminator 2 view .LVU664
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2363              		.loc 1 799 3 discriminator 2 view .LVU665
 2364 0038 009B     		ldr	r3, [sp]
 2365 003a 019A     		ldr	r2, [sp, #4]
 2366 003c 2946     		mov	r1, r5
 2367 003e 2046     		mov	r0, r4
 2368 0040 FFF7FEFF 		bl	remove_free_block
 2369              	.LVL238:
 2370 0044 00E0     		b	.L147
 2371              	.LVL239:
 2372              	.L151:
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2373              		.loc 1 778 18 is_stmt 0 view .LVU666
 2374 0046 0025     		movs	r5, #0
 2375              	.LVL240:
 2376              	.L147:
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2377              		.loc 1 803 1 view .LVU667
 2378 0048 2846     		mov	r0, r5
 2379 004a 02B0     		add	sp, sp, #8
 2380              	.LCFI30:
 2381              		.cfi_remember_state
 2382              		.cfi_def_cfa_offset 16
 2383              		@ sp needed
 2384 004c 70BD     		pop	{r4, r5, r6, pc}
 2385              	.LVL241:
 2386              	.L152:
 2387              	.LCFI31:
 2388              		.cfi_restore_state
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2389              		.loc 1 778 18 view .LVU668
 2390 004e 0025     		movs	r5, #0
 2391              	.LVL242:
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2392              		.loc 1 802 2 is_stmt 1 view .LVU669
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2393              		.loc 1 802 9 is_stmt 0 view .LVU670
 2394 0050 FAE7     		b	.L147
 2395              		.cfi_endproc
 2396              	.LFE39:
 2398              		.section	.text.lv_tlsf_check,"ax",%progbits
 2399              		.align	1
 2400              		.global	lv_tlsf_check
 2401              		.syntax unified
 2402              		.thumb
 2403              		.thumb_func
 2405              	lv_tlsf_check:
 2406              	.LVL243:
 2407              	.LFB43:
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2408              		.loc 1 867 1 is_stmt 1 view -0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 8
 2411              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 64


 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2412              		.loc 1 867 1 is_stmt 0 view .LVU672
 2413 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2414              	.LCFI32:
 2415              		.cfi_def_cfa_offset 24
 2416              		.cfi_offset 4, -24
 2417              		.cfi_offset 5, -20
 2418              		.cfi_offset 6, -16
 2419              		.cfi_offset 7, -12
 2420              		.cfi_offset 8, -8
 2421              		.cfi_offset 14, -4
 2422 0004 82B0     		sub	sp, sp, #8
 2423              	.LCFI33:
 2424              		.cfi_def_cfa_offset 32
 2425 0006 0546     		mov	r5, r0
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2426              		.loc 1 868 2 is_stmt 1 view .LVU673
 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 2427              		.loc 1 870 2 view .LVU674
 2428              	.LVL244:
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2429              		.loc 1 871 2 view .LVU675
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2430              		.loc 1 874 2 view .LVU676
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2431              		.loc 1 874 9 is_stmt 0 view .LVU677
 2432 0008 0026     		movs	r6, #0
 2433              	.LVL245:
 2434              	.L155:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2435              		.loc 1 874 14 is_stmt 1 discriminator 1 view .LVU678
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2436              		.loc 1 874 2 is_stmt 0 discriminator 1 view .LVU679
 2437 000a 072E     		cmp	r6, #7
 2438 000c 4FDC     		bgt	.L182
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2439              		.loc 1 876 10 view .LVU680
 2440 000e 0027     		movs	r7, #0
 2441              	.L179:
 2442              	.LVL246:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2443              		.loc 1 876 15 is_stmt 1 discriminator 1 view .LVU681
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2444              		.loc 1 876 3 is_stmt 0 discriminator 1 view .LVU682
 2445 0010 1F2F     		cmp	r7, #31
 2446 0012 4ADC     		bgt	.L183
 2447              	.LBB9:
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2448              		.loc 1 878 4 is_stmt 1 view .LVU683
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2449              		.loc 1 878 48 is_stmt 0 view .LVU684
 2450 0014 0123     		movs	r3, #1
 2451 0016 03FA06F0 		lsl	r0, r3, r6
 2452              	.LVL247:
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2453              		.loc 1 879 4 is_stmt 1 view .LVU685
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
ARM GAS  /tmp/ccoVZeFN.s 			page 65


 2454              		.loc 1 879 42 is_stmt 0 view .LVU686
 2455 001a 311D     		adds	r1, r6, #4
 2456 001c 05EB8101 		add	r1, r5, r1, lsl #2
 2457 0020 4A68     		ldr	r2, [r1, #4]
 2458              	.LVL248:
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2459              		.loc 1 880 4 is_stmt 1 view .LVU687
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2460              		.loc 1 880 37 is_stmt 0 view .LVU688
 2461 0022 BB40     		lsls	r3, r3, r7
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2462              		.loc 1 880 31 view .LVU689
 2463 0024 1340     		ands	r3, r3, r2
 2464              	.LVL249:
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2465              		.loc 1 881 4 is_stmt 1 view .LVU690
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2466              		.loc 1 881 26 is_stmt 0 view .LVU691
 2467 0026 07EB4611 		add	r1, r7, r6, lsl #5
 2468 002a 0C31     		adds	r1, r1, #12
 2469 002c 05EB8101 		add	r1, r5, r1, lsl #2
 2470 0030 4C68     		ldr	r4, [r1, #4]
 2471              	.LVL250:
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2472              		.loc 1 884 4 is_stmt 1 view .LVU692
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2473              		.loc 1 884 7 is_stmt 0 view .LVU693
 2474 0032 2969     		ldr	r1, [r5, #16]
 2475 0034 0142     		tst	r1, r0
 2476 0036 00D1     		bne	.L156
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2477              		.loc 1 886 5 is_stmt 1 view .LVU694
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2478              		.loc 1 886 5 view .LVU695
 2479 0038 1BB9     		cbnz	r3, .L157
 2480              	.L156:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2481              		.loc 1 886 60 discriminator 5 view .LVU696
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2482              		.loc 1 889 4 discriminator 5 view .LVU697
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2483              		.loc 1 889 7 is_stmt 0 discriminator 5 view .LVU698
 2484 003a 1BB9     		cbnz	r3, .L158
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2485              		.loc 1 891 5 is_stmt 1 view .LVU699
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2486              		.loc 1 891 5 view .LVU700
 2487 003c A542     		cmp	r5, r4
 2488 003e 32D0     		beq	.L159
 2489              	.L160:
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2490              		.loc 1 891 5 discriminator 2 view .LVU701
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2491              		.loc 1 891 5 discriminator 2 view .LVU702
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2492              		.loc 1 891 5 discriminator 2 view .LVU703
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
ARM GAS  /tmp/ccoVZeFN.s 			page 66


 2493              		.loc 1 891 5 discriminator 2 view .LVU704
 2494 0040 FEE7     		b	.L160
 2495              	.LVL251:
 2496              	.L157:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2497              		.loc 1 886 5 discriminator 1 view .LVU705
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2498              		.loc 1 886 5 discriminator 1 view .LVU706
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2499              		.loc 1 886 5 discriminator 1 view .LVU707
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2500              		.loc 1 886 5 discriminator 1 view .LVU708
 2501 0042 FEE7     		b	.L157
 2502              	.L158:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2503              		.loc 1 896 4 view .LVU709
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2504              		.loc 1 896 4 view .LVU710
 2505 0044 3AB3     		cbz	r2, .L162
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2506              		.loc 1 896 4 discriminator 5 view .LVU711
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2507              		.loc 1 896 4 discriminator 5 view .LVU712
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2508              		.loc 1 896 64 discriminator 5 view .LVU713
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2509              		.loc 1 897 4 discriminator 5 view .LVU714
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2510              		.loc 1 897 4 discriminator 5 view .LVU715
 2511 0046 A542     		cmp	r5, r4
 2512 0048 26D0     		beq	.L164
 2513              	.LVL252:
 2514              	.L163:
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2515              		.loc 1 899 10 view .LVU716
 2516 004a A542     		cmp	r5, r4
 2517 004c 2BD0     		beq	.L159
 2518              	.LBB10:
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 2519              		.loc 1 901 5 view .LVU717
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2520              		.loc 1 902 5 view .LVU718
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2521              		.loc 1 902 5 view .LVU719
 2522 004e 2046     		mov	r0, r4
 2523 0050 FFF7FEFF 		bl	block_is_free
 2524              	.LVL253:
 2525 0054 08B3     		cbz	r0, .L166
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2526              		.loc 1 902 5 discriminator 9 view .LVU720
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2527              		.loc 1 902 5 discriminator 9 view .LVU721
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2528              		.loc 1 902 64 discriminator 9 view .LVU722
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2529              		.loc 1 903 5 discriminator 9 view .LVU723
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
ARM GAS  /tmp/ccoVZeFN.s 			page 67


 2530              		.loc 1 903 5 discriminator 9 view .LVU724
 2531 0056 2046     		mov	r0, r4
 2532 0058 FFF7FEFF 		bl	block_is_prev_free
 2533              	.LVL254:
 2534 005c F0B9     		cbnz	r0, .L168
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2535              		.loc 1 903 5 discriminator 5 view .LVU725
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2536              		.loc 1 903 5 discriminator 5 view .LVU726
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2537              		.loc 1 903 78 discriminator 5 view .LVU727
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2538              		.loc 1 904 5 discriminator 5 view .LVU728
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2539              		.loc 1 904 5 discriminator 5 view .LVU729
 2540 005e 2046     		mov	r0, r4
 2541 0060 FFF7FEFF 		bl	block_next
 2542              	.LVL255:
 2543 0064 8046     		mov	r8, r0
 2544 0066 FFF7FEFF 		bl	block_is_free
 2545              	.LVL256:
 2546 006a C0B9     		cbnz	r0, .L170
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2547              		.loc 1 904 5 discriminator 5 view .LVU730
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2548              		.loc 1 904 5 discriminator 5 view .LVU731
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2549              		.loc 1 904 85 discriminator 5 view .LVU732
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2550              		.loc 1 905 5 discriminator 5 view .LVU733
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2551              		.loc 1 905 5 discriminator 5 view .LVU734
 2552 006c 4046     		mov	r0, r8
 2553 006e FFF7FEFF 		bl	block_is_prev_free
 2554              	.LVL257:
 2555 0072 A8B1     		cbz	r0, .L172
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2556              		.loc 1 905 5 discriminator 9 view .LVU735
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2557              		.loc 1 905 5 discriminator 9 view .LVU736
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2558              		.loc 1 905 81 discriminator 9 view .LVU737
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2559              		.loc 1 906 5 discriminator 9 view .LVU738
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2560              		.loc 1 906 5 discriminator 9 view .LVU739
 2561 0074 2046     		mov	r0, r4
 2562 0076 FFF7FEFF 		bl	block_size
 2563              	.LVL258:
 2564 007a 0B28     		cmp	r0, #11
 2565 007c 11D9     		bls	.L174
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2566              		.loc 1 906 5 discriminator 9 view .LVU740
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2567              		.loc 1 906 5 discriminator 9 view .LVU741
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2568              		.loc 1 906 81 discriminator 9 view .LVU742
ARM GAS  /tmp/ccoVZeFN.s 			page 68


 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 2569              		.loc 1 908 5 discriminator 9 view .LVU743
 2570 007e 01AA     		add	r2, sp, #4
 2571 0080 6946     		mov	r1, sp
 2572 0082 FFF7FEFF 		bl	mapping_insert
 2573              	.LVL259:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2574              		.loc 1 909 5 discriminator 9 view .LVU744
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2575              		.loc 1 909 5 discriminator 9 view .LVU745
 2576 0086 009B     		ldr	r3, [sp]
 2577 0088 B342     		cmp	r3, r6
 2578 008a 0BD1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2579              		.loc 1 909 5 is_stmt 0 discriminator 2 view .LVU746
 2580 008c 019B     		ldr	r3, [sp, #4]
 2581 008e BB42     		cmp	r3, r7
 2582 0090 08D1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2583              		.loc 1 909 5 is_stmt 1 discriminator 9 view .LVU747
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2584              		.loc 1 909 5 discriminator 9 view .LVU748
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2585              		.loc 1 909 76 discriminator 9 view .LVU749
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2586              		.loc 1 910 5 discriminator 9 view .LVU750
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2587              		.loc 1 910 11 is_stmt 0 discriminator 9 view .LVU751
 2588 0092 A468     		ldr	r4, [r4, #8]
 2589              	.LVL260:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2590              		.loc 1 910 11 discriminator 9 view .LVU752
 2591 0094 D9E7     		b	.L163
 2592              	.LVL261:
 2593              	.L162:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2594              		.loc 1 910 11 discriminator 9 view .LVU753
 2595              	.LBE10:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2596              		.loc 1 896 4 is_stmt 1 discriminator 3 view .LVU754
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2597              		.loc 1 896 4 discriminator 3 view .LVU755
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2598              		.loc 1 896 4 discriminator 3 view .LVU756
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2599              		.loc 1 896 4 discriminator 3 view .LVU757
 2600 0096 FEE7     		b	.L162
 2601              	.L164:
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2602              		.loc 1 897 4 discriminator 4 view .LVU758
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2603              		.loc 1 897 4 discriminator 4 view .LVU759
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2604              		.loc 1 897 4 discriminator 4 view .LVU760
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2605              		.loc 1 897 4 discriminator 4 view .LVU761
 2606 0098 FEE7     		b	.L164
ARM GAS  /tmp/ccoVZeFN.s 			page 69


 2607              	.LVL262:
 2608              	.L166:
 2609              	.LBB11:
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2610              		.loc 1 902 5 discriminator 5 view .LVU762
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2611              		.loc 1 902 5 discriminator 5 view .LVU763
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2612              		.loc 1 902 5 discriminator 5 view .LVU764
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2613              		.loc 1 902 5 discriminator 5 view .LVU765
 2614 009a FEE7     		b	.L166
 2615              	.L168:
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2616              		.loc 1 903 5 discriminator 6 view .LVU766
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2617              		.loc 1 903 5 discriminator 6 view .LVU767
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2618              		.loc 1 903 5 discriminator 6 view .LVU768
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2619              		.loc 1 903 5 discriminator 6 view .LVU769
 2620 009c FEE7     		b	.L168
 2621              	.L170:
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2622              		.loc 1 904 5 discriminator 7 view .LVU770
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2623              		.loc 1 904 5 discriminator 7 view .LVU771
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2624              		.loc 1 904 5 discriminator 7 view .LVU772
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2625              		.loc 1 904 5 discriminator 7 view .LVU773
 2626 009e FEE7     		b	.L170
 2627              	.L172:
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2628              		.loc 1 905 5 discriminator 8 view .LVU774
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2629              		.loc 1 905 5 discriminator 8 view .LVU775
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2630              		.loc 1 905 5 discriminator 8 view .LVU776
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2631              		.loc 1 905 5 discriminator 8 view .LVU777
 2632 00a0 FEE7     		b	.L172
 2633              	.L174:
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2634              		.loc 1 906 5 discriminator 9 view .LVU778
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2635              		.loc 1 906 5 discriminator 9 view .LVU779
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2636              		.loc 1 906 5 discriminator 9 view .LVU780
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2637              		.loc 1 906 5 discriminator 9 view .LVU781
 2638 00a2 FEE7     		b	.L174
 2639              	.L175:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2640              		.loc 1 909 5 discriminator 10 view .LVU782
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2641              		.loc 1 909 5 discriminator 10 view .LVU783
ARM GAS  /tmp/ccoVZeFN.s 			page 70


 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2642              		.loc 1 909 5 discriminator 10 view .LVU784
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2643              		.loc 1 909 5 discriminator 10 view .LVU785
 2644 00a4 FEE7     		b	.L175
 2645              	.L159:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2646              		.loc 1 909 5 is_stmt 0 discriminator 10 view .LVU786
 2647              	.LBE11:
 2648              	.LBE9:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2649              		.loc 1 876 35 is_stmt 1 discriminator 2 view .LVU787
 2650 00a6 0137     		adds	r7, r7, #1
 2651              	.LVL263:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2652              		.loc 1 876 35 is_stmt 0 discriminator 2 view .LVU788
 2653 00a8 B2E7     		b	.L179
 2654              	.LVL264:
 2655              	.L183:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2656              		.loc 1 874 34 is_stmt 1 discriminator 2 view .LVU789
 2657 00aa 0136     		adds	r6, r6, #1
 2658              	.LVL265:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2659              		.loc 1 874 34 is_stmt 0 discriminator 2 view .LVU790
 2660 00ac ADE7     		b	.L155
 2661              	.LVL266:
 2662              	.L182:
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2663              		.loc 1 915 2 is_stmt 1 view .LVU791
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2664              		.loc 1 916 1 is_stmt 0 view .LVU792
 2665 00ae 0020     		movs	r0, #0
 2666 00b0 02B0     		add	sp, sp, #8
 2667              	.LCFI34:
 2668              		.cfi_def_cfa_offset 24
 2669              		@ sp needed
 2670 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2671              		.loc 1 916 1 view .LVU793
 2672              		.cfi_endproc
 2673              	.LFE43:
 2675              		.section	.text.lv_tlsf_walk_pool,"ax",%progbits
 2676              		.align	1
 2677              		.global	lv_tlsf_walk_pool
 2678              		.syntax unified
 2679              		.thumb
 2680              		.thumb_func
 2682              	lv_tlsf_walk_pool:
 2683              	.LVL267:
 2684              	.LFB45:
 925:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 926:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void* user)
 927:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2685              		.loc 1 927 1 is_stmt 1 view -0
 2686              		.cfi_startproc
 2687              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 71


 2688              		@ frame_needed = 0, uses_anonymous_args = 0
 2689              		.loc 1 927 1 is_stmt 0 view .LVU795
 2690 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2691              	.LCFI35:
 2692              		.cfi_def_cfa_offset 24
 2693              		.cfi_offset 4, -24
 2694              		.cfi_offset 5, -20
 2695              		.cfi_offset 6, -16
 2696              		.cfi_offset 7, -12
 2697              		.cfi_offset 8, -8
 2698              		.cfi_offset 14, -4
 2699 0004 1746     		mov	r7, r2
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walker pool_walker = walker ? walker : default_walker;
 2700              		.loc 1 928 2 is_stmt 1 view .LVU796
 2701              		.loc 1 928 47 is_stmt 0 view .LVU797
 2702 0006 8846     		mov	r8, r1
 2703 0008 29B1     		cbz	r1, .L191
 2704              	.L185:
 2705              	.LVL268:
 929:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2706              		.loc 1 929 2 is_stmt 1 discriminator 4 view .LVU798
 930:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(pool, -(int)block_header_overhead);
 2707              		.loc 1 930 3 is_stmt 0 discriminator 4 view .LVU799
 2708 000a 6FF00301 		mvn	r1, #3
 2709              	.LVL269:
 2710              		.loc 1 930 3 discriminator 4 view .LVU800
 2711 000e FFF7FEFF 		bl	offset_to_block
 2712              	.LVL270:
 2713              		.loc 1 930 3 discriminator 4 view .LVU801
 2714 0012 0446     		mov	r4, r0
 2715              	.LVL271:
 931:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	while (block && !block_is_last(block))
 2716              		.loc 1 932 2 is_stmt 1 discriminator 4 view .LVU802
 2717              		.loc 1 932 8 is_stmt 0 discriminator 4 view .LVU803
 2718 0014 18E0     		b	.L186
 2719              	.LVL272:
 2720              	.L191:
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2721              		.loc 1 928 47 view .LVU804
 2722 0016 DFF84080 		ldr	r8, .L192
 2723 001a F6E7     		b	.L185
 2724              	.LVL273:
 2725              	.L188:
 933:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		pool_walker(
 2726              		.loc 1 934 3 is_stmt 1 view .LVU805
 2727 001c 2046     		mov	r0, r4
 2728 001e FFF7FEFF 		bl	block_to_ptr
 2729              	.LVL274:
 2730 0022 0546     		mov	r5, r0
 2731 0024 2046     		mov	r0, r4
 2732 0026 FFF7FEFF 		bl	block_size
 2733              	.LVL275:
 2734 002a 0646     		mov	r6, r0
 935:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 936:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_size(block),
ARM GAS  /tmp/ccoVZeFN.s 			page 72


 937:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			!block_is_free(block),
 2735              		.loc 1 937 5 is_stmt 0 view .LVU806
 2736 002c 2046     		mov	r0, r4
 2737 002e FFF7FEFF 		bl	block_is_free
 2738              	.LVL276:
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 2739              		.loc 1 934 3 view .LVU807
 2740 0032 3B46     		mov	r3, r7
 2741 0034 B0FA80F2 		clz	r2, r0
 2742 0038 5209     		lsrs	r2, r2, #5
 2743 003a 3146     		mov	r1, r6
 2744 003c 2846     		mov	r0, r5
 2745 003e C047     		blx	r8
 2746              	.LVL277:
 938:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			user);
 939:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_next(block);
 2747              		.loc 1 939 3 is_stmt 1 view .LVU808
 2748              		.loc 1 939 11 is_stmt 0 view .LVU809
 2749 0040 2046     		mov	r0, r4
 2750 0042 FFF7FEFF 		bl	block_next
 2751              	.LVL278:
 2752 0046 0446     		mov	r4, r0
 2753              	.LVL279:
 2754              	.L186:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2755              		.loc 1 932 8 is_stmt 1 view .LVU810
 2756 0048 24B1     		cbz	r4, .L184
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2757              		.loc 1 932 19 is_stmt 0 discriminator 1 view .LVU811
 2758 004a 2046     		mov	r0, r4
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2759              		.loc 1 932 19 discriminator 1 view .LVU812
 2760 004c FFF7FEFF 		bl	block_is_last
 2761              	.LVL280:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2762              		.loc 1 932 15 discriminator 1 view .LVU813
 2763 0050 0028     		cmp	r0, #0
 2764 0052 E3D0     		beq	.L188
 2765              	.L184:
 940:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 941:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2766              		.loc 1 941 1 view .LVU814
 2767 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2768              	.LVL281:
 2769              	.L193:
 2770              		.loc 1 941 1 view .LVU815
 2771              		.align	2
 2772              	.L192:
 2773 0058 00000000 		.word	default_walker
 2774              		.cfi_endproc
 2775              	.LFE45:
 2777              		.section	.text.lv_tlsf_block_size,"ax",%progbits
 2778              		.align	1
 2779              		.global	lv_tlsf_block_size
 2780              		.syntax unified
 2781              		.thumb
 2782              		.thumb_func
ARM GAS  /tmp/ccoVZeFN.s 			page 73


 2784              	lv_tlsf_block_size:
 2785              	.LVL282:
 2786              	.LFB46:
 942:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 943:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size(void* ptr)
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2787              		.loc 1 944 1 is_stmt 1 view -0
 2788              		.cfi_startproc
 2789              		@ args = 0, pretend = 0, frame = 0
 2790              		@ frame_needed = 0, uses_anonymous_args = 0
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2791              		.loc 1 945 2 view .LVU817
 946:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2792              		.loc 1 946 2 view .LVU818
 2793              		.loc 1 946 5 is_stmt 0 view .LVU819
 2794 0000 28B1     		cbz	r0, .L196
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2795              		.loc 1 944 1 view .LVU820
 2796 0002 08B5     		push	{r3, lr}
 2797              	.LCFI36:
 2798              		.cfi_def_cfa_offset 8
 2799              		.cfi_offset 3, -8
 2800              		.cfi_offset 14, -4
 2801              	.LBB12:
 947:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 948:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const block_header_t* block = block_from_ptr(ptr);
 2802              		.loc 1 948 3 is_stmt 1 view .LVU821
 2803              		.loc 1 948 33 is_stmt 0 view .LVU822
 2804 0004 FFF7FEFF 		bl	block_from_ptr
 2805              	.LVL283:
 949:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size = block_size(block);
 2806              		.loc 1 949 3 is_stmt 1 view .LVU823
 2807              		.loc 1 949 10 is_stmt 0 view .LVU824
 2808 0008 FFF7FEFF 		bl	block_size
 2809              	.LVL284:
 2810              		.loc 1 949 10 view .LVU825
 2811              	.LBE12:
 950:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return size;
 952:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2812              		.loc 1 952 1 view .LVU826
 2813 000c 08BD     		pop	{r3, pc}
 2814              	.LVL285:
 2815              	.L196:
 2816              	.LCFI37:
 2817              		.cfi_def_cfa_offset 0
 2818              		.cfi_restore 3
 2819              		.cfi_restore 14
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2820              		.loc 1 945 9 view .LVU827
 2821 000e 0020     		movs	r0, #0
 2822              	.LVL286:
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2823              		.loc 1 951 2 is_stmt 1 view .LVU828
 2824              		.loc 1 952 1 is_stmt 0 view .LVU829
 2825 0010 7047     		bx	lr
 2826              		.cfi_endproc
ARM GAS  /tmp/ccoVZeFN.s 			page 74


 2827              	.LFE46:
 2829              		.section	.text.lv_tlsf_check_pool,"ax",%progbits
 2830              		.align	1
 2831              		.global	lv_tlsf_check_pool
 2832              		.syntax unified
 2833              		.thumb
 2834              		.thumb_func
 2836              	lv_tlsf_check_pool:
 2837              	.LVL287:
 2838              	.LFB47:
 953:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 954:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check_pool(lv_pool_t pool)
 955:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2839              		.loc 1 955 1 is_stmt 1 view -0
 2840              		.cfi_startproc
 2841              		@ args = 0, pretend = 0, frame = 8
 2842              		@ frame_needed = 0, uses_anonymous_args = 0
 2843              		.loc 1 955 1 is_stmt 0 view .LVU831
 2844 0000 00B5     		push	{lr}
 2845              	.LCFI38:
 2846              		.cfi_def_cfa_offset 4
 2847              		.cfi_offset 14, -4
 2848 0002 83B0     		sub	sp, sp, #12
 2849              	.LCFI39:
 2850              		.cfi_def_cfa_offset 16
 956:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the blocks are physically correct. */
 957:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t integ = { 0, 0 };
 2851              		.loc 1 957 2 is_stmt 1 view .LVU832
 2852              		.loc 1 957 14 is_stmt 0 view .LVU833
 2853 0004 0023     		movs	r3, #0
 2854 0006 0093     		str	r3, [sp]
 2855 0008 0193     		str	r3, [sp, #4]
 958:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walk_pool(pool, integrity_walker, &integ);
 2856              		.loc 1 958 2 is_stmt 1 view .LVU834
 2857 000a 6A46     		mov	r2, sp
 2858 000c 0349     		ldr	r1, .L203
 2859 000e FFF7FEFF 		bl	lv_tlsf_walk_pool
 2860              	.LVL288:
 959:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 960:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return integ.status;
 2861              		.loc 1 960 2 view .LVU835
 961:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2862              		.loc 1 961 1 is_stmt 0 view .LVU836
 2863 0012 0198     		ldr	r0, [sp, #4]
 2864 0014 03B0     		add	sp, sp, #12
 2865              	.LCFI40:
 2866              		.cfi_def_cfa_offset 4
 2867              		@ sp needed
 2868 0016 5DF804FB 		ldr	pc, [sp], #4
 2869              	.L204:
 2870 001a 00BF     		.align	2
 2871              	.L203:
 2872 001c 00000000 		.word	integrity_walker
 2873              		.cfi_endproc
 2874              	.LFE47:
 2876              		.section	.text.lv_tlsf_size,"ax",%progbits
 2877              		.align	1
ARM GAS  /tmp/ccoVZeFN.s 			page 75


 2878              		.global	lv_tlsf_size
 2879              		.syntax unified
 2880              		.thumb
 2881              		.thumb_func
 2883              	lv_tlsf_size:
 2884              	.LFB48:
 962:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 963:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 964:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Size of the TLSF structures in a given memory block passed to
 965:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_create, equal to the size of a control_t
 966:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 967:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_size(void)
 968:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2885              		.loc 1 968 1 is_stmt 1 view -0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 0
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              		@ link register save eliminated.
 969:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return sizeof(control_t);
 2890              		.loc 1 969 2 view .LVU838
 970:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2891              		.loc 1 970 1 is_stmt 0 view .LVU839
 2892 0000 40F23440 		movw	r0, #1076
 2893 0004 7047     		bx	lr
 2894              		.cfi_endproc
 2895              	.LFE48:
 2897              		.section	.text.lv_tlsf_align_size,"ax",%progbits
 2898              		.align	1
 2899              		.global	lv_tlsf_align_size
 2900              		.syntax unified
 2901              		.thumb
 2902              		.thumb_func
 2904              	lv_tlsf_align_size:
 2905              	.LFB49:
 971:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 972:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_align_size(void)
 973:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2906              		.loc 1 973 1 is_stmt 1 view -0
 2907              		.cfi_startproc
 2908              		@ args = 0, pretend = 0, frame = 0
 2909              		@ frame_needed = 0, uses_anonymous_args = 0
 2910              		@ link register save eliminated.
 974:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return ALIGN_SIZE;
 2911              		.loc 1 974 2 view .LVU841
 975:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2912              		.loc 1 975 1 is_stmt 0 view .LVU842
 2913 0000 0420     		movs	r0, #4
 2914 0002 7047     		bx	lr
 2915              		.cfi_endproc
 2916              	.LFE49:
 2918              		.section	.text.lv_tlsf_block_size_min,"ax",%progbits
 2919              		.align	1
 2920              		.global	lv_tlsf_block_size_min
 2921              		.syntax unified
 2922              		.thumb
 2923              		.thumb_func
 2925              	lv_tlsf_block_size_min:
ARM GAS  /tmp/ccoVZeFN.s 			page 76


 2926              	.LFB50:
 976:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 977:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_min(void)
 978:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2927              		.loc 1 978 1 is_stmt 1 view -0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
 2931              		@ link register save eliminated.
 979:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_min;
 2932              		.loc 1 979 2 view .LVU844
 980:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2933              		.loc 1 980 1 is_stmt 0 view .LVU845
 2934 0000 0C20     		movs	r0, #12
 2935 0002 7047     		bx	lr
 2936              		.cfi_endproc
 2937              	.LFE50:
 2939              		.section	.text.lv_tlsf_block_size_max,"ax",%progbits
 2940              		.align	1
 2941              		.global	lv_tlsf_block_size_max
 2942              		.syntax unified
 2943              		.thumb
 2944              		.thumb_func
 2946              	lv_tlsf_block_size_max:
 2947              	.LFB51:
 981:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 982:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_max(void)
 983:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2948              		.loc 1 983 1 is_stmt 1 view -0
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 0
 2951              		@ frame_needed = 0, uses_anonymous_args = 0
 2952              		@ link register save eliminated.
 984:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_max;
 2953              		.loc 1 984 2 view .LVU847
 985:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2954              		.loc 1 985 1 is_stmt 0 view .LVU848
 2955 0000 4FF48040 		mov	r0, #16384
 2956 0004 7047     		bx	lr
 2957              		.cfi_endproc
 2958              	.LFE51:
 2960              		.section	.text.lv_tlsf_pool_overhead,"ax",%progbits
 2961              		.align	1
 2962              		.global	lv_tlsf_pool_overhead
 2963              		.syntax unified
 2964              		.thumb
 2965              		.thumb_func
 2967              	lv_tlsf_pool_overhead:
 2968              	.LFB52:
 986:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 987:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 988:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Overhead of the TLSF structures in a given memory block passed to
 989:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_add_pool, equal to the overhead of a free block and the
 990:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** sentinel block.
 991:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 992:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_pool_overhead(void)
 993:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccoVZeFN.s 			page 77


 2969              		.loc 1 993 1 is_stmt 1 view -0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 0
 2972              		@ frame_needed = 0, uses_anonymous_args = 0
 2973              		@ link register save eliminated.
 994:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return 2 * block_header_overhead;
 2974              		.loc 1 994 2 view .LVU850
 995:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2975              		.loc 1 995 1 is_stmt 0 view .LVU851
 2976 0000 0820     		movs	r0, #8
 2977 0002 7047     		bx	lr
 2978              		.cfi_endproc
 2979              	.LFE52:
 2981              		.section	.text.lv_tlsf_alloc_overhead,"ax",%progbits
 2982              		.align	1
 2983              		.global	lv_tlsf_alloc_overhead
 2984              		.syntax unified
 2985              		.thumb
 2986              		.thumb_func
 2988              	lv_tlsf_alloc_overhead:
 2989              	.LFB53:
 996:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 997:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_alloc_overhead(void)
 998:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2990              		.loc 1 998 1 is_stmt 1 view -0
 2991              		.cfi_startproc
 2992              		@ args = 0, pretend = 0, frame = 0
 2993              		@ frame_needed = 0, uses_anonymous_args = 0
 2994              		@ link register save eliminated.
 999:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_header_overhead;
 2995              		.loc 1 999 2 view .LVU853
1000:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2996              		.loc 1 1000 1 is_stmt 0 view .LVU854
 2997 0000 0420     		movs	r0, #4
 2998 0002 7047     		bx	lr
 2999              		.cfi_endproc
 3000              	.LFE53:
 3002              		.section	.text.lv_tlsf_add_pool,"ax",%progbits
 3003              		.align	1
 3004              		.global	lv_tlsf_add_pool
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3009              	lv_tlsf_add_pool:
 3010              	.LVL289:
 3011              	.LFB54:
1001:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1002:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void* mem, size_t bytes)
1003:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3012              		.loc 1 1003 1 is_stmt 1 view -0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
 3016              		.loc 1 1003 1 is_stmt 0 view .LVU856
 3017 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3018              	.LCFI41:
 3019              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccoVZeFN.s 			page 78


 3020              		.cfi_offset 3, -24
 3021              		.cfi_offset 4, -20
 3022              		.cfi_offset 5, -16
 3023              		.cfi_offset 6, -12
 3024              		.cfi_offset 7, -8
 3025              		.cfi_offset 14, -4
 3026 0002 0746     		mov	r7, r0
 3027 0004 0C46     		mov	r4, r1
 3028 0006 1546     		mov	r5, r2
1004:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block;
 3029              		.loc 1 1004 2 is_stmt 1 view .LVU857
1005:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next;
 3030              		.loc 1 1005 2 view .LVU858
1006:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1007:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_overhead = lv_tlsf_pool_overhead();
 3031              		.loc 1 1007 2 view .LVU859
 3032              		.loc 1 1007 31 is_stmt 0 view .LVU860
 3033 0008 FFF7FEFF 		bl	lv_tlsf_pool_overhead
 3034              	.LVL290:
1008:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_bytes = align_down(bytes - pool_overhead, ALIGN_SIZE);
 3035              		.loc 1 1008 2 is_stmt 1 view .LVU861
 3036              		.loc 1 1008 28 is_stmt 0 view .LVU862
 3037 000c 0421     		movs	r1, #4
 3038 000e 281A     		subs	r0, r5, r0
 3039              	.LVL291:
 3040              		.loc 1 1008 28 view .LVU863
 3041 0010 FFF7FEFF 		bl	align_down
 3042              	.LVL292:
1009:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1010:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((ptrdiff_t)mem % ALIGN_SIZE) != 0)
 3043              		.loc 1 1010 2 is_stmt 1 view .LVU864
 3044              		.loc 1 1010 5 is_stmt 0 view .LVU865
 3045 0014 14F0030F 		tst	r4, #3
 3046 0018 28D1     		bne	.L213
 3047 001a 0546     		mov	r5, r0
 3048              	.LVL293:
1011:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1012:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory must be aligned by %u bytes.\n",
1013:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1015:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1016:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1017:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (pool_bytes < block_size_min || pool_bytes > block_size_max)
 3049              		.loc 1 1017 2 is_stmt 1 view .LVU866
 3050              		.loc 1 1017 34 is_stmt 0 view .LVU867
 3051 001c A0F10C02 		sub	r2, r0, #12
 3052              		.loc 1 1017 5 view .LVU868
 3053 0020 43F6F473 		movw	r3, #16372
 3054 0024 9A42     		cmp	r2, r3
 3055 0026 23D8     		bhi	.L214
1018:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1019:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1020:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between 0x%x and 0x%x00 bytes.\n", 
1021:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1022:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)((pool_overhead + block_size_max) / 256));
1023:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
1024:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between %u and %u bytes.\n", 
ARM GAS  /tmp/ccoVZeFN.s 			page 79


1025:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1026:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_max));
1027:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1029:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1030:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1031:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1032:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Create the main free block. Offset the start of the block slightly
1033:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** so that the prev_phys_block field falls outside of the pool -
1034:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** it will never be used.
1035:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1036:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block = offset_to_block(mem, -(tlsfptr_t)block_header_overhead);
 3056              		.loc 1 1036 2 is_stmt 1 view .LVU869
 3057              		.loc 1 1036 10 is_stmt 0 view .LVU870
 3058 0028 6FF00301 		mvn	r1, #3
 3059 002c 2046     		mov	r0, r4
 3060              	.LVL294:
 3061              		.loc 1 1036 10 view .LVU871
 3062 002e FFF7FEFF 		bl	offset_to_block
 3063              	.LVL295:
 3064 0032 0646     		mov	r6, r0
 3065              	.LVL296:
1037:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, pool_bytes);
 3066              		.loc 1 1037 2 is_stmt 1 view .LVU872
 3067 0034 2946     		mov	r1, r5
 3068 0036 FFF7FEFF 		bl	block_set_size
 3069              	.LVL297:
1038:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 3070              		.loc 1 1038 2 view .LVU873
 3071 003a 3046     		mov	r0, r6
 3072 003c FFF7FEFF 		bl	block_set_free
 3073              	.LVL298:
1039:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(block);
 3074              		.loc 1 1039 2 view .LVU874
 3075 0040 3046     		mov	r0, r6
 3076 0042 FFF7FEFF 		bl	block_set_prev_used
 3077              	.LVL299:
1040:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_insert(tlsf_cast(control_t*, tlsf), block);
 3078              		.loc 1 1040 2 view .LVU875
 3079 0046 3146     		mov	r1, r6
 3080 0048 3846     		mov	r0, r7
 3081 004a FFF7FEFF 		bl	block_insert
 3082              	.LVL300:
1041:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1042:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Split the block to create a zero-size sentinel block. */
1043:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next = block_link_next(block);
 3083              		.loc 1 1043 2 view .LVU876
 3084              		.loc 1 1043 9 is_stmt 0 view .LVU877
 3085 004e 3046     		mov	r0, r6
 3086 0050 FFF7FEFF 		bl	block_link_next
 3087              	.LVL301:
 3088 0054 0546     		mov	r5, r0
 3089              	.LVL302:
1044:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(next, 0);
 3090              		.loc 1 1044 2 is_stmt 1 view .LVU878
 3091 0056 0021     		movs	r1, #0
 3092 0058 FFF7FEFF 		bl	block_set_size
ARM GAS  /tmp/ccoVZeFN.s 			page 80


 3093              	.LVL303:
1045:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(next);
 3094              		.loc 1 1045 2 view .LVU879
 3095 005c 2846     		mov	r0, r5
 3096 005e FFF7FEFF 		bl	block_set_used
 3097              	.LVL304:
1046:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 3098              		.loc 1 1046 2 view .LVU880
 3099 0062 2846     		mov	r0, r5
 3100 0064 FFF7FEFF 		bl	block_set_prev_free
 3101              	.LVL305:
1047:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1048:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return mem;
 3102              		.loc 1 1048 2 view .LVU881
 3103              		.loc 1 1048 9 is_stmt 0 view .LVU882
 3104 0068 2046     		mov	r0, r4
 3105              	.LVL306:
 3106              	.L211:
1049:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3107              		.loc 1 1049 1 view .LVU883
 3108 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3109              	.LVL307:
 3110              	.L213:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3111              		.loc 1 1014 10 view .LVU884
 3112 006c 0020     		movs	r0, #0
 3113              	.LVL308:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3114              		.loc 1 1014 10 view .LVU885
 3115 006e FCE7     		b	.L211
 3116              	.LVL309:
 3117              	.L214:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3118              		.loc 1 1028 10 view .LVU886
 3119 0070 0020     		movs	r0, #0
 3120              	.LVL310:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3121              		.loc 1 1028 10 view .LVU887
 3122 0072 FAE7     		b	.L211
 3123              		.cfi_endproc
 3124              	.LFE54:
 3126              		.section	.text.lv_tlsf_remove_pool,"ax",%progbits
 3127              		.align	1
 3128              		.global	lv_tlsf_remove_pool
 3129              		.syntax unified
 3130              		.thumb
 3131              		.thumb_func
 3133              	lv_tlsf_remove_pool:
 3134              	.LVL311:
 3135              	.LFB55:
1050:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1051:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)
1052:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3136              		.loc 1 1052 1 is_stmt 1 view -0
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 8
 3139              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 81


 3140              		.loc 1 1052 1 is_stmt 0 view .LVU889
 3141 0000 70B5     		push	{r4, r5, r6, lr}
 3142              	.LCFI42:
 3143              		.cfi_def_cfa_offset 16
 3144              		.cfi_offset 4, -16
 3145              		.cfi_offset 5, -12
 3146              		.cfi_offset 6, -8
 3147              		.cfi_offset 14, -4
 3148 0002 82B0     		sub	sp, sp, #8
 3149              	.LCFI43:
 3150              		.cfi_def_cfa_offset 24
 3151 0004 0546     		mov	r5, r0
 3152 0006 0846     		mov	r0, r1
 3153              	.LVL312:
1053:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3154              		.loc 1 1053 2 is_stmt 1 view .LVU890
1054:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = offset_to_block(pool, -(int)block_header_overhead);
 3155              		.loc 1 1054 2 view .LVU891
 3156              		.loc 1 1054 26 is_stmt 0 view .LVU892
 3157 0008 6FF00301 		mvn	r1, #3
 3158              	.LVL313:
 3159              		.loc 1 1054 26 view .LVU893
 3160 000c FFF7FEFF 		bl	offset_to_block
 3161              	.LVL314:
 3162              		.loc 1 1054 26 view .LVU894
 3163 0010 0446     		mov	r4, r0
 3164              	.LVL315:
1055:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1056:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 3165              		.loc 1 1056 2 is_stmt 1 view .LVU895
 3166              		.loc 1 1056 6 is_stmt 0 view .LVU896
 3167 0012 0023     		movs	r3, #0
 3168 0014 0193     		str	r3, [sp, #4]
 3169              		.loc 1 1056 14 view .LVU897
 3170 0016 0093     		str	r3, [sp]
1057:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1058:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block should be free");
 3171              		.loc 1 1058 2 is_stmt 1 view .LVU898
 3172              		.loc 1 1058 2 view .LVU899
 3173 0018 FFF7FEFF 		bl	block_is_free
 3174              	.LVL316:
 3175              		.loc 1 1058 2 is_stmt 0 view .LVU900
 3176 001c 00B9     		cbnz	r0, .L217
 3177              	.L218:
 3178              		.loc 1 1058 2 is_stmt 1 discriminator 1 view .LVU901
 3179              		.loc 1 1058 2 discriminator 1 view .LVU902
 3180              		.loc 1 1058 2 discriminator 1 view .LVU903
 3181              		.loc 1 1058 2 discriminator 1 view .LVU904
 3182 001e FEE7     		b	.L218
 3183              	.L217:
 3184              		.loc 1 1058 2 discriminator 4 view .LVU905
1059:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
 3185              		.loc 1 1059 2 discriminator 4 view .LVU906
 3186              		.loc 1 1059 2 discriminator 4 view .LVU907
 3187 0020 2046     		mov	r0, r4
 3188 0022 FFF7FEFF 		bl	block_next
 3189              	.LVL317:
ARM GAS  /tmp/ccoVZeFN.s 			page 82


 3190 0026 0646     		mov	r6, r0
 3191 0028 FFF7FEFF 		bl	block_is_free
 3192              	.LVL318:
 3193 002c 00B1     		cbz	r0, .L219
 3194              	.L220:
 3195              		.loc 1 1059 2 discriminator 2 view .LVU908
 3196              		.loc 1 1059 2 discriminator 2 view .LVU909
 3197              		.loc 1 1059 2 discriminator 2 view .LVU910
 3198              		.loc 1 1059 2 discriminator 2 view .LVU911
 3199 002e FEE7     		b	.L220
 3200              	.L219:
 3201              		.loc 1 1059 2 discriminator 2 view .LVU912
1060:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
 3202              		.loc 1 1060 2 discriminator 2 view .LVU913
 3203              		.loc 1 1060 2 discriminator 2 view .LVU914
 3204 0030 3046     		mov	r0, r6
 3205 0032 FFF7FEFF 		bl	block_size
 3206              	.LVL319:
 3207 0036 00B1     		cbz	r0, .L221
 3208              	.L222:
 3209              		.loc 1 1060 2 discriminator 3 view .LVU915
 3210              		.loc 1 1060 2 discriminator 3 view .LVU916
 3211              		.loc 1 1060 2 discriminator 3 view .LVU917
 3212              		.loc 1 1060 2 discriminator 3 view .LVU918
 3213 0038 FEE7     		b	.L222
 3214              	.L221:
 3215              		.loc 1 1060 2 discriminator 2 view .LVU919
1061:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1062:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 3216              		.loc 1 1062 2 discriminator 2 view .LVU920
 3217 003a 2046     		mov	r0, r4
 3218 003c FFF7FEFF 		bl	block_size
 3219              	.LVL320:
 3220 0040 6A46     		mov	r2, sp
 3221 0042 01A9     		add	r1, sp, #4
 3222 0044 FFF7FEFF 		bl	mapping_insert
 3223              	.LVL321:
1063:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 3224              		.loc 1 1063 2 discriminator 2 view .LVU921
 3225 0048 009B     		ldr	r3, [sp]
 3226 004a 019A     		ldr	r2, [sp, #4]
 3227 004c 2146     		mov	r1, r4
 3228 004e 2846     		mov	r0, r5
 3229 0050 FFF7FEFF 		bl	remove_free_block
 3230              	.LVL322:
1064:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3231              		.loc 1 1064 1 is_stmt 0 discriminator 2 view .LVU922
 3232 0054 02B0     		add	sp, sp, #8
 3233              	.LCFI44:
 3234              		.cfi_def_cfa_offset 16
 3235              		@ sp needed
 3236 0056 70BD     		pop	{r4, r5, r6, pc}
 3237              		.loc 1 1064 1 discriminator 2 view .LVU923
 3238              		.cfi_endproc
 3239              	.LFE55:
 3241              		.section	.text.lv_tlsf_create,"ax",%progbits
 3242              		.align	1
ARM GAS  /tmp/ccoVZeFN.s 			page 83


 3243              		.global	lv_tlsf_create
 3244              		.syntax unified
 3245              		.thumb
 3246              		.thumb_func
 3248              	lv_tlsf_create:
 3249              	.LVL323:
 3250              	.LFB56:
1065:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1066:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1067:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF main interface.
1068:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1069:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1070:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1071:Middlewares/lvgl/src/misc/lv_tlsf.c **** int test_ffs_fls()
1072:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
1073:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Verify ffs/fls work properly. */
1074:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int rv = 0;
1075:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0) == -1) ? 0 : 0x1;
1076:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0) == -1) ? 0 : 0x2;
1077:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(1) == 0) ? 0 : 0x4;
1078:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(1) == 0) ? 0 : 0x8;
1079:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80000000) == 31) ? 0 : 0x10;
1080:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80008000) == 15) ? 0 : 0x20;
1081:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x80000008) == 31) ? 0 : 0x40;
1082:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x7FFFFFFF) == 30) ? 0 : 0x80;
1083:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1084:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1085:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x80000000) == 31) ? 0 : 0x100;
1086:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x100000000) == 32) ? 0 : 0x200;
1087:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0xffffffffffffffff) == 63) ? 0 : 0x400;
1088:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1089:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1090:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (rv)
1091:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1092:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("test_ffs_fls: %x ffs/fls tests failed.\n", rv);
1093:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1094:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return rv;
1095:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
1096:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1097:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1098:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create(void* mem)
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3251              		.loc 1 1099 1 is_stmt 1 view -0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
1100:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (test_ffs_fls())
1102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1105:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1106:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1107:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((tlsfptr_t)mem % ALIGN_SIZE) != 0)
 3255              		.loc 1 1107 2 view .LVU925
 3256              		.loc 1 1107 5 is_stmt 0 view .LVU926
 3257 0000 10F0030F 		tst	r0, #3
ARM GAS  /tmp/ccoVZeFN.s 			page 84


 3258 0004 05D1     		bne	.L226
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
 3259              		.loc 1 1099 1 view .LVU927
 3260 0006 10B5     		push	{r4, lr}
 3261              	.LCFI45:
 3262              		.cfi_def_cfa_offset 8
 3263              		.cfi_offset 4, -8
 3264              		.cfi_offset 14, -4
 3265 0008 0446     		mov	r4, r0
1108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1109:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_create: Memory must be aligned to %u bytes.\n",
1110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1112:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1114:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_constructor(tlsf_cast(control_t*, mem));
 3266              		.loc 1 1114 2 is_stmt 1 view .LVU928
 3267 000a FFF7FEFF 		bl	control_constructor
 3268              	.LVL324:
1115:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_tlsf_t, mem);
 3269              		.loc 1 1116 2 view .LVU929
 3270              		.loc 1 1116 9 is_stmt 0 view .LVU930
 3271 000e 2046     		mov	r0, r4
1117:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3272              		.loc 1 1117 1 view .LVU931
 3273 0010 10BD     		pop	{r4, pc}
 3274              	.LVL325:
 3275              	.L226:
 3276              	.LCFI46:
 3277              		.cfi_def_cfa_offset 0
 3278              		.cfi_restore 4
 3279              		.cfi_restore 14
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3280              		.loc 1 1111 10 view .LVU932
 3281 0012 0020     		movs	r0, #0
 3282              	.LVL326:
 3283              		.loc 1 1117 1 view .LVU933
 3284 0014 7047     		bx	lr
 3285              		.cfi_endproc
 3286              	.LFE56:
 3288              		.section	.text.lv_tlsf_create_with_pool,"ax",%progbits
 3289              		.align	1
 3290              		.global	lv_tlsf_create_with_pool
 3291              		.syntax unified
 3292              		.thumb
 3293              		.thumb_func
 3295              	lv_tlsf_create_with_pool:
 3296              	.LVL327:
 3297              	.LFB57:
1118:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1119:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create_with_pool(void* mem, size_t bytes)
1120:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3298              		.loc 1 1120 1 is_stmt 1 view -0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 0
 3301              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 85


 3302              		.loc 1 1120 1 is_stmt 0 view .LVU935
 3303 0000 70B5     		push	{r4, r5, r6, lr}
 3304              	.LCFI47:
 3305              		.cfi_def_cfa_offset 16
 3306              		.cfi_offset 4, -16
 3307              		.cfi_offset 5, -12
 3308              		.cfi_offset 6, -8
 3309              		.cfi_offset 14, -4
 3310 0002 0546     		mov	r5, r0
 3311 0004 0E46     		mov	r6, r1
1121:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_t tlsf = lv_tlsf_create(mem);
 3312              		.loc 1 1121 2 is_stmt 1 view .LVU936
 3313              		.loc 1 1121 19 is_stmt 0 view .LVU937
 3314 0006 FFF7FEFF 		bl	lv_tlsf_create
 3315              	.LVL328:
 3316              		.loc 1 1121 19 view .LVU938
 3317 000a 0446     		mov	r4, r0
 3318              	.LVL329:
1122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_add_pool(tlsf, (char*)mem + lv_tlsf_size(), bytes - lv_tlsf_size());
 3319              		.loc 1 1122 2 is_stmt 1 view .LVU939
 3320              		.loc 1 1122 38 is_stmt 0 view .LVU940
 3321 000c FFF7FEFF 		bl	lv_tlsf_size
 3322              	.LVL330:
 3323              		.loc 1 1122 2 view .LVU941
 3324 0010 321A     		subs	r2, r6, r0
 3325 0012 2918     		adds	r1, r5, r0
 3326 0014 2046     		mov	r0, r4
 3327 0016 FFF7FEFF 		bl	lv_tlsf_add_pool
 3328              	.LVL331:
1123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf;
 3329              		.loc 1 1123 2 is_stmt 1 view .LVU942
1124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3330              		.loc 1 1124 1 is_stmt 0 view .LVU943
 3331 001a 2046     		mov	r0, r4
 3332 001c 70BD     		pop	{r4, r5, r6, pc}
 3333              		.loc 1 1124 1 view .LVU944
 3334              		.cfi_endproc
 3335              	.LFE57:
 3337              		.section	.text.lv_tlsf_destroy,"ax",%progbits
 3338              		.align	1
 3339              		.global	lv_tlsf_destroy
 3340              		.syntax unified
 3341              		.thumb
 3342              		.thumb_func
 3344              	lv_tlsf_destroy:
 3345              	.LVL332:
 3346              	.LFB58:
1125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1126:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_destroy(lv_tlsf_t tlsf)
1127:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3347              		.loc 1 1127 1 is_stmt 1 view -0
 3348              		.cfi_startproc
 3349              		@ args = 0, pretend = 0, frame = 0
 3350              		@ frame_needed = 0, uses_anonymous_args = 0
 3351              		@ link register save eliminated.
1128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Nothing to do. */
1129:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)tlsf;
ARM GAS  /tmp/ccoVZeFN.s 			page 86


 3352              		.loc 1 1129 2 view .LVU946
1130:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3353              		.loc 1 1130 1 is_stmt 0 view .LVU947
 3354 0000 7047     		bx	lr
 3355              		.cfi_endproc
 3356              	.LFE58:
 3358              		.section	.text.lv_tlsf_get_pool,"ax",%progbits
 3359              		.align	1
 3360              		.global	lv_tlsf_get_pool
 3361              		.syntax unified
 3362              		.thumb
 3363              		.thumb_func
 3365              	lv_tlsf_get_pool:
 3366              	.LVL333:
 3367              	.LFB59:
1131:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1132:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)
1133:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3368              		.loc 1 1133 1 is_stmt 1 view -0
 3369              		.cfi_startproc
 3370              		@ args = 0, pretend = 0, frame = 0
 3371              		@ frame_needed = 0, uses_anonymous_args = 0
 3372              		.loc 1 1133 1 is_stmt 0 view .LVU949
 3373 0000 10B5     		push	{r4, lr}
 3374              	.LCFI48:
 3375              		.cfi_def_cfa_offset 8
 3376              		.cfi_offset 4, -8
 3377              		.cfi_offset 14, -4
 3378 0002 0446     		mov	r4, r0
1134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_pool_t, (char*)tlsf + lv_tlsf_size());
 3379              		.loc 1 1134 2 is_stmt 1 view .LVU950
 3380              		.loc 1 1134 9 is_stmt 0 view .LVU951
 3381 0004 FFF7FEFF 		bl	lv_tlsf_size
 3382              	.LVL334:
1135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3383              		.loc 1 1135 1 view .LVU952
 3384 0008 2044     		add	r0, r0, r4
 3385 000a 10BD     		pop	{r4, pc}
 3386              		.loc 1 1135 1 view .LVU953
 3387              		.cfi_endproc
 3388              	.LFE59:
 3390              		.section	.text.lv_tlsf_malloc,"ax",%progbits
 3391              		.align	1
 3392              		.global	lv_tlsf_malloc
 3393              		.syntax unified
 3394              		.thumb
 3395              		.thumb_func
 3397              	lv_tlsf_malloc:
 3398              	.LVL335:
 3399              	.LFB60:
1136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1137:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
1138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3400              		.loc 1 1138 1 is_stmt 1 view -0
 3401              		.cfi_startproc
 3402              		@ args = 0, pretend = 0, frame = 0
 3403              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoVZeFN.s 			page 87


 3404              		.loc 1 1138 1 is_stmt 0 view .LVU955
 3405 0000 38B5     		push	{r3, r4, r5, lr}
 3406              	.LCFI49:
 3407              		.cfi_def_cfa_offset 16
 3408              		.cfi_offset 3, -16
 3409              		.cfi_offset 4, -12
 3410              		.cfi_offset 5, -8
 3411              		.cfi_offset 14, -4
 3412 0002 0446     		mov	r4, r0
 3413 0004 0846     		mov	r0, r1
 3414              	.LVL336:
1139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3415              		.loc 1 1139 2 is_stmt 1 view .LVU956
1140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3416              		.loc 1 1140 2 view .LVU957
 3417              		.loc 1 1140 24 is_stmt 0 view .LVU958
 3418 0006 0421     		movs	r1, #4
 3419              	.LVL337:
 3420              		.loc 1 1140 24 view .LVU959
 3421 0008 FFF7FEFF 		bl	adjust_request_size
 3422              	.LVL338:
 3423              		.loc 1 1140 24 view .LVU960
 3424 000c 0546     		mov	r5, r0
 3425              	.LVL339:
1141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, adjust);
 3426              		.loc 1 1141 2 is_stmt 1 view .LVU961
 3427              		.loc 1 1141 26 is_stmt 0 view .LVU962
 3428 000e 0146     		mov	r1, r0
 3429 0010 2046     		mov	r0, r4
 3430              	.LVL340:
 3431              		.loc 1 1141 26 view .LVU963
 3432 0012 FFF7FEFF 		bl	block_locate_free
 3433              	.LVL341:
 3434              		.loc 1 1141 26 view .LVU964
 3435 0016 0146     		mov	r1, r0
 3436              	.LVL342:
1142:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3437              		.loc 1 1142 2 is_stmt 1 view .LVU965
 3438              		.loc 1 1142 9 is_stmt 0 view .LVU966
 3439 0018 2A46     		mov	r2, r5
 3440 001a 2046     		mov	r0, r4
 3441              	.LVL343:
 3442              		.loc 1 1142 9 view .LVU967
 3443 001c FFF7FEFF 		bl	block_prepare_used
 3444              	.LVL344:
1143:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3445              		.loc 1 1143 1 view .LVU968
 3446 0020 38BD     		pop	{r3, r4, r5, pc}
 3447              		.loc 1 1143 1 view .LVU969
 3448              		.cfi_endproc
 3449              	.LFE60:
 3451              		.section	.text.lv_tlsf_memalign,"ax",%progbits
 3452              		.align	1
 3453              		.global	lv_tlsf_memalign
 3454              		.syntax unified
 3455              		.thumb
 3456              		.thumb_func
ARM GAS  /tmp/ccoVZeFN.s 			page 88


 3458              	lv_tlsf_memalign:
 3459              	.LVL345:
 3460              	.LFB61:
1144:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1145:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
1146:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3461              		.loc 1 1146 1 is_stmt 1 view -0
 3462              		.cfi_startproc
 3463              		@ args = 0, pretend = 0, frame = 0
 3464              		@ frame_needed = 0, uses_anonymous_args = 0
 3465              		.loc 1 1146 1 is_stmt 0 view .LVU971
 3466 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3467              	.LCFI50:
 3468              		.cfi_def_cfa_offset 24
 3469              		.cfi_offset 4, -24
 3470              		.cfi_offset 5, -20
 3471              		.cfi_offset 6, -16
 3472              		.cfi_offset 7, -12
 3473              		.cfi_offset 8, -8
 3474              		.cfi_offset 14, -4
 3475 0004 0646     		mov	r6, r0
 3476 0006 0C46     		mov	r4, r1
1147:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3477              		.loc 1 1147 2 is_stmt 1 view .LVU972
 3478              	.LVL346:
1148:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3479              		.loc 1 1148 2 view .LVU973
 3480              		.loc 1 1148 24 is_stmt 0 view .LVU974
 3481 0008 0421     		movs	r1, #4
 3482              	.LVL347:
 3483              		.loc 1 1148 24 view .LVU975
 3484 000a 1046     		mov	r0, r2
 3485              	.LVL348:
 3486              		.loc 1 1148 24 view .LVU976
 3487 000c FFF7FEFF 		bl	adjust_request_size
 3488              	.LVL349:
 3489              		.loc 1 1148 24 view .LVU977
 3490 0010 0546     		mov	r5, r0
 3491              	.LVL350:
1149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We must allocate an additional minimum block size bytes so that if
1152:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our free block will leave an alignment gap which is smaller, we can
1153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trim a leading free block and release it back to the pool. We must
1154:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** do this because the previous physical block is in use, therefore
1155:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the prev_phys_block field is not valid, and we can't simply adjust
1156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the size of that block.
1157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1158:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t gap_minimum = sizeof(block_header_t);
 3492              		.loc 1 1158 2 is_stmt 1 view .LVU978
1159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t size_with_gap = adjust_request_size(adjust + align + gap_minimum, align);
 3493              		.loc 1 1159 2 view .LVU979
 3494              		.loc 1 1159 58 is_stmt 0 view .LVU980
 3495 0012 2044     		add	r0, r0, r4
 3496              	.LVL351:
 3497              		.loc 1 1159 31 view .LVU981
 3498 0014 2146     		mov	r1, r4
ARM GAS  /tmp/ccoVZeFN.s 			page 89


 3499 0016 1030     		adds	r0, r0, #16
 3500 0018 FFF7FEFF 		bl	adjust_request_size
 3501              	.LVL352:
 3502 001c 0146     		mov	r1, r0
 3503              	.LVL353:
1160:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1161:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If alignment is less than or equals base alignment, we're done.
1163:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If we requested 0 bytes, return null, as lv_tlsf_malloc(0) does.
1164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1165:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t aligned_size = (adjust && align > ALIGN_SIZE) ? size_with_gap : adjust;
 3504              		.loc 1 1165 2 is_stmt 1 view .LVU982
 3505              		.loc 1 1165 77 is_stmt 0 view .LVU983
 3506 001e 002D     		cmp	r5, #0
 3507 0020 18BF     		it	ne
 3508 0022 042C     		cmpne	r4, #4
 3509 0024 00D8     		bhi	.L239
 3510 0026 2946     		mov	r1, r5
 3511              	.L239:
 3512              	.LVL354:
1166:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, aligned_size);
 3513              		.loc 1 1167 2 is_stmt 1 discriminator 4 view .LVU984
 3514              		.loc 1 1167 26 is_stmt 0 discriminator 4 view .LVU985
 3515 0028 3046     		mov	r0, r6
 3516              	.LVL355:
 3517              		.loc 1 1167 26 discriminator 4 view .LVU986
 3518 002a FFF7FEFF 		bl	block_locate_free
 3519              	.LVL356:
1168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* This can't be a static assert. */
1170:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
 3520              		.loc 1 1170 2 is_stmt 1 discriminator 4 view .LVU987
 3521              		.loc 1 1170 2 discriminator 4 view .LVU988
 3522              		.loc 1 1170 2 discriminator 4 view .LVU989
1171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1172:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 3523              		.loc 1 1172 2 discriminator 4 view .LVU990
 3524              		.loc 1 1172 5 is_stmt 0 discriminator 4 view .LVU991
 3525 002e 0746     		mov	r7, r0
 3526 0030 F8B1     		cbz	r0, .L240
 3527              	.LBB13:
1173:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* ptr = block_to_ptr(block);
 3528              		.loc 1 1174 3 is_stmt 1 view .LVU992
 3529              		.loc 1 1174 15 is_stmt 0 view .LVU993
 3530 0032 FFF7FEFF 		bl	block_to_ptr
 3531              	.LVL357:
 3532              		.loc 1 1174 15 view .LVU994
 3533 0036 8046     		mov	r8, r0
 3534              	.LVL358:
1175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* aligned = align_ptr(ptr, align);
 3535              		.loc 1 1175 3 is_stmt 1 view .LVU995
 3536              		.loc 1 1175 19 is_stmt 0 view .LVU996
 3537 0038 2146     		mov	r1, r4
 3538 003a FFF7FEFF 		bl	align_ptr
 3539              	.LVL359:
ARM GAS  /tmp/ccoVZeFN.s 			page 90


1176:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size_t gap = tlsf_cast(size_t,
 3540              		.loc 1 1176 3 is_stmt 1 view .LVU997
 3541              		.loc 1 1176 16 is_stmt 0 view .LVU998
 3542 003e A0EB0802 		sub	r2, r0, r8
 3543              	.LVL360:
1177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1178:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1179:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If gap size is too small, offset to next aligned boundary. */
1180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap && gap < gap_minimum)
 3544              		.loc 1 1180 3 is_stmt 1 view .LVU999
 3545              		.loc 1 1180 11 is_stmt 0 view .LVU1000
 3546 0042 531E     		subs	r3, r2, #1
 3547              		.loc 1 1180 6 view .LVU1001
 3548 0044 0E2B     		cmp	r3, #14
 3549 0046 03D9     		bls	.L246
 3550              	.L241:
1181:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t gap_remain = gap_minimum - gap;
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
1185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
1186:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			aligned = align_ptr(next_aligned, align);
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
1189:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1191:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap)
 3551              		.loc 1 1192 3 is_stmt 1 view .LVU1002
 3552              		.loc 1 1192 6 is_stmt 0 view .LVU1003
 3553 0048 9AB1     		cbz	r2, .L240
1193:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_assert(gap >= gap_minimum && "gap size too small");
 3554              		.loc 1 1194 4 is_stmt 1 view .LVU1004
 3555              		.loc 1 1194 4 view .LVU1005
 3556 004a 0F2A     		cmp	r2, #15
 3557 004c 0CD8     		bhi	.L242
 3558              	.L243:
 3559              		.loc 1 1194 4 discriminator 2 view .LVU1006
 3560              		.loc 1 1194 4 discriminator 2 view .LVU1007
 3561              		.loc 1 1194 4 discriminator 2 view .LVU1008
 3562              		.loc 1 1194 4 discriminator 2 view .LVU1009
 3563 004e FEE7     		b	.L243
 3564              	.L246:
 3565              	.LBB14:
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3566              		.loc 1 1182 4 view .LVU1010
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3567              		.loc 1 1182 17 is_stmt 0 view .LVU1011
 3568 0050 C2F11002 		rsb	r2, r2, #16
 3569              	.LVL361:
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
 3570              		.loc 1 1183 4 is_stmt 1 view .LVU1012
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
 3571              		.loc 1 1184 4 view .LVU1013
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3572              		.loc 1 1187 4 view .LVU1014
ARM GAS  /tmp/ccoVZeFN.s 			page 91


1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3573              		.loc 1 1187 14 is_stmt 0 view .LVU1015
 3574 0054 2146     		mov	r1, r4
 3575 0056 9442     		cmp	r4, r2
 3576 0058 2CBF     		ite	cs
 3577 005a 0019     		addcs	r0, r0, r4
 3578 005c 8018     		addcc	r0, r0, r2
 3579              	.LVL362:
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3580              		.loc 1 1187 14 view .LVU1016
 3581 005e FFF7FEFF 		bl	align_ptr
 3582              	.LVL363:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3583              		.loc 1 1188 4 is_stmt 1 view .LVU1017
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3584              		.loc 1 1188 10 is_stmt 0 view .LVU1018
 3585 0062 A0EB0802 		sub	r2, r0, r8
 3586              	.LVL364:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3587              		.loc 1 1188 10 view .LVU1019
 3588 0066 EFE7     		b	.L241
 3589              	.L242:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3590              		.loc 1 1188 10 view .LVU1020
 3591              	.LBE14:
 3592              		.loc 1 1194 4 is_stmt 1 discriminator 2 view .LVU1021
1195:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = block_trim_free_leading(control, block, gap);
 3593              		.loc 1 1195 4 discriminator 2 view .LVU1022
 3594              		.loc 1 1195 12 is_stmt 0 discriminator 2 view .LVU1023
 3595 0068 3946     		mov	r1, r7
 3596 006a 3046     		mov	r0, r6
 3597              	.LVL365:
 3598              		.loc 1 1195 12 discriminator 2 view .LVU1024
 3599 006c FFF7FEFF 		bl	block_trim_free_leading
 3600              	.LVL366:
 3601              		.loc 1 1195 12 discriminator 2 view .LVU1025
 3602 0070 0746     		mov	r7, r0
 3603              	.LVL367:
 3604              	.L240:
 3605              		.loc 1 1195 12 discriminator 2 view .LVU1026
 3606              	.LBE13:
1196:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1197:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1198:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3607              		.loc 1 1199 2 is_stmt 1 view .LVU1027
 3608              		.loc 1 1199 9 is_stmt 0 view .LVU1028
 3609 0072 2A46     		mov	r2, r5
 3610 0074 3946     		mov	r1, r7
 3611 0076 3046     		mov	r0, r6
 3612 0078 FFF7FEFF 		bl	block_prepare_used
 3613              	.LVL368:
1200:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3614              		.loc 1 1200 1 view .LVU1029
 3615 007c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3616              		.loc 1 1200 1 view .LVU1030
 3617              		.cfi_endproc
ARM GAS  /tmp/ccoVZeFN.s 			page 92


 3618              	.LFE61:
 3620              		.section	.text.lv_tlsf_free,"ax",%progbits
 3621              		.align	1
 3622              		.global	lv_tlsf_free
 3623              		.syntax unified
 3624              		.thumb
 3625              		.thumb_func
 3627              	lv_tlsf_free:
 3628              	.LVL369:
 3629              	.LFB62:
1201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1202:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_free(lv_tlsf_t tlsf, void* ptr)
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3630              		.loc 1 1203 1 is_stmt 1 view -0
 3631              		.cfi_startproc
 3632              		@ args = 0, pretend = 0, frame = 0
 3633              		@ frame_needed = 0, uses_anonymous_args = 0
1204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
1205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 3634              		.loc 1 1205 2 view .LVU1032
 3635              		.loc 1 1205 5 is_stmt 0 view .LVU1033
 3636 0000 C9B1     		cbz	r1, .L252
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
 3637              		.loc 1 1203 1 view .LVU1034
 3638 0002 38B5     		push	{r3, r4, r5, lr}
 3639              	.LCFI51:
 3640              		.cfi_def_cfa_offset 16
 3641              		.cfi_offset 3, -16
 3642              		.cfi_offset 4, -12
 3643              		.cfi_offset 5, -8
 3644              		.cfi_offset 14, -4
 3645 0004 0446     		mov	r4, r0
 3646 0006 0846     		mov	r0, r1
 3647              	.LVL370:
 3648              	.LBB15:
1206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control_t* control = tlsf_cast(control_t*, tlsf);
 3649              		.loc 1 1207 3 is_stmt 1 view .LVU1035
1208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3650              		.loc 1 1208 3 view .LVU1036
 3651              		.loc 1 1208 27 is_stmt 0 view .LVU1037
 3652 0008 FFF7FEFF 		bl	block_from_ptr
 3653              	.LVL371:
 3654              		.loc 1 1208 27 view .LVU1038
 3655 000c 0546     		mov	r5, r0
 3656              	.LVL372:
1209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3657              		.loc 1 1209 3 is_stmt 1 view .LVU1039
 3658              		.loc 1 1209 3 view .LVU1040
 3659 000e FFF7FEFF 		bl	block_is_free
 3660              	.LVL373:
 3661              		.loc 1 1209 3 is_stmt 0 view .LVU1041
 3662 0012 00B1     		cbz	r0, .L249
 3663              	.L250:
 3664              		.loc 1 1209 3 is_stmt 1 discriminator 1 view .LVU1042
 3665              		.loc 1 1209 3 discriminator 1 view .LVU1043
 3666              		.loc 1 1209 3 discriminator 1 view .LVU1044
ARM GAS  /tmp/ccoVZeFN.s 			page 93


 3667              		.loc 1 1209 3 discriminator 1 view .LVU1045
 3668 0014 FEE7     		b	.L250
 3669              	.L249:
 3670              		.loc 1 1209 3 discriminator 2 view .LVU1046
1210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_free(block);
 3671              		.loc 1 1210 3 discriminator 2 view .LVU1047
 3672 0016 2846     		mov	r0, r5
 3673 0018 FFF7FEFF 		bl	block_mark_as_free
 3674              	.LVL374:
1211:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_prev(control, block);
 3675              		.loc 1 1211 3 discriminator 2 view .LVU1048
 3676              		.loc 1 1211 11 is_stmt 0 discriminator 2 view .LVU1049
 3677 001c 2946     		mov	r1, r5
 3678 001e 2046     		mov	r0, r4
 3679 0020 FFF7FEFF 		bl	block_merge_prev
 3680              	.LVL375:
 3681 0024 0146     		mov	r1, r0
 3682              	.LVL376:
1212:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_next(control, block);
 3683              		.loc 1 1212 3 is_stmt 1 discriminator 2 view .LVU1050
 3684              		.loc 1 1212 11 is_stmt 0 discriminator 2 view .LVU1051
 3685 0026 2046     		mov	r0, r4
 3686              	.LVL377:
 3687              		.loc 1 1212 11 discriminator 2 view .LVU1052
 3688 0028 FFF7FEFF 		bl	block_merge_next
 3689              	.LVL378:
 3690              		.loc 1 1212 11 discriminator 2 view .LVU1053
 3691 002c 0146     		mov	r1, r0
 3692              	.LVL379:
1213:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 3693              		.loc 1 1213 3 is_stmt 1 discriminator 2 view .LVU1054
 3694 002e 2046     		mov	r0, r4
 3695              	.LVL380:
 3696              		.loc 1 1213 3 is_stmt 0 discriminator 2 view .LVU1055
 3697 0030 FFF7FEFF 		bl	block_insert
 3698              	.LVL381:
 3699              		.loc 1 1213 3 discriminator 2 view .LVU1056
 3700              	.LBE15:
1214:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1215:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3701              		.loc 1 1215 1 discriminator 2 view .LVU1057
 3702 0034 38BD     		pop	{r3, r4, r5, pc}
 3703              	.LVL382:
 3704              	.L252:
 3705              	.LCFI52:
 3706              		.cfi_def_cfa_offset 0
 3707              		.cfi_restore 3
 3708              		.cfi_restore 4
 3709              		.cfi_restore 5
 3710              		.cfi_restore 14
 3711              		.loc 1 1215 1 discriminator 2 view .LVU1058
 3712 0036 7047     		bx	lr
 3713              		.cfi_endproc
 3714              	.LFE62:
 3716              		.section	.text.lv_tlsf_realloc,"ax",%progbits
 3717              		.align	1
 3718              		.global	lv_tlsf_realloc
ARM GAS  /tmp/ccoVZeFN.s 			page 94


 3719              		.syntax unified
 3720              		.thumb
 3721              		.thumb_func
 3723              	lv_tlsf_realloc:
 3724              	.LVL383:
 3725              	.LFB63:
1216:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1217:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1218:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The TLSF block information provides us with enough information to
1219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** provide a reasonably intelligent implementation of realloc, growing or
1220:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** shrinking the currently allocated block as required.
1221:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
1222:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** This routine handles the somewhat esoteric edge cases of realloc:
1223:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a non-zero size with a null pointer will behave like malloc
1224:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a zero size with a non-null pointer will behave like free
1225:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a request that cannot be satisfied will leave the original buffer
1226:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   untouched
1227:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - an extended buffer size will leave the newly-allocated area with
1228:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   contents undefined
1229:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1230:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_realloc(lv_tlsf_t tlsf, void* ptr, size_t size)
1231:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3726              		.loc 1 1231 1 is_stmt 1 view -0
 3727              		.cfi_startproc
 3728              		@ args = 0, pretend = 0, frame = 0
 3729              		@ frame_needed = 0, uses_anonymous_args = 0
 3730              		.loc 1 1231 1 is_stmt 0 view .LVU1060
 3731 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3732              	.LCFI53:
 3733              		.cfi_def_cfa_offset 40
 3734              		.cfi_offset 3, -40
 3735              		.cfi_offset 4, -36
 3736              		.cfi_offset 5, -32
 3737              		.cfi_offset 6, -28
 3738              		.cfi_offset 7, -24
 3739              		.cfi_offset 8, -20
 3740              		.cfi_offset 9, -16
 3741              		.cfi_offset 10, -12
 3742              		.cfi_offset 11, -8
 3743              		.cfi_offset 14, -4
 3744 0004 0446     		mov	r4, r0
1232:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3745              		.loc 1 1232 2 is_stmt 1 view .LVU1061
 3746              	.LVL384:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 3747              		.loc 1 1233 2 view .LVU1062
1234:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1235:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Zero-size requests are treated as free. */
1236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr && size == 0)
 3748              		.loc 1 1236 2 view .LVU1063
 3749              		.loc 1 1236 6 is_stmt 0 view .LVU1064
 3750 0006 0E46     		mov	r6, r1
 3751              		.loc 1 1236 10 view .LVU1065
 3752 0008 0039     		subs	r1, r1, #0
 3753              	.LVL385:
 3754              		.loc 1 1236 10 view .LVU1066
 3755 000a 18BF     		it	ne
ARM GAS  /tmp/ccoVZeFN.s 			page 95


 3756 000c 0121     		movne	r1, #1
 3757 000e 002A     		cmp	r2, #0
 3758 0010 18BF     		it	ne
 3759 0012 0021     		movne	r1, #0
 3760              		.loc 1 1236 5 view .LVU1067
 3761 0014 E9B9     		cbnz	r1, .L265
 3762 0016 9046     		mov	r8, r2
1237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		lv_tlsf_free(tlsf, ptr);
1239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Requests with NULL pointers are treated as malloc. */
1241:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else if (!ptr)
 3763              		.loc 1 1241 7 is_stmt 1 view .LVU1068
 3764              		.loc 1 1241 10 is_stmt 0 view .LVU1069
 3765 0018 06B3     		cbz	r6, .L266
 3766              	.LBB16:
1242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = lv_tlsf_malloc(tlsf, size);
1244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
1246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3767              		.loc 1 1247 3 is_stmt 1 view .LVU1070
 3768              		.loc 1 1247 27 is_stmt 0 view .LVU1071
 3769 001a 3046     		mov	r0, r6
 3770              	.LVL386:
 3771              		.loc 1 1247 27 view .LVU1072
 3772 001c FFF7FEFF 		bl	block_from_ptr
 3773              	.LVL387:
 3774              		.loc 1 1247 27 view .LVU1073
 3775 0020 0546     		mov	r5, r0
 3776              	.LVL388:
1248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* next = block_next(block);
 3777              		.loc 1 1248 3 is_stmt 1 view .LVU1074
 3778              		.loc 1 1248 26 is_stmt 0 view .LVU1075
 3779 0022 FFF7FEFF 		bl	block_next
 3780              	.LVL389:
 3781              		.loc 1 1248 26 view .LVU1076
 3782 0026 8246     		mov	r10, r0
 3783              	.LVL390:
1249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t cursize = block_size(block);
 3784              		.loc 1 1250 3 is_stmt 1 view .LVU1077
 3785              		.loc 1 1250 26 is_stmt 0 view .LVU1078
 3786 0028 2846     		mov	r0, r5
 3787              	.LVL391:
 3788              		.loc 1 1250 26 view .LVU1079
 3789 002a FFF7FEFF 		bl	block_size
 3790              	.LVL392:
 3791 002e 8146     		mov	r9, r0
 3792              	.LVL393:
1251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t combined = cursize + block_size(next) + block_header_overhead;
 3793              		.loc 1 1251 3 is_stmt 1 view .LVU1080
 3794              		.loc 1 1251 37 is_stmt 0 view .LVU1081
 3795 0030 5046     		mov	r0, r10
 3796              	.LVL394:
 3797              		.loc 1 1251 37 view .LVU1082
ARM GAS  /tmp/ccoVZeFN.s 			page 96


 3798 0032 FFF7FEFF 		bl	block_size
 3799              	.LVL395:
 3800              		.loc 1 1251 35 view .LVU1083
 3801 0036 00EB0903 		add	r3, r0, r9
 3802              		.loc 1 1251 16 view .LVU1084
 3803 003a 03F1040B 		add	fp, r3, #4
 3804              	.LVL396:
1252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3805              		.loc 1 1252 3 is_stmt 1 view .LVU1085
 3806              		.loc 1 1252 25 is_stmt 0 view .LVU1086
 3807 003e 0421     		movs	r1, #4
 3808 0040 4046     		mov	r0, r8
 3809 0042 FFF7FEFF 		bl	adjust_request_size
 3810              	.LVL397:
 3811 0046 0746     		mov	r7, r0
 3812              	.LVL398:
1253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3813              		.loc 1 1254 3 is_stmt 1 view .LVU1087
 3814              		.loc 1 1254 3 view .LVU1088
 3815 0048 2846     		mov	r0, r5
 3816              	.LVL399:
 3817              		.loc 1 1254 3 is_stmt 0 view .LVU1089
 3818 004a FFF7FEFF 		bl	block_is_free
 3819              	.LVL400:
 3820 004e 60B1     		cbz	r0, .L259
 3821              	.L260:
 3822              		.loc 1 1254 3 is_stmt 1 discriminator 1 view .LVU1090
 3823              		.loc 1 1254 3 discriminator 1 view .LVU1091
 3824              		.loc 1 1254 3 discriminator 1 view .LVU1092
 3825              		.loc 1 1254 3 discriminator 1 view .LVU1093
 3826 0050 FEE7     		b	.L260
 3827              	.LVL401:
 3828              	.L265:
 3829              		.loc 1 1254 3 is_stmt 0 discriminator 1 view .LVU1094
 3830              	.LBE16:
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3831              		.loc 1 1238 3 is_stmt 1 view .LVU1095
 3832 0052 3146     		mov	r1, r6
 3833 0054 FFF7FEFF 		bl	lv_tlsf_free
 3834              	.LVL402:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3835              		.loc 1 1233 8 is_stmt 0 view .LVU1096
 3836 0058 0025     		movs	r5, #0
 3837 005a 03E0     		b	.L255
 3838              	.LVL403:
 3839              	.L266:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3840              		.loc 1 1243 3 is_stmt 1 view .LVU1097
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3841              		.loc 1 1243 7 is_stmt 0 view .LVU1098
 3842 005c 1146     		mov	r1, r2
 3843 005e FFF7FEFF 		bl	lv_tlsf_malloc
 3844              	.LVL404:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3845              		.loc 1 1243 7 view .LVU1099
 3846 0062 0546     		mov	r5, r0
ARM GAS  /tmp/ccoVZeFN.s 			page 97


 3847              	.LVL405:
 3848              	.L255:
1255:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
1257:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** If the next block is used, or when combined with the current
1258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** block, does not offer enough space, we must reallocate and copy.
1259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (adjust > cursize && (!block_is_free(next) || adjust > combined))
1261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = lv_tlsf_malloc(tlsf, size);
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
1264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				const size_t minsize = tlsf_min(cursize, size);
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
1268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		else
1271:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Do we need to expand to the next block? */
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (adjust > cursize)
1274:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_merge_next(control, block);
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
1277:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1278:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1279:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Trim the resulting block and return the original pointer. */
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_trim_used(control, block, adjust);
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
1282:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1283:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1284:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
1286:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3849              		.loc 1 1286 1 view .LVU1100
 3850 0064 2846     		mov	r0, r5
 3851 0066 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3852              	.LVL406:
 3853              	.L259:
 3854              	.LBB18:
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3855              		.loc 1 1254 3 is_stmt 1 discriminator 2 view .LVU1101
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3856              		.loc 1 1260 3 discriminator 2 view .LVU1102
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3857              		.loc 1 1260 6 is_stmt 0 discriminator 2 view .LVU1103
 3858 006a B945     		cmp	r9, r7
 3859 006c 18D2     		bcs	.L261
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3860              		.loc 1 1260 29 discriminator 1 view .LVU1104
 3861 006e 5046     		mov	r0, r10
 3862 0070 FFF7FEFF 		bl	block_is_free
 3863              	.LVL407:
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3864              		.loc 1 1260 24 discriminator 1 view .LVU1105
 3865 0074 08B1     		cbz	r0, .L262
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
ARM GAS  /tmp/ccoVZeFN.s 			page 98


 3866              		.loc 1 1260 49 discriminator 2 view .LVU1106
 3867 0076 BB45     		cmp	fp, r7
 3868 0078 12D2     		bcs	.L261
 3869              	.L262:
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3870              		.loc 1 1262 4 is_stmt 1 view .LVU1107
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3871              		.loc 1 1262 8 is_stmt 0 view .LVU1108
 3872 007a 4146     		mov	r1, r8
 3873 007c 2046     		mov	r0, r4
 3874 007e FFF7FEFF 		bl	lv_tlsf_malloc
 3875              	.LVL408:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3876              		.loc 1 1263 4 is_stmt 1 view .LVU1109
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3877              		.loc 1 1263 7 is_stmt 0 view .LVU1110
 3878 0082 0546     		mov	r5, r0
 3879              	.LVL409:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3880              		.loc 1 1263 7 view .LVU1111
 3881 0084 0028     		cmp	r0, #0
 3882 0086 EDD0     		beq	.L255
 3883              	.LBB17:
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
 3884              		.loc 1 1265 5 is_stmt 1 view .LVU1112
 3885              	.LVL410:
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
 3886              		.loc 1 1266 5 view .LVU1113
 3887 0088 4246     		mov	r2, r8
 3888 008a C845     		cmp	r8, r9
 3889 008c 28BF     		it	cs
 3890 008e 4A46     		movcs	r2, r9
 3891 0090 3146     		mov	r1, r6
 3892 0092 FFF7FEFF 		bl	lv_memcpy
 3893              	.LVL411:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3894              		.loc 1 1267 5 view .LVU1114
 3895 0096 3146     		mov	r1, r6
 3896 0098 2046     		mov	r0, r4
 3897 009a FFF7FEFF 		bl	lv_tlsf_free
 3898              	.LVL412:
 3899 009e E1E7     		b	.L255
 3900              	.LVL413:
 3901              	.L261:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3902              		.loc 1 1267 5 is_stmt 0 view .LVU1115
 3903              	.LBE17:
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3904              		.loc 1 1273 4 is_stmt 1 view .LVU1116
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3905              		.loc 1 1273 7 is_stmt 0 view .LVU1117
 3906 00a0 B945     		cmp	r9, r7
 3907 00a2 06D3     		bcc	.L267
 3908              	.L263:
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
 3909              		.loc 1 1280 4 is_stmt 1 view .LVU1118
 3910 00a4 3A46     		mov	r2, r7
ARM GAS  /tmp/ccoVZeFN.s 			page 99


 3911 00a6 2946     		mov	r1, r5
 3912 00a8 2046     		mov	r0, r4
 3913 00aa FFF7FEFF 		bl	block_trim_used
 3914              	.LVL414:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3915              		.loc 1 1281 4 view .LVU1119
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3916              		.loc 1 1281 6 is_stmt 0 view .LVU1120
 3917 00ae 3546     		mov	r5, r6
 3918              	.LVL415:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3919              		.loc 1 1281 6 view .LVU1121
 3920              	.LBE18:
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3921              		.loc 1 1285 2 is_stmt 1 view .LVU1122
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3922              		.loc 1 1285 9 is_stmt 0 view .LVU1123
 3923 00b0 D8E7     		b	.L255
 3924              	.LVL416:
 3925              	.L267:
 3926              	.LBB19:
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
 3927              		.loc 1 1275 5 is_stmt 1 view .LVU1124
 3928 00b2 2946     		mov	r1, r5
 3929 00b4 2046     		mov	r0, r4
 3930 00b6 FFF7FEFF 		bl	block_merge_next
 3931              	.LVL417:
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3932              		.loc 1 1276 5 view .LVU1125
 3933 00ba 2846     		mov	r0, r5
 3934 00bc FFF7FEFF 		bl	block_mark_as_used
 3935              	.LVL418:
 3936 00c0 F0E7     		b	.L263
 3937              	.LBE19:
 3938              		.cfi_endproc
 3939              	.LFE63:
 3941              		.text
 3942              	.Letext0:
 3943              		.file 2 "/home/akinya/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 3944              		.file 3 "Middlewares/lvgl/src/misc/lv_tlsf.h"
 3945              		.file 4 "Middlewares/lvgl/src/misc/lv_mem.h"
ARM GAS  /tmp/ccoVZeFN.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_tlsf.c
     /tmp/ccoVZeFN.s:19     .text.block_size:0000000000000000 $t
     /tmp/ccoVZeFN.s:24     .text.block_size:0000000000000000 block_size
     /tmp/ccoVZeFN.s:44     .text.block_set_size:0000000000000000 $t
     /tmp/ccoVZeFN.s:49     .text.block_set_size:0000000000000000 block_set_size
     /tmp/ccoVZeFN.s:76     .text.block_is_last:0000000000000000 $t
     /tmp/ccoVZeFN.s:81     .text.block_is_last:0000000000000000 block_is_last
     /tmp/ccoVZeFN.s:106    .text.block_is_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:111    .text.block_is_free:0000000000000000 block_is_free
     /tmp/ccoVZeFN.s:130    .text.block_set_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:135    .text.block_set_free:0000000000000000 block_set_free
     /tmp/ccoVZeFN.s:154    .text.block_set_used:0000000000000000 $t
     /tmp/ccoVZeFN.s:159    .text.block_set_used:0000000000000000 block_set_used
     /tmp/ccoVZeFN.s:178    .text.block_is_prev_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:183    .text.block_is_prev_free:0000000000000000 block_is_prev_free
     /tmp/ccoVZeFN.s:202    .text.block_set_prev_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:207    .text.block_set_prev_free:0000000000000000 block_set_prev_free
     /tmp/ccoVZeFN.s:226    .text.block_set_prev_used:0000000000000000 $t
     /tmp/ccoVZeFN.s:231    .text.block_set_prev_used:0000000000000000 block_set_prev_used
     /tmp/ccoVZeFN.s:250    .text.block_from_ptr:0000000000000000 $t
     /tmp/ccoVZeFN.s:255    .text.block_from_ptr:0000000000000000 block_from_ptr
     /tmp/ccoVZeFN.s:273    .text.block_to_ptr:0000000000000000 $t
     /tmp/ccoVZeFN.s:278    .text.block_to_ptr:0000000000000000 block_to_ptr
     /tmp/ccoVZeFN.s:296    .text.offset_to_block:0000000000000000 $t
     /tmp/ccoVZeFN.s:301    .text.offset_to_block:0000000000000000 offset_to_block
     /tmp/ccoVZeFN.s:319    .text.block_prev:0000000000000000 $t
     /tmp/ccoVZeFN.s:324    .text.block_prev:0000000000000000 block_prev
     /tmp/ccoVZeFN.s:361    .text.block_next:0000000000000000 $t
     /tmp/ccoVZeFN.s:366    .text.block_next:0000000000000000 block_next
     /tmp/ccoVZeFN.s:422    .text.block_link_next:0000000000000000 $t
     /tmp/ccoVZeFN.s:427    .text.block_link_next:0000000000000000 block_link_next
     /tmp/ccoVZeFN.s:456    .text.block_mark_as_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:461    .text.block_mark_as_free:0000000000000000 block_mark_as_free
     /tmp/ccoVZeFN.s:493    .text.block_mark_as_used:0000000000000000 $t
     /tmp/ccoVZeFN.s:498    .text.block_mark_as_used:0000000000000000 block_mark_as_used
     /tmp/ccoVZeFN.s:530    .text.align_up:0000000000000000 $t
     /tmp/ccoVZeFN.s:535    .text.align_up:0000000000000000 align_up
     /tmp/ccoVZeFN.s:572    .text.align_down:0000000000000000 $t
     /tmp/ccoVZeFN.s:577    .text.align_down:0000000000000000 align_down
     /tmp/ccoVZeFN.s:611    .text.align_ptr:0000000000000000 $t
     /tmp/ccoVZeFN.s:616    .text.align_ptr:0000000000000000 align_ptr
     /tmp/ccoVZeFN.s:655    .text.adjust_request_size:0000000000000000 $t
     /tmp/ccoVZeFN.s:660    .text.adjust_request_size:0000000000000000 adjust_request_size
     /tmp/ccoVZeFN.s:715    .text.remove_free_block:0000000000000000 $t
     /tmp/ccoVZeFN.s:720    .text.remove_free_block:0000000000000000 remove_free_block
     /tmp/ccoVZeFN.s:824    .text.insert_free_block:0000000000000000 $t
     /tmp/ccoVZeFN.s:829    .text.insert_free_block:0000000000000000 insert_free_block
     /tmp/ccoVZeFN.s:944    .text.block_can_split:0000000000000000 $t
     /tmp/ccoVZeFN.s:949    .text.block_can_split:0000000000000000 block_can_split
     /tmp/ccoVZeFN.s:981    .text.block_split:0000000000000000 $t
     /tmp/ccoVZeFN.s:986    .text.block_split:0000000000000000 block_split
     /tmp/ccoVZeFN.s:1101   .text.block_absorb:0000000000000000 $t
     /tmp/ccoVZeFN.s:1106   .text.block_absorb:0000000000000000 block_absorb
     /tmp/ccoVZeFN.s:1161   .text.control_constructor:0000000000000000 $t
     /tmp/ccoVZeFN.s:1166   .text.control_constructor:0000000000000000 control_constructor
     /tmp/ccoVZeFN.s:1231   .text.integrity_walker:0000000000000000 $t
ARM GAS  /tmp/ccoVZeFN.s 			page 101


     /tmp/ccoVZeFN.s:1236   .text.integrity_walker:0000000000000000 integrity_walker
     /tmp/ccoVZeFN.s:1329   .text.default_walker:0000000000000000 $t
     /tmp/ccoVZeFN.s:1334   .text.default_walker:0000000000000000 default_walker
     /tmp/ccoVZeFN.s:1350   .text.tlsf_fls:0000000000000000 $t
     /tmp/ccoVZeFN.s:1355   .text.tlsf_fls:0000000000000000 tlsf_fls
     /tmp/ccoVZeFN.s:1390   .text.mapping_insert:0000000000000000 $t
     /tmp/ccoVZeFN.s:1395   .text.mapping_insert:0000000000000000 mapping_insert
     /tmp/ccoVZeFN.s:1472   .text.block_insert:0000000000000000 $t
     /tmp/ccoVZeFN.s:1477   .text.block_insert:0000000000000000 block_insert
     /tmp/ccoVZeFN.s:1526   .text.block_trim_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:1531   .text.block_trim_free:0000000000000000 block_trim_free
     /tmp/ccoVZeFN.s:1611   .text.block_prepare_used:0000000000000000 $t
     /tmp/ccoVZeFN.s:1616   .text.block_prepare_used:0000000000000000 block_prepare_used
     /tmp/ccoVZeFN.s:1673   .text.block_trim_free_leading:0000000000000000 $t
     /tmp/ccoVZeFN.s:1678   .text.block_trim_free_leading:0000000000000000 block_trim_free_leading
     /tmp/ccoVZeFN.s:1747   .text.block_remove:0000000000000000 $t
     /tmp/ccoVZeFN.s:1752   .text.block_remove:0000000000000000 block_remove
     /tmp/ccoVZeFN.s:1801   .text.block_merge_prev:0000000000000000 $t
     /tmp/ccoVZeFN.s:1806   .text.block_merge_prev:0000000000000000 block_merge_prev
     /tmp/ccoVZeFN.s:1892   .text.block_merge_next:0000000000000000 $t
     /tmp/ccoVZeFN.s:1897   .text.block_merge_next:0000000000000000 block_merge_next
     /tmp/ccoVZeFN.s:1977   .text.block_trim_used:0000000000000000 $t
     /tmp/ccoVZeFN.s:1982   .text.block_trim_used:0000000000000000 block_trim_used
     /tmp/ccoVZeFN.s:2065   .text.mapping_search:0000000000000000 $t
     /tmp/ccoVZeFN.s:2070   .text.mapping_search:0000000000000000 mapping_search
     /tmp/ccoVZeFN.s:2125   .text.tlsf_ffs:0000000000000000 $t
     /tmp/ccoVZeFN.s:2130   .text.tlsf_ffs:0000000000000000 tlsf_ffs
     /tmp/ccoVZeFN.s:2155   .text.search_suitable_block:0000000000000000 $t
     /tmp/ccoVZeFN.s:2160   .text.search_suitable_block:0000000000000000 search_suitable_block
     /tmp/ccoVZeFN.s:2285   .text.block_locate_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:2290   .text.block_locate_free:0000000000000000 block_locate_free
     /tmp/ccoVZeFN.s:2399   .text.lv_tlsf_check:0000000000000000 $t
     /tmp/ccoVZeFN.s:2405   .text.lv_tlsf_check:0000000000000000 lv_tlsf_check
     /tmp/ccoVZeFN.s:2676   .text.lv_tlsf_walk_pool:0000000000000000 $t
     /tmp/ccoVZeFN.s:2682   .text.lv_tlsf_walk_pool:0000000000000000 lv_tlsf_walk_pool
     /tmp/ccoVZeFN.s:2773   .text.lv_tlsf_walk_pool:0000000000000058 $d
     /tmp/ccoVZeFN.s:2778   .text.lv_tlsf_block_size:0000000000000000 $t
     /tmp/ccoVZeFN.s:2784   .text.lv_tlsf_block_size:0000000000000000 lv_tlsf_block_size
     /tmp/ccoVZeFN.s:2830   .text.lv_tlsf_check_pool:0000000000000000 $t
     /tmp/ccoVZeFN.s:2836   .text.lv_tlsf_check_pool:0000000000000000 lv_tlsf_check_pool
     /tmp/ccoVZeFN.s:2872   .text.lv_tlsf_check_pool:000000000000001c $d
     /tmp/ccoVZeFN.s:2877   .text.lv_tlsf_size:0000000000000000 $t
     /tmp/ccoVZeFN.s:2883   .text.lv_tlsf_size:0000000000000000 lv_tlsf_size
     /tmp/ccoVZeFN.s:2898   .text.lv_tlsf_align_size:0000000000000000 $t
     /tmp/ccoVZeFN.s:2904   .text.lv_tlsf_align_size:0000000000000000 lv_tlsf_align_size
     /tmp/ccoVZeFN.s:2919   .text.lv_tlsf_block_size_min:0000000000000000 $t
     /tmp/ccoVZeFN.s:2925   .text.lv_tlsf_block_size_min:0000000000000000 lv_tlsf_block_size_min
     /tmp/ccoVZeFN.s:2940   .text.lv_tlsf_block_size_max:0000000000000000 $t
     /tmp/ccoVZeFN.s:2946   .text.lv_tlsf_block_size_max:0000000000000000 lv_tlsf_block_size_max
     /tmp/ccoVZeFN.s:2961   .text.lv_tlsf_pool_overhead:0000000000000000 $t
     /tmp/ccoVZeFN.s:2967   .text.lv_tlsf_pool_overhead:0000000000000000 lv_tlsf_pool_overhead
     /tmp/ccoVZeFN.s:2982   .text.lv_tlsf_alloc_overhead:0000000000000000 $t
     /tmp/ccoVZeFN.s:2988   .text.lv_tlsf_alloc_overhead:0000000000000000 lv_tlsf_alloc_overhead
     /tmp/ccoVZeFN.s:3003   .text.lv_tlsf_add_pool:0000000000000000 $t
     /tmp/ccoVZeFN.s:3009   .text.lv_tlsf_add_pool:0000000000000000 lv_tlsf_add_pool
     /tmp/ccoVZeFN.s:3127   .text.lv_tlsf_remove_pool:0000000000000000 $t
     /tmp/ccoVZeFN.s:3133   .text.lv_tlsf_remove_pool:0000000000000000 lv_tlsf_remove_pool
ARM GAS  /tmp/ccoVZeFN.s 			page 102


     /tmp/ccoVZeFN.s:3242   .text.lv_tlsf_create:0000000000000000 $t
     /tmp/ccoVZeFN.s:3248   .text.lv_tlsf_create:0000000000000000 lv_tlsf_create
     /tmp/ccoVZeFN.s:3289   .text.lv_tlsf_create_with_pool:0000000000000000 $t
     /tmp/ccoVZeFN.s:3295   .text.lv_tlsf_create_with_pool:0000000000000000 lv_tlsf_create_with_pool
     /tmp/ccoVZeFN.s:3338   .text.lv_tlsf_destroy:0000000000000000 $t
     /tmp/ccoVZeFN.s:3344   .text.lv_tlsf_destroy:0000000000000000 lv_tlsf_destroy
     /tmp/ccoVZeFN.s:3359   .text.lv_tlsf_get_pool:0000000000000000 $t
     /tmp/ccoVZeFN.s:3365   .text.lv_tlsf_get_pool:0000000000000000 lv_tlsf_get_pool
     /tmp/ccoVZeFN.s:3391   .text.lv_tlsf_malloc:0000000000000000 $t
     /tmp/ccoVZeFN.s:3397   .text.lv_tlsf_malloc:0000000000000000 lv_tlsf_malloc
     /tmp/ccoVZeFN.s:3452   .text.lv_tlsf_memalign:0000000000000000 $t
     /tmp/ccoVZeFN.s:3458   .text.lv_tlsf_memalign:0000000000000000 lv_tlsf_memalign
     /tmp/ccoVZeFN.s:3621   .text.lv_tlsf_free:0000000000000000 $t
     /tmp/ccoVZeFN.s:3627   .text.lv_tlsf_free:0000000000000000 lv_tlsf_free
     /tmp/ccoVZeFN.s:3717   .text.lv_tlsf_realloc:0000000000000000 $t
     /tmp/ccoVZeFN.s:3723   .text.lv_tlsf_realloc:0000000000000000 lv_tlsf_realloc

UNDEFINED SYMBOLS
lv_memcpy
