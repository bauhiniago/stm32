ARM GAS  /tmp/ccGOfVui.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"lv_tlsf.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.block_size,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	block_size:
  25              	.LVL0:
  26              	.LFB3:
  27              		.file 1 "Middlewares/lvgl/src/misc/lv_tlsf.c"
   1:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "../lv_conf_internal.h"
   2:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if LV_MEM_CUSTOM == 0
   3:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
   4:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <limits.h>
   5:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <stddef.h>
   6:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_tlsf.h"
   7:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_mem.h"
   8:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_log.h"
   9:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_assert.h"
  10:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define printf LV_LOG_ERROR
  11:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  12:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_MAX_POOL_SIZE LV_MEM_SIZE
  13:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  14:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined(_DEBUG)
  15:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _DEBUG 0
  16:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  17:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  18:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined(__cplusplus)
  19:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl inline
  20:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  21:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl static
  22:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  23:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  24:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  25:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Architecture-specific bit manipulation routines.
  26:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  27:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF achieves O(1) cost for malloc and free operations by limiting
  28:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the search for a free block to a free list of guaranteed size
  29:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** adequate to fulfill the request, combined with efficient free list
  30:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** queries using bitmasks and architecture-specific bit-manipulation
  31:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** routines.
ARM GAS  /tmp/ccGOfVui.s 			page 2


  32:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  33:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Most modern processors provide instructions to count leading zeroes
  34:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** in a word, find the lowest and highest set bit, etc. These
  35:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** specific implementations will be used when available, falling back
  36:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** to a reasonably efficient generic implementation.
  37:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  38:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** NOTE: TLSF spec relies on ffs/fls returning value 0..31.
  39:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** ffs/fls return 1-32 by default, returning 0 for error.
  40:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  41:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  42:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  43:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Detect whether or not we are building for a 32- or 64-bit (LP/LLP)
  44:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** architecture. There is no reliable portable method at compile-time.
  45:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  46:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) \
  47:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	|| defined (_WIN64) || defined (__LP64__) || defined (__LLP64__)
  48:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_64BIT
  49:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  50:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  51:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  52:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns one plus the index of the most significant 1-bit of n,
  53:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** or if n is zero, returns zero.
  54:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  55:Middlewares/lvgl/src/misc/lv_tlsf.c **** #ifdef TLSF_64BIT
  56:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) ((n) & 0xffffffff00000000ull ? 32 + TLSF_FLS32((size_t)(n) >> 32) : TLSF_FLS32(
  57:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  58:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) TLSF_FLS32(n)
  59:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  60:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  61:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS32(n) ((n) & 0xffff0000 ? 16 + TLSF_FLS16((n) >> 16) : TLSF_FLS16(n))
  62:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS16(n) ((n) & 0xff00     ?  8 + TLSF_FLS8 ((n) >>  8) : TLSF_FLS8 (n))
  63:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS8(n)  ((n) & 0xf0       ?  4 + TLSF_FLS4 ((n) >>  4) : TLSF_FLS4 (n))
  64:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS4(n)  ((n) & 0xc        ?  2 + TLSF_FLS2 ((n) >>  2) : TLSF_FLS2 (n))
  65:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS2(n)  ((n) & 0x2        ?  1 + TLSF_FLS1 ((n) >>  1) : TLSF_FLS1 (n))
  66:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS1(n)  ((n) & 0x1        ?  1 : 0)
  67:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  68:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  69:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns round up value of log2(n).
  70:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Note: it is used at compile time.
  71:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  72:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_LOG2_CEIL(n) ((n) & (n - 1) ? TLSF_FLS(n) : TLSF_FLS(n) - 1)
  73:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  74:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  75:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** gcc 3.4 and above have builtin support, specialized for architecture.
  76:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Some compilers masquerade as gcc; patchlevel test filters them out.
  77:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  78:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) \
  79:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	&& defined (__GNUC_PATCHLEVEL__)
  80:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  81:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__SNC__)
  82:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SNC for Playstation 3. */
  83:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  84:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  85:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  86:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
  87:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __builtin_clz(reverse);
  88:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
ARM GAS  /tmp/ccGOfVui.s 			page 3


  89:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  90:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  91:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  92:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  93:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  97:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  98:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  99:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 100:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 105:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 106:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && (_MSC_VER >= 1400) && (defined (_M_IX86) || defined (_M_X64))
 107:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on x86/X64 architectures. */
 108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 109:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <intrin.h>
 110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 111:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanReverse)
 112:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanForward)
 113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 114:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 115:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 117:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanReverse(&index, word) ? index : -1;
 118:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 119:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 120:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 121:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanForward(&index, word) ? index : -1;
 124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 126:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && defined (_M_PPC)
 127:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on PowerPC architectures. */
 128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 129:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppcintrinsics.h>
 130:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 131:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 132:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 133:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(word);
 134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 137:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(reverse);
 141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 142:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 143:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 144:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ARMCC_VERSION)
 145:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* RealView Compilation Tools for ARM */
ARM GAS  /tmp/ccGOfVui.s 			page 4


 146:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 147:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 148:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __clz(reverse);
 151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 152:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 154:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 155:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __clz(word) : 0;
 157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 158:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 160:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ghs__)
 161:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Green Hills support for PowerPC */
 162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 163:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppc_ghs.h>
 164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 165:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 166:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __CLZ32(reverse);
 169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 170:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 172:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 173:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __CLZ32(word) : 0;
 175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 176:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 178:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 179:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Fall back to generic implementation. */
 180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 181:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Implement ffs in terms of fls. */
 182:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 183:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(reverse) - 1;
 186:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 188:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 189:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(word) - 1;
 191:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 193:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 195:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Possibly 64-bit version of tlsf_fls. */
 196:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 197:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls_sizet(size_t size)
 198:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int high = (int)(size >> 32);
 200:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int bits = 0;
 201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (high)
 202:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  /tmp/ccGOfVui.s 			page 5


 203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = 32 + tlsf_fls(high);
 204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = tlsf_fls((int)size & 0xffffffff);
 208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bits;
 211:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 212:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 213:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_fls_sizet tlsf_fls
 214:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 215:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 216:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_decl
 217:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 218:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Constants.
 220:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 221:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 222:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Public constants: may be modified. */
 223:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_public
 224:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 225:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* log2 of number of linear subdivisions of block sizes. Larger
 226:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** values require more memory in the control structure. Values of
 227:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** 4 or 5 are typical.
 228:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 229:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT_LOG2 = 5,
 230:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 231:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 232:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Private constants: do not modify. */
 233:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_private
 234:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 235:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 8 bytes. */
 237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 3,
 238:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 4 bytes. */
 240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 2,
 241:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),
 243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We support allocations of sizes up to (1 << FL_INDEX_MAX) bits.
 246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** However, because we linearly subdivide the second-level lists, and
 247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our minimum size granularity is 4 bytes, it doesn't make sense to
 248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** create first-level lists for sizes smaller than SL_INDEX_COUNT * 4,
 249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** or (1 << (SL_INDEX_COUNT_LOG2 + 2)) bytes, as there we will be
 250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trying to split size ranges into more slots than we have available.
 251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Instead, we calculate the minimum threshold size, and place all
 252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** blocks below that size into the 0th first-level list.
 253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 255:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_MAX_POOL_SIZE)
 256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),
 257:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (TLSF_64BIT)
 258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** TODO: We can increase this to support larger sizes, at the expense
ARM GAS  /tmp/ccGOfVui.s 			page 6


 260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** of more overhead in the TLSF structure.
 261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 32,
 263:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 30,
 265:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),
 267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),
 268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),
 269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),
 271:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 273:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 274:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Cast and min/max macros.
 275:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 277:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_cast(t, exp)	((t) (exp))
 278:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_min(a, b)		((a) < (b) ? (a) : (b))
 279:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_max(a, b)		((a) > (b) ? (a) : (b))
 280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 281:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 282:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Set assert macro, if it has not been provided by the user.
 283:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 284:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert LV_ASSERT
 285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 286:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined (tlsf_assert)
 287:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert assert
 288:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 289:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 290:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 291:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Static assertion mechanism.
 292:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 293:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 294:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue2(x, y) x ## y
 295:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue(x, y) _tlsf_glue2(x, y)
 296:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_static_assert(exp) \
 297:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	typedef char _tlsf_glue(static_assert, __LINE__) [(exp) ? 1 : -1]
 298:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 299:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This code has been tested on 32- and 64-bit (LP/LLP) architectures. */
 300:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(int) * CHAR_BIT == 32);
 301:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT >= 32);
 302:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT <= 64);
 303:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 304:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SL_INDEX_COUNT must be <= number of bits in sl_bitmap's storage type. */
 305:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);
 306:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 307:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Ensure we've properly tuned our sizes. */
 308:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(ALIGN_SIZE == SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 309:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 310:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 311:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Data structures and associated constants.
 312:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 313:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 314:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 315:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Block header structure.
 316:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
ARM GAS  /tmp/ccGOfVui.s 			page 7


 317:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** There are several implementation subtleties involved:
 318:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is only valid if the previous block is free.
 319:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is actually stored at the end of the
 320:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   previous block. It appears at the beginning of this structure only to
 321:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   simplify the implementation.
 322:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The next_free / prev_free fields are only valid if the block is free.
 323:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 324:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct block_header_t
 325:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 326:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Points to the previous physical block. */
 327:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_phys_block;
 328:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 329:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* The size of this block, excluding the block header. */
 330:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size;
 331:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 332:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Next and previous free blocks. */
 333:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* next_free;
 334:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_free;
 335:Middlewares/lvgl/src/misc/lv_tlsf.c **** } block_header_t;
 336:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 337:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 338:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Since block sizes are always at least a multiple of 4, the two least
 339:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** significant bits of the size field are used to store the block status:
 340:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 0: whether block is busy or free
 341:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 1: whether previous block is busy or free
 342:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 343:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_free_bit = 1 << 0;
 344:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_prev_free_bit = 1 << 1;
 345:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 346:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 347:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The size of the block header exposed to used blocks is the size field.
 348:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The prev_phys_block field is stored *inside* the previous free block.
 349:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 350:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_overhead = sizeof(size_t);
 351:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 352:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* User data starts directly after the size field in a used block. */
 353:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_start_offset =
 354:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	offsetof(block_header_t, size) + sizeof(size_t);
 355:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 356:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 357:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** A free block must be large enough to store its header minus the size of
 358:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the prev_phys_block field, and no larger than the number of addressable
 359:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** bits for FL_INDEX.
 360:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 361:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_min = 
 362:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sizeof(block_header_t) - sizeof(block_header_t*);
 363:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;
 364:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 365:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 366:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* The TLSF control structure. */
 367:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct control_t
 368:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 369:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Empty lists point at this block to indicate they are free. */
 370:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t block_null;
 371:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 372:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Bitmaps for free lists. */
 373:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int fl_bitmap;
ARM GAS  /tmp/ccGOfVui.s 			page 8


 374:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_bitmap[FL_INDEX_COUNT];
 375:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 376:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Head of free lists. */
 377:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];
 378:Middlewares/lvgl/src/misc/lv_tlsf.c **** } control_t;
 379:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 380:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* A type used for casting when doing pointer arithmetic. */
 381:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef ptrdiff_t tlsfptr_t;
 382:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 383:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 384:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** block_header_t member functions.
 385:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 386:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 387:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t block_size(const block_header_t* block)
 388:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  28              		.loc 1 388 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 389:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->size & ~(block_header_free_bit | block_header_prev_free_bit);
  33              		.loc 1 389 2 view .LVU1
  34              		.loc 1 389 14 is_stmt 0 view .LVU2
  35 0000 4068     		ldr	r0, [r0, #4]
  36              	.LVL1:
 390:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  37              		.loc 1 390 1 view .LVU3
  38 0002 20F00300 		bic	r0, r0, #3
  39 0006 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE3:
  43              		.section	.text.block_set_size,"ax",%progbits
  44              		.align	1
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	block_set_size:
  51              	.LVL2:
  52              	.LFB4:
 391:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 392:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_size(block_header_t* block, size_t size)
 393:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  53              		.loc 1 393 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 394:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t oldsize = block->size;
  58              		.loc 1 394 2 view .LVU5
  59              		.loc 1 394 15 is_stmt 0 view .LVU6
  60 0000 4368     		ldr	r3, [r0, #4]
  61              	.LVL3:
 395:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size = size | (oldsize & (block_header_free_bit | block_header_prev_free_bit));
  62              		.loc 1 395 2 is_stmt 1 view .LVU7
  63              		.loc 1 395 32 is_stmt 0 view .LVU8
  64 0002 03F00303 		and	r3, r3, #3
ARM GAS  /tmp/ccGOfVui.s 			page 9


  65              	.LVL4:
  66              		.loc 1 395 21 view .LVU9
  67 0006 0B43     		orrs	r3, r3, r1
  68              		.loc 1 395 14 view .LVU10
  69 0008 4360     		str	r3, [r0, #4]
  70              	.LVL5:
 396:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  71              		.loc 1 396 1 view .LVU11
  72 000a 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE4:
  76              		.section	.text.block_is_last,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv5-d16
  83              	block_is_last:
  84              	.LVL6:
  85              	.LFB5:
 397:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 398:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_last(const block_header_t* block)
 399:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  86              		.loc 1 399 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		.loc 1 399 1 is_stmt 0 view .LVU13
  91 0000 08B5     		push	{r3, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
 400:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) == 0;
  96              		.loc 1 400 2 is_stmt 1 view .LVU14
  97              		.loc 1 400 9 is_stmt 0 view .LVU15
  98 0002 FFF7FEFF 		bl	block_size
  99              	.LVL7:
 401:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 100              		.loc 1 401 1 view .LVU16
 101 0006 B0FA80F0 		clz	r0, r0
 102 000a 4009     		lsrs	r0, r0, #5
 103 000c 08BD     		pop	{r3, pc}
 104              		.cfi_endproc
 105              	.LFE5:
 107              		.section	.text.block_is_free,"ax",%progbits
 108              		.align	1
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv5-d16
 114              	block_is_free:
 115              	.LVL8:
 116              	.LFB6:
 402:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 403:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_free(const block_header_t* block)
 404:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccGOfVui.s 			page 10


 117              		.loc 1 404 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 405:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_free_bit);
 122              		.loc 1 405 2 view .LVU18
 123              		.loc 1 405 9 is_stmt 0 view .LVU19
 124 0000 4068     		ldr	r0, [r0, #4]
 125              	.LVL9:
 406:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 126              		.loc 1 406 1 view .LVU20
 127 0002 00F00100 		and	r0, r0, #1
 128 0006 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE6:
 132              		.section	.text.block_set_free,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv5-d16
 139              	block_set_free:
 140              	.LVL10:
 141              	.LFB7:
 407:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 408:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_free(block_header_t* block)
 409:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 142              		.loc 1 409 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 410:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_free_bit;
 147              		.loc 1 410 2 view .LVU22
 148              		.loc 1 410 14 is_stmt 0 view .LVU23
 149 0000 4368     		ldr	r3, [r0, #4]
 150 0002 43F00103 		orr	r3, r3, #1
 151 0006 4360     		str	r3, [r0, #4]
 411:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 152              		.loc 1 411 1 view .LVU24
 153 0008 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE7:
 157              		.section	.text.block_set_used,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv5-d16
 164              	block_set_used:
 165              	.LVL11:
 166              	.LFB8:
 412:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 413:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_used(block_header_t* block)
 414:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 167              		.loc 1 414 1 is_stmt 1 view -0
ARM GAS  /tmp/ccGOfVui.s 			page 11


 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 415:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_free_bit;
 172              		.loc 1 415 2 view .LVU26
 173              		.loc 1 415 14 is_stmt 0 view .LVU27
 174 0000 4368     		ldr	r3, [r0, #4]
 175 0002 23F00103 		bic	r3, r3, #1
 176 0006 4360     		str	r3, [r0, #4]
 416:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 177              		.loc 1 416 1 view .LVU28
 178 0008 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE8:
 182              		.section	.text.block_is_prev_free,"ax",%progbits
 183              		.align	1
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-d16
 189              	block_is_prev_free:
 190              	.LVL12:
 191              	.LFB9:
 417:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 418:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_prev_free(const block_header_t* block)
 419:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 192              		.loc 1 419 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 420:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_prev_free_bit);
 197              		.loc 1 420 2 view .LVU30
 198              		.loc 1 420 9 is_stmt 0 view .LVU31
 199 0000 4068     		ldr	r0, [r0, #4]
 200              	.LVL13:
 421:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 201              		.loc 1 421 1 view .LVU32
 202 0002 00F00200 		and	r0, r0, #2
 203 0006 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE9:
 207              		.section	.text.block_set_prev_free,"ax",%progbits
 208              		.align	1
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv5-d16
 214              	block_set_prev_free:
 215              	.LVL14:
 216              	.LFB10:
 422:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 423:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_free(block_header_t* block)
 424:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 217              		.loc 1 424 1 is_stmt 1 view -0
 218              		.cfi_startproc
ARM GAS  /tmp/ccGOfVui.s 			page 12


 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 425:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_prev_free_bit;
 222              		.loc 1 425 2 view .LVU34
 223              		.loc 1 425 14 is_stmt 0 view .LVU35
 224 0000 4368     		ldr	r3, [r0, #4]
 225 0002 43F00203 		orr	r3, r3, #2
 226 0006 4360     		str	r3, [r0, #4]
 426:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 227              		.loc 1 426 1 view .LVU36
 228 0008 7047     		bx	lr
 229              		.cfi_endproc
 230              	.LFE10:
 232              		.section	.text.block_set_prev_used,"ax",%progbits
 233              		.align	1
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv5-d16
 239              	block_set_prev_used:
 240              	.LVL15:
 241              	.LFB11:
 427:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 428:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_used(block_header_t* block)
 429:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 242              		.loc 1 429 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 430:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_prev_free_bit;
 247              		.loc 1 430 2 view .LVU38
 248              		.loc 1 430 14 is_stmt 0 view .LVU39
 249 0000 4368     		ldr	r3, [r0, #4]
 250 0002 23F00203 		bic	r3, r3, #2
 251 0006 4360     		str	r3, [r0, #4]
 431:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 252              		.loc 1 431 1 view .LVU40
 253 0008 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE11:
 257              		.section	.text.block_from_ptr,"ax",%progbits
 258              		.align	1
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv5-d16
 264              	block_from_ptr:
 265              	.LVL16:
 266              	.LFB12:
 432:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 433:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_from_ptr(const void* ptr)
 434:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 267              		.loc 1 434 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccGOfVui.s 			page 13


 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 435:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*,
 272              		.loc 1 435 2 view .LVU42
 436:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, ptr) - block_start_offset);
 437:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 273              		.loc 1 437 1 is_stmt 0 view .LVU43
 274 0000 0838     		subs	r0, r0, #8
 275              	.LVL17:
 276              		.loc 1 437 1 view .LVU44
 277 0002 7047     		bx	lr
 278              		.cfi_endproc
 279              	.LFE12:
 281              		.section	.text.block_to_ptr,"ax",%progbits
 282              		.align	1
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv5-d16
 288              	block_to_ptr:
 289              	.LVL18:
 290              	.LFB13:
 438:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 439:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_to_ptr(const block_header_t* block)
 440:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 291              		.loc 1 440 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 441:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*,
 296              		.loc 1 441 2 view .LVU46
 442:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, block) + block_start_offset);
 443:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 297              		.loc 1 443 1 is_stmt 0 view .LVU47
 298 0000 0830     		adds	r0, r0, #8
 299              	.LVL19:
 300              		.loc 1 443 1 view .LVU48
 301 0002 7047     		bx	lr
 302              		.cfi_endproc
 303              	.LFE13:
 305              		.section	.text.offset_to_block,"ax",%progbits
 306              		.align	1
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	offset_to_block:
 313              	.LVL20:
 314              	.LFB14:
 444:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 445:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next block after block of given size. */
 446:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* offset_to_block(const void* ptr, size_t size)
 447:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 315              		.loc 1 447 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccGOfVui.s 			page 14


 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 448:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*, tlsf_cast(tlsfptr_t, ptr) + size);
 320              		.loc 1 448 2 view .LVU50
 449:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 321              		.loc 1 449 1 is_stmt 0 view .LVU51
 322 0000 0844     		add	r0, r0, r1
 323              	.LVL21:
 324              		.loc 1 449 1 view .LVU52
 325 0002 7047     		bx	lr
 326              		.cfi_endproc
 327              	.LFE14:
 329              		.section	.text.block_prev,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv5-d16
 336              	block_prev:
 337              	.LVL22:
 338              	.LFB15:
 450:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 451:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of previous block. */
 452:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_prev(const block_header_t* block)
 453:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 339              		.loc 1 453 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		.loc 1 453 1 is_stmt 0 view .LVU54
 344 0000 10B5     		push	{r4, lr}
 345              	.LCFI1:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 349 0002 0446     		mov	r4, r0
 454:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 350              		.loc 1 454 2 is_stmt 1 view .LVU55
 351              		.loc 1 454 2 view .LVU56
 352 0004 FFF7FEFF 		bl	block_is_prev_free
 353              	.LVL23:
 354              		.loc 1 454 2 is_stmt 0 view .LVU57
 355 0008 00B9     		cbnz	r0, .L15
 356              	.L16:
 357              		.loc 1 454 2 is_stmt 1 discriminator 1 view .LVU58
 358              		.loc 1 454 2 discriminator 1 view .LVU59
 359              		.loc 1 454 2 discriminator 1 view .LVU60
 360              		.loc 1 454 2 discriminator 1 view .LVU61
 361 000a FEE7     		b	.L16
 362              	.L15:
 363              		.loc 1 454 2 discriminator 4 view .LVU62
 455:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 364              		.loc 1 455 2 discriminator 4 view .LVU63
 456:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 365              		.loc 1 456 1 is_stmt 0 discriminator 4 view .LVU64
 366 000c 2068     		ldr	r0, [r4]
 367 000e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccGOfVui.s 			page 15


 368              		.loc 1 456 1 discriminator 4 view .LVU65
 369              		.cfi_endproc
 370              	.LFE15:
 372              		.section	.text.block_next,"ax",%progbits
 373              		.align	1
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv5-d16
 379              	block_next:
 380              	.LVL24:
 381              	.LFB16:
 457:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 458:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next existing block. */
 459:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_next(const block_header_t* block)
 460:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 382              		.loc 1 460 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		.loc 1 460 1 is_stmt 0 view .LVU67
 387 0000 38B5     		push	{r3, r4, r5, lr}
 388              	.LCFI2:
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 3, -16
 391              		.cfi_offset 4, -12
 392              		.cfi_offset 5, -8
 393              		.cfi_offset 14, -4
 394 0002 0446     		mov	r4, r0
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 395              		.loc 1 461 2 is_stmt 1 view .LVU68
 396              		.loc 1 461 41 is_stmt 0 view .LVU69
 397 0004 FFF7FEFF 		bl	block_to_ptr
 398              	.LVL25:
 399              		.loc 1 461 41 view .LVU70
 400 0008 0546     		mov	r5, r0
 462:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 401              		.loc 1 462 3 view .LVU71
 402 000a 2046     		mov	r0, r4
 403 000c FFF7FEFF 		bl	block_size
 404              	.LVL26:
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 405              		.loc 1 461 25 view .LVU72
 406 0010 011F     		subs	r1, r0, #4
 407 0012 2846     		mov	r0, r5
 408 0014 FFF7FEFF 		bl	offset_to_block
 409              	.LVL27:
 410 0018 0546     		mov	r5, r0
 411              	.LVL28:
 463:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(block));
 412              		.loc 1 463 2 is_stmt 1 view .LVU73
 413              		.loc 1 463 2 view .LVU74
 414 001a 2046     		mov	r0, r4
 415              	.LVL29:
 416              		.loc 1 463 2 is_stmt 0 view .LVU75
 417 001c FFF7FEFF 		bl	block_is_last
 418              	.LVL30:
ARM GAS  /tmp/ccGOfVui.s 			page 16


 419 0020 00B1     		cbz	r0, .L18
 420              	.L20:
 421              		.loc 1 463 2 is_stmt 1 discriminator 1 view .LVU76
 422              		.loc 1 463 2 discriminator 1 view .LVU77
 423              		.loc 1 463 2 discriminator 1 view .LVU78
 424              		.loc 1 463 2 discriminator 1 view .LVU79
 425 0022 FEE7     		b	.L20
 426              	.L18:
 464:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 465:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 427              		.loc 1 465 1 is_stmt 0 view .LVU80
 428 0024 2846     		mov	r0, r5
 429 0026 38BD     		pop	{r3, r4, r5, pc}
 430              		.loc 1 465 1 view .LVU81
 431              		.cfi_endproc
 432              	.LFE16:
 434              		.section	.text.block_link_next,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv5-d16
 441              	block_link_next:
 442              	.LVL31:
 443              	.LFB17:
 466:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 467:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 468:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_link_next(block_header_t* block)
 469:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 444              		.loc 1 469 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		.loc 1 469 1 is_stmt 0 view .LVU83
 449 0000 10B5     		push	{r4, lr}
 450              	.LCFI3:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 4, -8
 453              		.cfi_offset 14, -4
 454 0002 0446     		mov	r4, r0
 470:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 455              		.loc 1 470 2 is_stmt 1 view .LVU84
 456              		.loc 1 470 25 is_stmt 0 view .LVU85
 457 0004 FFF7FEFF 		bl	block_next
 458              	.LVL32:
 471:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 459              		.loc 1 471 2 is_stmt 1 view .LVU86
 460              		.loc 1 471 24 is_stmt 0 view .LVU87
 461 0008 0460     		str	r4, [r0]
 472:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 462              		.loc 1 472 2 is_stmt 1 view .LVU88
 473:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 463              		.loc 1 473 1 is_stmt 0 view .LVU89
 464 000a 10BD     		pop	{r4, pc}
 465              		.loc 1 473 1 view .LVU90
 466              		.cfi_endproc
 467              	.LFE17:
ARM GAS  /tmp/ccGOfVui.s 			page 17


 469              		.section	.text.block_mark_as_free,"ax",%progbits
 470              		.align	1
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv5-d16
 476              	block_mark_as_free:
 477              	.LVL33:
 478              	.LFB18:
 474:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 475:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_free(block_header_t* block)
 476:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 479              		.loc 1 476 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		.loc 1 476 1 is_stmt 0 view .LVU92
 484 0000 10B5     		push	{r4, lr}
 485              	.LCFI4:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 4, -8
 488              		.cfi_offset 14, -4
 489 0002 0446     		mov	r4, r0
 477:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 478:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_link_next(block);
 490              		.loc 1 478 2 is_stmt 1 view .LVU93
 491              		.loc 1 478 25 is_stmt 0 view .LVU94
 492 0004 FFF7FEFF 		bl	block_link_next
 493              	.LVL34:
 479:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 494              		.loc 1 479 2 is_stmt 1 view .LVU95
 495 0008 FFF7FEFF 		bl	block_set_prev_free
 496              	.LVL35:
 480:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 497              		.loc 1 480 2 view .LVU96
 498 000c 2046     		mov	r0, r4
 499 000e FFF7FEFF 		bl	block_set_free
 500              	.LVL36:
 481:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 501              		.loc 1 481 1 is_stmt 0 view .LVU97
 502 0012 10BD     		pop	{r4, pc}
 503              		.loc 1 481 1 view .LVU98
 504              		.cfi_endproc
 505              	.LFE18:
 507              		.section	.text.block_mark_as_used,"ax",%progbits
 508              		.align	1
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv5-d16
 514              	block_mark_as_used:
 515              	.LVL37:
 516              	.LFB19:
 482:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 483:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_used(block_header_t* block)
 484:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 517              		.loc 1 484 1 is_stmt 1 view -0
ARM GAS  /tmp/ccGOfVui.s 			page 18


 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		.loc 1 484 1 is_stmt 0 view .LVU100
 522 0000 10B5     		push	{r4, lr}
 523              	.LCFI5:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 14, -4
 527 0002 0446     		mov	r4, r0
 485:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 528              		.loc 1 485 2 is_stmt 1 view .LVU101
 529              		.loc 1 485 25 is_stmt 0 view .LVU102
 530 0004 FFF7FEFF 		bl	block_next
 531              	.LVL38:
 486:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
 532              		.loc 1 486 2 is_stmt 1 view .LVU103
 533 0008 FFF7FEFF 		bl	block_set_prev_used
 534              	.LVL39:
 487:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(block);
 535              		.loc 1 487 2 view .LVU104
 536 000c 2046     		mov	r0, r4
 537 000e FFF7FEFF 		bl	block_set_used
 538              	.LVL40:
 488:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 539              		.loc 1 488 1 is_stmt 0 view .LVU105
 540 0012 10BD     		pop	{r4, pc}
 541              		.loc 1 488 1 view .LVU106
 542              		.cfi_endproc
 543              	.LFE19:
 545              		.section	.text.align_up,"ax",%progbits
 546              		.align	1
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 550              		.fpu fpv5-d16
 552              	align_up:
 553              	.LVL41:
 554              	.LFB20:
 489:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 490:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_up(size_t x, size_t align)
 491:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 555              		.loc 1 491 1 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 492:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 560              		.loc 1 492 2 view .LVU108
 561              		.loc 1 492 2 view .LVU109
 562 0000 4B1E     		subs	r3, r1, #1
 563 0002 0B42     		tst	r3, r1
 564 0004 00D0     		beq	.L29
 565              	.L30:
 566              		.loc 1 492 2 discriminator 1 view .LVU110
 567              		.loc 1 492 2 discriminator 1 view .LVU111
 568              		.loc 1 492 2 discriminator 1 view .LVU112
ARM GAS  /tmp/ccGOfVui.s 			page 19


 569              		.loc 1 492 2 discriminator 1 view .LVU113
 570 0006 FEE7     		b	.L30
 571              	.L29:
 572              		.loc 1 492 2 discriminator 2 view .LVU114
 493:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 573              		.loc 1 493 2 discriminator 2 view .LVU115
 574              		.loc 1 493 12 is_stmt 0 discriminator 2 view .LVU116
 575 0008 0844     		add	r0, r0, r1
 576              	.LVL42:
 577              		.loc 1 493 12 discriminator 2 view .LVU117
 578 000a 0138     		subs	r0, r0, #1
 579              		.loc 1 493 29 discriminator 2 view .LVU118
 580 000c 4942     		rsbs	r1, r1, #0
 581              	.LVL43:
 494:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 582              		.loc 1 494 1 discriminator 2 view .LVU119
 583 000e 0840     		ands	r0, r0, r1
 584 0010 7047     		bx	lr
 585              		.cfi_endproc
 586              	.LFE20:
 588              		.section	.text.align_down,"ax",%progbits
 589              		.align	1
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv5-d16
 595              	align_down:
 596              	.LVL44:
 597              	.LFB21:
 495:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 496:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_down(size_t x, size_t align)
 497:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 598              		.loc 1 497 1 is_stmt 1 view -0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 498:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 603              		.loc 1 498 2 view .LVU121
 604              		.loc 1 498 2 view .LVU122
 605 0000 4B1E     		subs	r3, r1, #1
 606 0002 0B42     		tst	r3, r1
 607 0004 00D0     		beq	.L32
 608              	.L33:
 609              		.loc 1 498 2 discriminator 1 view .LVU123
 610              		.loc 1 498 2 discriminator 1 view .LVU124
 611              		.loc 1 498 2 discriminator 1 view .LVU125
 612              		.loc 1 498 2 discriminator 1 view .LVU126
 613 0006 FEE7     		b	.L33
 614              	.L32:
 615              		.loc 1 498 2 discriminator 2 view .LVU127
 499:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 616              		.loc 1 499 2 discriminator 2 view .LVU128
 617              		.loc 1 499 11 is_stmt 0 discriminator 2 view .LVU129
 618 0008 4942     		rsbs	r1, r1, #0
 619              	.LVL45:
 500:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
ARM GAS  /tmp/ccGOfVui.s 			page 20


 620              		.loc 1 500 1 discriminator 2 view .LVU130
 621 000a 0840     		ands	r0, r0, r1
 622              	.LVL46:
 623              		.loc 1 500 1 discriminator 2 view .LVU131
 624 000c 7047     		bx	lr
 625              		.cfi_endproc
 626              	.LFE21:
 628              		.section	.text.align_ptr,"ax",%progbits
 629              		.align	1
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu fpv5-d16
 635              	align_ptr:
 636              	.LVL47:
 637              	.LFB22:
 501:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 502:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* align_ptr(const void* ptr, size_t align)
 503:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 638              		.loc 1 503 1 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 504:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 643              		.loc 1 504 2 view .LVU133
 505:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		(tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 644              		.loc 1 505 30 is_stmt 0 view .LVU134
 645 0000 0844     		add	r0, r0, r1
 646              	.LVL48:
 647              		.loc 1 505 30 view .LVU135
 648 0002 0138     		subs	r0, r0, #1
 649              		.loc 1 505 47 view .LVU136
 650 0004 4B42     		rsbs	r3, r1, #0
 651              		.loc 1 505 45 view .LVU137
 652 0006 1840     		ands	r0, r0, r3
 653              	.LVL49:
 506:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 654              		.loc 1 506 2 is_stmt 1 view .LVU138
 655              		.loc 1 506 2 view .LVU139
 656 0008 4B1E     		subs	r3, r1, #1
 657 000a 0B42     		tst	r3, r1
 658 000c 00D0     		beq	.L35
 659              	.L36:
 660              		.loc 1 506 2 discriminator 1 view .LVU140
 661              		.loc 1 506 2 discriminator 1 view .LVU141
 662              		.loc 1 506 2 discriminator 1 view .LVU142
 663              		.loc 1 506 2 discriminator 1 view .LVU143
 664 000e FEE7     		b	.L36
 665              	.L35:
 666              		.loc 1 506 2 discriminator 2 view .LVU144
 507:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 667              		.loc 1 507 2 discriminator 2 view .LVU145
 508:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 668              		.loc 1 508 1 is_stmt 0 discriminator 2 view .LVU146
 669 0010 7047     		bx	lr
 670              		.cfi_endproc
ARM GAS  /tmp/ccGOfVui.s 			page 21


 671              	.LFE22:
 673              		.section	.text.adjust_request_size,"ax",%progbits
 674              		.align	1
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu fpv5-d16
 680              	adjust_request_size:
 681              	.LVL50:
 682              	.LFB23:
 509:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 510:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 511:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 512:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** than internal minimum.
 513:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 514:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t adjust_request_size(size_t size, size_t align)
 515:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 683              		.loc 1 515 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		.loc 1 515 1 is_stmt 0 view .LVU148
 688 0000 08B5     		push	{r3, lr}
 689              	.LCFI6:
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 3, -8
 692              		.cfi_offset 14, -4
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 693              		.loc 1 516 2 is_stmt 1 view .LVU149
 694              	.LVL51:
 517:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 695              		.loc 1 517 2 view .LVU150
 696              		.loc 1 517 5 is_stmt 0 view .LVU151
 697 0002 00B9     		cbnz	r0, .L41
 698              	.LVL52:
 699              	.L38:
 518:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t aligned = align_up(size, align);
 520:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 521:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (aligned < block_size_max) 
 523:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			adjust = tlsf_max(aligned, block_size_min);
 525:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 526:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 527:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return adjust;
 700              		.loc 1 527 2 is_stmt 1 view .LVU152
 528:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 701              		.loc 1 528 1 is_stmt 0 view .LVU153
 702 0004 08BD     		pop	{r3, pc}
 703              	.LVL53:
 704              	.L41:
 705              	.LBB2:
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 706              		.loc 1 519 3 is_stmt 1 view .LVU154
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 707              		.loc 1 519 26 is_stmt 0 view .LVU155
ARM GAS  /tmp/ccGOfVui.s 			page 22


 708 0006 FFF7FEFF 		bl	align_up
 709              	.LVL54:
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 710              		.loc 1 522 3 is_stmt 1 view .LVU156
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 711              		.loc 1 522 6 is_stmt 0 view .LVU157
 712 000a B0F5004F 		cmp	r0, #32768
 713 000e 03D2     		bcs	.L39
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 714              		.loc 1 524 4 is_stmt 1 view .LVU158
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 715              		.loc 1 524 11 is_stmt 0 view .LVU159
 716 0010 0C28     		cmp	r0, #12
 717 0012 38BF     		it	cc
 718 0014 0C20     		movcc	r0, #12
 719              	.LVL55:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 720              		.loc 1 524 11 view .LVU160
 721 0016 F5E7     		b	.L38
 722              	.LVL56:
 723              	.L39:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 724              		.loc 1 524 11 view .LVU161
 725              	.LBE2:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 726              		.loc 1 516 9 view .LVU162
 727 0018 0020     		movs	r0, #0
 728              	.LVL57:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 729              		.loc 1 516 9 view .LVU163
 730 001a F3E7     		b	.L38
 731              		.cfi_endproc
 732              	.LFE23:
 734              		.section	.text.remove_free_block,"ax",%progbits
 735              		.align	1
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv5-d16
 741              	remove_free_block:
 742              	.LVL58:
 743              	.LFB27:
 529:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 530:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 531:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF utility functions. In most cases, these are direct translations of
 532:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the documentation found in the white paper.
 533:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 534:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 535:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_insert(size_t size, int* fli, int* sli)
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 539:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 540:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* Store small blocks in first list. */
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = 0;
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 543:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
ARM GAS  /tmp/ccGOfVui.s 			page 23


 544:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 545:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_fls_sizet(size);
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 549:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*fli = fl;
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 553:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 554:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This version rounds up to the next block size (for allocations) */
 555:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_search(size_t size, int* fli, int* sli)
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 558:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 561:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(size, fli, sli);
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 564:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 565:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* search_suitable_block(control_t* control, int* fli, int* sli)
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 569:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 570:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 571:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** First, search for a block in the list associated with the given
 572:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** fl/sl index.
 573:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_map = control->sl_bitmap[fl] & (~0U << sl);
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 576:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 577:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* No block exists. Search in the next largest first-level list. */
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const unsigned int fl_map = control->fl_bitmap & (~0U << (fl + 1));
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 580:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 581:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* No free blocks available, memory has been exhausted. */
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			return 0;
 583:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 584:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_ffs(fl_map);
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 588:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sl_map && "internal error - second level bitmap is null");
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 592:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 593:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Return the first block in the free list. */
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return control->blocks[fl][sl];
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 596:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 597:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a free block from the free list.*/
 598:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void remove_free_block(control_t* control, block_header_t* block, int fl, int sl)
 599:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 744              		.loc 1 599 1 is_stmt 1 view -0
ARM GAS  /tmp/ccGOfVui.s 			page 24


 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		.loc 1 599 1 is_stmt 0 view .LVU165
 749 0000 00B5     		push	{lr}
 750              	.LCFI7:
 751              		.cfi_def_cfa_offset 4
 752              		.cfi_offset 14, -4
 753 0002 8646     		mov	lr, r0
 754 0004 9446     		mov	ip, r2
 600:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 755              		.loc 1 600 2 is_stmt 1 view .LVU166
 756              		.loc 1 600 18 is_stmt 0 view .LVU167
 757 0006 CA68     		ldr	r2, [r1, #12]
 758              	.LVL59:
 601:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 759              		.loc 1 601 2 is_stmt 1 view .LVU168
 760              		.loc 1 601 18 is_stmt 0 view .LVU169
 761 0008 8868     		ldr	r0, [r1, #8]
 762              	.LVL60:
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
 763              		.loc 1 602 2 is_stmt 1 view .LVU170
 764              		.loc 1 602 2 view .LVU171
 765 000a 5AB1     		cbz	r2, .L44
 766              		.loc 1 602 2 discriminator 2 view .LVU172
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 767              		.loc 1 603 2 discriminator 2 view .LVU173
 768              		.loc 1 603 2 discriminator 2 view .LVU174
 769 000c 58B1     		cbz	r0, .L46
 770              		.loc 1 603 2 discriminator 2 view .LVU175
 604:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 771              		.loc 1 604 2 discriminator 2 view .LVU176
 772              		.loc 1 604 18 is_stmt 0 discriminator 2 view .LVU177
 773 000e C260     		str	r2, [r0, #12]
 605:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 774              		.loc 1 605 2 is_stmt 1 discriminator 2 view .LVU178
 775              		.loc 1 605 18 is_stmt 0 discriminator 2 view .LVU179
 776 0010 9060     		str	r0, [r2, #8]
 606:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 607:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* If this block is the head of the free list, set new head. */
 608:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (control->blocks[fl][sl] == block)
 777              		.loc 1 608 2 is_stmt 1 discriminator 2 view .LVU180
 778              		.loc 1 608 25 is_stmt 0 discriminator 2 view .LVU181
 779 0012 03EB4C12 		add	r2, r3, ip, lsl #5
 780              	.LVL61:
 781              		.loc 1 608 25 discriminator 2 view .LVU182
 782 0016 0E32     		adds	r2, r2, #14
 783 0018 5EF82220 		ldr	r2, [lr, r2, lsl #2]
 784              		.loc 1 608 5 discriminator 2 view .LVU183
 785 001c 8A42     		cmp	r2, r1
 786 001e 03D0     		beq	.L49
 787              	.LVL62:
 788              	.L42:
 609:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->blocks[fl][sl] = next;
 611:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 612:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the new head is null, clear the bitmap. */
ARM GAS  /tmp/ccGOfVui.s 			page 25


 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (next == &control->block_null)
 614:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->sl_bitmap[fl] &= ~(1U << sl);
 616:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 617:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* If the second bitmap is now empty, clear the fl bitmap. */
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!control->sl_bitmap[fl])
 619:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				control->fl_bitmap &= ~(1U << fl);
 621:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 622:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 623:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 624:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 789              		.loc 1 624 1 view .LVU184
 790 0020 5DF804FB 		ldr	pc, [sp], #4
 791              	.LVL63:
 792              	.L44:
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 793              		.loc 1 602 2 is_stmt 1 discriminator 1 view .LVU185
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 794              		.loc 1 602 2 discriminator 1 view .LVU186
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 795              		.loc 1 602 2 discriminator 1 view .LVU187
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 796              		.loc 1 602 2 discriminator 1 view .LVU188
 797 0024 FEE7     		b	.L44
 798              	.L46:
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 799              		.loc 1 603 2 discriminator 2 view .LVU189
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 800              		.loc 1 603 2 discriminator 2 view .LVU190
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 801              		.loc 1 603 2 discriminator 2 view .LVU191
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 802              		.loc 1 603 2 discriminator 2 view .LVU192
 803 0026 FEE7     		b	.L46
 804              	.LVL64:
 805              	.L49:
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 806              		.loc 1 610 3 view .LVU193
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 807              		.loc 1 610 27 is_stmt 0 view .LVU194
 808 0028 03EB4C12 		add	r2, r3, ip, lsl #5
 809 002c 0E32     		adds	r2, r2, #14
 810 002e 4EF82200 		str	r0, [lr, r2, lsl #2]
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 811              		.loc 1 613 3 is_stmt 1 view .LVU195
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 812              		.loc 1 613 6 is_stmt 0 view .LVU196
 813 0032 8645     		cmp	lr, r0
 814 0034 F4D1     		bne	.L42
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 815              		.loc 1 615 4 is_stmt 1 view .LVU197
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 816              		.loc 1 615 35 is_stmt 0 view .LVU198
 817 0036 0121     		movs	r1, #1
 818              	.LVL65:
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccGOfVui.s 			page 26


 819              		.loc 1 615 35 view .LVU199
 820 0038 9940     		lsls	r1, r1, r3
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 821              		.loc 1 615 27 view .LVU200
 822 003a 0CF10402 		add	r2, ip, #4
 823 003e 0EEB8202 		add	r2, lr, r2, lsl #2
 824 0042 5368     		ldr	r3, [r2, #4]
 825              	.LVL66:
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 826              		.loc 1 615 27 view .LVU201
 827 0044 23EA0103 		bic	r3, r3, r1
 828 0048 5360     		str	r3, [r2, #4]
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 829              		.loc 1 618 4 is_stmt 1 view .LVU202
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 830              		.loc 1 618 7 is_stmt 0 view .LVU203
 831 004a 002B     		cmp	r3, #0
 832 004c E8D1     		bne	.L42
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 833              		.loc 1 620 5 is_stmt 1 view .LVU204
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 834              		.loc 1 620 32 is_stmt 0 view .LVU205
 835 004e 0123     		movs	r3, #1
 836 0050 03FA0CF2 		lsl	r2, r3, ip
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 837              		.loc 1 620 24 view .LVU206
 838 0054 DEF81030 		ldr	r3, [lr, #16]
 839 0058 23EA0203 		bic	r3, r3, r2
 840 005c CEF81030 		str	r3, [lr, #16]
 841              		.loc 1 624 1 view .LVU207
 842 0060 DEE7     		b	.L42
 843              		.cfi_endproc
 844              	.LFE27:
 846              		.section	.text.insert_free_block,"ax",%progbits
 847              		.align	1
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv5-d16
 853              	insert_free_block:
 854              	.LVL67:
 855              	.LFB28:
 625:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 626:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a free block into the free block list. */
 627:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void insert_free_block(control_t* control, block_header_t* block, int fl, int sl)
 628:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 856              		.loc 1 628 1 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 860              		.loc 1 628 1 is_stmt 0 view .LVU209
 861 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 862              	.LCFI8:
 863              		.cfi_def_cfa_offset 24
 864              		.cfi_offset 4, -24
 865              		.cfi_offset 5, -20
 866              		.cfi_offset 6, -16
ARM GAS  /tmp/ccGOfVui.s 			page 27


 867              		.cfi_offset 7, -12
 868              		.cfi_offset 8, -8
 869              		.cfi_offset 14, -4
 870 0004 1F46     		mov	r7, r3
 629:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 871              		.loc 1 629 2 is_stmt 1 view .LVU210
 872              		.loc 1 629 18 is_stmt 0 view .LVU211
 873 0006 03EB4213 		add	r3, r3, r2, lsl #5
 874              	.LVL68:
 875              		.loc 1 629 18 view .LVU212
 876 000a 0E33     		adds	r3, r3, #14
 877 000c 50F82330 		ldr	r3, [r0, r3, lsl #2]
 878              	.LVL69:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 879              		.loc 1 630 2 is_stmt 1 view .LVU213
 880              		.loc 1 630 2 view .LVU214
 881 0010 83B1     		cbz	r3, .L52
 882 0012 0546     		mov	r5, r0
 883 0014 0C46     		mov	r4, r1
 884 0016 1646     		mov	r6, r2
 885              		.loc 1 630 2 discriminator 2 view .LVU215
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 886              		.loc 1 631 2 discriminator 2 view .LVU216
 887              		.loc 1 631 2 discriminator 2 view .LVU217
 888 0018 69B1     		cbz	r1, .L54
 889              		.loc 1 631 2 discriminator 2 view .LVU218
 632:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 890              		.loc 1 632 2 discriminator 2 view .LVU219
 891              		.loc 1 632 19 is_stmt 0 discriminator 2 view .LVU220
 892 001a 8B60     		str	r3, [r1, #8]
 633:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 893              		.loc 1 633 2 is_stmt 1 discriminator 2 view .LVU221
 894              		.loc 1 633 19 is_stmt 0 discriminator 2 view .LVU222
 895 001c C860     		str	r0, [r1, #12]
 634:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 896              		.loc 1 634 2 is_stmt 1 discriminator 2 view .LVU223
 897              		.loc 1 634 21 is_stmt 0 discriminator 2 view .LVU224
 898 001e D960     		str	r1, [r3, #12]
 635:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 636:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
 899              		.loc 1 636 2 is_stmt 1 discriminator 2 view .LVU225
 900              		.loc 1 636 2 discriminator 2 view .LVU226
 901 0020 0846     		mov	r0, r1
 902              	.LVL70:
 903              		.loc 1 636 2 is_stmt 0 discriminator 2 view .LVU227
 904 0022 FFF7FEFF 		bl	block_to_ptr
 905              	.LVL71:
 906              		.loc 1 636 2 discriminator 2 view .LVU228
 907 0026 8046     		mov	r8, r0
 908 0028 0421     		movs	r1, #4
 909 002a FFF7FEFF 		bl	align_ptr
 910              	.LVL72:
 911 002e 8045     		cmp	r8, r0
 912 0030 02D0     		beq	.L55
 913              	.L56:
 914              		.loc 1 636 2 is_stmt 1 discriminator 3 view .LVU229
 915              		.loc 1 636 2 discriminator 3 view .LVU230
ARM GAS  /tmp/ccGOfVui.s 			page 28


 916              		.loc 1 636 2 discriminator 3 view .LVU231
 917              		.loc 1 636 2 discriminator 3 view .LVU232
 918 0032 FEE7     		b	.L56
 919              	.LVL73:
 920              	.L52:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 921              		.loc 1 630 2 discriminator 1 view .LVU233
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 922              		.loc 1 630 2 discriminator 1 view .LVU234
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 923              		.loc 1 630 2 discriminator 1 view .LVU235
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 924              		.loc 1 630 2 discriminator 1 view .LVU236
 925 0034 FEE7     		b	.L52
 926              	.L54:
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 927              		.loc 1 631 2 discriminator 2 view .LVU237
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 928              		.loc 1 631 2 discriminator 2 view .LVU238
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 929              		.loc 1 631 2 discriminator 2 view .LVU239
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 930              		.loc 1 631 2 discriminator 2 view .LVU240
 931 0036 FEE7     		b	.L54
 932              	.LVL74:
 933              	.L55:
 934              		.loc 1 636 2 discriminator 2 view .LVU241
 637:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 638:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 639:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Insert the new block at the head of the list, and mark the first-
 640:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** and second-level bitmaps appropriately.
 641:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 642:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->blocks[fl][sl] = block;
 935              		.loc 1 642 2 discriminator 2 view .LVU242
 936              		.loc 1 642 26 is_stmt 0 discriminator 2 view .LVU243
 937 0038 07EB4613 		add	r3, r7, r6, lsl #5
 938 003c 0E33     		adds	r3, r3, #14
 939 003e 45F82340 		str	r4, [r5, r3, lsl #2]
 643:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 940              		.loc 1 643 2 is_stmt 1 discriminator 2 view .LVU244
 941              		.loc 1 643 28 is_stmt 0 discriminator 2 view .LVU245
 942 0042 0123     		movs	r3, #1
 943 0044 03FA06F1 		lsl	r1, r3, r6
 944              		.loc 1 643 21 discriminator 2 view .LVU246
 945 0048 2A69     		ldr	r2, [r5, #16]
 946 004a 0A43     		orrs	r2, r2, r1
 947 004c 2A61     		str	r2, [r5, #16]
 644:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 948              		.loc 1 644 2 is_stmt 1 discriminator 2 view .LVU247
 949              		.loc 1 644 32 is_stmt 0 discriminator 2 view .LVU248
 950 004e BB40     		lsls	r3, r3, r7
 951              		.loc 1 644 25 discriminator 2 view .LVU249
 952 0050 0436     		adds	r6, r6, #4
 953              	.LVL75:
 954              		.loc 1 644 25 discriminator 2 view .LVU250
 955 0052 05EB8605 		add	r5, r5, r6, lsl #2
 956              	.LVL76:
ARM GAS  /tmp/ccGOfVui.s 			page 29


 957              		.loc 1 644 25 discriminator 2 view .LVU251
 958 0056 6A68     		ldr	r2, [r5, #4]
 959 0058 1343     		orrs	r3, r3, r2
 960 005a 6B60     		str	r3, [r5, #4]
 645:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 961              		.loc 1 645 1 discriminator 2 view .LVU252
 962 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 963              		.loc 1 645 1 discriminator 2 view .LVU253
 964              		.cfi_endproc
 965              	.LFE28:
 967              		.section	.text.block_can_split,"ax",%progbits
 968              		.align	1
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv5-d16
 974              	block_can_split:
 975              	.LVL77:
 976              	.LFB31:
 646:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 647:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a given block from the free list. */
 648:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_remove(control_t* control, block_header_t* block)
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 654:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 655:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a given block into the free list. */
 656:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_insert(control_t* control, block_header_t* block)
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 662:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 663:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_can_split(block_header_t* block, size_t size)
 664:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 977              		.loc 1 664 1 is_stmt 1 view -0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		.loc 1 664 1 is_stmt 0 view .LVU255
 982 0000 10B5     		push	{r4, lr}
 983              	.LCFI9:
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 4, -8
 986              		.cfi_offset 14, -4
 987 0002 0C46     		mov	r4, r1
 665:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) >= sizeof(block_header_t) + size;
 988              		.loc 1 665 2 is_stmt 1 view .LVU256
 989              		.loc 1 665 9 is_stmt 0 view .LVU257
 990 0004 FFF7FEFF 		bl	block_size
 991              	.LVL78:
 992              		.loc 1 665 53 view .LVU258
 993 0008 1034     		adds	r4, r4, #16
 994              	.LVL79:
ARM GAS  /tmp/ccGOfVui.s 			page 30


 666:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 995              		.loc 1 666 1 view .LVU259
 996 000a A042     		cmp	r0, r4
 997 000c 34BF     		ite	cc
 998 000e 0020     		movcc	r0, #0
 999 0010 0120     		movcs	r0, #1
 1000 0012 10BD     		pop	{r4, pc}
 1001              		.loc 1 666 1 view .LVU260
 1002              		.cfi_endproc
 1003              	.LFE31:
 1005              		.section	.text.block_split,"ax",%progbits
 1006              		.align	1
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1010              		.fpu fpv5-d16
 1012              	block_split:
 1013              	.LVL80:
 1014              	.LFB32:
 667:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 668:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Split a block into two, the second of which is free. */
 669:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_split(block_header_t* block, size_t size)
 670:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1015              		.loc 1 670 1 is_stmt 1 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		.loc 1 670 1 is_stmt 0 view .LVU262
 1020 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1021              	.LCFI10:
 1022              		.cfi_def_cfa_offset 32
 1023              		.cfi_offset 3, -32
 1024              		.cfi_offset 4, -28
 1025              		.cfi_offset 5, -24
 1026              		.cfi_offset 6, -20
 1027              		.cfi_offset 7, -16
 1028              		.cfi_offset 8, -12
 1029              		.cfi_offset 9, -8
 1030              		.cfi_offset 14, -4
 1031 0004 0746     		mov	r7, r0
 1032 0006 0C46     		mov	r4, r1
 671:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 672:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining =
 1033              		.loc 1 672 2 is_stmt 1 view .LVU263
 673:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(block_to_ptr(block), size - block_header_overhead);
 1034              		.loc 1 673 19 is_stmt 0 view .LVU264
 1035 0008 FFF7FEFF 		bl	block_to_ptr
 1036              	.LVL81:
 1037              		.loc 1 673 3 view .LVU265
 1038 000c 211F     		subs	r1, r4, #4
 1039 000e FFF7FEFF 		bl	offset_to_block
 1040              	.LVL82:
 1041 0012 0546     		mov	r5, r0
 1042              	.LVL83:
 674:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 675:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t remain_size = block_size(block) - (size + block_header_overhead);
 1043              		.loc 1 675 2 is_stmt 1 view .LVU266
ARM GAS  /tmp/ccGOfVui.s 			page 31


 1044              		.loc 1 675 29 is_stmt 0 view .LVU267
 1045 0014 3846     		mov	r0, r7
 1046              	.LVL84:
 1047              		.loc 1 675 29 view .LVU268
 1048 0016 FFF7FEFF 		bl	block_size
 1049              	.LVL85:
 1050 001a 0646     		mov	r6, r0
 1051              		.loc 1 675 47 view .LVU269
 1052 001c 031B     		subs	r3, r0, r4
 1053              		.loc 1 675 15 view .LVU270
 1054 001e A3F10409 		sub	r9, r3, #4
 1055              	.LVL86:
 676:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 677:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
 1056              		.loc 1 677 2 is_stmt 1 view .LVU271
 1057              		.loc 1 677 2 view .LVU272
 1058 0022 2846     		mov	r0, r5
 1059 0024 FFF7FEFF 		bl	block_to_ptr
 1060              	.LVL87:
 1061 0028 8046     		mov	r8, r0
 1062 002a 0421     		movs	r1, #4
 1063 002c FFF7FEFF 		bl	align_ptr
 1064              	.LVL88:
 1065 0030 8045     		cmp	r8, r0
 1066 0032 00D0     		beq	.L61
 1067              	.L62:
 1068              		.loc 1 677 2 discriminator 1 view .LVU273
 1069              		.loc 1 677 2 discriminator 1 view .LVU274
 1070              		.loc 1 677 2 discriminator 1 view .LVU275
 1071              		.loc 1 677 2 discriminator 1 view .LVU276
 1072 0034 FEE7     		b	.L62
 1073              	.L61:
 1074              		.loc 1 677 2 discriminator 2 view .LVU277
 678:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 679:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 680:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
 1075              		.loc 1 680 2 discriminator 2 view .LVU278
 1076              		.loc 1 680 2 discriminator 2 view .LVU279
 1077 0036 04EB0903 		add	r3, r4, r9
 1078 003a 0433     		adds	r3, r3, #4
 1079 003c 9E42     		cmp	r6, r3
 1080 003e 00D0     		beq	.L63
 1081              	.L64:
 1082              		.loc 1 680 2 discriminator 2 view .LVU280
 1083              		.loc 1 680 2 discriminator 2 view .LVU281
 1084              		.loc 1 680 2 discriminator 2 view .LVU282
 1085              		.loc 1 680 2 discriminator 2 view .LVU283
 1086 0040 FEE7     		b	.L64
 1087              	.L63:
 1088              		.loc 1 680 2 discriminator 2 view .LVU284
 681:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1089              		.loc 1 681 2 discriminator 2 view .LVU285
 1090 0042 4946     		mov	r1, r9
 1091 0044 2846     		mov	r0, r5
 1092 0046 FFF7FEFF 		bl	block_set_size
 1093              	.LVL89:
 682:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
ARM GAS  /tmp/ccGOfVui.s 			page 32


 1094              		.loc 1 682 2 discriminator 2 view .LVU286
 1095              		.loc 1 682 2 discriminator 2 view .LVU287
 1096 004a 2846     		mov	r0, r5
 1097 004c FFF7FEFF 		bl	block_size
 1098              	.LVL90:
 1099 0050 0B28     		cmp	r0, #11
 1100 0052 00D8     		bhi	.L65
 1101              	.L66:
 1102              		.loc 1 682 2 discriminator 3 view .LVU288
 1103              		.loc 1 682 2 discriminator 3 view .LVU289
 1104              		.loc 1 682 2 discriminator 3 view .LVU290
 1105              		.loc 1 682 2 discriminator 3 view .LVU291
 1106 0054 FEE7     		b	.L66
 1107              	.L65:
 1108              		.loc 1 682 2 discriminator 4 view .LVU292
 683:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 684:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, size);
 1109              		.loc 1 684 2 discriminator 4 view .LVU293
 1110 0056 2146     		mov	r1, r4
 1111 0058 3846     		mov	r0, r7
 1112 005a FFF7FEFF 		bl	block_set_size
 1113              	.LVL91:
 685:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_mark_as_free(remaining);
 1114              		.loc 1 685 2 discriminator 4 view .LVU294
 1115 005e 2846     		mov	r0, r5
 1116 0060 FFF7FEFF 		bl	block_mark_as_free
 1117              	.LVL92:
 686:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 687:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining;
 1118              		.loc 1 687 2 discriminator 4 view .LVU295
 688:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1119              		.loc 1 688 1 is_stmt 0 discriminator 4 view .LVU296
 1120 0064 2846     		mov	r0, r5
 1121 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1122              		.loc 1 688 1 discriminator 4 view .LVU297
 1123              		.cfi_endproc
 1124              	.LFE32:
 1126              		.section	.text.block_absorb,"ax",%progbits
 1127              		.align	1
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1131              		.fpu fpv5-d16
 1133              	block_absorb:
 1134              	.LVL93:
 1135              	.LFB33:
 689:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 690:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 691:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_absorb(block_header_t* prev, block_header_t* block)
 692:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1136              		.loc 1 692 1 is_stmt 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		.loc 1 692 1 is_stmt 0 view .LVU299
 1141 0000 38B5     		push	{r3, r4, r5, lr}
 1142              	.LCFI11:
ARM GAS  /tmp/ccGOfVui.s 			page 33


 1143              		.cfi_def_cfa_offset 16
 1144              		.cfi_offset 3, -16
 1145              		.cfi_offset 4, -12
 1146              		.cfi_offset 5, -8
 1147              		.cfi_offset 14, -4
 1148 0002 0446     		mov	r4, r0
 1149 0004 0D46     		mov	r5, r1
 693:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1150              		.loc 1 693 2 is_stmt 1 view .LVU300
 1151              		.loc 1 693 2 view .LVU301
 1152 0006 FFF7FEFF 		bl	block_is_last
 1153              	.LVL94:
 1154              		.loc 1 693 2 is_stmt 0 view .LVU302
 1155 000a 00B1     		cbz	r0, .L69
 1156              	.L70:
 1157              		.loc 1 693 2 is_stmt 1 discriminator 1 view .LVU303
 1158              		.loc 1 693 2 discriminator 1 view .LVU304
 1159              		.loc 1 693 2 discriminator 1 view .LVU305
 1160              		.loc 1 693 2 discriminator 1 view .LVU306
 1161 000c FEE7     		b	.L70
 1162              	.L69:
 1163              		.loc 1 693 2 discriminator 2 view .LVU307
 694:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 695:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->size += block_size(block) + block_header_overhead;
 1164              		.loc 1 695 2 discriminator 2 view .LVU308
 1165              		.loc 1 695 16 is_stmt 0 discriminator 2 view .LVU309
 1166 000e 2846     		mov	r0, r5
 1167 0010 FFF7FEFF 		bl	block_size
 1168              	.LVL95:
 1169              		.loc 1 695 34 discriminator 2 view .LVU310
 1170 0014 021D     		adds	r2, r0, #4
 1171              		.loc 1 695 13 discriminator 2 view .LVU311
 1172 0016 6368     		ldr	r3, [r4, #4]
 1173 0018 1344     		add	r3, r3, r2
 1174 001a 6360     		str	r3, [r4, #4]
 696:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1175              		.loc 1 696 2 is_stmt 1 discriminator 2 view .LVU312
 1176 001c 2046     		mov	r0, r4
 1177 001e FFF7FEFF 		bl	block_link_next
 1178              	.LVL96:
 697:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return prev;
 1179              		.loc 1 697 2 discriminator 2 view .LVU313
 698:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1180              		.loc 1 698 1 is_stmt 0 discriminator 2 view .LVU314
 1181 0022 2046     		mov	r0, r4
 1182 0024 38BD     		pop	{r3, r4, r5, pc}
 1183              		.loc 1 698 1 discriminator 2 view .LVU315
 1184              		.cfi_endproc
 1185              	.LFE33:
 1187              		.section	.text.control_constructor,"ax",%progbits
 1188              		.align	1
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1192              		.fpu fpv5-d16
 1194              	control_constructor:
 1195              	.LVL97:
ARM GAS  /tmp/ccGOfVui.s 			page 34


 1196              	.LFB41:
 699:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 700:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent previous free block. */
 701:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_prev(control_t* control, block_header_t* block)
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 704:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* prev = block_prev(block);
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 710:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 711:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 714:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 715:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent free block. */
 716:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_next(control_t* control, block_header_t* block)
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 720:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_free(next))
 722:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_last(block) && "previous block can't be last");
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 726:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 727:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 730:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 731:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 732:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_free(control_t* control, block_header_t* block, size_t size)
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 736:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 741:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 743:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 744:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 745:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_used(control_t* control, block_header_t* block, size_t size)
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 749:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 750:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the next block is free, we must coalesce. */
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 753:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_merge_next(control, remaining_block);
ARM GAS  /tmp/ccGOfVui.s 			page 35


 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 756:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 758:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 759:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_trim_free_leading(control_t* control, block_header_t* block, size_t si
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 763:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 764:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* We want the 2nd block. */
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_split(block, size - block_header_overhead);
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 767:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 770:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 771:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining_block;
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 774:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 775:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_locate_free(control_t* control, size_t size)
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 779:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 781:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		mapping_search(size, &fl, &sl);
 783:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 784:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
 785:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** mapping_search can futz with the size, so for excessively large sizes it can sometimes wind up
 786:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** with indices that are off the end of the block array.
 787:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** So, we protect against that here, since this is the only callsite of mapping_search.
 788:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** Note that we don't need to check sl, since it comes from a modulo operation that guarantees it
 789:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (fl < FL_INDEX_COUNT)
 791:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = search_suitable_block(control, &fl, &sl);
 793:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 794:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 795:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 797:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_size(block) >= size);
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 800:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 801:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 804:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 805:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_prepare_used(control_t* control, block_header_t* block, size_t size)
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 809:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(size && "size must be non-zero");
 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
ARM GAS  /tmp/ccGOfVui.s 			page 36


 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 814:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 817:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 818:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Clear structure and point all empty lists at the null block. */
 819:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void control_constructor(control_t* control)
 820:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1197              		.loc 1 820 1 is_stmt 1 view -0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 821:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 1202              		.loc 1 821 2 view .LVU317
 822:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 823:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.next_free = &control->block_null;
 1203              		.loc 1 823 2 view .LVU318
 1204              		.loc 1 823 32 is_stmt 0 view .LVU319
 1205 0000 8060     		str	r0, [r0, #8]
 824:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.prev_free = &control->block_null;
 1206              		.loc 1 824 2 is_stmt 1 view .LVU320
 1207              		.loc 1 824 32 is_stmt 0 view .LVU321
 1208 0002 C060     		str	r0, [r0, #12]
 825:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 826:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap = 0;
 1209              		.loc 1 826 2 is_stmt 1 view .LVU322
 1210              		.loc 1 826 21 is_stmt 0 view .LVU323
 1211 0004 0021     		movs	r1, #0
 1212 0006 0161     		str	r1, [r0, #16]
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1213              		.loc 1 827 2 is_stmt 1 view .LVU324
 1214              	.LVL98:
 1215              		.loc 1 827 2 is_stmt 0 view .LVU325
 1216 0008 08E0     		b	.L73
 1217              	.LVL99:
 1218              	.L75:
 828:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->sl_bitmap[i] = 0;
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 831:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 832:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->blocks[i][j] = &control->block_null;
 1219              		.loc 1 832 4 is_stmt 1 discriminator 3 view .LVU326
 1220              		.loc 1 832 26 is_stmt 0 discriminator 3 view .LVU327
 1221 000a 03EB4112 		add	r2, r3, r1, lsl #5
 1222 000e 0E32     		adds	r2, r2, #14
 1223 0010 40F82200 		str	r0, [r0, r2, lsl #2]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1224              		.loc 1 830 35 is_stmt 1 discriminator 3 view .LVU328
 1225 0014 0133     		adds	r3, r3, #1
 1226              	.LVL100:
 1227              	.L74:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1228              		.loc 1 830 15 discriminator 1 view .LVU329
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1229              		.loc 1 830 3 is_stmt 0 discriminator 1 view .LVU330
ARM GAS  /tmp/ccGOfVui.s 			page 37


 1230 0016 1F2B     		cmp	r3, #31
 1231 0018 F7DD     		ble	.L75
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1232              		.loc 1 827 34 is_stmt 1 discriminator 2 view .LVU331
 1233 001a 0131     		adds	r1, r1, #1
 1234              	.LVL101:
 1235              	.L73:
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1236              		.loc 1 827 14 discriminator 1 view .LVU332
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1237              		.loc 1 827 2 is_stmt 0 discriminator 1 view .LVU333
 1238 001c 0829     		cmp	r1, #8
 1239 001e 05DC     		bgt	.L77
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1240              		.loc 1 829 3 is_stmt 1 view .LVU334
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1241              		.loc 1 829 25 is_stmt 0 view .LVU335
 1242 0020 0A1D     		adds	r2, r1, #4
 1243 0022 00EB8202 		add	r2, r0, r2, lsl #2
 1244 0026 0023     		movs	r3, #0
 1245 0028 5360     		str	r3, [r2, #4]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1246              		.loc 1 830 3 is_stmt 1 view .LVU336
 1247              	.LVL102:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1248              		.loc 1 830 3 is_stmt 0 view .LVU337
 1249 002a F4E7     		b	.L74
 1250              	.LVL103:
 1251              	.L77:
 833:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 834:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 835:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1252              		.loc 1 835 1 view .LVU338
 1253 002c 7047     		bx	lr
 1254              		.cfi_endproc
 1255              	.LFE41:
 1257              		.section	.text.integrity_walker,"ax",%progbits
 1258              		.align	1
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1262              		.fpu fpv5-d16
 1264              	integrity_walker:
 1265              	.LVL104:
 1266              	.LFB42:
 836:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 837:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 838:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Debugging utilities.
 839:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 840:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 841:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct integrity_t
 842:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 843:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int prev_status;
 844:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status;
 845:Middlewares/lvgl/src/misc/lv_tlsf.c **** } integrity_t;
 846:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 847:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_insist(x) { tlsf_assert(x); if (!(x)) { status--; } }
ARM GAS  /tmp/ccGOfVui.s 			page 38


 848:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 849:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void integrity_walker(void* ptr, size_t size, int used, void* user)
 850:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1267              		.loc 1 850 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		.loc 1 850 1 is_stmt 0 view .LVU340
 1272 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1273              	.LCFI12:
 1274              		.cfi_def_cfa_offset 24
 1275              		.cfi_offset 4, -24
 1276              		.cfi_offset 5, -20
 1277              		.cfi_offset 6, -16
 1278              		.cfi_offset 7, -12
 1279              		.cfi_offset 8, -8
 1280              		.cfi_offset 14, -4
 1281 0004 0F46     		mov	r7, r1
 1282 0006 1D46     		mov	r5, r3
 851:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 1283              		.loc 1 851 2 is_stmt 1 view .LVU341
 1284              		.loc 1 851 26 is_stmt 0 view .LVU342
 1285 0008 FFF7FEFF 		bl	block_from_ptr
 1286              	.LVL105:
 1287              		.loc 1 851 26 view .LVU343
 1288 000c 0446     		mov	r4, r0
 1289              	.LVL106:
 852:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 1290              		.loc 1 852 2 is_stmt 1 view .LVU344
 853:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 1291              		.loc 1 853 2 view .LVU345
 1292              		.loc 1 853 31 is_stmt 0 view .LVU346
 1293 000e FFF7FEFF 		bl	block_is_prev_free
 1294              	.LVL107:
 1295              		.loc 1 853 61 view .LVU347
 1296 0012 061E     		subs	r6, r0, #0
 1297 0014 18BF     		it	ne
 1298 0016 0126     		movne	r6, #1
 1299              	.LVL108:
 854:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 1300              		.loc 1 854 2 is_stmt 1 view .LVU348
 1301              		.loc 1 854 26 is_stmt 0 view .LVU349
 1302 0018 2046     		mov	r0, r4
 1303 001a FFF7FEFF 		bl	block_is_free
 1304              	.LVL109:
 1305              		.loc 1 854 51 view .LVU350
 1306 001e B0F10008 		subs	r8, r0, #0
 1307 0022 18BF     		it	ne
 1308 0024 4FF00108 		movne	r8, #1
 1309              	.LVL110:
 855:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 1310              		.loc 1 855 2 is_stmt 1 view .LVU351
 1311              		.loc 1 855 33 is_stmt 0 view .LVU352
 1312 0028 2046     		mov	r0, r4
 1313 002a FFF7FEFF 		bl	block_size
 1314              	.LVL111:
 856:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccGOfVui.s 			page 39


 857:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 1315              		.loc 1 857 2 is_stmt 1 view .LVU353
 858:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)used;
 1316              		.loc 1 858 2 view .LVU354
 859:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 1317              		.loc 1 859 2 view .LVU355
 1318              		.loc 1 859 2 view .LVU356
 1319 002e 2B68     		ldr	r3, [r5]
 1320 0030 B342     		cmp	r3, r6
 1321 0032 00D0     		beq	.L79
 1322              	.L80:
 1323              		.loc 1 859 2 discriminator 1 view .LVU357
 1324              		.loc 1 859 2 discriminator 1 view .LVU358
 1325              		.loc 1 859 2 discriminator 1 view .LVU359
 1326              		.loc 1 859 2 discriminator 1 view .LVU360
 1327 0034 FEE7     		b	.L80
 1328              	.L79:
 1329              		.loc 1 859 2 discriminator 5 view .LVU361
 1330              		.loc 1 859 2 discriminator 5 view .LVU362
 1331              		.loc 1 859 80 discriminator 5 view .LVU363
 860:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 1332              		.loc 1 860 2 discriminator 5 view .LVU364
 1333              		.loc 1 860 2 discriminator 5 view .LVU365
 1334 0036 B842     		cmp	r0, r7
 1335 0038 00D0     		beq	.L81
 1336              	.L82:
 1337              		.loc 1 860 2 discriminator 2 view .LVU366
 1338              		.loc 1 860 2 discriminator 2 view .LVU367
 1339              		.loc 1 860 2 discriminator 2 view .LVU368
 1340              		.loc 1 860 2 discriminator 2 view .LVU369
 1341 003a FEE7     		b	.L82
 1342              	.L81:
 1343              		.loc 1 860 2 discriminator 5 view .LVU370
 1344              		.loc 1 860 2 discriminator 5 view .LVU371
 1345              		.loc 1 860 64 discriminator 5 view .LVU372
 861:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 862:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->prev_status = this_status;
 1346              		.loc 1 862 2 discriminator 5 view .LVU373
 1347              		.loc 1 862 21 is_stmt 0 discriminator 5 view .LVU374
 1348 003c C5F80080 		str	r8, [r5]
 863:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 1349              		.loc 1 863 2 is_stmt 1 discriminator 5 view .LVU375
 864:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1350              		.loc 1 864 1 is_stmt 0 discriminator 5 view .LVU376
 1351 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1352              		.loc 1 864 1 discriminator 5 view .LVU377
 1353              		.cfi_endproc
 1354              	.LFE42:
 1356              		.section	.text.default_walker,"ax",%progbits
 1357              		.align	1
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu fpv5-d16
 1363              	default_walker:
 1364              	.LVL112:
 1365              	.LFB44:
ARM GAS  /tmp/ccGOfVui.s 			page 40


 865:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 866:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check(lv_tlsf_t tlsf)
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 869:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 872:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 873:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the free lists and bitmaps are accurate. */
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 875:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 877:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int fl_map = control->fl_bitmap & (1U << i);
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 882:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 883:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that first- and second-level lists agree. */
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!fl_map)
 885:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!sl_map && "second-level map must be null");
 887:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 888:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!sl_map)
 890:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block == &control->block_null && "block list must be null");
 892:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 893:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 894:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 895:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that there is at least one free block. */
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(sl_list && "no free blocks in second-level map");
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 898:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			while (block != &control->block_null)
 900:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				int fli, sli;
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 907:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				mapping_insert(block_size(block), &fli, &sli);
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 911:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 912:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 913:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 914:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return status;
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 917:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 918:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_insist
 919:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 920:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void default_walker(void* ptr, size_t size, int used, void* user)
 921:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccGOfVui.s 			page 41


 1366              		.loc 1 921 1 is_stmt 1 view -0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
 922:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)user;
 1371              		.loc 1 922 2 view .LVU379
 923:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void*)block_fr
 1372              		.loc 1 923 112 view .LVU380
 924:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1373              		.loc 1 924 1 is_stmt 0 view .LVU381
 1374 0000 7047     		bx	lr
 1375              		.cfi_endproc
 1376              	.LFE44:
 1378              		.section	.text.tlsf_fls,"ax",%progbits
 1379              		.align	1
 1380              		.syntax unified
 1381              		.thumb
 1382              		.thumb_func
 1383              		.fpu fpv5-d16
 1385              	tlsf_fls:
 1386              	.LVL113:
 1387              	.LFB2:
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 1388              		.loc 1 101 1 is_stmt 1 view -0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 0
 1391              		@ frame_needed = 0, uses_anonymous_args = 0
 1392              		@ link register save eliminated.
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1393              		.loc 1 102 2 view .LVU383
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1394              		.loc 1 102 50 is_stmt 0 view .LVU384
 1395 0000 28B1     		cbz	r0, .L87
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1396              		.loc 1 102 30 discriminator 1 view .LVU385
 1397 0002 B0FA80F0 		clz	r0, r0
 1398              	.LVL114:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1399              		.loc 1 102 50 discriminator 1 view .LVU386
 1400 0006 C0F12000 		rsb	r0, r0, #32
 1401              	.L86:
 1402              	.LVL115:
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1403              		.loc 1 103 2 is_stmt 1 discriminator 4 view .LVU387
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1404              		.loc 1 104 1 is_stmt 0 discriminator 4 view .LVU388
 1405 000a 0138     		subs	r0, r0, #1
 1406              	.LVL116:
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1407              		.loc 1 104 1 discriminator 4 view .LVU389
 1408 000c 7047     		bx	lr
 1409              	.LVL117:
 1410              	.L87:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1411              		.loc 1 102 50 view .LVU390
 1412 000e 0020     		movs	r0, #0
ARM GAS  /tmp/ccGOfVui.s 			page 42


 1413              	.LVL118:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1414              		.loc 1 102 50 view .LVU391
 1415 0010 FBE7     		b	.L86
 1416              		.cfi_endproc
 1417              	.LFE2:
 1419              		.section	.text.mapping_insert,"ax",%progbits
 1420              		.align	1
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1424              		.fpu fpv5-d16
 1426              	mapping_insert:
 1427              	.LVL119:
 1428              	.LFB24:
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1429              		.loc 1 536 1 is_stmt 1 view -0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1433              		.loc 1 536 1 is_stmt 0 view .LVU393
 1434 0000 70B5     		push	{r4, r5, r6, lr}
 1435              	.LCFI13:
 1436              		.cfi_def_cfa_offset 16
 1437              		.cfi_offset 4, -16
 1438              		.cfi_offset 5, -12
 1439              		.cfi_offset 6, -8
 1440              		.cfi_offset 14, -4
 1441 0002 0446     		mov	r4, r0
 1442 0004 0D46     		mov	r5, r1
 1443 0006 1646     		mov	r6, r2
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 1444              		.loc 1 537 2 is_stmt 1 view .LVU394
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1445              		.loc 1 538 2 view .LVU395
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1446              		.loc 1 538 5 is_stmt 0 view .LVU396
 1447 0008 7F28     		cmp	r0, #127
 1448 000a 08D8     		bhi	.L89
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1449              		.loc 1 541 3 is_stmt 1 view .LVU397
 1450              	.LVL120:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1451              		.loc 1 542 3 view .LVU398
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1452              		.loc 1 542 6 is_stmt 0 view .LVU399
 1453 000c 0028     		cmp	r0, #0
 1454 000e 04DB     		blt	.L93
 1455              	.LVL121:
 1456              	.L90:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1457              		.loc 1 542 6 view .LVU400
 1458 0010 8410     		asrs	r4, r0, #2
 1459              	.LVL122:
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1460              		.loc 1 541 6 view .LVU401
ARM GAS  /tmp/ccGOfVui.s 			page 43


 1461 0012 0020     		movs	r0, #0
 1462              	.LVL123:
 1463              	.L91:
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1464              		.loc 1 550 2 is_stmt 1 view .LVU402
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1465              		.loc 1 550 7 is_stmt 0 view .LVU403
 1466 0014 2860     		str	r0, [r5]
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1467              		.loc 1 551 2 is_stmt 1 view .LVU404
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1468              		.loc 1 551 7 is_stmt 0 view .LVU405
 1469 0016 3460     		str	r4, [r6]
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1470              		.loc 1 552 1 view .LVU406
 1471 0018 70BD     		pop	{r4, r5, r6, pc}
 1472              	.LVL124:
 1473              	.L93:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1474              		.loc 1 542 6 view .LVU407
 1475 001a 0330     		adds	r0, r0, #3
 1476              	.LVL125:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1477              		.loc 1 542 6 view .LVU408
 1478 001c F8E7     		b	.L90
 1479              	.LVL126:
 1480              	.L89:
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1481              		.loc 1 546 3 is_stmt 1 view .LVU409
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1482              		.loc 1 546 8 is_stmt 0 view .LVU410
 1483 001e FFF7FEFF 		bl	tlsf_fls
 1484              	.LVL127:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1485              		.loc 1 547 3 is_stmt 1 view .LVU411
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1486              		.loc 1 547 8 is_stmt 0 view .LVU412
 1487 0022 431F     		subs	r3, r0, #5
 1488 0024 DC40     		lsrs	r4, r4, r3
 1489              	.LVL128:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1490              		.loc 1 547 6 view .LVU413
 1491 0026 84F02004 		eor	r4, r4, #32
 1492              	.LVL129:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1493              		.loc 1 548 3 is_stmt 1 view .LVU414
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1494              		.loc 1 548 6 is_stmt 0 view .LVU415
 1495 002a 0638     		subs	r0, r0, #6
 1496              	.LVL130:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1497              		.loc 1 548 6 view .LVU416
 1498 002c F2E7     		b	.L91
 1499              		.cfi_endproc
 1500              	.LFE24:
 1502              		.section	.text.block_insert,"ax",%progbits
 1503              		.align	1
ARM GAS  /tmp/ccGOfVui.s 			page 44


 1504              		.syntax unified
 1505              		.thumb
 1506              		.thumb_func
 1507              		.fpu fpv5-d16
 1509              	block_insert:
 1510              	.LVL131:
 1511              	.LFB30:
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1512              		.loc 1 657 1 is_stmt 1 view -0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 8
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1516              		.loc 1 657 1 is_stmt 0 view .LVU418
 1517 0000 30B5     		push	{r4, r5, lr}
 1518              	.LCFI14:
 1519              		.cfi_def_cfa_offset 12
 1520              		.cfi_offset 4, -12
 1521              		.cfi_offset 5, -8
 1522              		.cfi_offset 14, -4
 1523 0002 83B0     		sub	sp, sp, #12
 1524              	.LCFI15:
 1525              		.cfi_def_cfa_offset 24
 1526 0004 0546     		mov	r5, r0
 1527 0006 0C46     		mov	r4, r1
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1528              		.loc 1 658 2 is_stmt 1 view .LVU419
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1529              		.loc 1 659 2 view .LVU420
 1530 0008 0846     		mov	r0, r1
 1531              	.LVL132:
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1532              		.loc 1 659 2 is_stmt 0 view .LVU421
 1533 000a FFF7FEFF 		bl	block_size
 1534              	.LVL133:
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1535              		.loc 1 659 2 view .LVU422
 1536 000e 6A46     		mov	r2, sp
 1537 0010 01A9     		add	r1, sp, #4
 1538 0012 FFF7FEFF 		bl	mapping_insert
 1539              	.LVL134:
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1540              		.loc 1 660 2 is_stmt 1 view .LVU423
 1541 0016 009B     		ldr	r3, [sp]
 1542 0018 019A     		ldr	r2, [sp, #4]
 1543 001a 2146     		mov	r1, r4
 1544 001c 2846     		mov	r0, r5
 1545 001e FFF7FEFF 		bl	insert_free_block
 1546              	.LVL135:
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1547              		.loc 1 661 1 is_stmt 0 view .LVU424
 1548 0022 03B0     		add	sp, sp, #12
 1549              	.LCFI16:
 1550              		.cfi_def_cfa_offset 12
 1551              		@ sp needed
 1552 0024 30BD     		pop	{r4, r5, pc}
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccGOfVui.s 			page 45


 1553              		.loc 1 661 1 view .LVU425
 1554              		.cfi_endproc
 1555              	.LFE30:
 1557              		.section	.text.block_trim_free,"ax",%progbits
 1558              		.align	1
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1562              		.fpu fpv5-d16
 1564              	block_trim_free:
 1565              	.LVL136:
 1566              	.LFB36:
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1567              		.loc 1 733 1 is_stmt 1 view -0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1571              		.loc 1 733 1 is_stmt 0 view .LVU427
 1572 0000 70B5     		push	{r4, r5, r6, lr}
 1573              	.LCFI17:
 1574              		.cfi_def_cfa_offset 16
 1575              		.cfi_offset 4, -16
 1576              		.cfi_offset 5, -12
 1577              		.cfi_offset 6, -8
 1578              		.cfi_offset 14, -4
 1579 0002 0646     		mov	r6, r0
 1580 0004 0C46     		mov	r4, r1
 1581 0006 1546     		mov	r5, r2
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1582              		.loc 1 734 2 is_stmt 1 view .LVU428
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1583              		.loc 1 734 2 view .LVU429
 1584 0008 0846     		mov	r0, r1
 1585              	.LVL137:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1586              		.loc 1 734 2 is_stmt 0 view .LVU430
 1587 000a FFF7FEFF 		bl	block_is_free
 1588              	.LVL138:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1589              		.loc 1 734 2 view .LVU431
 1590 000e 00B9     		cbnz	r0, .L97
 1591              	.L98:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1592              		.loc 1 734 2 is_stmt 1 discriminator 1 view .LVU432
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1593              		.loc 1 734 2 discriminator 1 view .LVU433
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1594              		.loc 1 734 2 discriminator 1 view .LVU434
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1595              		.loc 1 734 2 discriminator 1 view .LVU435
 1596 0010 FEE7     		b	.L98
 1597              	.L97:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1598              		.loc 1 734 2 discriminator 4 view .LVU436
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1599              		.loc 1 735 2 discriminator 4 view .LVU437
ARM GAS  /tmp/ccGOfVui.s 			page 46


 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1600              		.loc 1 735 6 is_stmt 0 discriminator 4 view .LVU438
 1601 0012 2946     		mov	r1, r5
 1602 0014 2046     		mov	r0, r4
 1603 0016 FFF7FEFF 		bl	block_can_split
 1604              	.LVL139:
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1605              		.loc 1 735 5 discriminator 4 view .LVU439
 1606 001a 00B9     		cbnz	r0, .L101
 1607              	.LVL140:
 1608              	.L96:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1609              		.loc 1 742 1 view .LVU440
 1610 001c 70BD     		pop	{r4, r5, r6, pc}
 1611              	.LVL141:
 1612              	.L101:
 1613              	.LBB3:
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1614              		.loc 1 737 3 is_stmt 1 view .LVU441
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1615              		.loc 1 737 37 is_stmt 0 view .LVU442
 1616 001e 2946     		mov	r1, r5
 1617 0020 2046     		mov	r0, r4
 1618 0022 FFF7FEFF 		bl	block_split
 1619              	.LVL142:
 1620 0026 0546     		mov	r5, r0
 1621              	.LVL143:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1622              		.loc 1 738 3 is_stmt 1 view .LVU443
 1623 0028 2046     		mov	r0, r4
 1624              	.LVL144:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1625              		.loc 1 738 3 is_stmt 0 view .LVU444
 1626 002a FFF7FEFF 		bl	block_link_next
 1627              	.LVL145:
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 1628              		.loc 1 739 3 is_stmt 1 view .LVU445
 1629 002e 2846     		mov	r0, r5
 1630 0030 FFF7FEFF 		bl	block_set_prev_free
 1631              	.LVL146:
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1632              		.loc 1 740 3 view .LVU446
 1633 0034 2946     		mov	r1, r5
 1634 0036 3046     		mov	r0, r6
 1635 0038 FFF7FEFF 		bl	block_insert
 1636              	.LVL147:
 1637              	.LBE3:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1638              		.loc 1 742 1 is_stmt 0 view .LVU447
 1639 003c EEE7     		b	.L96
 1640              		.cfi_endproc
 1641              	.LFE36:
 1643              		.section	.text.block_prepare_used,"ax",%progbits
 1644              		.align	1
 1645              		.syntax unified
 1646              		.thumb
 1647              		.thumb_func
ARM GAS  /tmp/ccGOfVui.s 			page 47


 1648              		.fpu fpv5-d16
 1650              	block_prepare_used:
 1651              	.LVL148:
 1652              	.LFB40:
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1653              		.loc 1 806 1 is_stmt 1 view -0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 0
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1657              		.loc 1 806 1 is_stmt 0 view .LVU449
 1658 0000 10B5     		push	{r4, lr}
 1659              	.LCFI18:
 1660              		.cfi_def_cfa_offset 8
 1661              		.cfi_offset 4, -8
 1662              		.cfi_offset 14, -4
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1663              		.loc 1 807 2 is_stmt 1 view .LVU450
 1664              	.LVL149:
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1665              		.loc 1 808 2 view .LVU451
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1666              		.loc 1 808 5 is_stmt 0 view .LVU452
 1667 0002 0C46     		mov	r4, r1
 1668 0004 51B1     		cbz	r1, .L106
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1669              		.loc 1 810 3 is_stmt 1 view .LVU453
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1670              		.loc 1 810 3 view .LVU454
 1671 0006 02B9     		cbnz	r2, .L104
 1672              	.L105:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1673              		.loc 1 810 3 discriminator 1 view .LVU455
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1674              		.loc 1 810 3 discriminator 1 view .LVU456
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1675              		.loc 1 810 3 discriminator 1 view .LVU457
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1676              		.loc 1 810 3 discriminator 1 view .LVU458
 1677 0008 FEE7     		b	.L105
 1678              	.L104:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1679              		.loc 1 810 3 discriminator 2 view .LVU459
 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 1680              		.loc 1 811 3 discriminator 2 view .LVU460
 1681 000a FFF7FEFF 		bl	block_trim_free
 1682              	.LVL150:
 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 1683              		.loc 1 812 3 discriminator 2 view .LVU461
 1684 000e 2046     		mov	r0, r4
 1685 0010 FFF7FEFF 		bl	block_mark_as_used
 1686              	.LVL151:
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1687              		.loc 1 813 3 discriminator 2 view .LVU462
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1688              		.loc 1 813 7 is_stmt 0 discriminator 2 view .LVU463
 1689 0014 2046     		mov	r0, r4
ARM GAS  /tmp/ccGOfVui.s 			page 48


 1690 0016 FFF7FEFF 		bl	block_to_ptr
 1691              	.LVL152:
 1692              	.L102:
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1693              		.loc 1 816 1 view .LVU464
 1694 001a 10BD     		pop	{r4, pc}
 1695              	.LVL153:
 1696              	.L106:
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1697              		.loc 1 807 8 view .LVU465
 1698 001c 0846     		mov	r0, r1
 1699              	.LVL154:
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1700              		.loc 1 815 2 is_stmt 1 view .LVU466
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1701              		.loc 1 815 9 is_stmt 0 view .LVU467
 1702 001e FCE7     		b	.L102
 1703              		.cfi_endproc
 1704              	.LFE40:
 1706              		.section	.text.block_trim_free_leading,"ax",%progbits
 1707              		.align	1
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	block_trim_free_leading:
 1714              	.LVL155:
 1715              	.LFB38:
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1716              		.loc 1 760 1 is_stmt 1 view -0
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 0, uses_anonymous_args = 0
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1720              		.loc 1 760 1 is_stmt 0 view .LVU469
 1721 0000 70B5     		push	{r4, r5, r6, lr}
 1722              	.LCFI19:
 1723              		.cfi_def_cfa_offset 16
 1724              		.cfi_offset 4, -16
 1725              		.cfi_offset 5, -12
 1726              		.cfi_offset 6, -8
 1727              		.cfi_offset 14, -4
 1728 0002 0646     		mov	r6, r0
 1729 0004 0C46     		mov	r4, r1
 1730 0006 1546     		mov	r5, r2
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1731              		.loc 1 761 2 is_stmt 1 view .LVU470
 1732              	.LVL156:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1733              		.loc 1 762 2 view .LVU471
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1734              		.loc 1 762 6 is_stmt 0 view .LVU472
 1735 0008 1146     		mov	r1, r2
 1736              	.LVL157:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1737              		.loc 1 762 6 view .LVU473
 1738 000a 2046     		mov	r0, r4
ARM GAS  /tmp/ccGOfVui.s 			page 49


 1739              	.LVL158:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1740              		.loc 1 762 6 view .LVU474
 1741 000c FFF7FEFF 		bl	block_can_split
 1742              	.LVL159:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1743              		.loc 1 762 5 view .LVU475
 1744 0010 08B9     		cbnz	r0, .L111
 1745              	.LVL160:
 1746              	.L109:
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1747              		.loc 1 772 2 is_stmt 1 view .LVU476
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1748              		.loc 1 773 1 is_stmt 0 view .LVU477
 1749 0012 2046     		mov	r0, r4
 1750 0014 70BD     		pop	{r4, r5, r6, pc}
 1751              	.LVL161:
 1752              	.L111:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1753              		.loc 1 765 3 is_stmt 1 view .LVU478
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1754              		.loc 1 765 21 is_stmt 0 view .LVU479
 1755 0016 291F     		subs	r1, r5, #4
 1756 0018 2046     		mov	r0, r4
 1757 001a FFF7FEFF 		bl	block_split
 1758              	.LVL162:
 1759 001e 0546     		mov	r5, r0
 1760              	.LVL163:
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1761              		.loc 1 766 3 is_stmt 1 view .LVU480
 1762 0020 FFF7FEFF 		bl	block_set_prev_free
 1763              	.LVL164:
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 1764              		.loc 1 768 3 view .LVU481
 1765 0024 2046     		mov	r0, r4
 1766 0026 FFF7FEFF 		bl	block_link_next
 1767              	.LVL165:
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1768              		.loc 1 769 3 view .LVU482
 1769 002a 2146     		mov	r1, r4
 1770 002c 3046     		mov	r0, r6
 1771 002e FFF7FEFF 		bl	block_insert
 1772              	.LVL166:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1773              		.loc 1 765 21 is_stmt 0 view .LVU483
 1774 0032 2C46     		mov	r4, r5
 1775              	.LVL167:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1776              		.loc 1 765 21 view .LVU484
 1777 0034 EDE7     		b	.L109
 1778              		.cfi_endproc
 1779              	.LFE38:
 1781              		.section	.text.block_remove,"ax",%progbits
 1782              		.align	1
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
ARM GAS  /tmp/ccGOfVui.s 			page 50


 1786              		.fpu fpv5-d16
 1788              	block_remove:
 1789              	.LVL168:
 1790              	.LFB29:
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1791              		.loc 1 649 1 is_stmt 1 view -0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 8
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1795              		.loc 1 649 1 is_stmt 0 view .LVU486
 1796 0000 30B5     		push	{r4, r5, lr}
 1797              	.LCFI20:
 1798              		.cfi_def_cfa_offset 12
 1799              		.cfi_offset 4, -12
 1800              		.cfi_offset 5, -8
 1801              		.cfi_offset 14, -4
 1802 0002 83B0     		sub	sp, sp, #12
 1803              	.LCFI21:
 1804              		.cfi_def_cfa_offset 24
 1805 0004 0546     		mov	r5, r0
 1806 0006 0C46     		mov	r4, r1
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1807              		.loc 1 650 2 is_stmt 1 view .LVU487
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1808              		.loc 1 651 2 view .LVU488
 1809 0008 0846     		mov	r0, r1
 1810              	.LVL169:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1811              		.loc 1 651 2 is_stmt 0 view .LVU489
 1812 000a FFF7FEFF 		bl	block_size
 1813              	.LVL170:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1814              		.loc 1 651 2 view .LVU490
 1815 000e 6A46     		mov	r2, sp
 1816 0010 01A9     		add	r1, sp, #4
 1817 0012 FFF7FEFF 		bl	mapping_insert
 1818              	.LVL171:
 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1819              		.loc 1 652 2 is_stmt 1 view .LVU491
 1820 0016 009B     		ldr	r3, [sp]
 1821 0018 019A     		ldr	r2, [sp, #4]
 1822 001a 2146     		mov	r1, r4
 1823 001c 2846     		mov	r0, r5
 1824 001e FFF7FEFF 		bl	remove_free_block
 1825              	.LVL172:
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1826              		.loc 1 653 1 is_stmt 0 view .LVU492
 1827 0022 03B0     		add	sp, sp, #12
 1828              	.LCFI22:
 1829              		.cfi_def_cfa_offset 12
 1830              		@ sp needed
 1831 0024 30BD     		pop	{r4, r5, pc}
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1832              		.loc 1 653 1 view .LVU493
 1833              		.cfi_endproc
 1834              	.LFE29:
ARM GAS  /tmp/ccGOfVui.s 			page 51


 1836              		.section	.text.block_merge_prev,"ax",%progbits
 1837              		.align	1
 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
 1841              		.fpu fpv5-d16
 1843              	block_merge_prev:
 1844              	.LVL173:
 1845              	.LFB34:
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1846              		.loc 1 702 1 is_stmt 1 view -0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1850              		.loc 1 702 1 is_stmt 0 view .LVU495
 1851 0000 70B5     		push	{r4, r5, r6, lr}
 1852              	.LCFI23:
 1853              		.cfi_def_cfa_offset 16
 1854              		.cfi_offset 4, -16
 1855              		.cfi_offset 5, -12
 1856              		.cfi_offset 6, -8
 1857              		.cfi_offset 14, -4
 1858 0002 0546     		mov	r5, r0
 1859 0004 0C46     		mov	r4, r1
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1860              		.loc 1 703 2 is_stmt 1 view .LVU496
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1861              		.loc 1 703 6 is_stmt 0 view .LVU497
 1862 0006 0846     		mov	r0, r1
 1863              	.LVL174:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1864              		.loc 1 703 6 view .LVU498
 1865 0008 FFF7FEFF 		bl	block_is_prev_free
 1866              	.LVL175:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1867              		.loc 1 703 5 view .LVU499
 1868 000c 08B9     		cbnz	r0, .L121
 1869              	.L115:
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1870              		.loc 1 712 2 is_stmt 1 view .LVU500
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1871              		.loc 1 713 1 is_stmt 0 view .LVU501
 1872 000e 2046     		mov	r0, r4
 1873 0010 70BD     		pop	{r4, r5, r6, pc}
 1874              	.LVL176:
 1875              	.L121:
 1876              	.LBB4:
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1877              		.loc 1 705 3 is_stmt 1 view .LVU502
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1878              		.loc 1 705 26 is_stmt 0 view .LVU503
 1879 0012 2046     		mov	r0, r4
 1880 0014 FFF7FEFF 		bl	block_prev
 1881              	.LVL177:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1882              		.loc 1 706 3 is_stmt 1 view .LVU504
ARM GAS  /tmp/ccGOfVui.s 			page 52


 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1883              		.loc 1 706 3 view .LVU505
 1884 0018 0646     		mov	r6, r0
 1885 001a 18B1     		cbz	r0, .L117
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1886              		.loc 1 706 3 discriminator 2 view .LVU506
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1887              		.loc 1 707 3 discriminator 2 view .LVU507
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1888              		.loc 1 707 3 discriminator 2 view .LVU508
 1889 001c FFF7FEFF 		bl	block_is_free
 1890              	.LVL178:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1891              		.loc 1 707 3 is_stmt 0 discriminator 2 view .LVU509
 1892 0020 08B9     		cbnz	r0, .L118
 1893              	.L119:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1894              		.loc 1 707 3 is_stmt 1 discriminator 2 view .LVU510
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1895              		.loc 1 707 3 discriminator 2 view .LVU511
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1896              		.loc 1 707 3 discriminator 2 view .LVU512
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1897              		.loc 1 707 3 discriminator 2 view .LVU513
 1898 0022 FEE7     		b	.L119
 1899              	.LVL179:
 1900              	.L117:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1901              		.loc 1 706 3 discriminator 1 view .LVU514
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1902              		.loc 1 706 3 discriminator 1 view .LVU515
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1903              		.loc 1 706 3 discriminator 1 view .LVU516
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1904              		.loc 1 706 3 discriminator 1 view .LVU517
 1905 0024 FEE7     		b	.L117
 1906              	.LVL180:
 1907              	.L118:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1908              		.loc 1 707 3 discriminator 4 view .LVU518
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 1909              		.loc 1 708 3 discriminator 4 view .LVU519
 1910 0026 3146     		mov	r1, r6
 1911 0028 2846     		mov	r0, r5
 1912 002a FFF7FEFF 		bl	block_remove
 1913              	.LVL181:
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1914              		.loc 1 709 3 discriminator 4 view .LVU520
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1915              		.loc 1 709 11 is_stmt 0 discriminator 4 view .LVU521
 1916 002e 2146     		mov	r1, r4
 1917 0030 3046     		mov	r0, r6
 1918 0032 FFF7FEFF 		bl	block_absorb
 1919              	.LVL182:
 1920 0036 0446     		mov	r4, r0
 1921              	.LVL183:
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
ARM GAS  /tmp/ccGOfVui.s 			page 53


 1922              		.loc 1 709 11 discriminator 4 view .LVU522
 1923 0038 E9E7     		b	.L115
 1924              	.LBE4:
 1925              		.cfi_endproc
 1926              	.LFE34:
 1928              		.section	.text.block_merge_next,"ax",%progbits
 1929              		.align	1
 1930              		.syntax unified
 1931              		.thumb
 1932              		.thumb_func
 1933              		.fpu fpv5-d16
 1935              	block_merge_next:
 1936              	.LVL184:
 1937              	.LFB35:
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1938              		.loc 1 717 1 is_stmt 1 view -0
 1939              		.cfi_startproc
 1940              		@ args = 0, pretend = 0, frame = 0
 1941              		@ frame_needed = 0, uses_anonymous_args = 0
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1942              		.loc 1 717 1 is_stmt 0 view .LVU524
 1943 0000 70B5     		push	{r4, r5, r6, lr}
 1944              	.LCFI24:
 1945              		.cfi_def_cfa_offset 16
 1946              		.cfi_offset 4, -16
 1947              		.cfi_offset 5, -12
 1948              		.cfi_offset 6, -8
 1949              		.cfi_offset 14, -4
 1950 0002 0546     		mov	r5, r0
 1951 0004 0C46     		mov	r4, r1
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1952              		.loc 1 718 2 is_stmt 1 view .LVU525
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1953              		.loc 1 718 25 is_stmt 0 view .LVU526
 1954 0006 0846     		mov	r0, r1
 1955              	.LVL185:
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1956              		.loc 1 718 25 view .LVU527
 1957 0008 FFF7FEFF 		bl	block_next
 1958              	.LVL186:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1959              		.loc 1 719 2 is_stmt 1 view .LVU528
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1960              		.loc 1 719 2 view .LVU529
 1961 000c 40B1     		cbz	r0, .L124
 1962 000e 0646     		mov	r6, r0
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1963              		.loc 1 719 2 discriminator 2 view .LVU530
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1964              		.loc 1 721 2 discriminator 2 view .LVU531
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1965              		.loc 1 721 6 is_stmt 0 discriminator 2 view .LVU532
 1966 0010 FFF7FEFF 		bl	block_is_free
 1967              	.LVL187:
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1968              		.loc 1 721 5 discriminator 2 view .LVU533
 1969 0014 70B1     		cbz	r0, .L125
ARM GAS  /tmp/ccGOfVui.s 			page 54


 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1970              		.loc 1 723 3 is_stmt 1 view .LVU534
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1971              		.loc 1 723 3 view .LVU535
 1972 0016 2046     		mov	r0, r4
 1973 0018 FFF7FEFF 		bl	block_is_last
 1974              	.LVL188:
 1975 001c 08B1     		cbz	r0, .L126
 1976              	.L127:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1977              		.loc 1 723 3 discriminator 2 view .LVU536
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1978              		.loc 1 723 3 discriminator 2 view .LVU537
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1979              		.loc 1 723 3 discriminator 2 view .LVU538
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1980              		.loc 1 723 3 discriminator 2 view .LVU539
 1981 001e FEE7     		b	.L127
 1982              	.LVL189:
 1983              	.L124:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1984              		.loc 1 719 2 discriminator 1 view .LVU540
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1985              		.loc 1 719 2 discriminator 1 view .LVU541
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1986              		.loc 1 719 2 discriminator 1 view .LVU542
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1987              		.loc 1 719 2 discriminator 1 view .LVU543
 1988 0020 FEE7     		b	.L124
 1989              	.LVL190:
 1990              	.L126:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1991              		.loc 1 723 3 discriminator 2 view .LVU544
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 1992              		.loc 1 724 3 discriminator 2 view .LVU545
 1993 0022 3146     		mov	r1, r6
 1994 0024 2846     		mov	r0, r5
 1995 0026 FFF7FEFF 		bl	block_remove
 1996              	.LVL191:
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1997              		.loc 1 725 3 discriminator 2 view .LVU546
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1998              		.loc 1 725 11 is_stmt 0 discriminator 2 view .LVU547
 1999 002a 3146     		mov	r1, r6
 2000 002c 2046     		mov	r0, r4
 2001 002e FFF7FEFF 		bl	block_absorb
 2002              	.LVL192:
 2003 0032 0446     		mov	r4, r0
 2004              	.LVL193:
 2005              	.L125:
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2006              		.loc 1 728 2 is_stmt 1 view .LVU548
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2007              		.loc 1 729 1 is_stmt 0 view .LVU549
 2008 0034 2046     		mov	r0, r4
 2009 0036 70BD     		pop	{r4, r5, r6, pc}
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccGOfVui.s 			page 55


 2010              		.loc 1 729 1 view .LVU550
 2011              		.cfi_endproc
 2012              	.LFE35:
 2014              		.section	.text.block_trim_used,"ax",%progbits
 2015              		.align	1
 2016              		.syntax unified
 2017              		.thumb
 2018              		.thumb_func
 2019              		.fpu fpv5-d16
 2021              	block_trim_used:
 2022              	.LVL194:
 2023              	.LFB37:
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 2024              		.loc 1 746 1 is_stmt 1 view -0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 0
 2027              		@ frame_needed = 0, uses_anonymous_args = 0
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 2028              		.loc 1 746 1 is_stmt 0 view .LVU552
 2029 0000 70B5     		push	{r4, r5, r6, lr}
 2030              	.LCFI25:
 2031              		.cfi_def_cfa_offset 16
 2032              		.cfi_offset 4, -16
 2033              		.cfi_offset 5, -12
 2034              		.cfi_offset 6, -8
 2035              		.cfi_offset 14, -4
 2036 0002 0646     		mov	r6, r0
 2037 0004 0C46     		mov	r4, r1
 2038 0006 1546     		mov	r5, r2
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2039              		.loc 1 747 2 is_stmt 1 view .LVU553
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2040              		.loc 1 747 2 view .LVU554
 2041 0008 0846     		mov	r0, r1
 2042              	.LVL195:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2043              		.loc 1 747 2 is_stmt 0 view .LVU555
 2044 000a FFF7FEFF 		bl	block_is_free
 2045              	.LVL196:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2046              		.loc 1 747 2 view .LVU556
 2047 000e 00B1     		cbz	r0, .L130
 2048              	.L131:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2049              		.loc 1 747 2 is_stmt 1 discriminator 1 view .LVU557
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2050              		.loc 1 747 2 discriminator 1 view .LVU558
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2051              		.loc 1 747 2 discriminator 1 view .LVU559
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2052              		.loc 1 747 2 discriminator 1 view .LVU560
 2053 0010 FEE7     		b	.L131
 2054              	.L130:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2055              		.loc 1 747 2 discriminator 2 view .LVU561
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2056              		.loc 1 748 2 discriminator 2 view .LVU562
ARM GAS  /tmp/ccGOfVui.s 			page 56


 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2057              		.loc 1 748 6 is_stmt 0 discriminator 2 view .LVU563
 2058 0012 2946     		mov	r1, r5
 2059 0014 2046     		mov	r0, r4
 2060 0016 FFF7FEFF 		bl	block_can_split
 2061              	.LVL197:
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2062              		.loc 1 748 5 discriminator 2 view .LVU564
 2063 001a 00B9     		cbnz	r0, .L134
 2064              	.LVL198:
 2065              	.L129:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2066              		.loc 1 757 1 view .LVU565
 2067 001c 70BD     		pop	{r4, r5, r6, pc}
 2068              	.LVL199:
 2069              	.L134:
 2070              	.LBB5:
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2071              		.loc 1 751 3 is_stmt 1 view .LVU566
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2072              		.loc 1 751 37 is_stmt 0 view .LVU567
 2073 001e 2946     		mov	r1, r5
 2074 0020 2046     		mov	r0, r4
 2075 0022 FFF7FEFF 		bl	block_split
 2076              	.LVL200:
 2077 0026 0446     		mov	r4, r0
 2078              	.LVL201:
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2079              		.loc 1 752 3 is_stmt 1 view .LVU568
 2080 0028 FFF7FEFF 		bl	block_set_prev_used
 2081              	.LVL202:
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2082              		.loc 1 754 3 view .LVU569
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2083              		.loc 1 754 21 is_stmt 0 view .LVU570
 2084 002c 2146     		mov	r1, r4
 2085 002e 3046     		mov	r0, r6
 2086 0030 FFF7FEFF 		bl	block_merge_next
 2087              	.LVL203:
 2088 0034 0146     		mov	r1, r0
 2089              	.LVL204:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2090              		.loc 1 755 3 is_stmt 1 view .LVU571
 2091 0036 3046     		mov	r0, r6
 2092              	.LVL205:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2093              		.loc 1 755 3 is_stmt 0 view .LVU572
 2094 0038 FFF7FEFF 		bl	block_insert
 2095              	.LVL206:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2096              		.loc 1 755 3 view .LVU573
 2097              	.LBE5:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2098              		.loc 1 757 1 view .LVU574
 2099 003c EEE7     		b	.L129
 2100              		.cfi_endproc
 2101              	.LFE37:
ARM GAS  /tmp/ccGOfVui.s 			page 57


 2103              		.section	.text.mapping_search,"ax",%progbits
 2104              		.align	1
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu fpv5-d16
 2110              	mapping_search:
 2111              	.LVL207:
 2112              	.LFB25:
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2113              		.loc 1 556 1 is_stmt 1 view -0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 0
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2117              		.loc 1 556 1 is_stmt 0 view .LVU576
 2118 0000 70B5     		push	{r4, r5, r6, lr}
 2119              	.LCFI26:
 2120              		.cfi_def_cfa_offset 16
 2121              		.cfi_offset 4, -16
 2122              		.cfi_offset 5, -12
 2123              		.cfi_offset 6, -8
 2124              		.cfi_offset 14, -4
 2125 0002 0446     		mov	r4, r0
 2126 0004 0D46     		mov	r5, r1
 2127 0006 1646     		mov	r6, r2
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2128              		.loc 1 557 2 is_stmt 1 view .LVU577
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2129              		.loc 1 557 5 is_stmt 0 view .LVU578
 2130 0008 7F28     		cmp	r0, #127
 2131 000a 06D9     		bls	.L136
 2132              	.LBB6:
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2133              		.loc 1 559 3 is_stmt 1 view .LVU579
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2134              		.loc 1 559 31 is_stmt 0 view .LVU580
 2135 000c FFF7FEFF 		bl	tlsf_fls
 2136              	.LVL208:
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2137              		.loc 1 559 52 view .LVU581
 2138 0010 431F     		subs	r3, r0, #5
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2139              		.loc 1 559 27 view .LVU582
 2140 0012 0120     		movs	r0, #1
 2141 0014 9840     		lsls	r0, r0, r3
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2142              		.loc 1 559 76 view .LVU583
 2143 0016 0138     		subs	r0, r0, #1
 2144              	.LVL209:
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2145              		.loc 1 560 3 is_stmt 1 view .LVU584
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2146              		.loc 1 560 8 is_stmt 0 view .LVU585
 2147 0018 0444     		add	r4, r4, r0
 2148              	.LVL210:
 2149              	.L136:
ARM GAS  /tmp/ccGOfVui.s 			page 58


 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2150              		.loc 1 560 8 view .LVU586
 2151              	.LBE6:
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2152              		.loc 1 562 2 is_stmt 1 view .LVU587
 2153 001a 3246     		mov	r2, r6
 2154 001c 2946     		mov	r1, r5
 2155 001e 2046     		mov	r0, r4
 2156 0020 FFF7FEFF 		bl	mapping_insert
 2157              	.LVL211:
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2158              		.loc 1 563 1 is_stmt 0 view .LVU588
 2159 0024 70BD     		pop	{r4, r5, r6, pc}
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2160              		.loc 1 563 1 view .LVU589
 2161              		.cfi_endproc
 2162              	.LFE25:
 2164              		.section	.text.tlsf_ffs,"ax",%progbits
 2165              		.align	1
 2166              		.syntax unified
 2167              		.thumb
 2168              		.thumb_func
 2169              		.fpu fpv5-d16
 2171              	tlsf_ffs:
 2172              	.LVL212:
 2173              	.LFB1:
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2174              		.loc 1 94 1 is_stmt 1 view -0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              		@ link register save eliminated.
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2179              		.loc 1 94 1 is_stmt 0 view .LVU591
 2180 0000 0346     		mov	r3, r0
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2181              		.loc 1 95 2 is_stmt 1 view .LVU592
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2182              		.loc 1 95 9 is_stmt 0 view .LVU593
 2183 0002 90FAA0F0 		rbit	r0, r0
 2184              	.LVL213:
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2185              		.loc 1 95 9 view .LVU594
 2186 0006 B0FA80F0 		clz	r0, r0
 2187 000a 0BB9     		cbnz	r3, .L139
 2188 000c 4FF0FF30 		mov	r0, #-1
 2189              	.L139:
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2190              		.loc 1 96 1 view .LVU595
 2191 0010 7047     		bx	lr
 2192              		.cfi_endproc
 2193              	.LFE1:
 2195              		.section	.text.search_suitable_block,"ax",%progbits
 2196              		.align	1
 2197              		.syntax unified
 2198              		.thumb
 2199              		.thumb_func
ARM GAS  /tmp/ccGOfVui.s 			page 59


 2200              		.fpu fpv5-d16
 2202              	search_suitable_block:
 2203              	.LVL214:
 2204              	.LFB26:
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2205              		.loc 1 566 1 is_stmt 1 view -0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2209              		.loc 1 566 1 is_stmt 0 view .LVU597
 2210 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2211              	.LCFI27:
 2212              		.cfi_def_cfa_offset 24
 2213              		.cfi_offset 3, -24
 2214              		.cfi_offset 4, -20
 2215              		.cfi_offset 5, -16
 2216              		.cfi_offset 6, -12
 2217              		.cfi_offset 7, -8
 2218              		.cfi_offset 14, -4
 2219 0002 0546     		mov	r5, r0
 2220 0004 1646     		mov	r6, r2
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2221              		.loc 1 567 2 is_stmt 1 view .LVU598
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2222              		.loc 1 567 6 is_stmt 0 view .LVU599
 2223 0006 0C68     		ldr	r4, [r1]
 2224              	.LVL215:
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2225              		.loc 1 568 2 is_stmt 1 view .LVU600
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2226              		.loc 1 568 6 is_stmt 0 view .LVU601
 2227 0008 1268     		ldr	r2, [r2]
 2228              	.LVL216:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2229              		.loc 1 574 2 is_stmt 1 view .LVU602
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2230              		.loc 1 574 42 is_stmt 0 view .LVU603
 2231 000a 231D     		adds	r3, r4, #4
 2232 000c 00EB8303 		add	r3, r0, r3, lsl #2
 2233 0010 5B68     		ldr	r3, [r3, #4]
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2234              		.loc 1 574 54 view .LVU604
 2235 0012 4FF0FF30 		mov	r0, #-1
 2236              	.LVL217:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2237              		.loc 1 574 54 view .LVU605
 2238 0016 9040     		lsls	r0, r0, r2
 2239              	.LVL218:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2240              		.loc 1 575 2 is_stmt 1 view .LVU606
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2241              		.loc 1 575 5 is_stmt 0 view .LVU607
 2242 0018 1840     		ands	r0, r3, r0
 2243              	.LVL219:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2244              		.loc 1 575 5 view .LVU608
ARM GAS  /tmp/ccGOfVui.s 			page 60


 2245 001a 10D1     		bne	.L141
 2246 001c 0F46     		mov	r7, r1
 2247              	.LBB7:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2248              		.loc 1 578 3 is_stmt 1 view .LVU609
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2249              		.loc 1 578 38 is_stmt 0 view .LVU610
 2250 001e 2A69     		ldr	r2, [r5, #16]
 2251              	.LVL220:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2252              		.loc 1 578 64 view .LVU611
 2253 0020 0134     		adds	r4, r4, #1
 2254              	.LVL221:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2255              		.loc 1 578 57 view .LVU612
 2256 0022 4FF0FF33 		mov	r3, #-1
 2257 0026 A340     		lsls	r3, r3, r4
 2258              	.LVL222:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2259              		.loc 1 579 3 is_stmt 1 view .LVU613
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2260              		.loc 1 579 6 is_stmt 0 view .LVU614
 2261 0028 12EA0300 		ands	r0, r2, r3
 2262              	.LVL223:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2263              		.loc 1 579 6 view .LVU615
 2264 002c 12D0     		beq	.L145
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2265              		.loc 1 585 3 is_stmt 1 view .LVU616
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2266              		.loc 1 585 8 is_stmt 0 view .LVU617
 2267 002e FFF7FEFF 		bl	tlsf_ffs
 2268              	.LVL224:
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2269              		.loc 1 585 8 view .LVU618
 2270 0032 0446     		mov	r4, r0
 2271              	.LVL225:
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2272              		.loc 1 586 3 is_stmt 1 view .LVU619
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2273              		.loc 1 586 8 is_stmt 0 view .LVU620
 2274 0034 3860     		str	r0, [r7]
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2275              		.loc 1 587 3 is_stmt 1 view .LVU621
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2276              		.loc 1 587 10 is_stmt 0 view .LVU622
 2277 0036 031D     		adds	r3, r0, #4
 2278 0038 05EB8303 		add	r3, r5, r3, lsl #2
 2279 003c 5868     		ldr	r0, [r3, #4]
 2280              	.LVL226:
 2281              	.L141:
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2282              		.loc 1 587 10 view .LVU623
 2283              	.LBE7:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2284              		.loc 1 589 2 is_stmt 1 view .LVU624
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
ARM GAS  /tmp/ccGOfVui.s 			page 61


 2285              		.loc 1 589 2 view .LVU625
 2286 003e 00B9     		cbnz	r0, .L143
 2287              	.L144:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2288              		.loc 1 589 2 discriminator 1 view .LVU626
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2289              		.loc 1 589 2 discriminator 1 view .LVU627
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2290              		.loc 1 589 2 discriminator 1 view .LVU628
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2291              		.loc 1 589 2 discriminator 1 view .LVU629
 2292 0040 FEE7     		b	.L144
 2293              	.L143:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2294              		.loc 1 589 2 discriminator 2 view .LVU630
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2295              		.loc 1 590 2 discriminator 2 view .LVU631
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2296              		.loc 1 590 7 is_stmt 0 discriminator 2 view .LVU632
 2297 0042 FFF7FEFF 		bl	tlsf_ffs
 2298              	.LVL227:
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2299              		.loc 1 591 2 is_stmt 1 discriminator 2 view .LVU633
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2300              		.loc 1 591 7 is_stmt 0 discriminator 2 view .LVU634
 2301 0046 3060     		str	r0, [r6]
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2302              		.loc 1 594 2 is_stmt 1 discriminator 2 view .LVU635
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2303              		.loc 1 594 28 is_stmt 0 discriminator 2 view .LVU636
 2304 0048 00EB4413 		add	r3, r0, r4, lsl #5
 2305 004c 0E33     		adds	r3, r3, #14
 2306 004e 55F82300 		ldr	r0, [r5, r3, lsl #2]
 2307              	.LVL228:
 2308              	.L140:
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2309              		.loc 1 595 1 view .LVU637
 2310 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2311              	.LVL229:
 2312              	.L145:
 2313              	.LBB8:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2314              		.loc 1 582 11 view .LVU638
 2315 0054 0020     		movs	r0, #0
 2316              	.LVL230:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2317              		.loc 1 582 11 view .LVU639
 2318 0056 FCE7     		b	.L140
 2319              	.LBE8:
 2320              		.cfi_endproc
 2321              	.LFE26:
 2323              		.section	.text.block_locate_free,"ax",%progbits
 2324              		.align	1
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu fpv5-d16
ARM GAS  /tmp/ccGOfVui.s 			page 62


 2330              	block_locate_free:
 2331              	.LVL231:
 2332              	.LFB39:
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2333              		.loc 1 776 1 is_stmt 1 view -0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 8
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2337              		.loc 1 776 1 is_stmt 0 view .LVU641
 2338 0000 70B5     		push	{r4, r5, r6, lr}
 2339              	.LCFI28:
 2340              		.cfi_def_cfa_offset 16
 2341              		.cfi_offset 4, -16
 2342              		.cfi_offset 5, -12
 2343              		.cfi_offset 6, -8
 2344              		.cfi_offset 14, -4
 2345 0002 82B0     		sub	sp, sp, #8
 2346              	.LCFI29:
 2347              		.cfi_def_cfa_offset 24
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2348              		.loc 1 777 2 is_stmt 1 view .LVU642
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2349              		.loc 1 777 6 is_stmt 0 view .LVU643
 2350 0004 0023     		movs	r3, #0
 2351 0006 0193     		str	r3, [sp, #4]
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2352              		.loc 1 777 14 view .LVU644
 2353 0008 0093     		str	r3, [sp]
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2354              		.loc 1 778 2 is_stmt 1 view .LVU645
 2355              	.LVL232:
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2356              		.loc 1 780 2 view .LVU646
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2357              		.loc 1 780 5 is_stmt 0 view .LVU647
 2358 000a E1B1     		cbz	r1, .L151
 2359 000c 0446     		mov	r4, r0
 2360 000e 0E46     		mov	r6, r1
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2361              		.loc 1 782 3 is_stmt 1 view .LVU648
 2362 0010 6A46     		mov	r2, sp
 2363 0012 01A9     		add	r1, sp, #4
 2364              	.LVL233:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2365              		.loc 1 782 3 is_stmt 0 view .LVU649
 2366 0014 3046     		mov	r0, r6
 2367              	.LVL234:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2368              		.loc 1 782 3 view .LVU650
 2369 0016 FFF7FEFF 		bl	mapping_search
 2370              	.LVL235:
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2371              		.loc 1 790 3 is_stmt 1 view .LVU651
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2372              		.loc 1 790 10 is_stmt 0 view .LVU652
 2373 001a 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccGOfVui.s 			page 63


 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2374              		.loc 1 790 6 view .LVU653
 2375 001c 082B     		cmp	r3, #8
 2376 001e 16DC     		bgt	.L152
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2377              		.loc 1 792 4 is_stmt 1 view .LVU654
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2378              		.loc 1 792 12 is_stmt 0 view .LVU655
 2379 0020 6A46     		mov	r2, sp
 2380 0022 01A9     		add	r1, sp, #4
 2381 0024 2046     		mov	r0, r4
 2382 0026 FFF7FEFF 		bl	search_suitable_block
 2383              	.LVL236:
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2384              		.loc 1 796 2 is_stmt 1 view .LVU656
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2385              		.loc 1 796 5 is_stmt 0 view .LVU657
 2386 002a 0546     		mov	r5, r0
 2387 002c 60B1     		cbz	r0, .L147
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2388              		.loc 1 798 3 is_stmt 1 view .LVU658
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2389              		.loc 1 798 3 view .LVU659
 2390 002e FFF7FEFF 		bl	block_size
 2391              	.LVL237:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2392              		.loc 1 798 3 is_stmt 0 view .LVU660
 2393 0032 B042     		cmp	r0, r6
 2394 0034 00D2     		bcs	.L149
 2395              	.L150:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2396              		.loc 1 798 3 is_stmt 1 discriminator 1 view .LVU661
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2397              		.loc 1 798 3 discriminator 1 view .LVU662
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2398              		.loc 1 798 3 discriminator 1 view .LVU663
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2399              		.loc 1 798 3 discriminator 1 view .LVU664
 2400 0036 FEE7     		b	.L150
 2401              	.L149:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2402              		.loc 1 798 3 discriminator 2 view .LVU665
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2403              		.loc 1 799 3 discriminator 2 view .LVU666
 2404 0038 009B     		ldr	r3, [sp]
 2405 003a 019A     		ldr	r2, [sp, #4]
 2406 003c 2946     		mov	r1, r5
 2407 003e 2046     		mov	r0, r4
 2408 0040 FFF7FEFF 		bl	remove_free_block
 2409              	.LVL238:
 2410 0044 00E0     		b	.L147
 2411              	.LVL239:
 2412              	.L151:
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2413              		.loc 1 778 18 is_stmt 0 view .LVU667
 2414 0046 0025     		movs	r5, #0
 2415              	.LVL240:
ARM GAS  /tmp/ccGOfVui.s 			page 64


 2416              	.L147:
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2417              		.loc 1 803 1 view .LVU668
 2418 0048 2846     		mov	r0, r5
 2419 004a 02B0     		add	sp, sp, #8
 2420              	.LCFI30:
 2421              		.cfi_remember_state
 2422              		.cfi_def_cfa_offset 16
 2423              		@ sp needed
 2424 004c 70BD     		pop	{r4, r5, r6, pc}
 2425              	.LVL241:
 2426              	.L152:
 2427              	.LCFI31:
 2428              		.cfi_restore_state
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2429              		.loc 1 778 18 view .LVU669
 2430 004e 0025     		movs	r5, #0
 2431              	.LVL242:
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2432              		.loc 1 802 2 is_stmt 1 view .LVU670
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2433              		.loc 1 802 9 is_stmt 0 view .LVU671
 2434 0050 FAE7     		b	.L147
 2435              		.cfi_endproc
 2436              	.LFE39:
 2438              		.section	.text.lv_tlsf_check,"ax",%progbits
 2439              		.align	1
 2440              		.global	lv_tlsf_check
 2441              		.syntax unified
 2442              		.thumb
 2443              		.thumb_func
 2444              		.fpu fpv5-d16
 2446              	lv_tlsf_check:
 2447              	.LVL243:
 2448              	.LFB43:
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2449              		.loc 1 867 1 is_stmt 1 view -0
 2450              		.cfi_startproc
 2451              		@ args = 0, pretend = 0, frame = 8
 2452              		@ frame_needed = 0, uses_anonymous_args = 0
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2453              		.loc 1 867 1 is_stmt 0 view .LVU673
 2454 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2455              	.LCFI32:
 2456              		.cfi_def_cfa_offset 24
 2457              		.cfi_offset 4, -24
 2458              		.cfi_offset 5, -20
 2459              		.cfi_offset 6, -16
 2460              		.cfi_offset 7, -12
 2461              		.cfi_offset 8, -8
 2462              		.cfi_offset 14, -4
 2463 0004 82B0     		sub	sp, sp, #8
 2464              	.LCFI33:
 2465              		.cfi_def_cfa_offset 32
 2466 0006 0546     		mov	r5, r0
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2467              		.loc 1 868 2 is_stmt 1 view .LVU674
ARM GAS  /tmp/ccGOfVui.s 			page 65


 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 2468              		.loc 1 870 2 view .LVU675
 2469              	.LVL244:
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2470              		.loc 1 871 2 view .LVU676
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2471              		.loc 1 874 2 view .LVU677
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2472              		.loc 1 874 9 is_stmt 0 view .LVU678
 2473 0008 0026     		movs	r6, #0
 2474              	.LVL245:
 2475              	.L155:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2476              		.loc 1 874 14 is_stmt 1 discriminator 1 view .LVU679
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2477              		.loc 1 874 2 is_stmt 0 discriminator 1 view .LVU680
 2478 000a 082E     		cmp	r6, #8
 2479 000c 4FDC     		bgt	.L182
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2480              		.loc 1 876 10 view .LVU681
 2481 000e 0027     		movs	r7, #0
 2482              	.L179:
 2483              	.LVL246:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2484              		.loc 1 876 15 is_stmt 1 discriminator 1 view .LVU682
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2485              		.loc 1 876 3 is_stmt 0 discriminator 1 view .LVU683
 2486 0010 1F2F     		cmp	r7, #31
 2487 0012 4ADC     		bgt	.L183
 2488              	.LBB9:
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2489              		.loc 1 878 4 is_stmt 1 view .LVU684
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2490              		.loc 1 878 30 is_stmt 0 view .LVU685
 2491 0014 2A69     		ldr	r2, [r5, #16]
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2492              		.loc 1 878 48 view .LVU686
 2493 0016 0123     		movs	r3, #1
 2494 0018 03FA06FC 		lsl	ip, r3, r6
 2495              	.LVL247:
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2496              		.loc 1 879 4 is_stmt 1 view .LVU687
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2497              		.loc 1 879 42 is_stmt 0 view .LVU688
 2498 001c 311D     		adds	r1, r6, #4
 2499 001e 05EB8101 		add	r1, r5, r1, lsl #2
 2500 0022 4868     		ldr	r0, [r1, #4]
 2501              	.LVL248:
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2502              		.loc 1 880 4 is_stmt 1 view .LVU689
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2503              		.loc 1 880 37 is_stmt 0 view .LVU690
 2504 0024 BB40     		lsls	r3, r3, r7
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2505              		.loc 1 880 31 view .LVU691
 2506 0026 0340     		ands	r3, r3, r0
 2507              	.LVL249:
ARM GAS  /tmp/ccGOfVui.s 			page 66


 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2508              		.loc 1 881 4 is_stmt 1 view .LVU692
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2509              		.loc 1 881 26 is_stmt 0 view .LVU693
 2510 0028 07EB4611 		add	r1, r7, r6, lsl #5
 2511 002c 0E31     		adds	r1, r1, #14
 2512 002e 55F82140 		ldr	r4, [r5, r1, lsl #2]
 2513              	.LVL250:
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2514              		.loc 1 884 4 is_stmt 1 view .LVU694
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2515              		.loc 1 884 7 is_stmt 0 view .LVU695
 2516 0032 12EA0C0F 		tst	r2, ip
 2517 0036 00D1     		bne	.L156
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2518              		.loc 1 886 5 is_stmt 1 view .LVU696
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2519              		.loc 1 886 5 view .LVU697
 2520 0038 1BB9     		cbnz	r3, .L157
 2521              	.L156:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2522              		.loc 1 886 60 discriminator 5 view .LVU698
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2523              		.loc 1 889 4 discriminator 5 view .LVU699
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2524              		.loc 1 889 7 is_stmt 0 discriminator 5 view .LVU700
 2525 003a 1BB9     		cbnz	r3, .L158
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2526              		.loc 1 891 5 is_stmt 1 view .LVU701
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2527              		.loc 1 891 5 view .LVU702
 2528 003c A542     		cmp	r5, r4
 2529 003e 32D0     		beq	.L159
 2530              	.L160:
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2531              		.loc 1 891 5 discriminator 2 view .LVU703
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2532              		.loc 1 891 5 discriminator 2 view .LVU704
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2533              		.loc 1 891 5 discriminator 2 view .LVU705
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2534              		.loc 1 891 5 discriminator 2 view .LVU706
 2535 0040 FEE7     		b	.L160
 2536              	.L157:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2537              		.loc 1 886 5 discriminator 1 view .LVU707
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2538              		.loc 1 886 5 discriminator 1 view .LVU708
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2539              		.loc 1 886 5 discriminator 1 view .LVU709
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2540              		.loc 1 886 5 discriminator 1 view .LVU710
 2541 0042 FEE7     		b	.L157
 2542              	.L158:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2543              		.loc 1 896 4 view .LVU711
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
ARM GAS  /tmp/ccGOfVui.s 			page 67


 2544              		.loc 1 896 4 view .LVU712
 2545 0044 38B3     		cbz	r0, .L162
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2546              		.loc 1 896 4 discriminator 5 view .LVU713
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2547              		.loc 1 896 4 discriminator 5 view .LVU714
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2548              		.loc 1 896 64 discriminator 5 view .LVU715
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2549              		.loc 1 897 4 discriminator 5 view .LVU716
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2550              		.loc 1 897 4 discriminator 5 view .LVU717
 2551 0046 A542     		cmp	r5, r4
 2552 0048 26D0     		beq	.L164
 2553              	.LVL251:
 2554              	.L163:
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2555              		.loc 1 899 10 view .LVU718
 2556 004a A542     		cmp	r5, r4
 2557 004c 2BD0     		beq	.L159
 2558              	.LBB10:
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 2559              		.loc 1 901 5 view .LVU719
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2560              		.loc 1 902 5 view .LVU720
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2561              		.loc 1 902 5 view .LVU721
 2562 004e 2046     		mov	r0, r4
 2563 0050 FFF7FEFF 		bl	block_is_free
 2564              	.LVL252:
 2565 0054 08B3     		cbz	r0, .L166
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2566              		.loc 1 902 5 discriminator 9 view .LVU722
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2567              		.loc 1 902 5 discriminator 9 view .LVU723
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2568              		.loc 1 902 64 discriminator 9 view .LVU724
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2569              		.loc 1 903 5 discriminator 9 view .LVU725
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2570              		.loc 1 903 5 discriminator 9 view .LVU726
 2571 0056 2046     		mov	r0, r4
 2572 0058 FFF7FEFF 		bl	block_is_prev_free
 2573              	.LVL253:
 2574 005c F0B9     		cbnz	r0, .L168
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2575              		.loc 1 903 5 discriminator 5 view .LVU727
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2576              		.loc 1 903 5 discriminator 5 view .LVU728
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2577              		.loc 1 903 78 discriminator 5 view .LVU729
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2578              		.loc 1 904 5 discriminator 5 view .LVU730
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2579              		.loc 1 904 5 discriminator 5 view .LVU731
 2580 005e 2046     		mov	r0, r4
 2581 0060 FFF7FEFF 		bl	block_next
ARM GAS  /tmp/ccGOfVui.s 			page 68


 2582              	.LVL254:
 2583 0064 8046     		mov	r8, r0
 2584 0066 FFF7FEFF 		bl	block_is_free
 2585              	.LVL255:
 2586 006a C0B9     		cbnz	r0, .L170
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2587              		.loc 1 904 5 discriminator 5 view .LVU732
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2588              		.loc 1 904 5 discriminator 5 view .LVU733
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2589              		.loc 1 904 85 discriminator 5 view .LVU734
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2590              		.loc 1 905 5 discriminator 5 view .LVU735
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2591              		.loc 1 905 5 discriminator 5 view .LVU736
 2592 006c 4046     		mov	r0, r8
 2593 006e FFF7FEFF 		bl	block_is_prev_free
 2594              	.LVL256:
 2595 0072 A8B1     		cbz	r0, .L172
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2596              		.loc 1 905 5 discriminator 9 view .LVU737
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2597              		.loc 1 905 5 discriminator 9 view .LVU738
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2598              		.loc 1 905 81 discriminator 9 view .LVU739
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2599              		.loc 1 906 5 discriminator 9 view .LVU740
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2600              		.loc 1 906 5 discriminator 9 view .LVU741
 2601 0074 2046     		mov	r0, r4
 2602 0076 FFF7FEFF 		bl	block_size
 2603              	.LVL257:
 2604 007a 0B28     		cmp	r0, #11
 2605 007c 11D9     		bls	.L174
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2606              		.loc 1 906 5 discriminator 9 view .LVU742
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2607              		.loc 1 906 5 discriminator 9 view .LVU743
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2608              		.loc 1 906 81 discriminator 9 view .LVU744
 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 2609              		.loc 1 908 5 discriminator 9 view .LVU745
 2610 007e 01AA     		add	r2, sp, #4
 2611 0080 6946     		mov	r1, sp
 2612 0082 FFF7FEFF 		bl	mapping_insert
 2613              	.LVL258:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2614              		.loc 1 909 5 discriminator 9 view .LVU746
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2615              		.loc 1 909 5 discriminator 9 view .LVU747
 2616 0086 009B     		ldr	r3, [sp]
 2617 0088 B342     		cmp	r3, r6
 2618 008a 0BD1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2619              		.loc 1 909 5 is_stmt 0 discriminator 2 view .LVU748
 2620 008c 019B     		ldr	r3, [sp, #4]
 2621 008e BB42     		cmp	r3, r7
ARM GAS  /tmp/ccGOfVui.s 			page 69


 2622 0090 08D1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2623              		.loc 1 909 5 is_stmt 1 discriminator 9 view .LVU749
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2624              		.loc 1 909 5 discriminator 9 view .LVU750
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2625              		.loc 1 909 76 discriminator 9 view .LVU751
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2626              		.loc 1 910 5 discriminator 9 view .LVU752
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2627              		.loc 1 910 11 is_stmt 0 discriminator 9 view .LVU753
 2628 0092 A468     		ldr	r4, [r4, #8]
 2629              	.LVL259:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2630              		.loc 1 910 11 discriminator 9 view .LVU754
 2631 0094 D9E7     		b	.L163
 2632              	.LVL260:
 2633              	.L162:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2634              		.loc 1 910 11 discriminator 9 view .LVU755
 2635              	.LBE10:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2636              		.loc 1 896 4 is_stmt 1 discriminator 3 view .LVU756
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2637              		.loc 1 896 4 discriminator 3 view .LVU757
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2638              		.loc 1 896 4 discriminator 3 view .LVU758
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2639              		.loc 1 896 4 discriminator 3 view .LVU759
 2640 0096 FEE7     		b	.L162
 2641              	.L164:
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2642              		.loc 1 897 4 discriminator 4 view .LVU760
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2643              		.loc 1 897 4 discriminator 4 view .LVU761
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2644              		.loc 1 897 4 discriminator 4 view .LVU762
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2645              		.loc 1 897 4 discriminator 4 view .LVU763
 2646 0098 FEE7     		b	.L164
 2647              	.LVL261:
 2648              	.L166:
 2649              	.LBB11:
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2650              		.loc 1 902 5 discriminator 5 view .LVU764
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2651              		.loc 1 902 5 discriminator 5 view .LVU765
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2652              		.loc 1 902 5 discriminator 5 view .LVU766
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2653              		.loc 1 902 5 discriminator 5 view .LVU767
 2654 009a FEE7     		b	.L166
 2655              	.L168:
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2656              		.loc 1 903 5 discriminator 6 view .LVU768
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2657              		.loc 1 903 5 discriminator 6 view .LVU769
ARM GAS  /tmp/ccGOfVui.s 			page 70


 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2658              		.loc 1 903 5 discriminator 6 view .LVU770
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2659              		.loc 1 903 5 discriminator 6 view .LVU771
 2660 009c FEE7     		b	.L168
 2661              	.L170:
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2662              		.loc 1 904 5 discriminator 7 view .LVU772
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2663              		.loc 1 904 5 discriminator 7 view .LVU773
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2664              		.loc 1 904 5 discriminator 7 view .LVU774
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2665              		.loc 1 904 5 discriminator 7 view .LVU775
 2666 009e FEE7     		b	.L170
 2667              	.L172:
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2668              		.loc 1 905 5 discriminator 8 view .LVU776
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2669              		.loc 1 905 5 discriminator 8 view .LVU777
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2670              		.loc 1 905 5 discriminator 8 view .LVU778
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2671              		.loc 1 905 5 discriminator 8 view .LVU779
 2672 00a0 FEE7     		b	.L172
 2673              	.L174:
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2674              		.loc 1 906 5 discriminator 9 view .LVU780
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2675              		.loc 1 906 5 discriminator 9 view .LVU781
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2676              		.loc 1 906 5 discriminator 9 view .LVU782
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2677              		.loc 1 906 5 discriminator 9 view .LVU783
 2678 00a2 FEE7     		b	.L174
 2679              	.L175:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2680              		.loc 1 909 5 discriminator 10 view .LVU784
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2681              		.loc 1 909 5 discriminator 10 view .LVU785
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2682              		.loc 1 909 5 discriminator 10 view .LVU786
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2683              		.loc 1 909 5 discriminator 10 view .LVU787
 2684 00a4 FEE7     		b	.L175
 2685              	.L159:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2686              		.loc 1 909 5 is_stmt 0 discriminator 10 view .LVU788
 2687              	.LBE11:
 2688              	.LBE9:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2689              		.loc 1 876 35 is_stmt 1 discriminator 2 view .LVU789
 2690 00a6 0137     		adds	r7, r7, #1
 2691              	.LVL262:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2692              		.loc 1 876 35 is_stmt 0 discriminator 2 view .LVU790
 2693 00a8 B2E7     		b	.L179
ARM GAS  /tmp/ccGOfVui.s 			page 71


 2694              	.LVL263:
 2695              	.L183:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2696              		.loc 1 874 34 is_stmt 1 discriminator 2 view .LVU791
 2697 00aa 0136     		adds	r6, r6, #1
 2698              	.LVL264:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2699              		.loc 1 874 34 is_stmt 0 discriminator 2 view .LVU792
 2700 00ac ADE7     		b	.L155
 2701              	.LVL265:
 2702              	.L182:
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2703              		.loc 1 915 2 is_stmt 1 view .LVU793
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2704              		.loc 1 916 1 is_stmt 0 view .LVU794
 2705 00ae 0020     		movs	r0, #0
 2706 00b0 02B0     		add	sp, sp, #8
 2707              	.LCFI34:
 2708              		.cfi_def_cfa_offset 24
 2709              		@ sp needed
 2710 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2711              		.loc 1 916 1 view .LVU795
 2712              		.cfi_endproc
 2713              	.LFE43:
 2715              		.section	.text.lv_tlsf_walk_pool,"ax",%progbits
 2716              		.align	1
 2717              		.global	lv_tlsf_walk_pool
 2718              		.syntax unified
 2719              		.thumb
 2720              		.thumb_func
 2721              		.fpu fpv5-d16
 2723              	lv_tlsf_walk_pool:
 2724              	.LVL266:
 2725              	.LFB45:
 925:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 926:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void* user)
 927:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2726              		.loc 1 927 1 is_stmt 1 view -0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 0
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730              		.loc 1 927 1 is_stmt 0 view .LVU797
 2731 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2732              	.LCFI35:
 2733              		.cfi_def_cfa_offset 24
 2734              		.cfi_offset 4, -24
 2735              		.cfi_offset 5, -20
 2736              		.cfi_offset 6, -16
 2737              		.cfi_offset 7, -12
 2738              		.cfi_offset 8, -8
 2739              		.cfi_offset 14, -4
 2740 0004 1746     		mov	r7, r2
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walker pool_walker = walker ? walker : default_walker;
 2741              		.loc 1 928 2 is_stmt 1 view .LVU798
 2742              		.loc 1 928 47 is_stmt 0 view .LVU799
 2743 0006 8846     		mov	r8, r1
ARM GAS  /tmp/ccGOfVui.s 			page 72


 2744 0008 29B1     		cbz	r1, .L191
 2745              	.L185:
 2746              	.LVL267:
 929:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2747              		.loc 1 929 2 is_stmt 1 discriminator 4 view .LVU800
 930:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(pool, -(int)block_header_overhead);
 2748              		.loc 1 930 3 is_stmt 0 discriminator 4 view .LVU801
 2749 000a 6FF00301 		mvn	r1, #3
 2750              	.LVL268:
 2751              		.loc 1 930 3 discriminator 4 view .LVU802
 2752 000e FFF7FEFF 		bl	offset_to_block
 2753              	.LVL269:
 2754              		.loc 1 930 3 discriminator 4 view .LVU803
 2755 0012 0446     		mov	r4, r0
 2756              	.LVL270:
 931:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	while (block && !block_is_last(block))
 2757              		.loc 1 932 2 is_stmt 1 discriminator 4 view .LVU804
 2758              		.loc 1 932 8 is_stmt 0 discriminator 4 view .LVU805
 2759 0014 18E0     		b	.L186
 2760              	.LVL271:
 2761              	.L191:
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2762              		.loc 1 928 47 view .LVU806
 2763 0016 DFF84080 		ldr	r8, .L192
 2764 001a F6E7     		b	.L185
 2765              	.LVL272:
 2766              	.L188:
 933:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		pool_walker(
 2767              		.loc 1 934 3 is_stmt 1 view .LVU807
 2768 001c 2046     		mov	r0, r4
 2769 001e FFF7FEFF 		bl	block_to_ptr
 2770              	.LVL273:
 2771 0022 0546     		mov	r5, r0
 2772 0024 2046     		mov	r0, r4
 2773 0026 FFF7FEFF 		bl	block_size
 2774              	.LVL274:
 2775 002a 0646     		mov	r6, r0
 935:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 936:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_size(block),
 937:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			!block_is_free(block),
 2776              		.loc 1 937 5 is_stmt 0 view .LVU808
 2777 002c 2046     		mov	r0, r4
 2778 002e FFF7FEFF 		bl	block_is_free
 2779              	.LVL275:
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 2780              		.loc 1 934 3 view .LVU809
 2781 0032 3B46     		mov	r3, r7
 2782 0034 B0FA80F2 		clz	r2, r0
 2783 0038 5209     		lsrs	r2, r2, #5
 2784 003a 3146     		mov	r1, r6
 2785 003c 2846     		mov	r0, r5
 2786 003e C047     		blx	r8
 2787              	.LVL276:
 938:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			user);
 939:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_next(block);
ARM GAS  /tmp/ccGOfVui.s 			page 73


 2788              		.loc 1 939 3 is_stmt 1 view .LVU810
 2789              		.loc 1 939 11 is_stmt 0 view .LVU811
 2790 0040 2046     		mov	r0, r4
 2791 0042 FFF7FEFF 		bl	block_next
 2792              	.LVL277:
 2793 0046 0446     		mov	r4, r0
 2794              	.LVL278:
 2795              	.L186:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2796              		.loc 1 932 8 is_stmt 1 view .LVU812
 2797 0048 24B1     		cbz	r4, .L184
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2798              		.loc 1 932 19 is_stmt 0 discriminator 1 view .LVU813
 2799 004a 2046     		mov	r0, r4
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2800              		.loc 1 932 19 discriminator 1 view .LVU814
 2801 004c FFF7FEFF 		bl	block_is_last
 2802              	.LVL279:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2803              		.loc 1 932 15 discriminator 1 view .LVU815
 2804 0050 0028     		cmp	r0, #0
 2805 0052 E3D0     		beq	.L188
 2806              	.L184:
 940:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 941:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2807              		.loc 1 941 1 view .LVU816
 2808 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2809              	.LVL280:
 2810              	.L193:
 2811              		.loc 1 941 1 view .LVU817
 2812              		.align	2
 2813              	.L192:
 2814 0058 00000000 		.word	default_walker
 2815              		.cfi_endproc
 2816              	.LFE45:
 2818              		.section	.text.lv_tlsf_block_size,"ax",%progbits
 2819              		.align	1
 2820              		.global	lv_tlsf_block_size
 2821              		.syntax unified
 2822              		.thumb
 2823              		.thumb_func
 2824              		.fpu fpv5-d16
 2826              	lv_tlsf_block_size:
 2827              	.LVL281:
 2828              	.LFB46:
 942:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 943:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size(void* ptr)
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2829              		.loc 1 944 1 is_stmt 1 view -0
 2830              		.cfi_startproc
 2831              		@ args = 0, pretend = 0, frame = 0
 2832              		@ frame_needed = 0, uses_anonymous_args = 0
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2833              		.loc 1 945 2 view .LVU819
 946:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2834              		.loc 1 946 2 view .LVU820
 2835              		.loc 1 946 5 is_stmt 0 view .LVU821
ARM GAS  /tmp/ccGOfVui.s 			page 74


 2836 0000 28B1     		cbz	r0, .L196
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2837              		.loc 1 944 1 view .LVU822
 2838 0002 08B5     		push	{r3, lr}
 2839              	.LCFI36:
 2840              		.cfi_def_cfa_offset 8
 2841              		.cfi_offset 3, -8
 2842              		.cfi_offset 14, -4
 2843              	.LBB12:
 947:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 948:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const block_header_t* block = block_from_ptr(ptr);
 2844              		.loc 1 948 3 is_stmt 1 view .LVU823
 2845              		.loc 1 948 33 is_stmt 0 view .LVU824
 2846 0004 FFF7FEFF 		bl	block_from_ptr
 2847              	.LVL282:
 949:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size = block_size(block);
 2848              		.loc 1 949 3 is_stmt 1 view .LVU825
 2849              		.loc 1 949 10 is_stmt 0 view .LVU826
 2850 0008 FFF7FEFF 		bl	block_size
 2851              	.LVL283:
 2852              		.loc 1 949 10 view .LVU827
 2853              	.LBE12:
 950:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return size;
 952:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2854              		.loc 1 952 1 view .LVU828
 2855 000c 08BD     		pop	{r3, pc}
 2856              	.LVL284:
 2857              	.L196:
 2858              	.LCFI37:
 2859              		.cfi_def_cfa_offset 0
 2860              		.cfi_restore 3
 2861              		.cfi_restore 14
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2862              		.loc 1 945 9 view .LVU829
 2863 000e 0020     		movs	r0, #0
 2864              	.LVL285:
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2865              		.loc 1 951 2 is_stmt 1 view .LVU830
 2866              		.loc 1 952 1 is_stmt 0 view .LVU831
 2867 0010 7047     		bx	lr
 2868              		.cfi_endproc
 2869              	.LFE46:
 2871              		.section	.text.lv_tlsf_check_pool,"ax",%progbits
 2872              		.align	1
 2873              		.global	lv_tlsf_check_pool
 2874              		.syntax unified
 2875              		.thumb
 2876              		.thumb_func
 2877              		.fpu fpv5-d16
 2879              	lv_tlsf_check_pool:
 2880              	.LVL286:
 2881              	.LFB47:
 953:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 954:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check_pool(lv_pool_t pool)
 955:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2882              		.loc 1 955 1 is_stmt 1 view -0
ARM GAS  /tmp/ccGOfVui.s 			page 75


 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 8
 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 2886              		.loc 1 955 1 is_stmt 0 view .LVU833
 2887 0000 00B5     		push	{lr}
 2888              	.LCFI38:
 2889              		.cfi_def_cfa_offset 4
 2890              		.cfi_offset 14, -4
 2891 0002 83B0     		sub	sp, sp, #12
 2892              	.LCFI39:
 2893              		.cfi_def_cfa_offset 16
 956:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the blocks are physically correct. */
 957:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t integ = { 0, 0 };
 2894              		.loc 1 957 2 is_stmt 1 view .LVU834
 2895              		.loc 1 957 14 is_stmt 0 view .LVU835
 2896 0004 0023     		movs	r3, #0
 2897 0006 0093     		str	r3, [sp]
 2898 0008 0193     		str	r3, [sp, #4]
 958:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walk_pool(pool, integrity_walker, &integ);
 2899              		.loc 1 958 2 is_stmt 1 view .LVU836
 2900 000a 6A46     		mov	r2, sp
 2901 000c 0349     		ldr	r1, .L203
 2902 000e FFF7FEFF 		bl	lv_tlsf_walk_pool
 2903              	.LVL287:
 959:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 960:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return integ.status;
 2904              		.loc 1 960 2 view .LVU837
 961:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2905              		.loc 1 961 1 is_stmt 0 view .LVU838
 2906 0012 0198     		ldr	r0, [sp, #4]
 2907 0014 03B0     		add	sp, sp, #12
 2908              	.LCFI40:
 2909              		.cfi_def_cfa_offset 4
 2910              		@ sp needed
 2911 0016 5DF804FB 		ldr	pc, [sp], #4
 2912              	.L204:
 2913 001a 00BF     		.align	2
 2914              	.L203:
 2915 001c 00000000 		.word	integrity_walker
 2916              		.cfi_endproc
 2917              	.LFE47:
 2919              		.section	.text.lv_tlsf_size,"ax",%progbits
 2920              		.align	1
 2921              		.global	lv_tlsf_size
 2922              		.syntax unified
 2923              		.thumb
 2924              		.thumb_func
 2925              		.fpu fpv5-d16
 2927              	lv_tlsf_size:
 2928              	.LFB48:
 962:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 963:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 964:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Size of the TLSF structures in a given memory block passed to
 965:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_create, equal to the size of a control_t
 966:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 967:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_size(void)
 968:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccGOfVui.s 			page 76


 2929              		.loc 1 968 1 is_stmt 1 view -0
 2930              		.cfi_startproc
 2931              		@ args = 0, pretend = 0, frame = 0
 2932              		@ frame_needed = 0, uses_anonymous_args = 0
 2933              		@ link register save eliminated.
 969:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return sizeof(control_t);
 2934              		.loc 1 969 2 view .LVU840
 970:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2935              		.loc 1 970 1 is_stmt 0 view .LVU841
 2936 0000 4FF49760 		mov	r0, #1208
 2937 0004 7047     		bx	lr
 2938              		.cfi_endproc
 2939              	.LFE48:
 2941              		.section	.text.lv_tlsf_align_size,"ax",%progbits
 2942              		.align	1
 2943              		.global	lv_tlsf_align_size
 2944              		.syntax unified
 2945              		.thumb
 2946              		.thumb_func
 2947              		.fpu fpv5-d16
 2949              	lv_tlsf_align_size:
 2950              	.LFB49:
 971:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 972:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_align_size(void)
 973:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2951              		.loc 1 973 1 is_stmt 1 view -0
 2952              		.cfi_startproc
 2953              		@ args = 0, pretend = 0, frame = 0
 2954              		@ frame_needed = 0, uses_anonymous_args = 0
 2955              		@ link register save eliminated.
 974:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return ALIGN_SIZE;
 2956              		.loc 1 974 2 view .LVU843
 975:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2957              		.loc 1 975 1 is_stmt 0 view .LVU844
 2958 0000 0420     		movs	r0, #4
 2959 0002 7047     		bx	lr
 2960              		.cfi_endproc
 2961              	.LFE49:
 2963              		.section	.text.lv_tlsf_block_size_min,"ax",%progbits
 2964              		.align	1
 2965              		.global	lv_tlsf_block_size_min
 2966              		.syntax unified
 2967              		.thumb
 2968              		.thumb_func
 2969              		.fpu fpv5-d16
 2971              	lv_tlsf_block_size_min:
 2972              	.LFB50:
 976:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 977:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_min(void)
 978:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2973              		.loc 1 978 1 is_stmt 1 view -0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 0
 2976              		@ frame_needed = 0, uses_anonymous_args = 0
 2977              		@ link register save eliminated.
 979:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_min;
 2978              		.loc 1 979 2 view .LVU846
ARM GAS  /tmp/ccGOfVui.s 			page 77


 980:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2979              		.loc 1 980 1 is_stmt 0 view .LVU847
 2980 0000 0C20     		movs	r0, #12
 2981 0002 7047     		bx	lr
 2982              		.cfi_endproc
 2983              	.LFE50:
 2985              		.section	.text.lv_tlsf_block_size_max,"ax",%progbits
 2986              		.align	1
 2987              		.global	lv_tlsf_block_size_max
 2988              		.syntax unified
 2989              		.thumb
 2990              		.thumb_func
 2991              		.fpu fpv5-d16
 2993              	lv_tlsf_block_size_max:
 2994              	.LFB51:
 981:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 982:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_max(void)
 983:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2995              		.loc 1 983 1 is_stmt 1 view -0
 2996              		.cfi_startproc
 2997              		@ args = 0, pretend = 0, frame = 0
 2998              		@ frame_needed = 0, uses_anonymous_args = 0
 2999              		@ link register save eliminated.
 984:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_max;
 3000              		.loc 1 984 2 view .LVU849
 985:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3001              		.loc 1 985 1 is_stmt 0 view .LVU850
 3002 0000 4FF40040 		mov	r0, #32768
 3003 0004 7047     		bx	lr
 3004              		.cfi_endproc
 3005              	.LFE51:
 3007              		.section	.text.lv_tlsf_pool_overhead,"ax",%progbits
 3008              		.align	1
 3009              		.global	lv_tlsf_pool_overhead
 3010              		.syntax unified
 3011              		.thumb
 3012              		.thumb_func
 3013              		.fpu fpv5-d16
 3015              	lv_tlsf_pool_overhead:
 3016              	.LFB52:
 986:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 987:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 988:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Overhead of the TLSF structures in a given memory block passed to
 989:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_add_pool, equal to the overhead of a free block and the
 990:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** sentinel block.
 991:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 992:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_pool_overhead(void)
 993:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3017              		.loc 1 993 1 is_stmt 1 view -0
 3018              		.cfi_startproc
 3019              		@ args = 0, pretend = 0, frame = 0
 3020              		@ frame_needed = 0, uses_anonymous_args = 0
 3021              		@ link register save eliminated.
 994:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return 2 * block_header_overhead;
 3022              		.loc 1 994 2 view .LVU852
 995:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3023              		.loc 1 995 1 is_stmt 0 view .LVU853
ARM GAS  /tmp/ccGOfVui.s 			page 78


 3024 0000 0820     		movs	r0, #8
 3025 0002 7047     		bx	lr
 3026              		.cfi_endproc
 3027              	.LFE52:
 3029              		.section	.text.lv_tlsf_alloc_overhead,"ax",%progbits
 3030              		.align	1
 3031              		.global	lv_tlsf_alloc_overhead
 3032              		.syntax unified
 3033              		.thumb
 3034              		.thumb_func
 3035              		.fpu fpv5-d16
 3037              	lv_tlsf_alloc_overhead:
 3038              	.LFB53:
 996:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 997:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_alloc_overhead(void)
 998:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3039              		.loc 1 998 1 is_stmt 1 view -0
 3040              		.cfi_startproc
 3041              		@ args = 0, pretend = 0, frame = 0
 3042              		@ frame_needed = 0, uses_anonymous_args = 0
 3043              		@ link register save eliminated.
 999:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_header_overhead;
 3044              		.loc 1 999 2 view .LVU855
1000:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3045              		.loc 1 1000 1 is_stmt 0 view .LVU856
 3046 0000 0420     		movs	r0, #4
 3047 0002 7047     		bx	lr
 3048              		.cfi_endproc
 3049              	.LFE53:
 3051              		.section	.text.lv_tlsf_add_pool,"ax",%progbits
 3052              		.align	1
 3053              		.global	lv_tlsf_add_pool
 3054              		.syntax unified
 3055              		.thumb
 3056              		.thumb_func
 3057              		.fpu fpv5-d16
 3059              	lv_tlsf_add_pool:
 3060              	.LVL288:
 3061              	.LFB54:
1001:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1002:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void* mem, size_t bytes)
1003:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3062              		.loc 1 1003 1 is_stmt 1 view -0
 3063              		.cfi_startproc
 3064              		@ args = 0, pretend = 0, frame = 0
 3065              		@ frame_needed = 0, uses_anonymous_args = 0
 3066              		.loc 1 1003 1 is_stmt 0 view .LVU858
 3067 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3068              	.LCFI41:
 3069              		.cfi_def_cfa_offset 24
 3070              		.cfi_offset 3, -24
 3071              		.cfi_offset 4, -20
 3072              		.cfi_offset 5, -16
 3073              		.cfi_offset 6, -12
 3074              		.cfi_offset 7, -8
 3075              		.cfi_offset 14, -4
 3076 0002 0746     		mov	r7, r0
ARM GAS  /tmp/ccGOfVui.s 			page 79


 3077 0004 0C46     		mov	r4, r1
 3078 0006 1546     		mov	r5, r2
1004:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block;
 3079              		.loc 1 1004 2 is_stmt 1 view .LVU859
1005:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next;
 3080              		.loc 1 1005 2 view .LVU860
1006:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1007:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_overhead = lv_tlsf_pool_overhead();
 3081              		.loc 1 1007 2 view .LVU861
 3082              		.loc 1 1007 31 is_stmt 0 view .LVU862
 3083 0008 FFF7FEFF 		bl	lv_tlsf_pool_overhead
 3084              	.LVL289:
1008:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_bytes = align_down(bytes - pool_overhead, ALIGN_SIZE);
 3085              		.loc 1 1008 2 is_stmt 1 view .LVU863
 3086              		.loc 1 1008 28 is_stmt 0 view .LVU864
 3087 000c 0421     		movs	r1, #4
 3088 000e 281A     		subs	r0, r5, r0
 3089              	.LVL290:
 3090              		.loc 1 1008 28 view .LVU865
 3091 0010 FFF7FEFF 		bl	align_down
 3092              	.LVL291:
1009:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1010:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((ptrdiff_t)mem % ALIGN_SIZE) != 0)
 3093              		.loc 1 1010 2 is_stmt 1 view .LVU866
 3094              		.loc 1 1010 5 is_stmt 0 view .LVU867
 3095 0014 14F0030F 		tst	r4, #3
 3096 0018 28D1     		bne	.L213
 3097 001a 0546     		mov	r5, r0
 3098              	.LVL292:
1011:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1012:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory must be aligned by %u bytes.\n",
1013:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1015:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1016:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1017:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (pool_bytes < block_size_min || pool_bytes > block_size_max)
 3099              		.loc 1 1017 2 is_stmt 1 view .LVU868
 3100              		.loc 1 1017 34 is_stmt 0 view .LVU869
 3101 001c A0F10C02 		sub	r2, r0, #12
 3102              		.loc 1 1017 5 view .LVU870
 3103 0020 47F6F473 		movw	r3, #32756
 3104 0024 9A42     		cmp	r2, r3
 3105 0026 23D8     		bhi	.L214
1018:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1019:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1020:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between 0x%x and 0x%x00 bytes.\n", 
1021:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1022:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)((pool_overhead + block_size_max) / 256));
1023:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
1024:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between %u and %u bytes.\n", 
1025:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1026:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_max));
1027:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1029:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1030:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1031:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
ARM GAS  /tmp/ccGOfVui.s 			page 80


1032:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Create the main free block. Offset the start of the block slightly
1033:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** so that the prev_phys_block field falls outside of the pool -
1034:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** it will never be used.
1035:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1036:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block = offset_to_block(mem, -(tlsfptr_t)block_header_overhead);
 3106              		.loc 1 1036 2 is_stmt 1 view .LVU871
 3107              		.loc 1 1036 10 is_stmt 0 view .LVU872
 3108 0028 6FF00301 		mvn	r1, #3
 3109 002c 2046     		mov	r0, r4
 3110              	.LVL293:
 3111              		.loc 1 1036 10 view .LVU873
 3112 002e FFF7FEFF 		bl	offset_to_block
 3113              	.LVL294:
 3114 0032 0646     		mov	r6, r0
 3115              	.LVL295:
1037:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, pool_bytes);
 3116              		.loc 1 1037 2 is_stmt 1 view .LVU874
 3117 0034 2946     		mov	r1, r5
 3118 0036 FFF7FEFF 		bl	block_set_size
 3119              	.LVL296:
1038:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 3120              		.loc 1 1038 2 view .LVU875
 3121 003a 3046     		mov	r0, r6
 3122 003c FFF7FEFF 		bl	block_set_free
 3123              	.LVL297:
1039:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(block);
 3124              		.loc 1 1039 2 view .LVU876
 3125 0040 3046     		mov	r0, r6
 3126 0042 FFF7FEFF 		bl	block_set_prev_used
 3127              	.LVL298:
1040:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_insert(tlsf_cast(control_t*, tlsf), block);
 3128              		.loc 1 1040 2 view .LVU877
 3129 0046 3146     		mov	r1, r6
 3130 0048 3846     		mov	r0, r7
 3131 004a FFF7FEFF 		bl	block_insert
 3132              	.LVL299:
1041:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1042:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Split the block to create a zero-size sentinel block. */
1043:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next = block_link_next(block);
 3133              		.loc 1 1043 2 view .LVU878
 3134              		.loc 1 1043 9 is_stmt 0 view .LVU879
 3135 004e 3046     		mov	r0, r6
 3136 0050 FFF7FEFF 		bl	block_link_next
 3137              	.LVL300:
 3138 0054 0546     		mov	r5, r0
 3139              	.LVL301:
1044:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(next, 0);
 3140              		.loc 1 1044 2 is_stmt 1 view .LVU880
 3141 0056 0021     		movs	r1, #0
 3142 0058 FFF7FEFF 		bl	block_set_size
 3143              	.LVL302:
1045:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(next);
 3144              		.loc 1 1045 2 view .LVU881
 3145 005c 2846     		mov	r0, r5
 3146 005e FFF7FEFF 		bl	block_set_used
 3147              	.LVL303:
1046:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
ARM GAS  /tmp/ccGOfVui.s 			page 81


 3148              		.loc 1 1046 2 view .LVU882
 3149 0062 2846     		mov	r0, r5
 3150 0064 FFF7FEFF 		bl	block_set_prev_free
 3151              	.LVL304:
1047:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1048:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return mem;
 3152              		.loc 1 1048 2 view .LVU883
 3153              		.loc 1 1048 9 is_stmt 0 view .LVU884
 3154 0068 2046     		mov	r0, r4
 3155              	.LVL305:
 3156              	.L211:
1049:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3157              		.loc 1 1049 1 view .LVU885
 3158 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3159              	.LVL306:
 3160              	.L213:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3161              		.loc 1 1014 10 view .LVU886
 3162 006c 0020     		movs	r0, #0
 3163              	.LVL307:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3164              		.loc 1 1014 10 view .LVU887
 3165 006e FCE7     		b	.L211
 3166              	.LVL308:
 3167              	.L214:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3168              		.loc 1 1028 10 view .LVU888
 3169 0070 0020     		movs	r0, #0
 3170              	.LVL309:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3171              		.loc 1 1028 10 view .LVU889
 3172 0072 FAE7     		b	.L211
 3173              		.cfi_endproc
 3174              	.LFE54:
 3176              		.section	.text.lv_tlsf_remove_pool,"ax",%progbits
 3177              		.align	1
 3178              		.global	lv_tlsf_remove_pool
 3179              		.syntax unified
 3180              		.thumb
 3181              		.thumb_func
 3182              		.fpu fpv5-d16
 3184              	lv_tlsf_remove_pool:
 3185              	.LVL310:
 3186              	.LFB55:
1050:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1051:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)
1052:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3187              		.loc 1 1052 1 is_stmt 1 view -0
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 8
 3190              		@ frame_needed = 0, uses_anonymous_args = 0
 3191              		.loc 1 1052 1 is_stmt 0 view .LVU891
 3192 0000 70B5     		push	{r4, r5, r6, lr}
 3193              	.LCFI42:
 3194              		.cfi_def_cfa_offset 16
 3195              		.cfi_offset 4, -16
 3196              		.cfi_offset 5, -12
ARM GAS  /tmp/ccGOfVui.s 			page 82


 3197              		.cfi_offset 6, -8
 3198              		.cfi_offset 14, -4
 3199 0002 82B0     		sub	sp, sp, #8
 3200              	.LCFI43:
 3201              		.cfi_def_cfa_offset 24
 3202 0004 0546     		mov	r5, r0
 3203 0006 0846     		mov	r0, r1
 3204              	.LVL311:
1053:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3205              		.loc 1 1053 2 is_stmt 1 view .LVU892
1054:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = offset_to_block(pool, -(int)block_header_overhead);
 3206              		.loc 1 1054 2 view .LVU893
 3207              		.loc 1 1054 26 is_stmt 0 view .LVU894
 3208 0008 6FF00301 		mvn	r1, #3
 3209              	.LVL312:
 3210              		.loc 1 1054 26 view .LVU895
 3211 000c FFF7FEFF 		bl	offset_to_block
 3212              	.LVL313:
 3213              		.loc 1 1054 26 view .LVU896
 3214 0010 0446     		mov	r4, r0
 3215              	.LVL314:
1055:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1056:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 3216              		.loc 1 1056 2 is_stmt 1 view .LVU897
 3217              		.loc 1 1056 6 is_stmt 0 view .LVU898
 3218 0012 0023     		movs	r3, #0
 3219 0014 0193     		str	r3, [sp, #4]
 3220              		.loc 1 1056 14 view .LVU899
 3221 0016 0093     		str	r3, [sp]
1057:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1058:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block should be free");
 3222              		.loc 1 1058 2 is_stmt 1 view .LVU900
 3223              		.loc 1 1058 2 view .LVU901
 3224 0018 FFF7FEFF 		bl	block_is_free
 3225              	.LVL315:
 3226              		.loc 1 1058 2 is_stmt 0 view .LVU902
 3227 001c 00B9     		cbnz	r0, .L217
 3228              	.L218:
 3229              		.loc 1 1058 2 is_stmt 1 discriminator 1 view .LVU903
 3230              		.loc 1 1058 2 discriminator 1 view .LVU904
 3231              		.loc 1 1058 2 discriminator 1 view .LVU905
 3232              		.loc 1 1058 2 discriminator 1 view .LVU906
 3233 001e FEE7     		b	.L218
 3234              	.L217:
 3235              		.loc 1 1058 2 discriminator 4 view .LVU907
1059:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
 3236              		.loc 1 1059 2 discriminator 4 view .LVU908
 3237              		.loc 1 1059 2 discriminator 4 view .LVU909
 3238 0020 2046     		mov	r0, r4
 3239 0022 FFF7FEFF 		bl	block_next
 3240              	.LVL316:
 3241 0026 0646     		mov	r6, r0
 3242 0028 FFF7FEFF 		bl	block_is_free
 3243              	.LVL317:
 3244 002c 00B1     		cbz	r0, .L219
 3245              	.L220:
 3246              		.loc 1 1059 2 discriminator 2 view .LVU910
ARM GAS  /tmp/ccGOfVui.s 			page 83


 3247              		.loc 1 1059 2 discriminator 2 view .LVU911
 3248              		.loc 1 1059 2 discriminator 2 view .LVU912
 3249              		.loc 1 1059 2 discriminator 2 view .LVU913
 3250 002e FEE7     		b	.L220
 3251              	.L219:
 3252              		.loc 1 1059 2 discriminator 2 view .LVU914
1060:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
 3253              		.loc 1 1060 2 discriminator 2 view .LVU915
 3254              		.loc 1 1060 2 discriminator 2 view .LVU916
 3255 0030 3046     		mov	r0, r6
 3256 0032 FFF7FEFF 		bl	block_size
 3257              	.LVL318:
 3258 0036 00B1     		cbz	r0, .L221
 3259              	.L222:
 3260              		.loc 1 1060 2 discriminator 3 view .LVU917
 3261              		.loc 1 1060 2 discriminator 3 view .LVU918
 3262              		.loc 1 1060 2 discriminator 3 view .LVU919
 3263              		.loc 1 1060 2 discriminator 3 view .LVU920
 3264 0038 FEE7     		b	.L222
 3265              	.L221:
 3266              		.loc 1 1060 2 discriminator 2 view .LVU921
1061:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1062:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 3267              		.loc 1 1062 2 discriminator 2 view .LVU922
 3268 003a 2046     		mov	r0, r4
 3269 003c FFF7FEFF 		bl	block_size
 3270              	.LVL319:
 3271 0040 6A46     		mov	r2, sp
 3272 0042 01A9     		add	r1, sp, #4
 3273 0044 FFF7FEFF 		bl	mapping_insert
 3274              	.LVL320:
1063:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 3275              		.loc 1 1063 2 discriminator 2 view .LVU923
 3276 0048 009B     		ldr	r3, [sp]
 3277 004a 019A     		ldr	r2, [sp, #4]
 3278 004c 2146     		mov	r1, r4
 3279 004e 2846     		mov	r0, r5
 3280 0050 FFF7FEFF 		bl	remove_free_block
 3281              	.LVL321:
1064:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3282              		.loc 1 1064 1 is_stmt 0 discriminator 2 view .LVU924
 3283 0054 02B0     		add	sp, sp, #8
 3284              	.LCFI44:
 3285              		.cfi_def_cfa_offset 16
 3286              		@ sp needed
 3287 0056 70BD     		pop	{r4, r5, r6, pc}
 3288              		.loc 1 1064 1 discriminator 2 view .LVU925
 3289              		.cfi_endproc
 3290              	.LFE55:
 3292              		.section	.text.lv_tlsf_create,"ax",%progbits
 3293              		.align	1
 3294              		.global	lv_tlsf_create
 3295              		.syntax unified
 3296              		.thumb
 3297              		.thumb_func
 3298              		.fpu fpv5-d16
 3300              	lv_tlsf_create:
ARM GAS  /tmp/ccGOfVui.s 			page 84


 3301              	.LVL322:
 3302              	.LFB56:
1065:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1066:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1067:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF main interface.
1068:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1069:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1070:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1071:Middlewares/lvgl/src/misc/lv_tlsf.c **** int test_ffs_fls()
1072:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
1073:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Verify ffs/fls work properly. */
1074:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int rv = 0;
1075:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0) == -1) ? 0 : 0x1;
1076:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0) == -1) ? 0 : 0x2;
1077:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(1) == 0) ? 0 : 0x4;
1078:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(1) == 0) ? 0 : 0x8;
1079:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80000000) == 31) ? 0 : 0x10;
1080:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80008000) == 15) ? 0 : 0x20;
1081:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x80000008) == 31) ? 0 : 0x40;
1082:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x7FFFFFFF) == 30) ? 0 : 0x80;
1083:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1084:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1085:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x80000000) == 31) ? 0 : 0x100;
1086:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x100000000) == 32) ? 0 : 0x200;
1087:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0xffffffffffffffff) == 63) ? 0 : 0x400;
1088:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1089:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1090:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (rv)
1091:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1092:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("test_ffs_fls: %x ffs/fls tests failed.\n", rv);
1093:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1094:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return rv;
1095:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
1096:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1097:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1098:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create(void* mem)
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3303              		.loc 1 1099 1 is_stmt 1 view -0
 3304              		.cfi_startproc
 3305              		@ args = 0, pretend = 0, frame = 0
 3306              		@ frame_needed = 0, uses_anonymous_args = 0
1100:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (test_ffs_fls())
1102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1105:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1106:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1107:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((tlsfptr_t)mem % ALIGN_SIZE) != 0)
 3307              		.loc 1 1107 2 view .LVU927
 3308              		.loc 1 1107 5 is_stmt 0 view .LVU928
 3309 0000 10F0030F 		tst	r0, #3
 3310 0004 05D1     		bne	.L226
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
 3311              		.loc 1 1099 1 view .LVU929
 3312 0006 10B5     		push	{r4, lr}
 3313              	.LCFI45:
ARM GAS  /tmp/ccGOfVui.s 			page 85


 3314              		.cfi_def_cfa_offset 8
 3315              		.cfi_offset 4, -8
 3316              		.cfi_offset 14, -4
 3317 0008 0446     		mov	r4, r0
1108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1109:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_create: Memory must be aligned to %u bytes.\n",
1110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1112:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1114:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_constructor(tlsf_cast(control_t*, mem));
 3318              		.loc 1 1114 2 is_stmt 1 view .LVU930
 3319 000a FFF7FEFF 		bl	control_constructor
 3320              	.LVL323:
1115:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_tlsf_t, mem);
 3321              		.loc 1 1116 2 view .LVU931
 3322              		.loc 1 1116 9 is_stmt 0 view .LVU932
 3323 000e 2046     		mov	r0, r4
1117:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3324              		.loc 1 1117 1 view .LVU933
 3325 0010 10BD     		pop	{r4, pc}
 3326              	.LVL324:
 3327              	.L226:
 3328              	.LCFI46:
 3329              		.cfi_def_cfa_offset 0
 3330              		.cfi_restore 4
 3331              		.cfi_restore 14
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3332              		.loc 1 1111 10 view .LVU934
 3333 0012 0020     		movs	r0, #0
 3334              	.LVL325:
 3335              		.loc 1 1117 1 view .LVU935
 3336 0014 7047     		bx	lr
 3337              		.cfi_endproc
 3338              	.LFE56:
 3340              		.section	.text.lv_tlsf_create_with_pool,"ax",%progbits
 3341              		.align	1
 3342              		.global	lv_tlsf_create_with_pool
 3343              		.syntax unified
 3344              		.thumb
 3345              		.thumb_func
 3346              		.fpu fpv5-d16
 3348              	lv_tlsf_create_with_pool:
 3349              	.LVL326:
 3350              	.LFB57:
1118:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1119:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create_with_pool(void* mem, size_t bytes)
1120:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3351              		.loc 1 1120 1 is_stmt 1 view -0
 3352              		.cfi_startproc
 3353              		@ args = 0, pretend = 0, frame = 0
 3354              		@ frame_needed = 0, uses_anonymous_args = 0
 3355              		.loc 1 1120 1 is_stmt 0 view .LVU937
 3356 0000 70B5     		push	{r4, r5, r6, lr}
 3357              	.LCFI47:
 3358              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccGOfVui.s 			page 86


 3359              		.cfi_offset 4, -16
 3360              		.cfi_offset 5, -12
 3361              		.cfi_offset 6, -8
 3362              		.cfi_offset 14, -4
 3363 0002 0546     		mov	r5, r0
 3364 0004 0E46     		mov	r6, r1
1121:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_t tlsf = lv_tlsf_create(mem);
 3365              		.loc 1 1121 2 is_stmt 1 view .LVU938
 3366              		.loc 1 1121 19 is_stmt 0 view .LVU939
 3367 0006 FFF7FEFF 		bl	lv_tlsf_create
 3368              	.LVL327:
 3369              		.loc 1 1121 19 view .LVU940
 3370 000a 0446     		mov	r4, r0
 3371              	.LVL328:
1122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_add_pool(tlsf, (char*)mem + lv_tlsf_size(), bytes - lv_tlsf_size());
 3372              		.loc 1 1122 2 is_stmt 1 view .LVU941
 3373              		.loc 1 1122 38 is_stmt 0 view .LVU942
 3374 000c FFF7FEFF 		bl	lv_tlsf_size
 3375              	.LVL329:
 3376              		.loc 1 1122 2 view .LVU943
 3377 0010 321A     		subs	r2, r6, r0
 3378 0012 2918     		adds	r1, r5, r0
 3379 0014 2046     		mov	r0, r4
 3380 0016 FFF7FEFF 		bl	lv_tlsf_add_pool
 3381              	.LVL330:
1123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf;
 3382              		.loc 1 1123 2 is_stmt 1 view .LVU944
1124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3383              		.loc 1 1124 1 is_stmt 0 view .LVU945
 3384 001a 2046     		mov	r0, r4
 3385 001c 70BD     		pop	{r4, r5, r6, pc}
 3386              		.loc 1 1124 1 view .LVU946
 3387              		.cfi_endproc
 3388              	.LFE57:
 3390              		.section	.text.lv_tlsf_destroy,"ax",%progbits
 3391              		.align	1
 3392              		.global	lv_tlsf_destroy
 3393              		.syntax unified
 3394              		.thumb
 3395              		.thumb_func
 3396              		.fpu fpv5-d16
 3398              	lv_tlsf_destroy:
 3399              	.LVL331:
 3400              	.LFB58:
1125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1126:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_destroy(lv_tlsf_t tlsf)
1127:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3401              		.loc 1 1127 1 is_stmt 1 view -0
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 0
 3404              		@ frame_needed = 0, uses_anonymous_args = 0
 3405              		@ link register save eliminated.
1128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Nothing to do. */
1129:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)tlsf;
 3406              		.loc 1 1129 2 view .LVU948
1130:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3407              		.loc 1 1130 1 is_stmt 0 view .LVU949
ARM GAS  /tmp/ccGOfVui.s 			page 87


 3408 0000 7047     		bx	lr
 3409              		.cfi_endproc
 3410              	.LFE58:
 3412              		.section	.text.lv_tlsf_get_pool,"ax",%progbits
 3413              		.align	1
 3414              		.global	lv_tlsf_get_pool
 3415              		.syntax unified
 3416              		.thumb
 3417              		.thumb_func
 3418              		.fpu fpv5-d16
 3420              	lv_tlsf_get_pool:
 3421              	.LVL332:
 3422              	.LFB59:
1131:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1132:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)
1133:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3423              		.loc 1 1133 1 is_stmt 1 view -0
 3424              		.cfi_startproc
 3425              		@ args = 0, pretend = 0, frame = 0
 3426              		@ frame_needed = 0, uses_anonymous_args = 0
 3427              		.loc 1 1133 1 is_stmt 0 view .LVU951
 3428 0000 10B5     		push	{r4, lr}
 3429              	.LCFI48:
 3430              		.cfi_def_cfa_offset 8
 3431              		.cfi_offset 4, -8
 3432              		.cfi_offset 14, -4
 3433 0002 0446     		mov	r4, r0
1134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_pool_t, (char*)tlsf + lv_tlsf_size());
 3434              		.loc 1 1134 2 is_stmt 1 view .LVU952
 3435              		.loc 1 1134 9 is_stmt 0 view .LVU953
 3436 0004 FFF7FEFF 		bl	lv_tlsf_size
 3437              	.LVL333:
1135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3438              		.loc 1 1135 1 view .LVU954
 3439 0008 2044     		add	r0, r0, r4
 3440 000a 10BD     		pop	{r4, pc}
 3441              		.loc 1 1135 1 view .LVU955
 3442              		.cfi_endproc
 3443              	.LFE59:
 3445              		.section	.text.lv_tlsf_malloc,"ax",%progbits
 3446              		.align	1
 3447              		.global	lv_tlsf_malloc
 3448              		.syntax unified
 3449              		.thumb
 3450              		.thumb_func
 3451              		.fpu fpv5-d16
 3453              	lv_tlsf_malloc:
 3454              	.LVL334:
 3455              	.LFB60:
1136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1137:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
1138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3456              		.loc 1 1138 1 is_stmt 1 view -0
 3457              		.cfi_startproc
 3458              		@ args = 0, pretend = 0, frame = 0
 3459              		@ frame_needed = 0, uses_anonymous_args = 0
 3460              		.loc 1 1138 1 is_stmt 0 view .LVU957
ARM GAS  /tmp/ccGOfVui.s 			page 88


 3461 0000 38B5     		push	{r3, r4, r5, lr}
 3462              	.LCFI49:
 3463              		.cfi_def_cfa_offset 16
 3464              		.cfi_offset 3, -16
 3465              		.cfi_offset 4, -12
 3466              		.cfi_offset 5, -8
 3467              		.cfi_offset 14, -4
 3468 0002 0446     		mov	r4, r0
 3469 0004 0846     		mov	r0, r1
 3470              	.LVL335:
1139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3471              		.loc 1 1139 2 is_stmt 1 view .LVU958
1140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3472              		.loc 1 1140 2 view .LVU959
 3473              		.loc 1 1140 24 is_stmt 0 view .LVU960
 3474 0006 0421     		movs	r1, #4
 3475              	.LVL336:
 3476              		.loc 1 1140 24 view .LVU961
 3477 0008 FFF7FEFF 		bl	adjust_request_size
 3478              	.LVL337:
 3479              		.loc 1 1140 24 view .LVU962
 3480 000c 0546     		mov	r5, r0
 3481              	.LVL338:
1141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, adjust);
 3482              		.loc 1 1141 2 is_stmt 1 view .LVU963
 3483              		.loc 1 1141 26 is_stmt 0 view .LVU964
 3484 000e 0146     		mov	r1, r0
 3485 0010 2046     		mov	r0, r4
 3486              	.LVL339:
 3487              		.loc 1 1141 26 view .LVU965
 3488 0012 FFF7FEFF 		bl	block_locate_free
 3489              	.LVL340:
 3490              		.loc 1 1141 26 view .LVU966
 3491 0016 0146     		mov	r1, r0
 3492              	.LVL341:
1142:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3493              		.loc 1 1142 2 is_stmt 1 view .LVU967
 3494              		.loc 1 1142 9 is_stmt 0 view .LVU968
 3495 0018 2A46     		mov	r2, r5
 3496 001a 2046     		mov	r0, r4
 3497              	.LVL342:
 3498              		.loc 1 1142 9 view .LVU969
 3499 001c FFF7FEFF 		bl	block_prepare_used
 3500              	.LVL343:
1143:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3501              		.loc 1 1143 1 view .LVU970
 3502 0020 38BD     		pop	{r3, r4, r5, pc}
 3503              		.loc 1 1143 1 view .LVU971
 3504              		.cfi_endproc
 3505              	.LFE60:
 3507              		.section	.text.lv_tlsf_memalign,"ax",%progbits
 3508              		.align	1
 3509              		.global	lv_tlsf_memalign
 3510              		.syntax unified
 3511              		.thumb
 3512              		.thumb_func
 3513              		.fpu fpv5-d16
ARM GAS  /tmp/ccGOfVui.s 			page 89


 3515              	lv_tlsf_memalign:
 3516              	.LVL344:
 3517              	.LFB61:
1144:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1145:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
1146:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3518              		.loc 1 1146 1 is_stmt 1 view -0
 3519              		.cfi_startproc
 3520              		@ args = 0, pretend = 0, frame = 0
 3521              		@ frame_needed = 0, uses_anonymous_args = 0
 3522              		.loc 1 1146 1 is_stmt 0 view .LVU973
 3523 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3524              	.LCFI50:
 3525              		.cfi_def_cfa_offset 24
 3526              		.cfi_offset 4, -24
 3527              		.cfi_offset 5, -20
 3528              		.cfi_offset 6, -16
 3529              		.cfi_offset 7, -12
 3530              		.cfi_offset 8, -8
 3531              		.cfi_offset 14, -4
 3532 0004 0646     		mov	r6, r0
 3533 0006 0C46     		mov	r4, r1
1147:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3534              		.loc 1 1147 2 is_stmt 1 view .LVU974
 3535              	.LVL345:
1148:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3536              		.loc 1 1148 2 view .LVU975
 3537              		.loc 1 1148 24 is_stmt 0 view .LVU976
 3538 0008 0421     		movs	r1, #4
 3539              	.LVL346:
 3540              		.loc 1 1148 24 view .LVU977
 3541 000a 1046     		mov	r0, r2
 3542              	.LVL347:
 3543              		.loc 1 1148 24 view .LVU978
 3544 000c FFF7FEFF 		bl	adjust_request_size
 3545              	.LVL348:
 3546              		.loc 1 1148 24 view .LVU979
 3547 0010 0546     		mov	r5, r0
 3548              	.LVL349:
1149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We must allocate an additional minimum block size bytes so that if
1152:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our free block will leave an alignment gap which is smaller, we can
1153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trim a leading free block and release it back to the pool. We must
1154:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** do this because the previous physical block is in use, therefore
1155:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the prev_phys_block field is not valid, and we can't simply adjust
1156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the size of that block.
1157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1158:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t gap_minimum = sizeof(block_header_t);
 3549              		.loc 1 1158 2 is_stmt 1 view .LVU980
1159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t size_with_gap = adjust_request_size(adjust + align + gap_minimum, align);
 3550              		.loc 1 1159 2 view .LVU981
 3551              		.loc 1 1159 58 is_stmt 0 view .LVU982
 3552 0012 2044     		add	r0, r0, r4
 3553              	.LVL350:
 3554              		.loc 1 1159 31 view .LVU983
 3555 0014 2146     		mov	r1, r4
ARM GAS  /tmp/ccGOfVui.s 			page 90


 3556 0016 1030     		adds	r0, r0, #16
 3557 0018 FFF7FEFF 		bl	adjust_request_size
 3558              	.LVL351:
 3559 001c 0146     		mov	r1, r0
 3560              	.LVL352:
1160:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1161:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If alignment is less than or equals base alignment, we're done.
1163:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If we requested 0 bytes, return null, as lv_tlsf_malloc(0) does.
1164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1165:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t aligned_size = (adjust && align > ALIGN_SIZE) ? size_with_gap : adjust;
 3561              		.loc 1 1165 2 is_stmt 1 view .LVU984
 3562              		.loc 1 1165 77 is_stmt 0 view .LVU985
 3563 001e 002D     		cmp	r5, #0
 3564 0020 18BF     		it	ne
 3565 0022 042C     		cmpne	r4, #4
 3566 0024 00D8     		bhi	.L239
 3567 0026 2946     		mov	r1, r5
 3568              	.L239:
 3569              	.LVL353:
1166:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, aligned_size);
 3570              		.loc 1 1167 2 is_stmt 1 discriminator 4 view .LVU986
 3571              		.loc 1 1167 26 is_stmt 0 discriminator 4 view .LVU987
 3572 0028 3046     		mov	r0, r6
 3573              	.LVL354:
 3574              		.loc 1 1167 26 discriminator 4 view .LVU988
 3575 002a FFF7FEFF 		bl	block_locate_free
 3576              	.LVL355:
1168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* This can't be a static assert. */
1170:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
 3577              		.loc 1 1170 2 is_stmt 1 discriminator 4 view .LVU989
 3578              		.loc 1 1170 2 discriminator 4 view .LVU990
 3579              		.loc 1 1170 2 discriminator 4 view .LVU991
1171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1172:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 3580              		.loc 1 1172 2 discriminator 4 view .LVU992
 3581              		.loc 1 1172 5 is_stmt 0 discriminator 4 view .LVU993
 3582 002e 0746     		mov	r7, r0
 3583 0030 F8B1     		cbz	r0, .L240
 3584              	.LBB13:
1173:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* ptr = block_to_ptr(block);
 3585              		.loc 1 1174 3 is_stmt 1 view .LVU994
 3586              		.loc 1 1174 15 is_stmt 0 view .LVU995
 3587 0032 FFF7FEFF 		bl	block_to_ptr
 3588              	.LVL356:
 3589              		.loc 1 1174 15 view .LVU996
 3590 0036 8046     		mov	r8, r0
 3591              	.LVL357:
1175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* aligned = align_ptr(ptr, align);
 3592              		.loc 1 1175 3 is_stmt 1 view .LVU997
 3593              		.loc 1 1175 19 is_stmt 0 view .LVU998
 3594 0038 2146     		mov	r1, r4
 3595 003a FFF7FEFF 		bl	align_ptr
 3596              	.LVL358:
ARM GAS  /tmp/ccGOfVui.s 			page 91


1176:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size_t gap = tlsf_cast(size_t,
 3597              		.loc 1 1176 3 is_stmt 1 view .LVU999
 3598              		.loc 1 1176 16 is_stmt 0 view .LVU1000
 3599 003e A0EB0802 		sub	r2, r0, r8
 3600              	.LVL359:
1177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1178:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1179:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If gap size is too small, offset to next aligned boundary. */
1180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap && gap < gap_minimum)
 3601              		.loc 1 1180 3 is_stmt 1 view .LVU1001
 3602              		.loc 1 1180 11 is_stmt 0 view .LVU1002
 3603 0042 531E     		subs	r3, r2, #1
 3604              		.loc 1 1180 6 view .LVU1003
 3605 0044 0E2B     		cmp	r3, #14
 3606 0046 03D9     		bls	.L246
 3607              	.L241:
1181:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t gap_remain = gap_minimum - gap;
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
1185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
1186:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			aligned = align_ptr(next_aligned, align);
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
1189:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1191:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap)
 3608              		.loc 1 1192 3 is_stmt 1 view .LVU1004
 3609              		.loc 1 1192 6 is_stmt 0 view .LVU1005
 3610 0048 9AB1     		cbz	r2, .L240
1193:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_assert(gap >= gap_minimum && "gap size too small");
 3611              		.loc 1 1194 4 is_stmt 1 view .LVU1006
 3612              		.loc 1 1194 4 view .LVU1007
 3613 004a 0F2A     		cmp	r2, #15
 3614 004c 0CD8     		bhi	.L242
 3615              	.L243:
 3616              		.loc 1 1194 4 discriminator 2 view .LVU1008
 3617              		.loc 1 1194 4 discriminator 2 view .LVU1009
 3618              		.loc 1 1194 4 discriminator 2 view .LVU1010
 3619              		.loc 1 1194 4 discriminator 2 view .LVU1011
 3620 004e FEE7     		b	.L243
 3621              	.L246:
 3622              	.LBB14:
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3623              		.loc 1 1182 4 view .LVU1012
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3624              		.loc 1 1182 17 is_stmt 0 view .LVU1013
 3625 0050 C2F11002 		rsb	r2, r2, #16
 3626              	.LVL360:
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
 3627              		.loc 1 1183 4 is_stmt 1 view .LVU1014
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
 3628              		.loc 1 1184 4 view .LVU1015
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3629              		.loc 1 1187 4 view .LVU1016
ARM GAS  /tmp/ccGOfVui.s 			page 92


1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3630              		.loc 1 1187 14 is_stmt 0 view .LVU1017
 3631 0054 2146     		mov	r1, r4
 3632 0056 9442     		cmp	r4, r2
 3633 0058 2CBF     		ite	cs
 3634 005a 0019     		addcs	r0, r0, r4
 3635 005c 8018     		addcc	r0, r0, r2
 3636              	.LVL361:
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3637              		.loc 1 1187 14 view .LVU1018
 3638 005e FFF7FEFF 		bl	align_ptr
 3639              	.LVL362:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3640              		.loc 1 1188 4 is_stmt 1 view .LVU1019
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3641              		.loc 1 1188 10 is_stmt 0 view .LVU1020
 3642 0062 A0EB0802 		sub	r2, r0, r8
 3643              	.LVL363:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3644              		.loc 1 1188 10 view .LVU1021
 3645 0066 EFE7     		b	.L241
 3646              	.L242:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3647              		.loc 1 1188 10 view .LVU1022
 3648              	.LBE14:
 3649              		.loc 1 1194 4 is_stmt 1 discriminator 2 view .LVU1023
1195:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = block_trim_free_leading(control, block, gap);
 3650              		.loc 1 1195 4 discriminator 2 view .LVU1024
 3651              		.loc 1 1195 12 is_stmt 0 discriminator 2 view .LVU1025
 3652 0068 3946     		mov	r1, r7
 3653 006a 3046     		mov	r0, r6
 3654              	.LVL364:
 3655              		.loc 1 1195 12 discriminator 2 view .LVU1026
 3656 006c FFF7FEFF 		bl	block_trim_free_leading
 3657              	.LVL365:
 3658              		.loc 1 1195 12 discriminator 2 view .LVU1027
 3659 0070 0746     		mov	r7, r0
 3660              	.LVL366:
 3661              	.L240:
 3662              		.loc 1 1195 12 discriminator 2 view .LVU1028
 3663              	.LBE13:
1196:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1197:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1198:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3664              		.loc 1 1199 2 is_stmt 1 view .LVU1029
 3665              		.loc 1 1199 9 is_stmt 0 view .LVU1030
 3666 0072 2A46     		mov	r2, r5
 3667 0074 3946     		mov	r1, r7
 3668 0076 3046     		mov	r0, r6
 3669 0078 FFF7FEFF 		bl	block_prepare_used
 3670              	.LVL367:
1200:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3671              		.loc 1 1200 1 view .LVU1031
 3672 007c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3673              		.loc 1 1200 1 view .LVU1032
 3674              		.cfi_endproc
ARM GAS  /tmp/ccGOfVui.s 			page 93


 3675              	.LFE61:
 3677              		.section	.text.lv_tlsf_free,"ax",%progbits
 3678              		.align	1
 3679              		.global	lv_tlsf_free
 3680              		.syntax unified
 3681              		.thumb
 3682              		.thumb_func
 3683              		.fpu fpv5-d16
 3685              	lv_tlsf_free:
 3686              	.LVL368:
 3687              	.LFB62:
1201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1202:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_free(lv_tlsf_t tlsf, void* ptr)
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3688              		.loc 1 1203 1 is_stmt 1 view -0
 3689              		.cfi_startproc
 3690              		@ args = 0, pretend = 0, frame = 0
 3691              		@ frame_needed = 0, uses_anonymous_args = 0
1204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
1205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 3692              		.loc 1 1205 2 view .LVU1034
 3693              		.loc 1 1205 5 is_stmt 0 view .LVU1035
 3694 0000 C9B1     		cbz	r1, .L252
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
 3695              		.loc 1 1203 1 view .LVU1036
 3696 0002 38B5     		push	{r3, r4, r5, lr}
 3697              	.LCFI51:
 3698              		.cfi_def_cfa_offset 16
 3699              		.cfi_offset 3, -16
 3700              		.cfi_offset 4, -12
 3701              		.cfi_offset 5, -8
 3702              		.cfi_offset 14, -4
 3703 0004 0446     		mov	r4, r0
 3704 0006 0846     		mov	r0, r1
 3705              	.LVL369:
 3706              	.LBB15:
1206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control_t* control = tlsf_cast(control_t*, tlsf);
 3707              		.loc 1 1207 3 is_stmt 1 view .LVU1037
1208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3708              		.loc 1 1208 3 view .LVU1038
 3709              		.loc 1 1208 27 is_stmt 0 view .LVU1039
 3710 0008 FFF7FEFF 		bl	block_from_ptr
 3711              	.LVL370:
 3712              		.loc 1 1208 27 view .LVU1040
 3713 000c 0546     		mov	r5, r0
 3714              	.LVL371:
1209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3715              		.loc 1 1209 3 is_stmt 1 view .LVU1041
 3716              		.loc 1 1209 3 view .LVU1042
 3717 000e FFF7FEFF 		bl	block_is_free
 3718              	.LVL372:
 3719              		.loc 1 1209 3 is_stmt 0 view .LVU1043
 3720 0012 00B1     		cbz	r0, .L249
 3721              	.L250:
 3722              		.loc 1 1209 3 is_stmt 1 discriminator 1 view .LVU1044
 3723              		.loc 1 1209 3 discriminator 1 view .LVU1045
ARM GAS  /tmp/ccGOfVui.s 			page 94


 3724              		.loc 1 1209 3 discriminator 1 view .LVU1046
 3725              		.loc 1 1209 3 discriminator 1 view .LVU1047
 3726 0014 FEE7     		b	.L250
 3727              	.L249:
 3728              		.loc 1 1209 3 discriminator 2 view .LVU1048
1210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_free(block);
 3729              		.loc 1 1210 3 discriminator 2 view .LVU1049
 3730 0016 2846     		mov	r0, r5
 3731 0018 FFF7FEFF 		bl	block_mark_as_free
 3732              	.LVL373:
1211:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_prev(control, block);
 3733              		.loc 1 1211 3 discriminator 2 view .LVU1050
 3734              		.loc 1 1211 11 is_stmt 0 discriminator 2 view .LVU1051
 3735 001c 2946     		mov	r1, r5
 3736 001e 2046     		mov	r0, r4
 3737 0020 FFF7FEFF 		bl	block_merge_prev
 3738              	.LVL374:
 3739 0024 0146     		mov	r1, r0
 3740              	.LVL375:
1212:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_next(control, block);
 3741              		.loc 1 1212 3 is_stmt 1 discriminator 2 view .LVU1052
 3742              		.loc 1 1212 11 is_stmt 0 discriminator 2 view .LVU1053
 3743 0026 2046     		mov	r0, r4
 3744              	.LVL376:
 3745              		.loc 1 1212 11 discriminator 2 view .LVU1054
 3746 0028 FFF7FEFF 		bl	block_merge_next
 3747              	.LVL377:
 3748              		.loc 1 1212 11 discriminator 2 view .LVU1055
 3749 002c 0146     		mov	r1, r0
 3750              	.LVL378:
1213:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 3751              		.loc 1 1213 3 is_stmt 1 discriminator 2 view .LVU1056
 3752 002e 2046     		mov	r0, r4
 3753              	.LVL379:
 3754              		.loc 1 1213 3 is_stmt 0 discriminator 2 view .LVU1057
 3755 0030 FFF7FEFF 		bl	block_insert
 3756              	.LVL380:
 3757              		.loc 1 1213 3 discriminator 2 view .LVU1058
 3758              	.LBE15:
1214:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1215:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3759              		.loc 1 1215 1 discriminator 2 view .LVU1059
 3760 0034 38BD     		pop	{r3, r4, r5, pc}
 3761              	.LVL381:
 3762              	.L252:
 3763              	.LCFI52:
 3764              		.cfi_def_cfa_offset 0
 3765              		.cfi_restore 3
 3766              		.cfi_restore 4
 3767              		.cfi_restore 5
 3768              		.cfi_restore 14
 3769              		.loc 1 1215 1 discriminator 2 view .LVU1060
 3770 0036 7047     		bx	lr
 3771              		.cfi_endproc
 3772              	.LFE62:
 3774              		.section	.text.lv_tlsf_realloc,"ax",%progbits
 3775              		.align	1
ARM GAS  /tmp/ccGOfVui.s 			page 95


 3776              		.global	lv_tlsf_realloc
 3777              		.syntax unified
 3778              		.thumb
 3779              		.thumb_func
 3780              		.fpu fpv5-d16
 3782              	lv_tlsf_realloc:
 3783              	.LVL382:
 3784              	.LFB63:
1216:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1217:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1218:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The TLSF block information provides us with enough information to
1219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** provide a reasonably intelligent implementation of realloc, growing or
1220:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** shrinking the currently allocated block as required.
1221:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
1222:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** This routine handles the somewhat esoteric edge cases of realloc:
1223:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a non-zero size with a null pointer will behave like malloc
1224:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a zero size with a non-null pointer will behave like free
1225:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a request that cannot be satisfied will leave the original buffer
1226:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   untouched
1227:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - an extended buffer size will leave the newly-allocated area with
1228:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   contents undefined
1229:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1230:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_realloc(lv_tlsf_t tlsf, void* ptr, size_t size)
1231:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3785              		.loc 1 1231 1 is_stmt 1 view -0
 3786              		.cfi_startproc
 3787              		@ args = 0, pretend = 0, frame = 0
 3788              		@ frame_needed = 0, uses_anonymous_args = 0
 3789              		.loc 1 1231 1 is_stmt 0 view .LVU1062
 3790 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3791              	.LCFI53:
 3792              		.cfi_def_cfa_offset 40
 3793              		.cfi_offset 3, -40
 3794              		.cfi_offset 4, -36
 3795              		.cfi_offset 5, -32
 3796              		.cfi_offset 6, -28
 3797              		.cfi_offset 7, -24
 3798              		.cfi_offset 8, -20
 3799              		.cfi_offset 9, -16
 3800              		.cfi_offset 10, -12
 3801              		.cfi_offset 11, -8
 3802              		.cfi_offset 14, -4
 3803 0004 0446     		mov	r4, r0
1232:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3804              		.loc 1 1232 2 is_stmt 1 view .LVU1063
 3805              	.LVL383:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 3806              		.loc 1 1233 2 view .LVU1064
1234:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1235:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Zero-size requests are treated as free. */
1236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr && size == 0)
 3807              		.loc 1 1236 2 view .LVU1065
 3808              		.loc 1 1236 6 is_stmt 0 view .LVU1066
 3809 0006 0E46     		mov	r6, r1
 3810              		.loc 1 1236 10 view .LVU1067
 3811 0008 0039     		subs	r1, r1, #0
 3812              	.LVL384:
ARM GAS  /tmp/ccGOfVui.s 			page 96


 3813              		.loc 1 1236 10 view .LVU1068
 3814 000a 18BF     		it	ne
 3815 000c 0121     		movne	r1, #1
 3816 000e 002A     		cmp	r2, #0
 3817 0010 18BF     		it	ne
 3818 0012 0021     		movne	r1, #0
 3819              		.loc 1 1236 5 view .LVU1069
 3820 0014 E9B9     		cbnz	r1, .L265
 3821 0016 9046     		mov	r8, r2
1237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		lv_tlsf_free(tlsf, ptr);
1239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Requests with NULL pointers are treated as malloc. */
1241:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else if (!ptr)
 3822              		.loc 1 1241 7 is_stmt 1 view .LVU1070
 3823              		.loc 1 1241 10 is_stmt 0 view .LVU1071
 3824 0018 06B3     		cbz	r6, .L266
 3825              	.LBB16:
1242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = lv_tlsf_malloc(tlsf, size);
1244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
1246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3826              		.loc 1 1247 3 is_stmt 1 view .LVU1072
 3827              		.loc 1 1247 27 is_stmt 0 view .LVU1073
 3828 001a 3046     		mov	r0, r6
 3829              	.LVL385:
 3830              		.loc 1 1247 27 view .LVU1074
 3831 001c FFF7FEFF 		bl	block_from_ptr
 3832              	.LVL386:
 3833              		.loc 1 1247 27 view .LVU1075
 3834 0020 0546     		mov	r5, r0
 3835              	.LVL387:
1248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* next = block_next(block);
 3836              		.loc 1 1248 3 is_stmt 1 view .LVU1076
 3837              		.loc 1 1248 26 is_stmt 0 view .LVU1077
 3838 0022 FFF7FEFF 		bl	block_next
 3839              	.LVL388:
 3840              		.loc 1 1248 26 view .LVU1078
 3841 0026 8246     		mov	r10, r0
 3842              	.LVL389:
1249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t cursize = block_size(block);
 3843              		.loc 1 1250 3 is_stmt 1 view .LVU1079
 3844              		.loc 1 1250 26 is_stmt 0 view .LVU1080
 3845 0028 2846     		mov	r0, r5
 3846              	.LVL390:
 3847              		.loc 1 1250 26 view .LVU1081
 3848 002a FFF7FEFF 		bl	block_size
 3849              	.LVL391:
 3850 002e 8146     		mov	r9, r0
 3851              	.LVL392:
1251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t combined = cursize + block_size(next) + block_header_overhead;
 3852              		.loc 1 1251 3 is_stmt 1 view .LVU1082
 3853              		.loc 1 1251 37 is_stmt 0 view .LVU1083
 3854 0030 5046     		mov	r0, r10
ARM GAS  /tmp/ccGOfVui.s 			page 97


 3855              	.LVL393:
 3856              		.loc 1 1251 37 view .LVU1084
 3857 0032 FFF7FEFF 		bl	block_size
 3858              	.LVL394:
 3859              		.loc 1 1251 35 view .LVU1085
 3860 0036 00EB0903 		add	r3, r0, r9
 3861              		.loc 1 1251 16 view .LVU1086
 3862 003a 03F1040B 		add	fp, r3, #4
 3863              	.LVL395:
1252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3864              		.loc 1 1252 3 is_stmt 1 view .LVU1087
 3865              		.loc 1 1252 25 is_stmt 0 view .LVU1088
 3866 003e 0421     		movs	r1, #4
 3867 0040 4046     		mov	r0, r8
 3868 0042 FFF7FEFF 		bl	adjust_request_size
 3869              	.LVL396:
 3870 0046 0746     		mov	r7, r0
 3871              	.LVL397:
1253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3872              		.loc 1 1254 3 is_stmt 1 view .LVU1089
 3873              		.loc 1 1254 3 view .LVU1090
 3874 0048 2846     		mov	r0, r5
 3875              	.LVL398:
 3876              		.loc 1 1254 3 is_stmt 0 view .LVU1091
 3877 004a FFF7FEFF 		bl	block_is_free
 3878              	.LVL399:
 3879 004e 60B1     		cbz	r0, .L259
 3880              	.L260:
 3881              		.loc 1 1254 3 is_stmt 1 discriminator 1 view .LVU1092
 3882              		.loc 1 1254 3 discriminator 1 view .LVU1093
 3883              		.loc 1 1254 3 discriminator 1 view .LVU1094
 3884              		.loc 1 1254 3 discriminator 1 view .LVU1095
 3885 0050 FEE7     		b	.L260
 3886              	.LVL400:
 3887              	.L265:
 3888              		.loc 1 1254 3 is_stmt 0 discriminator 1 view .LVU1096
 3889              	.LBE16:
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3890              		.loc 1 1238 3 is_stmt 1 view .LVU1097
 3891 0052 3146     		mov	r1, r6
 3892 0054 FFF7FEFF 		bl	lv_tlsf_free
 3893              	.LVL401:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3894              		.loc 1 1233 8 is_stmt 0 view .LVU1098
 3895 0058 0025     		movs	r5, #0
 3896 005a 03E0     		b	.L255
 3897              	.LVL402:
 3898              	.L266:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3899              		.loc 1 1243 3 is_stmt 1 view .LVU1099
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3900              		.loc 1 1243 7 is_stmt 0 view .LVU1100
 3901 005c 1146     		mov	r1, r2
 3902 005e FFF7FEFF 		bl	lv_tlsf_malloc
 3903              	.LVL403:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
ARM GAS  /tmp/ccGOfVui.s 			page 98


 3904              		.loc 1 1243 7 view .LVU1101
 3905 0062 0546     		mov	r5, r0
 3906              	.LVL404:
 3907              	.L255:
1255:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
1257:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** If the next block is used, or when combined with the current
1258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** block, does not offer enough space, we must reallocate and copy.
1259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (adjust > cursize && (!block_is_free(next) || adjust > combined))
1261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = lv_tlsf_malloc(tlsf, size);
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
1264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				const size_t minsize = tlsf_min(cursize, size);
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
1268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		else
1271:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Do we need to expand to the next block? */
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (adjust > cursize)
1274:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_merge_next(control, block);
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
1277:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1278:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1279:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Trim the resulting block and return the original pointer. */
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_trim_used(control, block, adjust);
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
1282:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1283:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1284:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
1286:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3908              		.loc 1 1286 1 view .LVU1102
 3909 0064 2846     		mov	r0, r5
 3910 0066 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3911              	.LVL405:
 3912              	.L259:
 3913              	.LBB18:
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3914              		.loc 1 1254 3 is_stmt 1 discriminator 2 view .LVU1103
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3915              		.loc 1 1260 3 discriminator 2 view .LVU1104
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3916              		.loc 1 1260 6 is_stmt 0 discriminator 2 view .LVU1105
 3917 006a B945     		cmp	r9, r7
 3918 006c 18D2     		bcs	.L261
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3919              		.loc 1 1260 29 discriminator 1 view .LVU1106
 3920 006e 5046     		mov	r0, r10
 3921 0070 FFF7FEFF 		bl	block_is_free
 3922              	.LVL406:
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3923              		.loc 1 1260 24 discriminator 1 view .LVU1107
ARM GAS  /tmp/ccGOfVui.s 			page 99


 3924 0074 08B1     		cbz	r0, .L262
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3925              		.loc 1 1260 49 discriminator 2 view .LVU1108
 3926 0076 BB45     		cmp	fp, r7
 3927 0078 12D2     		bcs	.L261
 3928              	.L262:
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3929              		.loc 1 1262 4 is_stmt 1 view .LVU1109
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3930              		.loc 1 1262 8 is_stmt 0 view .LVU1110
 3931 007a 4146     		mov	r1, r8
 3932 007c 2046     		mov	r0, r4
 3933 007e FFF7FEFF 		bl	lv_tlsf_malloc
 3934              	.LVL407:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3935              		.loc 1 1263 4 is_stmt 1 view .LVU1111
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3936              		.loc 1 1263 7 is_stmt 0 view .LVU1112
 3937 0082 0546     		mov	r5, r0
 3938              	.LVL408:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3939              		.loc 1 1263 7 view .LVU1113
 3940 0084 0028     		cmp	r0, #0
 3941 0086 EDD0     		beq	.L255
 3942              	.LBB17:
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
 3943              		.loc 1 1265 5 is_stmt 1 view .LVU1114
 3944              	.LVL409:
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
 3945              		.loc 1 1266 5 view .LVU1115
 3946 0088 4246     		mov	r2, r8
 3947 008a C845     		cmp	r8, r9
 3948 008c 28BF     		it	cs
 3949 008e 4A46     		movcs	r2, r9
 3950 0090 3146     		mov	r1, r6
 3951 0092 FFF7FEFF 		bl	lv_memcpy
 3952              	.LVL410:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3953              		.loc 1 1267 5 view .LVU1116
 3954 0096 3146     		mov	r1, r6
 3955 0098 2046     		mov	r0, r4
 3956 009a FFF7FEFF 		bl	lv_tlsf_free
 3957              	.LVL411:
 3958 009e E1E7     		b	.L255
 3959              	.LVL412:
 3960              	.L261:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3961              		.loc 1 1267 5 is_stmt 0 view .LVU1117
 3962              	.LBE17:
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3963              		.loc 1 1273 4 is_stmt 1 view .LVU1118
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3964              		.loc 1 1273 7 is_stmt 0 view .LVU1119
 3965 00a0 B945     		cmp	r9, r7
 3966 00a2 06D3     		bcc	.L267
 3967              	.L263:
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
ARM GAS  /tmp/ccGOfVui.s 			page 100


 3968              		.loc 1 1280 4 is_stmt 1 view .LVU1120
 3969 00a4 3A46     		mov	r2, r7
 3970 00a6 2946     		mov	r1, r5
 3971 00a8 2046     		mov	r0, r4
 3972 00aa FFF7FEFF 		bl	block_trim_used
 3973              	.LVL413:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3974              		.loc 1 1281 4 view .LVU1121
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3975              		.loc 1 1281 6 is_stmt 0 view .LVU1122
 3976 00ae 3546     		mov	r5, r6
 3977              	.LVL414:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3978              		.loc 1 1281 6 view .LVU1123
 3979              	.LBE18:
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3980              		.loc 1 1285 2 is_stmt 1 view .LVU1124
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3981              		.loc 1 1285 9 is_stmt 0 view .LVU1125
 3982 00b0 D8E7     		b	.L255
 3983              	.LVL415:
 3984              	.L267:
 3985              	.LBB19:
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
 3986              		.loc 1 1275 5 is_stmt 1 view .LVU1126
 3987 00b2 2946     		mov	r1, r5
 3988 00b4 2046     		mov	r0, r4
 3989 00b6 FFF7FEFF 		bl	block_merge_next
 3990              	.LVL416:
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3991              		.loc 1 1276 5 view .LVU1127
 3992 00ba 2846     		mov	r0, r5
 3993 00bc FFF7FEFF 		bl	block_mark_as_used
 3994              	.LVL417:
 3995 00c0 F0E7     		b	.L263
 3996              	.LBE19:
 3997              		.cfi_endproc
 3998              	.LFE63:
 4000              		.text
 4001              	.Letext0:
 4002              		.file 2 "/home/akinya/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 4003              		.file 3 "Middlewares/lvgl/src/misc/lv_tlsf.h"
 4004              		.file 4 "Middlewares/lvgl/src/misc/lv_mem.h"
ARM GAS  /tmp/ccGOfVui.s 			page 101


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_tlsf.c
     /tmp/ccGOfVui.s:17     .text.block_size:0000000000000000 $t
     /tmp/ccGOfVui.s:24     .text.block_size:0000000000000000 block_size
     /tmp/ccGOfVui.s:44     .text.block_set_size:0000000000000000 $t
     /tmp/ccGOfVui.s:50     .text.block_set_size:0000000000000000 block_set_size
     /tmp/ccGOfVui.s:77     .text.block_is_last:0000000000000000 $t
     /tmp/ccGOfVui.s:83     .text.block_is_last:0000000000000000 block_is_last
     /tmp/ccGOfVui.s:108    .text.block_is_free:0000000000000000 $t
     /tmp/ccGOfVui.s:114    .text.block_is_free:0000000000000000 block_is_free
     /tmp/ccGOfVui.s:133    .text.block_set_free:0000000000000000 $t
     /tmp/ccGOfVui.s:139    .text.block_set_free:0000000000000000 block_set_free
     /tmp/ccGOfVui.s:158    .text.block_set_used:0000000000000000 $t
     /tmp/ccGOfVui.s:164    .text.block_set_used:0000000000000000 block_set_used
     /tmp/ccGOfVui.s:183    .text.block_is_prev_free:0000000000000000 $t
     /tmp/ccGOfVui.s:189    .text.block_is_prev_free:0000000000000000 block_is_prev_free
     /tmp/ccGOfVui.s:208    .text.block_set_prev_free:0000000000000000 $t
     /tmp/ccGOfVui.s:214    .text.block_set_prev_free:0000000000000000 block_set_prev_free
     /tmp/ccGOfVui.s:233    .text.block_set_prev_used:0000000000000000 $t
     /tmp/ccGOfVui.s:239    .text.block_set_prev_used:0000000000000000 block_set_prev_used
     /tmp/ccGOfVui.s:258    .text.block_from_ptr:0000000000000000 $t
     /tmp/ccGOfVui.s:264    .text.block_from_ptr:0000000000000000 block_from_ptr
     /tmp/ccGOfVui.s:282    .text.block_to_ptr:0000000000000000 $t
     /tmp/ccGOfVui.s:288    .text.block_to_ptr:0000000000000000 block_to_ptr
     /tmp/ccGOfVui.s:306    .text.offset_to_block:0000000000000000 $t
     /tmp/ccGOfVui.s:312    .text.offset_to_block:0000000000000000 offset_to_block
     /tmp/ccGOfVui.s:330    .text.block_prev:0000000000000000 $t
     /tmp/ccGOfVui.s:336    .text.block_prev:0000000000000000 block_prev
     /tmp/ccGOfVui.s:373    .text.block_next:0000000000000000 $t
     /tmp/ccGOfVui.s:379    .text.block_next:0000000000000000 block_next
     /tmp/ccGOfVui.s:435    .text.block_link_next:0000000000000000 $t
     /tmp/ccGOfVui.s:441    .text.block_link_next:0000000000000000 block_link_next
     /tmp/ccGOfVui.s:470    .text.block_mark_as_free:0000000000000000 $t
     /tmp/ccGOfVui.s:476    .text.block_mark_as_free:0000000000000000 block_mark_as_free
     /tmp/ccGOfVui.s:508    .text.block_mark_as_used:0000000000000000 $t
     /tmp/ccGOfVui.s:514    .text.block_mark_as_used:0000000000000000 block_mark_as_used
     /tmp/ccGOfVui.s:546    .text.align_up:0000000000000000 $t
     /tmp/ccGOfVui.s:552    .text.align_up:0000000000000000 align_up
     /tmp/ccGOfVui.s:589    .text.align_down:0000000000000000 $t
     /tmp/ccGOfVui.s:595    .text.align_down:0000000000000000 align_down
     /tmp/ccGOfVui.s:629    .text.align_ptr:0000000000000000 $t
     /tmp/ccGOfVui.s:635    .text.align_ptr:0000000000000000 align_ptr
     /tmp/ccGOfVui.s:674    .text.adjust_request_size:0000000000000000 $t
     /tmp/ccGOfVui.s:680    .text.adjust_request_size:0000000000000000 adjust_request_size
     /tmp/ccGOfVui.s:735    .text.remove_free_block:0000000000000000 $t
     /tmp/ccGOfVui.s:741    .text.remove_free_block:0000000000000000 remove_free_block
     /tmp/ccGOfVui.s:847    .text.insert_free_block:0000000000000000 $t
     /tmp/ccGOfVui.s:853    .text.insert_free_block:0000000000000000 insert_free_block
     /tmp/ccGOfVui.s:968    .text.block_can_split:0000000000000000 $t
     /tmp/ccGOfVui.s:974    .text.block_can_split:0000000000000000 block_can_split
     /tmp/ccGOfVui.s:1006   .text.block_split:0000000000000000 $t
     /tmp/ccGOfVui.s:1012   .text.block_split:0000000000000000 block_split
     /tmp/ccGOfVui.s:1127   .text.block_absorb:0000000000000000 $t
     /tmp/ccGOfVui.s:1133   .text.block_absorb:0000000000000000 block_absorb
     /tmp/ccGOfVui.s:1188   .text.control_constructor:0000000000000000 $t
     /tmp/ccGOfVui.s:1194   .text.control_constructor:0000000000000000 control_constructor
     /tmp/ccGOfVui.s:1258   .text.integrity_walker:0000000000000000 $t
ARM GAS  /tmp/ccGOfVui.s 			page 102


     /tmp/ccGOfVui.s:1264   .text.integrity_walker:0000000000000000 integrity_walker
     /tmp/ccGOfVui.s:1357   .text.default_walker:0000000000000000 $t
     /tmp/ccGOfVui.s:1363   .text.default_walker:0000000000000000 default_walker
     /tmp/ccGOfVui.s:1379   .text.tlsf_fls:0000000000000000 $t
     /tmp/ccGOfVui.s:1385   .text.tlsf_fls:0000000000000000 tlsf_fls
     /tmp/ccGOfVui.s:1420   .text.mapping_insert:0000000000000000 $t
     /tmp/ccGOfVui.s:1426   .text.mapping_insert:0000000000000000 mapping_insert
     /tmp/ccGOfVui.s:1503   .text.block_insert:0000000000000000 $t
     /tmp/ccGOfVui.s:1509   .text.block_insert:0000000000000000 block_insert
     /tmp/ccGOfVui.s:1558   .text.block_trim_free:0000000000000000 $t
     /tmp/ccGOfVui.s:1564   .text.block_trim_free:0000000000000000 block_trim_free
     /tmp/ccGOfVui.s:1644   .text.block_prepare_used:0000000000000000 $t
     /tmp/ccGOfVui.s:1650   .text.block_prepare_used:0000000000000000 block_prepare_used
     /tmp/ccGOfVui.s:1707   .text.block_trim_free_leading:0000000000000000 $t
     /tmp/ccGOfVui.s:1713   .text.block_trim_free_leading:0000000000000000 block_trim_free_leading
     /tmp/ccGOfVui.s:1782   .text.block_remove:0000000000000000 $t
     /tmp/ccGOfVui.s:1788   .text.block_remove:0000000000000000 block_remove
     /tmp/ccGOfVui.s:1837   .text.block_merge_prev:0000000000000000 $t
     /tmp/ccGOfVui.s:1843   .text.block_merge_prev:0000000000000000 block_merge_prev
     /tmp/ccGOfVui.s:1929   .text.block_merge_next:0000000000000000 $t
     /tmp/ccGOfVui.s:1935   .text.block_merge_next:0000000000000000 block_merge_next
     /tmp/ccGOfVui.s:2015   .text.block_trim_used:0000000000000000 $t
     /tmp/ccGOfVui.s:2021   .text.block_trim_used:0000000000000000 block_trim_used
     /tmp/ccGOfVui.s:2104   .text.mapping_search:0000000000000000 $t
     /tmp/ccGOfVui.s:2110   .text.mapping_search:0000000000000000 mapping_search
     /tmp/ccGOfVui.s:2165   .text.tlsf_ffs:0000000000000000 $t
     /tmp/ccGOfVui.s:2171   .text.tlsf_ffs:0000000000000000 tlsf_ffs
     /tmp/ccGOfVui.s:2196   .text.search_suitable_block:0000000000000000 $t
     /tmp/ccGOfVui.s:2202   .text.search_suitable_block:0000000000000000 search_suitable_block
     /tmp/ccGOfVui.s:2324   .text.block_locate_free:0000000000000000 $t
     /tmp/ccGOfVui.s:2330   .text.block_locate_free:0000000000000000 block_locate_free
     /tmp/ccGOfVui.s:2439   .text.lv_tlsf_check:0000000000000000 $t
     /tmp/ccGOfVui.s:2446   .text.lv_tlsf_check:0000000000000000 lv_tlsf_check
     /tmp/ccGOfVui.s:2716   .text.lv_tlsf_walk_pool:0000000000000000 $t
     /tmp/ccGOfVui.s:2723   .text.lv_tlsf_walk_pool:0000000000000000 lv_tlsf_walk_pool
     /tmp/ccGOfVui.s:2814   .text.lv_tlsf_walk_pool:0000000000000058 $d
     /tmp/ccGOfVui.s:2819   .text.lv_tlsf_block_size:0000000000000000 $t
     /tmp/ccGOfVui.s:2826   .text.lv_tlsf_block_size:0000000000000000 lv_tlsf_block_size
     /tmp/ccGOfVui.s:2872   .text.lv_tlsf_check_pool:0000000000000000 $t
     /tmp/ccGOfVui.s:2879   .text.lv_tlsf_check_pool:0000000000000000 lv_tlsf_check_pool
     /tmp/ccGOfVui.s:2915   .text.lv_tlsf_check_pool:000000000000001c $d
     /tmp/ccGOfVui.s:2920   .text.lv_tlsf_size:0000000000000000 $t
     /tmp/ccGOfVui.s:2927   .text.lv_tlsf_size:0000000000000000 lv_tlsf_size
     /tmp/ccGOfVui.s:2942   .text.lv_tlsf_align_size:0000000000000000 $t
     /tmp/ccGOfVui.s:2949   .text.lv_tlsf_align_size:0000000000000000 lv_tlsf_align_size
     /tmp/ccGOfVui.s:2964   .text.lv_tlsf_block_size_min:0000000000000000 $t
     /tmp/ccGOfVui.s:2971   .text.lv_tlsf_block_size_min:0000000000000000 lv_tlsf_block_size_min
     /tmp/ccGOfVui.s:2986   .text.lv_tlsf_block_size_max:0000000000000000 $t
     /tmp/ccGOfVui.s:2993   .text.lv_tlsf_block_size_max:0000000000000000 lv_tlsf_block_size_max
     /tmp/ccGOfVui.s:3008   .text.lv_tlsf_pool_overhead:0000000000000000 $t
     /tmp/ccGOfVui.s:3015   .text.lv_tlsf_pool_overhead:0000000000000000 lv_tlsf_pool_overhead
     /tmp/ccGOfVui.s:3030   .text.lv_tlsf_alloc_overhead:0000000000000000 $t
     /tmp/ccGOfVui.s:3037   .text.lv_tlsf_alloc_overhead:0000000000000000 lv_tlsf_alloc_overhead
     /tmp/ccGOfVui.s:3052   .text.lv_tlsf_add_pool:0000000000000000 $t
     /tmp/ccGOfVui.s:3059   .text.lv_tlsf_add_pool:0000000000000000 lv_tlsf_add_pool
     /tmp/ccGOfVui.s:3177   .text.lv_tlsf_remove_pool:0000000000000000 $t
     /tmp/ccGOfVui.s:3184   .text.lv_tlsf_remove_pool:0000000000000000 lv_tlsf_remove_pool
ARM GAS  /tmp/ccGOfVui.s 			page 103


     /tmp/ccGOfVui.s:3293   .text.lv_tlsf_create:0000000000000000 $t
     /tmp/ccGOfVui.s:3300   .text.lv_tlsf_create:0000000000000000 lv_tlsf_create
     /tmp/ccGOfVui.s:3341   .text.lv_tlsf_create_with_pool:0000000000000000 $t
     /tmp/ccGOfVui.s:3348   .text.lv_tlsf_create_with_pool:0000000000000000 lv_tlsf_create_with_pool
     /tmp/ccGOfVui.s:3391   .text.lv_tlsf_destroy:0000000000000000 $t
     /tmp/ccGOfVui.s:3398   .text.lv_tlsf_destroy:0000000000000000 lv_tlsf_destroy
     /tmp/ccGOfVui.s:3413   .text.lv_tlsf_get_pool:0000000000000000 $t
     /tmp/ccGOfVui.s:3420   .text.lv_tlsf_get_pool:0000000000000000 lv_tlsf_get_pool
     /tmp/ccGOfVui.s:3446   .text.lv_tlsf_malloc:0000000000000000 $t
     /tmp/ccGOfVui.s:3453   .text.lv_tlsf_malloc:0000000000000000 lv_tlsf_malloc
     /tmp/ccGOfVui.s:3508   .text.lv_tlsf_memalign:0000000000000000 $t
     /tmp/ccGOfVui.s:3515   .text.lv_tlsf_memalign:0000000000000000 lv_tlsf_memalign
     /tmp/ccGOfVui.s:3678   .text.lv_tlsf_free:0000000000000000 $t
     /tmp/ccGOfVui.s:3685   .text.lv_tlsf_free:0000000000000000 lv_tlsf_free
     /tmp/ccGOfVui.s:3775   .text.lv_tlsf_realloc:0000000000000000 $t
     /tmp/ccGOfVui.s:3782   .text.lv_tlsf_realloc:0000000000000000 lv_tlsf_realloc

UNDEFINED SYMBOLS
lv_memcpy
