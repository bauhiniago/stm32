ARM GAS  /tmp/ccviuRxX.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"usart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  19              		.align	1
  20              		.global	MX_USART1_UART_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_USART1_UART_Init:
  26              	.LFB144:
  27              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * @file    usart.c
   4:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/usart.c ****   *          of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/usart.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/usart.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                             www.st.com/SLA0044
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_tx;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART1 init function */
  31:Core/Src/usart.c **** 
ARM GAS  /tmp/ccviuRxX.s 			page 2


  32:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  33:Core/Src/usart.c **** {
  28              		.loc 1 33 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  42:Core/Src/usart.c ****   huart1.Instance = USART1;
  37              		.loc 1 42 3 view .LVU1
  38              		.loc 1 42 19 is_stmt 0 view .LVU2
  39 0002 1748     		ldr	r0, .L11
  40 0004 174B     		ldr	r3, .L11+4
  41 0006 0360     		str	r3, [r0]
  43:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  42              		.loc 1 43 3 is_stmt 1 view .LVU3
  43              		.loc 1 43 24 is_stmt 0 view .LVU4
  44 0008 4FF4E133 		mov	r3, #115200
  45 000c 4360     		str	r3, [r0, #4]
  44:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  46              		.loc 1 44 3 is_stmt 1 view .LVU5
  47              		.loc 1 44 26 is_stmt 0 view .LVU6
  48 000e 0023     		movs	r3, #0
  49 0010 8360     		str	r3, [r0, #8]
  45:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  50              		.loc 1 45 3 is_stmt 1 view .LVU7
  51              		.loc 1 45 24 is_stmt 0 view .LVU8
  52 0012 C360     		str	r3, [r0, #12]
  46:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  53              		.loc 1 46 3 is_stmt 1 view .LVU9
  54              		.loc 1 46 22 is_stmt 0 view .LVU10
  55 0014 0361     		str	r3, [r0, #16]
  47:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  56              		.loc 1 47 3 is_stmt 1 view .LVU11
  57              		.loc 1 47 20 is_stmt 0 view .LVU12
  58 0016 0C22     		movs	r2, #12
  59 0018 4261     		str	r2, [r0, #20]
  48:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  60              		.loc 1 48 3 is_stmt 1 view .LVU13
  61              		.loc 1 48 25 is_stmt 0 view .LVU14
  62 001a 8361     		str	r3, [r0, #24]
  49:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  63              		.loc 1 49 3 is_stmt 1 view .LVU15
  64              		.loc 1 49 28 is_stmt 0 view .LVU16
  65 001c C361     		str	r3, [r0, #28]
  50:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  /tmp/ccviuRxX.s 			page 3


  66              		.loc 1 50 3 is_stmt 1 view .LVU17
  67              		.loc 1 50 30 is_stmt 0 view .LVU18
  68 001e 0362     		str	r3, [r0, #32]
  51:Core/Src/usart.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  69              		.loc 1 51 3 is_stmt 1 view .LVU19
  70              		.loc 1 51 30 is_stmt 0 view .LVU20
  71 0020 4362     		str	r3, [r0, #36]
  52:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  72              		.loc 1 52 3 is_stmt 1 view .LVU21
  73              		.loc 1 52 38 is_stmt 0 view .LVU22
  74 0022 8362     		str	r3, [r0, #40]
  53:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  75              		.loc 1 53 3 is_stmt 1 view .LVU23
  76              		.loc 1 53 7 is_stmt 0 view .LVU24
  77 0024 FFF7FEFF 		bl	HAL_UART_Init
  78              	.LVL0:
  79              		.loc 1 53 6 view .LVU25
  80 0028 70B9     		cbnz	r0, .L7
  81              	.L2:
  54:Core/Src/usart.c ****   {
  55:Core/Src/usart.c ****     Error_Handler();
  56:Core/Src/usart.c ****   }
  57:Core/Src/usart.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
  82              		.loc 1 57 3 is_stmt 1 view .LVU26
  83              		.loc 1 57 7 is_stmt 0 view .LVU27
  84 002a 0021     		movs	r1, #0
  85 002c 0C48     		ldr	r0, .L11
  86 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
  87              	.LVL1:
  88              		.loc 1 57 6 view .LVU28
  89 0032 60B9     		cbnz	r0, .L8
  90              	.L3:
  58:Core/Src/usart.c ****   {
  59:Core/Src/usart.c ****     Error_Handler();
  60:Core/Src/usart.c ****   }
  61:Core/Src/usart.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
  91              		.loc 1 61 3 is_stmt 1 view .LVU29
  92              		.loc 1 61 7 is_stmt 0 view .LVU30
  93 0034 0021     		movs	r1, #0
  94 0036 0A48     		ldr	r0, .L11
  95 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
  96              	.LVL2:
  97              		.loc 1 61 6 view .LVU31
  98 003c 50B9     		cbnz	r0, .L9
  99              	.L4:
  62:Core/Src/usart.c ****   {
  63:Core/Src/usart.c ****     Error_Handler();
  64:Core/Src/usart.c ****   }
  65:Core/Src/usart.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 100              		.loc 1 65 3 is_stmt 1 view .LVU32
 101              		.loc 1 65 7 is_stmt 0 view .LVU33
 102 003e 0848     		ldr	r0, .L11
 103 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 104              	.LVL3:
 105              		.loc 1 65 6 view .LVU34
 106 0044 48B9     		cbnz	r0, .L10
 107              	.L1:
ARM GAS  /tmp/ccviuRxX.s 			page 4


  66:Core/Src/usart.c ****   {
  67:Core/Src/usart.c ****     Error_Handler();
  68:Core/Src/usart.c ****   }
  69:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  70:Core/Src/usart.c **** 
  71:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  72:Core/Src/usart.c **** 
  73:Core/Src/usart.c **** }
 108              		.loc 1 73 1 view .LVU35
 109 0046 08BD     		pop	{r3, pc}
 110              	.L7:
  55:Core/Src/usart.c ****   }
 111              		.loc 1 55 5 is_stmt 1 view .LVU36
 112 0048 FFF7FEFF 		bl	Error_Handler
 113              	.LVL4:
 114 004c EDE7     		b	.L2
 115              	.L8:
  59:Core/Src/usart.c ****   }
 116              		.loc 1 59 5 view .LVU37
 117 004e FFF7FEFF 		bl	Error_Handler
 118              	.LVL5:
 119 0052 EFE7     		b	.L3
 120              	.L9:
  63:Core/Src/usart.c ****   }
 121              		.loc 1 63 5 view .LVU38
 122 0054 FFF7FEFF 		bl	Error_Handler
 123              	.LVL6:
 124 0058 F1E7     		b	.L4
 125              	.L10:
  67:Core/Src/usart.c ****   }
 126              		.loc 1 67 5 view .LVU39
 127 005a FFF7FEFF 		bl	Error_Handler
 128              	.LVL7:
 129              		.loc 1 73 1 is_stmt 0 view .LVU40
 130 005e F2E7     		b	.L1
 131              	.L12:
 132              		.align	2
 133              	.L11:
 134 0060 00000000 		.word	.LANCHOR0
 135 0064 00100140 		.word	1073811456
 136              		.cfi_endproc
 137              	.LFE144:
 139              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_UART_MspInit
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	HAL_UART_MspInit:
 147              	.LVL8:
 148              	.LFB145:
  74:Core/Src/usart.c **** 
  75:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  76:Core/Src/usart.c **** {
 149              		.loc 1 76 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 216
ARM GAS  /tmp/ccviuRxX.s 			page 5


 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 76 1 is_stmt 0 view .LVU42
 154 0000 30B5     		push	{r4, r5, lr}
 155              	.LCFI1:
 156              		.cfi_def_cfa_offset 12
 157              		.cfi_offset 4, -12
 158              		.cfi_offset 5, -8
 159              		.cfi_offset 14, -4
 160 0002 B7B0     		sub	sp, sp, #220
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 232
 163 0004 0446     		mov	r4, r0
  77:Core/Src/usart.c **** 
  78:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 164              		.loc 1 78 3 is_stmt 1 view .LVU43
 165              		.loc 1 78 20 is_stmt 0 view .LVU44
 166 0006 0021     		movs	r1, #0
 167 0008 3191     		str	r1, [sp, #196]
 168 000a 3291     		str	r1, [sp, #200]
 169 000c 3391     		str	r1, [sp, #204]
 170 000e 3491     		str	r1, [sp, #208]
 171 0010 3591     		str	r1, [sp, #212]
  79:Core/Src/usart.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 172              		.loc 1 79 3 is_stmt 1 view .LVU45
 173              		.loc 1 79 28 is_stmt 0 view .LVU46
 174 0012 BC22     		movs	r2, #188
 175 0014 02A8     		add	r0, sp, #8
 176              	.LVL9:
 177              		.loc 1 79 28 view .LVU47
 178 0016 FFF7FEFF 		bl	memset
 179              	.LVL10:
  80:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 180              		.loc 1 80 3 is_stmt 1 view .LVU48
 181              		.loc 1 80 16 is_stmt 0 view .LVU49
 182 001a 2268     		ldr	r2, [r4]
 183              		.loc 1 80 5 view .LVU50
 184 001c 274B     		ldr	r3, .L21
 185 001e 9A42     		cmp	r2, r3
 186 0020 01D0     		beq	.L18
 187              	.L13:
  81:Core/Src/usart.c ****   {
  82:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  83:Core/Src/usart.c **** 
  84:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  85:Core/Src/usart.c ****   /** Initializes the peripherals clock
  86:Core/Src/usart.c ****   */
  87:Core/Src/usart.c ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
  88:Core/Src/usart.c ****     PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_D2PCLK2;
  89:Core/Src/usart.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
  90:Core/Src/usart.c ****     {
  91:Core/Src/usart.c ****       Error_Handler();
  92:Core/Src/usart.c ****     }
  93:Core/Src/usart.c **** 
  94:Core/Src/usart.c ****     /* USART1 clock enable */
  95:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  96:Core/Src/usart.c **** 
  97:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
ARM GAS  /tmp/ccviuRxX.s 			page 6


  98:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  99:Core/Src/usart.c ****     PA9     ------> USART1_TX
 100:Core/Src/usart.c ****     PA10     ------> USART1_RX
 101:Core/Src/usart.c ****     */
 102:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 103:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 104:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 105:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 106:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 107:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****     /* USART1 DMA Init */
 110:Core/Src/usart.c ****     /* USART1_TX Init */
 111:Core/Src/usart.c ****     hdma_usart1_tx.Instance = DMA1_Stream0;
 112:Core/Src/usart.c ****     hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 113:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 114:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 115:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 116:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 117:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 118:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 119:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 120:Core/Src/usart.c ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 121:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 122:Core/Src/usart.c ****     {
 123:Core/Src/usart.c ****       Error_Handler();
 124:Core/Src/usart.c ****     }
 125:Core/Src/usart.c **** 
 126:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 127:Core/Src/usart.c **** 
 128:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 131:Core/Src/usart.c ****   }
 132:Core/Src/usart.c **** }
 188              		.loc 1 132 1 view .LVU51
 189 0022 37B0     		add	sp, sp, #220
 190              	.LCFI3:
 191              		.cfi_remember_state
 192              		.cfi_def_cfa_offset 12
 193              		@ sp needed
 194 0024 30BD     		pop	{r4, r5, pc}
 195              	.LVL11:
 196              	.L18:
 197              	.LCFI4:
 198              		.cfi_restore_state
  87:Core/Src/usart.c ****     PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_D2PCLK2;
 199              		.loc 1 87 5 is_stmt 1 view .LVU52
  87:Core/Src/usart.c ****     PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_D2PCLK2;
 200              		.loc 1 87 46 is_stmt 0 view .LVU53
 201 0026 0123     		movs	r3, #1
 202 0028 0293     		str	r3, [sp, #8]
  88:Core/Src/usart.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 203              		.loc 1 88 5 is_stmt 1 view .LVU54
  89:Core/Src/usart.c ****     {
 204              		.loc 1 89 5 view .LVU55
  89:Core/Src/usart.c ****     {
ARM GAS  /tmp/ccviuRxX.s 			page 7


 205              		.loc 1 89 9 is_stmt 0 view .LVU56
 206 002a 02A8     		add	r0, sp, #8
 207 002c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 208              	.LVL12:
  89:Core/Src/usart.c ****     {
 209              		.loc 1 89 8 view .LVU57
 210 0030 0028     		cmp	r0, #0
 211 0032 3DD1     		bne	.L19
 212              	.L15:
  95:Core/Src/usart.c **** 
 213              		.loc 1 95 5 is_stmt 1 view .LVU58
 214              	.LBB2:
  95:Core/Src/usart.c **** 
 215              		.loc 1 95 5 view .LVU59
  95:Core/Src/usart.c **** 
 216              		.loc 1 95 5 view .LVU60
 217 0034 224B     		ldr	r3, .L21+4
 218 0036 D3F8F020 		ldr	r2, [r3, #240]
 219 003a 42F01002 		orr	r2, r2, #16
 220 003e C3F8F020 		str	r2, [r3, #240]
  95:Core/Src/usart.c **** 
 221              		.loc 1 95 5 view .LVU61
 222 0042 D3F8F020 		ldr	r2, [r3, #240]
 223 0046 02F01002 		and	r2, r2, #16
 224 004a 0092     		str	r2, [sp]
  95:Core/Src/usart.c **** 
 225              		.loc 1 95 5 view .LVU62
 226 004c 009A     		ldr	r2, [sp]
 227              	.LBE2:
  95:Core/Src/usart.c **** 
 228              		.loc 1 95 5 view .LVU63
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 229              		.loc 1 97 5 view .LVU64
 230              	.LBB3:
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 231              		.loc 1 97 5 view .LVU65
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 232              		.loc 1 97 5 view .LVU66
 233 004e D3F8E020 		ldr	r2, [r3, #224]
 234 0052 42F00102 		orr	r2, r2, #1
 235 0056 C3F8E020 		str	r2, [r3, #224]
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 236              		.loc 1 97 5 view .LVU67
 237 005a D3F8E030 		ldr	r3, [r3, #224]
 238 005e 03F00103 		and	r3, r3, #1
 239 0062 0193     		str	r3, [sp, #4]
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 240              		.loc 1 97 5 view .LVU68
 241 0064 019B     		ldr	r3, [sp, #4]
 242              	.LBE3:
  97:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 243              		.loc 1 97 5 view .LVU69
 102:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 244              		.loc 1 102 5 view .LVU70
 102:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 245              		.loc 1 102 25 is_stmt 0 view .LVU71
 246 0066 4FF4C063 		mov	r3, #1536
ARM GAS  /tmp/ccviuRxX.s 			page 8


 247 006a 3193     		str	r3, [sp, #196]
 103:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 248              		.loc 1 103 5 is_stmt 1 view .LVU72
 103:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 249              		.loc 1 103 26 is_stmt 0 view .LVU73
 250 006c 0223     		movs	r3, #2
 251 006e 3293     		str	r3, [sp, #200]
 104:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 252              		.loc 1 104 5 is_stmt 1 view .LVU74
 104:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 253              		.loc 1 104 26 is_stmt 0 view .LVU75
 254 0070 0025     		movs	r5, #0
 255 0072 3395     		str	r5, [sp, #204]
 105:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 256              		.loc 1 105 5 is_stmt 1 view .LVU76
 105:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 257              		.loc 1 105 27 is_stmt 0 view .LVU77
 258 0074 3495     		str	r5, [sp, #208]
 106:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 259              		.loc 1 106 5 is_stmt 1 view .LVU78
 106:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 260              		.loc 1 106 31 is_stmt 0 view .LVU79
 261 0076 0723     		movs	r3, #7
 262 0078 3593     		str	r3, [sp, #212]
 107:Core/Src/usart.c **** 
 263              		.loc 1 107 5 is_stmt 1 view .LVU80
 264 007a 31A9     		add	r1, sp, #196
 265 007c 1148     		ldr	r0, .L21+8
 266 007e FFF7FEFF 		bl	HAL_GPIO_Init
 267              	.LVL13:
 111:Core/Src/usart.c ****     hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 268              		.loc 1 111 5 view .LVU81
 111:Core/Src/usart.c ****     hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 269              		.loc 1 111 29 is_stmt 0 view .LVU82
 270 0082 1148     		ldr	r0, .L21+12
 271 0084 114B     		ldr	r3, .L21+16
 272 0086 0360     		str	r3, [r0]
 112:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 273              		.loc 1 112 5 is_stmt 1 view .LVU83
 112:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 274              		.loc 1 112 33 is_stmt 0 view .LVU84
 275 0088 2A23     		movs	r3, #42
 276 008a 4360     		str	r3, [r0, #4]
 113:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 277              		.loc 1 113 5 is_stmt 1 view .LVU85
 113:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 278              		.loc 1 113 35 is_stmt 0 view .LVU86
 279 008c 4023     		movs	r3, #64
 280 008e 8360     		str	r3, [r0, #8]
 114:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 281              		.loc 1 114 5 is_stmt 1 view .LVU87
 114:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 282              		.loc 1 114 35 is_stmt 0 view .LVU88
 283 0090 C560     		str	r5, [r0, #12]
 115:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 284              		.loc 1 115 5 is_stmt 1 view .LVU89
 115:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
ARM GAS  /tmp/ccviuRxX.s 			page 9


 285              		.loc 1 115 32 is_stmt 0 view .LVU90
 286 0092 4FF48063 		mov	r3, #1024
 287 0096 0361     		str	r3, [r0, #16]
 116:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 288              		.loc 1 116 5 is_stmt 1 view .LVU91
 116:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 289              		.loc 1 116 45 is_stmt 0 view .LVU92
 290 0098 4561     		str	r5, [r0, #20]
 117:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 291              		.loc 1 117 5 is_stmt 1 view .LVU93
 117:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 292              		.loc 1 117 42 is_stmt 0 view .LVU94
 293 009a 8561     		str	r5, [r0, #24]
 118:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 294              		.loc 1 118 5 is_stmt 1 view .LVU95
 118:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 295              		.loc 1 118 30 is_stmt 0 view .LVU96
 296 009c C561     		str	r5, [r0, #28]
 119:Core/Src/usart.c ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 297              		.loc 1 119 5 is_stmt 1 view .LVU97
 119:Core/Src/usart.c ****     hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 298              		.loc 1 119 34 is_stmt 0 view .LVU98
 299 009e 0562     		str	r5, [r0, #32]
 120:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 300              		.loc 1 120 5 is_stmt 1 view .LVU99
 120:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 301              		.loc 1 120 34 is_stmt 0 view .LVU100
 302 00a0 4562     		str	r5, [r0, #36]
 121:Core/Src/usart.c ****     {
 303              		.loc 1 121 5 is_stmt 1 view .LVU101
 121:Core/Src/usart.c ****     {
 304              		.loc 1 121 9 is_stmt 0 view .LVU102
 305 00a2 FFF7FEFF 		bl	HAL_DMA_Init
 306              	.LVL14:
 121:Core/Src/usart.c ****     {
 307              		.loc 1 121 8 view .LVU103
 308 00a6 30B9     		cbnz	r0, .L20
 309              	.L16:
 126:Core/Src/usart.c **** 
 310              		.loc 1 126 5 is_stmt 1 view .LVU104
 126:Core/Src/usart.c **** 
 311              		.loc 1 126 5 view .LVU105
 312 00a8 074B     		ldr	r3, .L21+12
 313 00aa A367     		str	r3, [r4, #120]
 126:Core/Src/usart.c **** 
 314              		.loc 1 126 5 view .LVU106
 315 00ac 9C63     		str	r4, [r3, #56]
 126:Core/Src/usart.c **** 
 316              		.loc 1 126 5 view .LVU107
 317              		.loc 1 132 1 is_stmt 0 view .LVU108
 318 00ae B8E7     		b	.L13
 319              	.L19:
  91:Core/Src/usart.c ****     }
 320              		.loc 1 91 7 is_stmt 1 view .LVU109
 321 00b0 FFF7FEFF 		bl	Error_Handler
 322              	.LVL15:
 323 00b4 BEE7     		b	.L15
ARM GAS  /tmp/ccviuRxX.s 			page 10


 324              	.L20:
 123:Core/Src/usart.c ****     }
 325              		.loc 1 123 7 view .LVU110
 326 00b6 FFF7FEFF 		bl	Error_Handler
 327              	.LVL16:
 328 00ba F5E7     		b	.L16
 329              	.L22:
 330              		.align	2
 331              	.L21:
 332 00bc 00100140 		.word	1073811456
 333 00c0 00440258 		.word	1476543488
 334 00c4 00000258 		.word	1476526080
 335 00c8 00000000 		.word	.LANCHOR1
 336 00cc 10000240 		.word	1073872912
 337              		.cfi_endproc
 338              	.LFE145:
 340              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 341              		.align	1
 342              		.global	HAL_UART_MspDeInit
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	HAL_UART_MspDeInit:
 348              	.LVL17:
 349              	.LFB146:
 133:Core/Src/usart.c **** 
 134:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 135:Core/Src/usart.c **** {
 350              		.loc 1 135 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 136:Core/Src/usart.c **** 
 137:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 354              		.loc 1 137 3 view .LVU112
 355              		.loc 1 137 16 is_stmt 0 view .LVU113
 356 0000 0268     		ldr	r2, [r0]
 357              		.loc 1 137 5 view .LVU114
 358 0002 0B4B     		ldr	r3, .L30
 359 0004 9A42     		cmp	r2, r3
 360 0006 00D0     		beq	.L29
 361 0008 7047     		bx	lr
 362              	.L29:
 135:Core/Src/usart.c **** 
 363              		.loc 1 135 1 view .LVU115
 364 000a 10B5     		push	{r4, lr}
 365              	.LCFI5:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369 000c 0446     		mov	r4, r0
 138:Core/Src/usart.c ****   {
 139:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 140:Core/Src/usart.c **** 
 141:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 142:Core/Src/usart.c ****     /* Peripheral clock disable */
 143:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
ARM GAS  /tmp/ccviuRxX.s 			page 11


 370              		.loc 1 143 5 is_stmt 1 view .LVU116
 371 000e 094A     		ldr	r2, .L30+4
 372 0010 D2F8F030 		ldr	r3, [r2, #240]
 373 0014 23F01003 		bic	r3, r3, #16
 374 0018 C2F8F030 		str	r3, [r2, #240]
 144:Core/Src/usart.c **** 
 145:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 146:Core/Src/usart.c ****     PA9     ------> USART1_TX
 147:Core/Src/usart.c ****     PA10     ------> USART1_RX
 148:Core/Src/usart.c ****     */
 149:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 375              		.loc 1 149 5 view .LVU117
 376 001c 4FF4C061 		mov	r1, #1536
 377 0020 0548     		ldr	r0, .L30+8
 378              	.LVL18:
 379              		.loc 1 149 5 is_stmt 0 view .LVU118
 380 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 381              	.LVL19:
 150:Core/Src/usart.c **** 
 151:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 152:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 382              		.loc 1 152 5 is_stmt 1 view .LVU119
 383 0026 A06F     		ldr	r0, [r4, #120]
 384 0028 FFF7FEFF 		bl	HAL_DMA_DeInit
 385              	.LVL20:
 153:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 154:Core/Src/usart.c **** 
 155:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 156:Core/Src/usart.c ****   }
 157:Core/Src/usart.c **** }
 386              		.loc 1 157 1 is_stmt 0 view .LVU120
 387 002c 10BD     		pop	{r4, pc}
 388              	.LVL21:
 389              	.L31:
 390              		.loc 1 157 1 view .LVU121
 391 002e 00BF     		.align	2
 392              	.L30:
 393 0030 00100140 		.word	1073811456
 394 0034 00440258 		.word	1476543488
 395 0038 00000258 		.word	1476526080
 396              		.cfi_endproc
 397              	.LFE146:
 399              		.section	.text._write,"ax",%progbits
 400              		.align	1
 401              		.global	_write
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 406              	_write:
 407              	.LVL22:
 408              	.LFB150:
 158:Core/Src/usart.c **** 
 159:Core/Src/usart.c **** /* USER CODE BEGIN 1 */
 160:Core/Src/usart.c **** 
 161:Core/Src/usart.c **** #if 1
 162:Core/Src/usart.c **** #include <stdio.h>
 163:Core/Src/usart.c **** int _write(int fd, char *ptr, int len)  
ARM GAS  /tmp/ccviuRxX.s 			page 12


 164:Core/Src/usart.c **** {  
 409              		.loc 1 164 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		.loc 1 164 1 is_stmt 0 view .LVU123
 414 0000 10B5     		push	{r4, lr}
 415              	.LCFI6:
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 419 0002 1446     		mov	r4, r2
 165:Core/Src/usart.c ****   //HAL_UART_Transmit_DMA(&huart1, (uint8_t*)ptr, len);
 166:Core/Src/usart.c ****   #ifdef __GNUC__
 167:Core/Src/usart.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len,0xfff);
 420              		.loc 1 167 3 is_stmt 1 view .LVU124
 421 0004 40F6FF73 		movw	r3, #4095
 422 0008 92B2     		uxth	r2, r2
 423              	.LVL23:
 424              		.loc 1 167 3 is_stmt 0 view .LVU125
 425 000a 0248     		ldr	r0, .L34
 426              	.LVL24:
 427              		.loc 1 167 3 view .LVU126
 428 000c FFF7FEFF 		bl	HAL_UART_Transmit
 429              	.LVL25:
 168:Core/Src/usart.c ****   #endif
 169:Core/Src/usart.c ****   
 170:Core/Src/usart.c ****   return len;
 430              		.loc 1 170 3 is_stmt 1 view .LVU127
 171:Core/Src/usart.c **** }
 431              		.loc 1 171 1 is_stmt 0 view .LVU128
 432 0010 2046     		mov	r0, r4
 433 0012 10BD     		pop	{r4, pc}
 434              	.LVL26:
 435              	.L35:
 436              		.loc 1 171 1 view .LVU129
 437              		.align	2
 438              	.L34:
 439 0014 00000000 		.word	.LANCHOR0
 440              		.cfi_endproc
 441              	.LFE150:
 443              		.global	hdma_usart1_tx
 444              		.global	huart1
 445              		.section	.bss.hdma_usart1_tx,"aw",%nobits
 446              		.align	2
 447              		.set	.LANCHOR1,. + 0
 450              	hdma_usart1_tx:
 451 0000 00000000 		.space	120
 451      00000000 
 451      00000000 
 451      00000000 
 451      00000000 
 452              		.section	.bss.huart1,"aw",%nobits
 453              		.align	2
 454              		.set	.LANCHOR0,. + 0
 457              	huart1:
 458 0000 00000000 		.space	144
ARM GAS  /tmp/ccviuRxX.s 			page 13


 458      00000000 
 458      00000000 
 458      00000000 
 458      00000000 
 459              		.text
 460              	.Letext0:
 461              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 462              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 463              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 464              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 465              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 466              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 467              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 468              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 469              		.file 10 "Core/Inc/usart.h"
 470              		.file 11 "Core/Inc/main.h"
 471              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 472              		.file 13 "<built-in>"
ARM GAS  /tmp/ccviuRxX.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccviuRxX.s:19     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccviuRxX.s:25     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccviuRxX.s:134    .text.MX_USART1_UART_Init:0000000000000060 $d
     /tmp/ccviuRxX.s:140    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccviuRxX.s:146    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccviuRxX.s:332    .text.HAL_UART_MspInit:00000000000000bc $d
     /tmp/ccviuRxX.s:341    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccviuRxX.s:347    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccviuRxX.s:393    .text.HAL_UART_MspDeInit:0000000000000030 $d
     /tmp/ccviuRxX.s:400    .text._write:0000000000000000 $t
     /tmp/ccviuRxX.s:406    .text._write:0000000000000000 _write
     /tmp/ccviuRxX.s:439    .text._write:0000000000000014 $d
     /tmp/ccviuRxX.s:450    .bss.hdma_usart1_tx:0000000000000000 hdma_usart1_tx
     /tmp/ccviuRxX.s:457    .bss.huart1:0000000000000000 huart1
     /tmp/ccviuRxX.s:446    .bss.hdma_usart1_tx:0000000000000000 $d
     /tmp/ccviuRxX.s:453    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
Error_Handler
memset
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_UART_Transmit
