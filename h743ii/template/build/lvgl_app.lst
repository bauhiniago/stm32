ARM GAS  /tmp/ccjoq5Rd.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lvgl_app.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.slider_y_event_cb,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	slider_y_event_cb:
  25              	.LVL0:
  26              	.LFB189:
  27              		.file 1 "Core/Src/lvgl_app.c"
   1:Core/Src/lvgl_app.c **** #include "lvgl_app.h"
   2:Core/Src/lvgl_app.c **** #include <stdio.h>
   3:Core/Src/lvgl_app.c **** 
   4:Core/Src/lvgl_app.c **** 
   5:Core/Src/lvgl_app.c **** lv_obj_t * label1;
   6:Core/Src/lvgl_app.c **** void counter_label(void)
   7:Core/Src/lvgl_app.c **** {
   8:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
   9:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
  10:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
  11:Core/Src/lvgl_app.c ****     
  12:Core/Src/lvgl_app.c ****     lv_label_set_text(label1, "counter");
  13:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
  14:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
  15:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
  16:Core/Src/lvgl_app.c **** 
  17:Core/Src/lvgl_app.c **** 
  18:Core/Src/lvgl_app.c ****     // lv_obj_t * label2 = lv_label_create(lv_scr_act());
  19:Core/Src/lvgl_app.c ****     // lv_label_set_long_mode(label2, LV_LABEL_LONG_SCROLL_CIRCULAR);     /*Circular scroll*/
  20:Core/Src/lvgl_app.c ****     // lv_obj_set_width(label2, 150);
  21:Core/Src/lvgl_app.c ****     // lv_label_set_text(label2, "It is a circularly scrolling text.");
  22:Core/Src/lvgl_app.c ****     // lv_obj_align(label2, LV_ALIGN_CENTER, 0, 40);
  23:Core/Src/lvgl_app.c **** }
  24:Core/Src/lvgl_app.c **** 
  25:Core/Src/lvgl_app.c **** lv_obj_t * wave_chart;
  26:Core/Src/lvgl_app.c **** lv_chart_series_t * wave_ser ;
  27:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_x;
  28:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_y;
  29:Core/Src/lvgl_app.c **** static void slider_x_event_cb(lv_event_t * e)
  30:Core/Src/lvgl_app.c **** {
  31:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
ARM GAS  /tmp/ccjoq5Rd.s 			page 2


  32:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  33:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  34:Core/Src/lvgl_app.c **** }
  35:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
  36:Core/Src/lvgl_app.c **** {
  28              		.loc 1 36 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 36 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  37:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  38              		.loc 1 37 5 is_stmt 1 view .LVU2
  39              		.loc 1 37 22 is_stmt 0 view .LVU3
  40 0002 FFF7FEFF 		bl	lv_event_get_target
  41              	.LVL1:
  38:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  42              		.loc 1 38 5 is_stmt 1 view .LVU4
  43              	.LBB18:
  44              	.LBI18:
  45              		.file 2 "Middlewares/lvgl/src/widgets/lv_slider.h"
   1:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
   2:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:Middlewares/lvgl/src/widgets/lv_slider.h ****  *
   4:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
   5:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   6:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:Middlewares/lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   9:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  12:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  13:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  14:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  16:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  18:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  20:Middlewares/lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:Middlewares/lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  24:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  25:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  28:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  29:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  31:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  32:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
ARM GAS  /tmp/ccjoq5Rd.s 			page 3


  33:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  35:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  36:Middlewares/lvgl/src/widgets/lv_slider.h **** enum {
  37:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:Middlewares/lvgl/src/widgets/lv_slider.h **** };
  41:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  43:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:Middlewares/lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:Middlewares/lvgl/src/widgets/lv_slider.h **** }lv_slider_t;
  51:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  52:Middlewares/lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  54:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  55:Middlewares/lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  56:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  57:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  58:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  59:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Create a slider objects
  60:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  61:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  62:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  63:Middlewares/lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  64:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  65:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
  66:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Setter functions
  67:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
  68:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  69:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  70:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  71:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  72:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  73:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  74:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  76:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  77:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  78:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  79:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  80:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  81:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  82:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  83:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  84:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  85:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  86:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  87:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  88:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  89:Middlewares/lvgl/src/widgets/lv_slider.h **** }
ARM GAS  /tmp/ccjoq5Rd.s 			page 4


  90:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  91:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  92:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
  93:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
  94:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
  95:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
  96:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
  98:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  99:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 100:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 101:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 102:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 103:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 104:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 105:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 106:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 107:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 108:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 109:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 110:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 111:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 112:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
 113:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Getter functions
 114:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
 115:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 116:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 117:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 118:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 119:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 120:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  46              		.loc 2 121 23 view .LVU5
  47              	.LBB19:
 122:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 123:Middlewares/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
  48              		.loc 2 123 5 view .LVU6
  49              		.loc 2 123 12 is_stmt 0 view .LVU7
  50 0006 FFF7FEFF 		bl	lv_bar_get_value
  51              	.LVL2:
  52              		.loc 2 123 12 view .LVU8
  53              	.LBE19:
  54              	.LBE18:
  39:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_y(wave_chart, v);
  55              		.loc 1 39 5 is_stmt 1 view .LVU9
  56 000a 81B2     		uxth	r1, r0
  57 000c 024B     		ldr	r3, .L3
  58 000e 1868     		ldr	r0, [r3]
  59              	.LVL3:
  60              		.loc 1 39 5 is_stmt 0 view .LVU10
  61 0010 FFF7FEFF 		bl	lv_chart_set_zoom_y
  62              	.LVL4:
  40:Core/Src/lvgl_app.c **** }
  63              		.loc 1 40 1 view .LVU11
  64 0014 08BD     		pop	{r3, pc}
  65              	.L4:
  66 0016 00BF     		.align	2
ARM GAS  /tmp/ccjoq5Rd.s 			page 5


  67              	.L3:
  68 0018 00000000 		.word	.LANCHOR0
  69              		.cfi_endproc
  70              	.LFE189:
  72              		.section	.text.slider_x_event_cb,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	slider_x_event_cb:
  79              	.LVL5:
  80              	.LFB188:
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  81              		.loc 1 30 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  85              		.loc 1 30 1 is_stmt 0 view .LVU13
  86 0000 08B5     		push	{r3, lr}
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 3, -8
  90              		.cfi_offset 14, -4
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  91              		.loc 1 31 5 is_stmt 1 view .LVU14
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  92              		.loc 1 31 22 is_stmt 0 view .LVU15
  93 0002 FFF7FEFF 		bl	lv_event_get_target
  94              	.LVL6:
  32:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  95              		.loc 1 32 5 is_stmt 1 view .LVU16
  96              	.LBB20:
  97              	.LBI20:
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  98              		.loc 2 121 23 view .LVU17
  99              	.LBB21:
 100              		.loc 2 123 5 view .LVU18
 101              		.loc 2 123 12 is_stmt 0 view .LVU19
 102 0006 FFF7FEFF 		bl	lv_bar_get_value
 103              	.LVL7:
 104              		.loc 2 123 12 view .LVU20
 105              	.LBE21:
 106              	.LBE20:
  33:Core/Src/lvgl_app.c **** }
 107              		.loc 1 33 5 is_stmt 1 view .LVU21
 108 000a 81B2     		uxth	r1, r0
 109 000c 024B     		ldr	r3, .L7
 110 000e 1868     		ldr	r0, [r3]
 111              	.LVL8:
  33:Core/Src/lvgl_app.c **** }
 112              		.loc 1 33 5 is_stmt 0 view .LVU22
 113 0010 FFF7FEFF 		bl	lv_chart_set_zoom_x
 114              	.LVL9:
  34:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
 115              		.loc 1 34 1 view .LVU23
 116 0014 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccjoq5Rd.s 			page 6


 117              	.L8:
 118 0016 00BF     		.align	2
 119              	.L7:
 120 0018 00000000 		.word	.LANCHOR0
 121              		.cfi_endproc
 122              	.LFE188:
 124              		.section	.text.wave_draw_stop,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	wave_draw_stop:
 131              	.LVL10:
 132              	.LFB191:
  41:Core/Src/lvgl_app.c **** void wave_chart_init(void)
  42:Core/Src/lvgl_app.c **** {
  43:Core/Src/lvgl_app.c ****     /*Create a chart*/
  44:Core/Src/lvgl_app.c ****     wave_chart = lv_chart_create(lv_scr_act());
  45:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
  46:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1000);
  48:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 512);
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
  50:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
  51:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
  52:Core/Src/lvgl_app.c ****     lv_obj_set_style_size(wave_chart, 0, LV_PART_INDICATOR);
  53:Core/Src/lvgl_app.c **** 
  54:Core/Src/lvgl_app.c **** 
  55:Core/Src/lvgl_app.c ****     wave_ser = lv_chart_add_series(wave_chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_AXIS_PRIMA
  56:Core/Src/lvgl_app.c **** 
  57:Core/Src/lvgl_app.c ****     // uint32_t pcnt = sizeof(ecg_sample) / sizeof(ecg_sample[0]);
  58:Core/Src/lvgl_app.c ****     // lv_chart_set_point_count(chart, pcnt);
  59:Core/Src/lvgl_app.c ****     // lv_chart_set_ext_y_array(chart, ser, (lv_coord_t *)ecg_sample);
  60:Core/Src/lvgl_app.c **** 
  61:Core/Src/lvgl_app.c ****     
  62:Core/Src/lvgl_app.c ****     wave_slider_x = lv_slider_create(lv_scr_act());
  63:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  64:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  65:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 480, 10);
  66:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
  67:Core/Src/lvgl_app.c **** 
  68:Core/Src/lvgl_app.c ****     wave_slider_y = lv_slider_create(lv_scr_act());
  69:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  70:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  71:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 400);
  72:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 10, 0);
  73:Core/Src/lvgl_app.c **** }
  74:Core/Src/lvgl_app.c **** 
  75:Core/Src/lvgl_app.c **** uint8_t waveStopFlg=0;
  76:Core/Src/lvgl_app.c **** uint8_t waveAutoFlg=0;
  77:Core/Src/lvgl_app.c **** static void wave_draw_stop(lv_event_t * e)
  78:Core/Src/lvgl_app.c **** {
 133              		.loc 1 78 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		.loc 1 78 1 is_stmt 0 view .LVU25
ARM GAS  /tmp/ccjoq5Rd.s 			page 7


 138 0000 08B5     		push	{r3, lr}
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
  79:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 143              		.loc 1 79 5 is_stmt 1 view .LVU26
 144              		.loc 1 79 28 is_stmt 0 view .LVU27
 145 0002 FFF7FEFF 		bl	lv_event_get_code
 146              	.LVL11:
  80:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED){
 147              		.loc 1 80 5 is_stmt 1 view .LVU28
 148              		.loc 1 80 7 is_stmt 0 view .LVU29
 149 0006 1C28     		cmp	r0, #28
 150 0008 00D0     		beq	.L13
 151              	.L9:
  81:Core/Src/lvgl_app.c ****         //printf("STOP/RUN\r\n");
  82:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
  83:Core/Src/lvgl_app.c ****             waveStopFlg=0;
  84:Core/Src/lvgl_app.c ****         }else{
  85:Core/Src/lvgl_app.c ****             waveStopFlg=1;
  86:Core/Src/lvgl_app.c ****         }
  87:Core/Src/lvgl_app.c ****     }
  88:Core/Src/lvgl_app.c **** }
 152              		.loc 1 88 1 view .LVU30
 153 000a 08BD     		pop	{r3, pc}
 154              	.L13:
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 155              		.loc 1 82 9 is_stmt 1 view .LVU31
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 156              		.loc 1 82 23 is_stmt 0 view .LVU32
 157 000c 054B     		ldr	r3, .L15
 158 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 159              		.loc 1 82 11 view .LVU33
 160 0010 012B     		cmp	r3, #1
 161 0012 03D0     		beq	.L14
  85:Core/Src/lvgl_app.c ****         }
 162              		.loc 1 85 13 is_stmt 1 view .LVU34
  85:Core/Src/lvgl_app.c ****         }
 163              		.loc 1 85 24 is_stmt 0 view .LVU35
 164 0014 034B     		ldr	r3, .L15
 165 0016 0122     		movs	r2, #1
 166 0018 1A70     		strb	r2, [r3]
 167              		.loc 1 88 1 view .LVU36
 168 001a F6E7     		b	.L9
 169              	.L14:
  83:Core/Src/lvgl_app.c ****         }else{
 170              		.loc 1 83 13 is_stmt 1 view .LVU37
  83:Core/Src/lvgl_app.c ****         }else{
 171              		.loc 1 83 24 is_stmt 0 view .LVU38
 172 001c 014B     		ldr	r3, .L15
 173 001e 0022     		movs	r2, #0
 174 0020 1A70     		strb	r2, [r3]
 175 0022 F2E7     		b	.L9
 176              	.L16:
 177              		.align	2
ARM GAS  /tmp/ccjoq5Rd.s 			page 8


 178              	.L15:
 179 0024 00000000 		.word	.LANCHOR1
 180              		.cfi_endproc
 181              	.LFE191:
 183              		.section	.rodata.wave_zoom_stop.str1.4,"aMS",%progbits,1
 184              		.align	2
 185              	.LC1:
 186 0000 52455345 		.ascii	"RESET\015\000"
 186      540D00
 187              		.section	.text.wave_zoom_stop,"ax",%progbits
 188              		.align	1
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	wave_zoom_stop:
 194              	.LVL12:
 195              	.LFB192:
  89:Core/Src/lvgl_app.c **** 
  90:Core/Src/lvgl_app.c **** static void wave_zoom_stop(lv_event_t * e)
  91:Core/Src/lvgl_app.c **** {
 196              		.loc 1 91 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		.loc 1 91 1 is_stmt 0 view .LVU40
 201 0000 10B5     		push	{r4, lr}
 202              	.LCFI3:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
  92:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 206              		.loc 1 92 5 is_stmt 1 view .LVU41
 207              		.loc 1 92 28 is_stmt 0 view .LVU42
 208 0002 FFF7FEFF 		bl	lv_event_get_code
 209              	.LVL13:
  93:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED){
 210              		.loc 1 93 5 is_stmt 1 view .LVU43
 211              		.loc 1 93 7 is_stmt 0 view .LVU44
 212 0006 0728     		cmp	r0, #7
 213 0008 00D0     		beq	.L20
 214              	.LVL14:
 215              	.L17:
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_x, 0, LV_ANIM_ON);
  96:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
  98:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
  99:Core/Src/lvgl_app.c ****     }
 100:Core/Src/lvgl_app.c **** }
 216              		.loc 1 100 1 view .LVU45
 217 000a 10BD     		pop	{r4, pc}
 218              	.LVL15:
 219              	.L20:
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 220              		.loc 1 94 9 is_stmt 1 view .LVU46
 221 000c 0D48     		ldr	r0, .L21
 222              	.LVL16:
ARM GAS  /tmp/ccjoq5Rd.s 			page 9


  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 223              		.loc 1 94 9 is_stmt 0 view .LVU47
 224 000e FFF7FEFF 		bl	puts
 225              	.LVL17:
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
 226              		.loc 1 95 9 is_stmt 1 view .LVU48
 227              	.LBB22:
 228              	.LBI22:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 229              		.loc 2 75 20 view .LVU49
 230              	.LBB23:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 231              		.loc 2 77 5 view .LVU50
 232 0012 0122     		movs	r2, #1
 233 0014 0021     		movs	r1, #0
 234 0016 0C4B     		ldr	r3, .L21+4
 235 0018 1868     		ldr	r0, [r3]
 236 001a FFF7FEFF 		bl	lv_bar_set_value
 237              	.LVL18:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 238              		.loc 2 77 5 is_stmt 0 view .LVU51
 239              	.LBE23:
 240              	.LBE22:
  96:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
 241              		.loc 1 96 9 is_stmt 1 view .LVU52
 242              	.LBB24:
 243              	.LBI24:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 244              		.loc 2 75 20 view .LVU53
 245              	.LBB25:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 246              		.loc 2 77 5 view .LVU54
 247 001e 0122     		movs	r2, #1
 248 0020 0021     		movs	r1, #0
 249 0022 0A4B     		ldr	r3, .L21+8
 250 0024 1868     		ldr	r0, [r3]
 251 0026 FFF7FEFF 		bl	lv_bar_set_value
 252              	.LVL19:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 253              		.loc 2 77 5 is_stmt 0 view .LVU55
 254              	.LBE25:
 255              	.LBE24:
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
 256              		.loc 1 97 9 is_stmt 1 view .LVU56
 257 002a 094C     		ldr	r4, .L21+12
 258 002c 4FF48071 		mov	r1, #256
 259 0030 2068     		ldr	r0, [r4]
 260 0032 FFF7FEFF 		bl	lv_chart_set_zoom_x
 261              	.LVL20:
  98:Core/Src/lvgl_app.c ****     }
 262              		.loc 1 98 9 view .LVU57
 263 0036 4FF48071 		mov	r1, #256
 264 003a 2068     		ldr	r0, [r4]
 265 003c FFF7FEFF 		bl	lv_chart_set_zoom_y
 266              	.LVL21:
 267              		.loc 1 100 1 is_stmt 0 view .LVU58
 268 0040 E3E7     		b	.L17
ARM GAS  /tmp/ccjoq5Rd.s 			page 10


 269              	.L22:
 270 0042 00BF     		.align	2
 271              	.L21:
 272 0044 00000000 		.word	.LC1
 273 0048 00000000 		.word	.LANCHOR2
 274 004c 00000000 		.word	.LANCHOR3
 275 0050 00000000 		.word	.LANCHOR0
 276              		.cfi_endproc
 277              	.LFE192:
 279              		.section	.rodata.distortion_handler.str1.4,"aMS",%progbits,1
 280              		.align	2
 281              	.LC2:
 282 0000 6D6F6465 		.ascii	"mode:%d\015\012\000"
 282      3A25640D 
 282      0A00
 283              		.section	.text.distortion_handler,"ax",%progbits
 284              		.align	1
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	distortion_handler:
 290              	.LVL22:
 291              	.LFB195:
 101:Core/Src/lvgl_app.c **** 
 102:Core/Src/lvgl_app.c **** static void wave_auto_mode(lv_event_t * e)
 103:Core/Src/lvgl_app.c **** {
 104:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 105:Core/Src/lvgl_app.c ****    if(code == LV_EVENT_VALUE_CHANGED){
 106:Core/Src/lvgl_app.c ****         if(waveAutoFlg==1){
 107:Core/Src/lvgl_app.c ****             waveAutoFlg=0;
 108:Core/Src/lvgl_app.c ****         }else{
 109:Core/Src/lvgl_app.c ****             waveAutoFlg=1;
 110:Core/Src/lvgl_app.c ****         }
 111:Core/Src/lvgl_app.c ****     }
 112:Core/Src/lvgl_app.c **** }
 113:Core/Src/lvgl_app.c **** 
 114:Core/Src/lvgl_app.c **** void wave_btn(void)
 115:Core/Src/lvgl_app.c **** {
 116:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 117:Core/Src/lvgl_app.c **** 
 118:Core/Src/lvgl_app.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
 119:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 120:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_RIGHT, -20, 20);
 121:Core/Src/lvgl_app.c **** 
 122:Core/Src/lvgl_app.c ****     label = lv_label_create(btn1);
 123:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 124:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 125:Core/Src/lvgl_app.c **** 
 126:Core/Src/lvgl_app.c ****     lv_obj_t * btn2 = lv_btn_create(lv_scr_act());
 127:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 128:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_RIGHT, -20, 80);
 129:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 130:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 131:Core/Src/lvgl_app.c **** 
 132:Core/Src/lvgl_app.c ****     label = lv_label_create(btn2);
 133:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 134:Core/Src/lvgl_app.c ****     lv_obj_center(label);
ARM GAS  /tmp/ccjoq5Rd.s 			page 11


 135:Core/Src/lvgl_app.c **** 
 136:Core/Src/lvgl_app.c ****     // lv_obj_t * btn3 = lv_btn_create(lv_scr_act());
 137:Core/Src/lvgl_app.c ****     // lv_obj_add_event_cb(btn3, wave_auto_mode, LV_EVENT_ALL, NULL);
 138:Core/Src/lvgl_app.c ****     // lv_obj_align(btn3, LV_ALIGN_TOP_RIGHT, -20, 140);
 139:Core/Src/lvgl_app.c ****     // lv_obj_add_flag(btn3, LV_OBJ_FLAG_CHECKABLE);
 140:Core/Src/lvgl_app.c ****     // lv_obj_set_height(btn3, LV_SIZE_CONTENT);
 141:Core/Src/lvgl_app.c **** 
 142:Core/Src/lvgl_app.c ****     // label = lv_label_create(btn3);
 143:Core/Src/lvgl_app.c ****     // lv_label_set_text(label, "Auto");
 144:Core/Src/lvgl_app.c ****     // lv_obj_center(label); 
 145:Core/Src/lvgl_app.c **** }
 146:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 147:Core/Src/lvgl_app.c **** static void distortion_handler(lv_event_t * e)
 148:Core/Src/lvgl_app.c **** {
 292              		.loc 1 148 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 192
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		.loc 1 148 1 is_stmt 0 view .LVU60
 297 0000 30B5     		push	{r4, r5, lr}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 12
 300              		.cfi_offset 4, -12
 301              		.cfi_offset 5, -8
 302              		.cfi_offset 14, -4
 303 0002 B1B0     		sub	sp, sp, #196
 304              	.LCFI5:
 305              		.cfi_def_cfa_offset 208
 306 0004 0546     		mov	r5, r0
 149:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 307              		.loc 1 149 5 is_stmt 1 view .LVU61
 308              		.loc 1 149 28 is_stmt 0 view .LVU62
 309 0006 FFF7FEFF 		bl	lv_event_get_code
 310              	.LVL23:
 311              		.loc 1 149 28 view .LVU63
 312 000a 0446     		mov	r4, r0
 313              	.LVL24:
 150:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
 314              		.loc 1 150 5 is_stmt 1 view .LVU64
 315              		.loc 1 150 22 is_stmt 0 view .LVU65
 316 000c 2846     		mov	r0, r5
 317 000e FFF7FEFF 		bl	lv_event_get_target
 318              	.LVL25:
 151:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED) {
 319              		.loc 1 151 5 is_stmt 1 view .LVU66
 320              		.loc 1 151 7 is_stmt 0 view .LVU67
 321 0012 1C2C     		cmp	r4, #28
 322 0014 01D0     		beq	.L29
 323              	.LVL26:
 324              	.L23:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 153:Core/Src/lvgl_app.c ****         lv_dropdown_get_selected_str(obj, buf, sizeof(buf));
 154:Core/Src/lvgl_app.c ****         char list[5][32]={
 155:Core/Src/lvgl_app.c ****             "No distortion",
 156:Core/Src/lvgl_app.c ****             "Top distortion",
 157:Core/Src/lvgl_app.c ****             "Bottom distortion",
 158:Core/Src/lvgl_app.c ****             "Two-way distortion",
ARM GAS  /tmp/ccjoq5Rd.s 			page 12


 159:Core/Src/lvgl_app.c ****             "Crossover distortion",
 160:Core/Src/lvgl_app.c ****         };
 161:Core/Src/lvgl_app.c ****         for (uint8_t i = 0; i < 5; i++)
 162:Core/Src/lvgl_app.c ****         {
 163:Core/Src/lvgl_app.c ****             if(strstr(buf,list[i])){
 164:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 165:Core/Src/lvgl_app.c ****             }
 166:Core/Src/lvgl_app.c ****         
 167:Core/Src/lvgl_app.c ****         }
 168:Core/Src/lvgl_app.c ****         printf("mode:%d\r\n",distortion_mode);
 169:Core/Src/lvgl_app.c ****     }
 170:Core/Src/lvgl_app.c **** }
 325              		.loc 1 170 1 view .LVU68
 326 0016 31B0     		add	sp, sp, #196
 327              	.LCFI6:
 328              		.cfi_remember_state
 329              		.cfi_def_cfa_offset 12
 330              		@ sp needed
 331 0018 30BD     		pop	{r4, r5, pc}
 332              	.LVL27:
 333              	.L29:
 334              	.LCFI7:
 335              		.cfi_restore_state
 336              	.LBB26:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 337              		.loc 1 152 9 is_stmt 1 view .LVU69
 153:Core/Src/lvgl_app.c ****         char list[5][32]={
 338              		.loc 1 153 9 view .LVU70
 339 001a 2022     		movs	r2, #32
 340 001c 6946     		mov	r1, sp
 341 001e FFF7FEFF 		bl	lv_dropdown_get_selected_str
 342              	.LVL28:
 154:Core/Src/lvgl_app.c ****             "No distortion",
 343              		.loc 1 154 9 view .LVU71
 154:Core/Src/lvgl_app.c ****             "No distortion",
 344              		.loc 1 154 14 is_stmt 0 view .LVU72
 345 0022 A022     		movs	r2, #160
 346 0024 0D49     		ldr	r1, .L31
 347 0026 08A8     		add	r0, sp, #32
 348 0028 FFF7FEFF 		bl	memcpy
 349              	.LVL29:
 161:Core/Src/lvgl_app.c ****         {
 350              		.loc 1 161 9 is_stmt 1 view .LVU73
 351              	.LBB27:
 161:Core/Src/lvgl_app.c ****         {
 352              		.loc 1 161 14 view .LVU74
 161:Core/Src/lvgl_app.c ****         {
 353              		.loc 1 161 22 is_stmt 0 view .LVU75
 354 002c 0024     		movs	r4, #0
 355              	.LVL30:
 161:Core/Src/lvgl_app.c ****         {
 356              		.loc 1 161 9 view .LVU76
 357 002e 01E0     		b	.L25
 358              	.LVL31:
 359              	.L26:
 161:Core/Src/lvgl_app.c ****         {
 360              		.loc 1 161 36 is_stmt 1 discriminator 2 view .LVU77
ARM GAS  /tmp/ccjoq5Rd.s 			page 13


 161:Core/Src/lvgl_app.c ****         {
 361              		.loc 1 161 37 is_stmt 0 discriminator 2 view .LVU78
 362 0030 0134     		adds	r4, r4, #1
 363              	.LVL32:
 161:Core/Src/lvgl_app.c ****         {
 364              		.loc 1 161 37 discriminator 2 view .LVU79
 365 0032 E4B2     		uxtb	r4, r4
 366              	.LVL33:
 367              	.L25:
 161:Core/Src/lvgl_app.c ****         {
 368              		.loc 1 161 29 is_stmt 1 discriminator 1 view .LVU80
 161:Core/Src/lvgl_app.c ****         {
 369              		.loc 1 161 9 is_stmt 0 discriminator 1 view .LVU81
 370 0034 042C     		cmp	r4, #4
 371 0036 0AD8     		bhi	.L30
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 372              		.loc 1 163 13 is_stmt 1 view .LVU82
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 373              		.loc 1 163 16 is_stmt 0 view .LVU83
 374 0038 08AB     		add	r3, sp, #32
 375 003a 03EB4411 		add	r1, r3, r4, lsl #5
 376 003e 6846     		mov	r0, sp
 377 0040 FFF7FEFF 		bl	strstr
 378              	.LVL34:
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 379              		.loc 1 163 15 view .LVU84
 380 0044 0028     		cmp	r0, #0
 381 0046 F3D0     		beq	.L26
 164:Core/Src/lvgl_app.c ****             }
 382              		.loc 1 164 17 is_stmt 1 view .LVU85
 164:Core/Src/lvgl_app.c ****             }
 383              		.loc 1 164 32 is_stmt 0 view .LVU86
 384 0048 054B     		ldr	r3, .L31+4
 385 004a 1C70     		strb	r4, [r3]
 386 004c F0E7     		b	.L26
 387              	.L30:
 164:Core/Src/lvgl_app.c ****             }
 388              		.loc 1 164 32 view .LVU87
 389              	.LBE27:
 168:Core/Src/lvgl_app.c ****     }
 390              		.loc 1 168 9 is_stmt 1 view .LVU88
 391 004e 044B     		ldr	r3, .L31+4
 392 0050 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 393 0052 0448     		ldr	r0, .L31+8
 394 0054 FFF7FEFF 		bl	printf
 395              	.LVL35:
 396              	.LBE26:
 397              		.loc 1 170 1 is_stmt 0 view .LVU89
 398 0058 DDE7     		b	.L23
 399              	.L32:
 400 005a 00BF     		.align	2
 401              	.L31:
 402 005c 00000000 		.word	.LANCHOR4
 403 0060 00000000 		.word	.LANCHOR5
 404 0064 00000000 		.word	.LC2
 405              		.cfi_endproc
 406              	.LFE195:
ARM GAS  /tmp/ccjoq5Rd.s 			page 14


 408              		.section	.rodata.counter_label.str1.4,"aMS",%progbits,1
 409              		.align	2
 410              	.LC3:
 411 0000 636F756E 		.ascii	"counter\000"
 411      74657200 
 412              		.section	.text.counter_label,"ax",%progbits
 413              		.align	1
 414              		.global	counter_label
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 419              	counter_label:
 420              	.LFB187:
   7:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
 421              		.loc 1 7 1 is_stmt 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425 0000 10B5     		push	{r4, lr}
 426              	.LCFI8:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 4, -8
 429              		.cfi_offset 14, -4
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 430              		.loc 1 8 5 view .LVU91
 431              	.LBB30:
 432              	.LBI30:
 433              		.file 3 "Middlewares/lvgl/src/core/lv_disp.h"
   1:Middlewares/lvgl/src/core/lv_disp.h **** /**
   2:Middlewares/lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:Middlewares/lvgl/src/core/lv_disp.h ****  *
   4:Middlewares/lvgl/src/core/lv_disp.h ****  */
   5:Middlewares/lvgl/src/core/lv_disp.h **** 
   6:Middlewares/lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:Middlewares/lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:Middlewares/lvgl/src/core/lv_disp.h **** 
   9:Middlewares/lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_disp.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_disp.h **** #endif
  12:Middlewares/lvgl/src/core/lv_disp.h **** 
  13:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:Middlewares/lvgl/src/core/lv_disp.h **** 
  20:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_disp.h **** 
  24:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_disp.h **** 
  28:Middlewares/lvgl/src/core/lv_disp.h **** typedef enum {
  29:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
ARM GAS  /tmp/ccjoq5Rd.s 			page 15


  30:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:Middlewares/lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:Middlewares/lvgl/src/core/lv_disp.h **** 
  41:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  42:Middlewares/lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  44:Middlewares/lvgl/src/core/lv_disp.h **** 
  45:Middlewares/lvgl/src/core/lv_disp.h **** /**
  46:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  49:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:Middlewares/lvgl/src/core/lv_disp.h ****  */
  51:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:Middlewares/lvgl/src/core/lv_disp.h **** 
  53:Middlewares/lvgl/src/core/lv_disp.h **** /**
  54:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  57:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:Middlewares/lvgl/src/core/lv_disp.h ****  */
  59:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:Middlewares/lvgl/src/core/lv_disp.h **** 
  61:Middlewares/lvgl/src/core/lv_disp.h **** /**
  62:Middlewares/lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:Middlewares/lvgl/src/core/lv_disp.h ****  */
  65:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:Middlewares/lvgl/src/core/lv_disp.h **** 
  67:Middlewares/lvgl/src/core/lv_disp.h **** /**
  68:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:Middlewares/lvgl/src/core/lv_disp.h ****  */
  72:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:Middlewares/lvgl/src/core/lv_disp.h **** 
  74:Middlewares/lvgl/src/core/lv_disp.h **** /**
  75:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:Middlewares/lvgl/src/core/lv_disp.h ****  * layer)
  77:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:Middlewares/lvgl/src/core/lv_disp.h ****  */
  80:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:Middlewares/lvgl/src/core/lv_disp.h **** 
  82:Middlewares/lvgl/src/core/lv_disp.h **** /**
  83:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  84:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  85:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:Middlewares/lvgl/src/core/lv_disp.h ****  */
ARM GAS  /tmp/ccjoq5Rd.s 			page 16


  87:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:Middlewares/lvgl/src/core/lv_disp.h **** 
  89:Middlewares/lvgl/src/core/lv_disp.h **** /**
  90:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  91:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  92:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:Middlewares/lvgl/src/core/lv_disp.h ****  */
  94:Middlewares/lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:Middlewares/lvgl/src/core/lv_disp.h **** 
  96:Middlewares/lvgl/src/core/lv_disp.h **** /**
  97:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  98:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  99:Middlewares/lvgl/src/core/lv_disp.h ****  * @param color color of the background
 100:Middlewares/lvgl/src/core/lv_disp.h ****  */
 101:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:Middlewares/lvgl/src/core/lv_disp.h **** 
 103:Middlewares/lvgl/src/core/lv_disp.h **** /**
 104:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 105:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 106:Middlewares/lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:Middlewares/lvgl/src/core/lv_disp.h ****  */
 108:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:Middlewares/lvgl/src/core/lv_disp.h **** 
 110:Middlewares/lvgl/src/core/lv_disp.h **** /**
 111:Middlewares/lvgl/src/core/lv_disp.h ****  * Opacity of the background
 112:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 113:Middlewares/lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:Middlewares/lvgl/src/core/lv_disp.h ****  */
 115:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:Middlewares/lvgl/src/core/lv_disp.h **** 
 117:Middlewares/lvgl/src/core/lv_disp.h **** /**
 118:Middlewares/lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 119:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:Middlewares/lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:Middlewares/lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 122:Middlewares/lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 123:Middlewares/lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:Middlewares/lvgl/src/core/lv_disp.h ****  */
 125:Middlewares/lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:Middlewares/lvgl/src/core/lv_disp.h **** 
 127:Middlewares/lvgl/src/core/lv_disp.h **** /**
 128:Middlewares/lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:Middlewares/lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:Middlewares/lvgl/src/core/lv_disp.h ****  */
 132:Middlewares/lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:Middlewares/lvgl/src/core/lv_disp.h **** 
 134:Middlewares/lvgl/src/core/lv_disp.h **** /**
 135:Middlewares/lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:Middlewares/lvgl/src/core/lv_disp.h ****  */
 138:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:Middlewares/lvgl/src/core/lv_disp.h **** 
 140:Middlewares/lvgl/src/core/lv_disp.h **** /**
 141:Middlewares/lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:Middlewares/lvgl/src/core/lv_disp.h ****  */
ARM GAS  /tmp/ccjoq5Rd.s 			page 17


 144:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:Middlewares/lvgl/src/core/lv_disp.h **** 
 146:Middlewares/lvgl/src/core/lv_disp.h **** /**
 147:Middlewares/lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:Middlewares/lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 150:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:Middlewares/lvgl/src/core/lv_disp.h ****  */
 152:Middlewares/lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:Middlewares/lvgl/src/core/lv_disp.h **** 
 154:Middlewares/lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 155:Middlewares/lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 156:Middlewares/lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 157:Middlewares/lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 158:Middlewares/lvgl/src/core/lv_disp.h **** 
 159:Middlewares/lvgl/src/core/lv_disp.h **** /**
 160:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 161:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 162:Middlewares/lvgl/src/core/lv_disp.h ****  */
 163:Middlewares/lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 434              		.loc 3 163 26 view .LVU92
 435              	.LBB31:
 164:Middlewares/lvgl/src/core/lv_disp.h **** {
 165:Middlewares/lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 436              		.loc 3 165 5 view .LVU93
 437              		.loc 3 165 12 is_stmt 0 view .LVU94
 438 0002 FFF7FEFF 		bl	lv_disp_get_default
 439              	.LVL36:
 440 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 441              	.LVL37:
 442              	.LBE31:
 443              	.LBE30:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 444              		.loc 1 8 14 view .LVU95
 445 000a FFF7FEFF 		bl	lv_label_create
 446              	.LVL38:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 447              		.loc 1 8 12 view .LVU96
 448 000e 0F4C     		ldr	r4, .L35
 449 0010 2060     		str	r0, [r4]
   9:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
 450              		.loc 1 9 5 is_stmt 1 view .LVU97
 451 0012 0021     		movs	r1, #0
 452 0014 FFF7FEFF 		bl	lv_label_set_long_mode
 453              	.LVL39:
  10:Core/Src/lvgl_app.c ****     
 454              		.loc 1 10 5 view .LVU98
 455 0018 0121     		movs	r1, #1
 456 001a 2068     		ldr	r0, [r4]
 457 001c FFF7FEFF 		bl	lv_label_set_recolor
 458              	.LVL40:
  12:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
 459              		.loc 1 12 5 view .LVU99
 460 0020 0B49     		ldr	r1, .L35+4
 461 0022 2068     		ldr	r0, [r4]
 462 0024 FFF7FEFF 		bl	lv_label_set_text
 463              	.LVL41:
ARM GAS  /tmp/ccjoq5Rd.s 			page 18


  13:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
 464              		.loc 1 13 5 view .LVU100
 465 0028 9621     		movs	r1, #150
 466 002a 2068     		ldr	r0, [r4]
 467 002c FFF7FEFF 		bl	lv_obj_set_width
 468              	.LVL42:
  14:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
 469              		.loc 1 14 5 view .LVU101
 470 0030 0022     		movs	r2, #0
 471 0032 0221     		movs	r1, #2
 472 0034 2068     		ldr	r0, [r4]
 473 0036 FFF7FEFF 		bl	lv_obj_set_style_text_align
 474              	.LVL43:
  15:Core/Src/lvgl_app.c **** 
 475              		.loc 1 15 5 view .LVU102
 476 003a 6FF02703 		mvn	r3, #39
 477 003e 0022     		movs	r2, #0
 478 0040 0921     		movs	r1, #9
 479 0042 2068     		ldr	r0, [r4]
 480 0044 FFF7FEFF 		bl	lv_obj_align
 481              	.LVL44:
  23:Core/Src/lvgl_app.c **** 
 482              		.loc 1 23 1 is_stmt 0 view .LVU103
 483 0048 10BD     		pop	{r4, pc}
 484              	.L36:
 485 004a 00BF     		.align	2
 486              	.L35:
 487 004c 00000000 		.word	.LANCHOR6
 488 0050 00000000 		.word	.LC3
 489              		.cfi_endproc
 490              	.LFE187:
 492              		.section	.text.wave_chart_init,"ax",%progbits
 493              		.align	1
 494              		.global	wave_chart_init
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 499              	wave_chart_init:
 500              	.LFB190:
  42:Core/Src/lvgl_app.c ****     /*Create a chart*/
 501              		.loc 1 42 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 506              	.LCFI9:
 507              		.cfi_def_cfa_offset 20
 508              		.cfi_offset 4, -20
 509              		.cfi_offset 5, -16
 510              		.cfi_offset 6, -12
 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 85B0     		sub	sp, sp, #20
 514              	.LCFI10:
 515              		.cfi_def_cfa_offset 40
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 516              		.loc 1 44 5 view .LVU105
ARM GAS  /tmp/ccjoq5Rd.s 			page 19


 517              	.LBB44:
 518              	.LBI44:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 519              		.loc 3 163 26 view .LVU106
 520              	.LBB45:
 521              		.loc 3 165 5 view .LVU107
 522              		.loc 3 165 12 is_stmt 0 view .LVU108
 523 0004 FFF7FEFF 		bl	lv_disp_get_default
 524              	.LVL45:
 525 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 526              	.LVL46:
 527              	.LBE45:
 528              	.LBE44:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 529              		.loc 1 44 18 view .LVU109
 530 000c FFF7FEFF 		bl	lv_chart_create
 531              	.LVL47:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 532              		.loc 1 44 16 view .LVU110
 533 0010 494C     		ldr	r4, .L39
 534 0012 2060     		str	r0, [r4]
  45:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
 535              		.loc 1 45 5 is_stmt 1 view .LVU111
 536 0014 4FF4D272 		mov	r2, #420
 537 0018 4FF4FA71 		mov	r1, #500
 538 001c FFF7FEFF 		bl	lv_obj_set_size
 539              	.LVL48:
  46:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1000);
 540              		.loc 1 46 5 view .LVU112
 541 0020 0023     		movs	r3, #0
 542 0022 3222     		movs	r2, #50
 543 0024 0121     		movs	r1, #1
 544 0026 2068     		ldr	r0, [r4]
 545 0028 FFF7FEFF 		bl	lv_obj_align
 546              	.LVL49:
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 512);
 547              		.loc 1 47 5 view .LVU113
 548 002c 4FF47A73 		mov	r3, #1000
 549 0030 0022     		movs	r2, #0
 550 0032 1146     		mov	r1, r2
 551 0034 2068     		ldr	r0, [r4]
 552 0036 FFF7FEFF 		bl	lv_chart_set_range
 553              	.LVL50:
  48:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
 554              		.loc 1 48 5 view .LVU114
 555 003a 4FF40073 		mov	r3, #512
 556 003e 0022     		movs	r2, #0
 557 0040 0221     		movs	r1, #2
 558 0042 2068     		ldr	r0, [r4]
 559 0044 FFF7FEFF 		bl	lv_chart_set_range
 560              	.LVL51:
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
 561              		.loc 1 49 5 view .LVU115
 562 0048 1427     		movs	r7, #20
 563 004a 0397     		str	r7, [sp, #12]
 564 004c 0126     		movs	r6, #1
 565 004e 0296     		str	r6, [sp, #8]
ARM GAS  /tmp/ccjoq5Rd.s 			page 20


 566 0050 0196     		str	r6, [sp, #4]
 567 0052 0525     		movs	r5, #5
 568 0054 0095     		str	r5, [sp]
 569 0056 2B46     		mov	r3, r5
 570 0058 2A46     		mov	r2, r5
 571 005a 0221     		movs	r1, #2
 572 005c 2068     		ldr	r0, [r4]
 573 005e FFF7FEFF 		bl	lv_chart_set_axis_tick
 574              	.LVL52:
  50:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
 575              		.loc 1 50 5 view .LVU116
 576 0062 3C23     		movs	r3, #60
 577 0064 0393     		str	r3, [sp, #12]
 578 0066 0296     		str	r6, [sp, #8]
 579 0068 0195     		str	r5, [sp, #4]
 580 006a 0623     		movs	r3, #6
 581 006c 0093     		str	r3, [sp]
 582 006e 2B46     		mov	r3, r5
 583 0070 0A22     		movs	r2, #10
 584 0072 0021     		movs	r1, #0
 585 0074 2068     		ldr	r0, [r4]
 586 0076 FFF7FEFF 		bl	lv_chart_set_axis_tick
 587              	.LVL53:
  52:Core/Src/lvgl_app.c **** 
 588              		.loc 1 52 5 view .LVU117
 589 007a 2568     		ldr	r5, [r4]
 590              	.LVL54:
 591              	.LBB46:
 592              	.LBI46:
 593              		.file 4 "Middlewares/lvgl/src/core/lv_obj_style.h"
   1:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:Middlewares/lvgl/src/core/lv_obj_style.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:Middlewares/lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  20:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  24:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
ARM GAS  /tmp/ccjoq5Rd.s 			page 21


  28:Middlewares/lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  30:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef enum {
  31:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:Middlewares/lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  39:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t selector :24;
  42:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_local :1;
  43:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans :1;
  44:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_t;
  45:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  46:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:Middlewares/lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:Middlewares/lvgl/src/core/lv_obj_style.h ****     void * user_data;
  54:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  55:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  57:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  58:Middlewares/lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  60:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  61:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  62:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  65:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  67:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  68:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  75:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  77:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  78:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  79:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
ARM GAS  /tmp/ccjoq5Rd.s 			page 22


  85:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  86:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  88:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  89:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  92:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:Middlewares/lvgl/src/core/lv_obj_style.h **** {
  94:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
  95:Middlewares/lvgl/src/core/lv_obj_style.h **** }
  96:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  97:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  98:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 102:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 104:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 105:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
 111:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 112:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 114:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 115:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:Middlewares/lvgl/src/core/lv_obj_style.h ****  * or any other style change happens.
 117:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 119:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 121:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 122:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:Middlewares/lvgl/src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 131:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 133:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 134:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 136:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part to which the property should be added
 137:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     a state to which the property should be added
 138:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property
 139:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 140:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
ARM GAS  /tmp/ccjoq5Rd.s 			page 23


 142:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t
 144:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 145:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 146:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 147:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 148:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part of the object which style property should be removed.
 149:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     the state from which the property should be removed.
 150:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 151:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 152:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 153:Middlewares/lvgl/src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 154:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 155:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 156:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to create a style tarnsition
 157:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 158:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part
 159:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prev_state
 160:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param new_state
 161:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param tr
 162:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 163:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 164:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 165:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 166:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 167:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 168:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state1
 169:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state2
 170:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return
 171:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 172:Middlewares/lvgl/src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 173:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 174:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 175:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 176:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 177:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 178:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 179:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 180:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 181:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 182:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 183:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 184:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 185:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 186:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 187:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 188:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 189:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 190:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 191:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 192:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 193:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 194:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
 195:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 196:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 197:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 198:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
ARM GAS  /tmp/ccjoq5Rd.s 			page 24


 199:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 200:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 201:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 202:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 203:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 204:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 205:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 206:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 207:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 208:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 209:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 210:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 211:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 212:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 213:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_sel
 214:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_row(obj, value, selector);
 215:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_column(obj, value, selector);
 216:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 217:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 218:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_select
 594              		.loc 4 218 20 view .LVU118
 595              	.LBB47:
 219:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_width(obj, value, selector);
 596              		.loc 4 219 5 view .LVU119
 597 007c 4FF40032 		mov	r2, #131072
 598 0080 0021     		movs	r1, #0
 599 0082 2846     		mov	r0, r5
 600 0084 FFF7FEFF 		bl	lv_obj_set_style_width
 601              	.LVL55:
 220:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_height(obj, value, selector);
 602              		.loc 4 220 5 view .LVU120
 603 0088 4FF40032 		mov	r2, #131072
 604 008c 0021     		movs	r1, #0
 605 008e 2846     		mov	r0, r5
 606 0090 FFF7FEFF 		bl	lv_obj_set_style_height
 607              	.LVL56:
 608              		.loc 4 220 5 is_stmt 0 view .LVU121
 609              	.LBE47:
 610              	.LBE46:
  55:Core/Src/lvgl_app.c **** 
 611              		.loc 1 55 5 is_stmt 1 view .LVU122
  55:Core/Src/lvgl_app.c **** 
 612              		.loc 1 55 16 is_stmt 0 view .LVU123
 613 0094 2568     		ldr	r5, [r4]
 614 0096 0020     		movs	r0, #0
 615 0098 FFF7FEFF 		bl	lv_palette_main
 616              	.LVL57:
 617 009c 0146     		mov	r1, r0	@ movhi
 618 009e 0022     		movs	r2, #0
 619 00a0 2846     		mov	r0, r5
 620 00a2 FFF7FEFF 		bl	lv_chart_add_series
 621              	.LVL58:
  55:Core/Src/lvgl_app.c **** 
 622              		.loc 1 55 14 view .LVU124
 623 00a6 254B     		ldr	r3, .L39+4
 624 00a8 1860     		str	r0, [r3]
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
ARM GAS  /tmp/ccjoq5Rd.s 			page 25


 625              		.loc 1 62 5 is_stmt 1 view .LVU125
 626              	.LBB48:
 627              	.LBI48:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 628              		.loc 3 163 26 view .LVU126
 629              	.LBB49:
 630              		.loc 3 165 5 view .LVU127
 631              		.loc 3 165 12 is_stmt 0 view .LVU128
 632 00aa FFF7FEFF 		bl	lv_disp_get_default
 633              	.LVL59:
 634 00ae FFF7FEFF 		bl	lv_disp_get_scr_act
 635              	.LVL60:
 636              	.LBE49:
 637              	.LBE48:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 638              		.loc 1 62 21 view .LVU129
 639 00b2 FFF7FEFF 		bl	lv_slider_create
 640              	.LVL61:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 641              		.loc 1 62 19 view .LVU130
 642 00b6 224D     		ldr	r5, .L39+8
 643 00b8 2860     		str	r0, [r5]
  63:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 644              		.loc 1 63 5 is_stmt 1 view .LVU131
 645              	.LVL62:
 646              	.LBB50:
 647              	.LBI50:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 648              		.loc 2 97 20 view .LVU132
 649              	.LBB51:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 650              		.loc 2 99 5 view .LVU133
 651 00ba 4FF42062 		mov	r2, #2560
 652 00be 4FF48071 		mov	r1, #256
 653 00c2 FFF7FEFF 		bl	lv_bar_set_range
 654              	.LVL63:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 655              		.loc 2 99 5 is_stmt 0 view .LVU134
 656              	.LBE51:
 657              	.LBE50:
  64:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 480, 10);
 658              		.loc 1 64 5 is_stmt 1 view .LVU135
 659 00c6 0023     		movs	r3, #0
 660 00c8 1C22     		movs	r2, #28
 661 00ca 1E49     		ldr	r1, .L39+12
 662 00cc 2868     		ldr	r0, [r5]
 663 00ce FFF7FEFF 		bl	lv_obj_add_event_cb
 664              	.LVL64:
  65:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
 665              		.loc 1 65 5 view .LVU136
 666 00d2 0A22     		movs	r2, #10
 667 00d4 4FF4F071 		mov	r1, #480
 668 00d8 2868     		ldr	r0, [r5]
 669 00da FFF7FEFF 		bl	lv_obj_set_size
 670              	.LVL65:
  66:Core/Src/lvgl_app.c **** 
 671              		.loc 1 66 5 view .LVU137
ARM GAS  /tmp/ccjoq5Rd.s 			page 26


 672 00de 1E23     		movs	r3, #30
 673 00e0 0093     		str	r3, [sp]
 674 00e2 0023     		movs	r3, #0
 675 00e4 0E22     		movs	r2, #14
 676 00e6 2168     		ldr	r1, [r4]
 677 00e8 2868     		ldr	r0, [r5]
 678 00ea FFF7FEFF 		bl	lv_obj_align_to
 679              	.LVL66:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 680              		.loc 1 68 5 view .LVU138
 681              	.LBB52:
 682              	.LBI52:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 683              		.loc 3 163 26 view .LVU139
 684              	.LBB53:
 685              		.loc 3 165 5 view .LVU140
 686              		.loc 3 165 12 is_stmt 0 view .LVU141
 687 00ee FFF7FEFF 		bl	lv_disp_get_default
 688              	.LVL67:
 689 00f2 FFF7FEFF 		bl	lv_disp_get_scr_act
 690              	.LVL68:
 691              	.LBE53:
 692              	.LBE52:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 693              		.loc 1 68 21 view .LVU142
 694 00f6 FFF7FEFF 		bl	lv_slider_create
 695              	.LVL69:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 696              		.loc 1 68 19 view .LVU143
 697 00fa 134D     		ldr	r5, .L39+16
 698 00fc 2860     		str	r0, [r5]
  69:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 699              		.loc 1 69 5 is_stmt 1 view .LVU144
 700              	.LVL70:
 701              	.LBB54:
 702              	.LBI54:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 703              		.loc 2 97 20 view .LVU145
 704              	.LBB55:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 705              		.loc 2 99 5 view .LVU146
 706 00fe 4FF42062 		mov	r2, #2560
 707 0102 4FF48071 		mov	r1, #256
 708 0106 FFF7FEFF 		bl	lv_bar_set_range
 709              	.LVL71:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 710              		.loc 2 99 5 is_stmt 0 view .LVU147
 711              	.LBE55:
 712              	.LBE54:
  70:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 400);
 713              		.loc 1 70 5 is_stmt 1 view .LVU148
 714 010a 0023     		movs	r3, #0
 715 010c 1C22     		movs	r2, #28
 716 010e 0F49     		ldr	r1, .L39+20
 717 0110 2868     		ldr	r0, [r5]
 718 0112 FFF7FEFF 		bl	lv_obj_add_event_cb
 719              	.LVL72:
ARM GAS  /tmp/ccjoq5Rd.s 			page 27


  71:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 10, 0);
 720              		.loc 1 71 5 view .LVU149
 721 0116 4FF4C872 		mov	r2, #400
 722 011a 0A21     		movs	r1, #10
 723 011c 2868     		ldr	r0, [r5]
 724 011e FFF7FEFF 		bl	lv_obj_set_size
 725              	.LVL73:
  72:Core/Src/lvgl_app.c **** }
 726              		.loc 1 72 5 view .LVU150
 727 0122 0023     		movs	r3, #0
 728 0124 0093     		str	r3, [sp]
 729 0126 0A23     		movs	r3, #10
 730 0128 3A46     		mov	r2, r7
 731 012a 2168     		ldr	r1, [r4]
 732 012c 2868     		ldr	r0, [r5]
 733 012e FFF7FEFF 		bl	lv_obj_align_to
 734              	.LVL74:
  73:Core/Src/lvgl_app.c **** 
 735              		.loc 1 73 1 is_stmt 0 view .LVU151
 736 0132 05B0     		add	sp, sp, #20
 737              	.LCFI11:
 738              		.cfi_def_cfa_offset 20
 739              		@ sp needed
 740 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 741              	.L40:
 742 0136 00BF     		.align	2
 743              	.L39:
 744 0138 00000000 		.word	.LANCHOR0
 745 013c 00000000 		.word	.LANCHOR7
 746 0140 00000000 		.word	.LANCHOR2
 747 0144 00000000 		.word	slider_x_event_cb
 748 0148 00000000 		.word	.LANCHOR3
 749 014c 00000000 		.word	slider_y_event_cb
 750              		.cfi_endproc
 751              	.LFE190:
 753              		.section	.rodata.wave_btn.str1.4,"aMS",%progbits,1
 754              		.align	2
 755              	.LC4:
 756 0000 52455345 		.ascii	"RESET\000"
 756      5400
 757 0006 0000     		.align	2
 758              	.LC5:
 759 0008 52756E2F 		.ascii	"Run/Stop\000"
 759      53746F70 
 759      00
 760              		.section	.text.wave_btn,"ax",%progbits
 761              		.align	1
 762              		.global	wave_btn
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	wave_btn:
 768              	.LFB194:
 115:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 769              		.loc 1 115 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccjoq5Rd.s 			page 28


 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773 0000 10B5     		push	{r4, lr}
 774              	.LCFI12:
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 4, -8
 777              		.cfi_offset 14, -4
 116:Core/Src/lvgl_app.c **** 
 778              		.loc 1 116 5 view .LVU153
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 779              		.loc 1 118 5 view .LVU154
 780              	.LBB64:
 781              	.LBI64:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 782              		.loc 3 163 26 view .LVU155
 783              	.LBB65:
 784              		.loc 3 165 5 view .LVU156
 785              		.loc 3 165 12 is_stmt 0 view .LVU157
 786 0002 FFF7FEFF 		bl	lv_disp_get_default
 787              	.LVL75:
 788 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 789              	.LVL76:
 790              	.LBE65:
 791              	.LBE64:
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 792              		.loc 1 118 23 view .LVU158
 793 000a FFF7FEFF 		bl	lv_btn_create
 794              	.LVL77:
 795 000e 0446     		mov	r4, r0
 796              	.LVL78:
 119:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_RIGHT, -20, 20);
 797              		.loc 1 119 5 is_stmt 1 view .LVU159
 798 0010 0023     		movs	r3, #0
 799 0012 1A46     		mov	r2, r3
 800 0014 2049     		ldr	r1, .L43
 801 0016 FFF7FEFF 		bl	lv_obj_add_event_cb
 802              	.LVL79:
 120:Core/Src/lvgl_app.c **** 
 803              		.loc 1 120 5 view .LVU160
 804 001a 1423     		movs	r3, #20
 805 001c 6FF01302 		mvn	r2, #19
 806 0020 0321     		movs	r1, #3
 807 0022 2046     		mov	r0, r4
 808 0024 FFF7FEFF 		bl	lv_obj_align
 809              	.LVL80:
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 810              		.loc 1 122 5 view .LVU161
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 811              		.loc 1 122 13 is_stmt 0 view .LVU162
 812 0028 2046     		mov	r0, r4
 813 002a FFF7FEFF 		bl	lv_label_create
 814              	.LVL81:
 815 002e 0446     		mov	r4, r0
 816              	.LVL82:
 123:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 817              		.loc 1 123 5 is_stmt 1 view .LVU163
 818 0030 1A49     		ldr	r1, .L43+4
 819 0032 FFF7FEFF 		bl	lv_label_set_text
ARM GAS  /tmp/ccjoq5Rd.s 			page 29


 820              	.LVL83:
 124:Core/Src/lvgl_app.c **** 
 821              		.loc 1 124 5 view .LVU164
 822              	.LBB66:
 823              	.LBI66:
 824              		.file 5 "Middlewares/lvgl/src/core/lv_obj_pos.h"
   1:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:Middlewares/lvgl/src/core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_pos.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_pos.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  18:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  19:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      DEFINES
  20:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  21:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  22:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  23:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      TYPEDEFS
  24:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  25:Middlewares/lvgl/src/core/lv_obj_pos.h **** struct _lv_obj_t;
  26:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  27:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef struct {
  29:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:Middlewares/lvgl/src/core/lv_obj_pos.h ****     void * user_data;
  31:Middlewares/lvgl/src/core/lv_obj_pos.h **** }lv_layout_dsc_t;
  32:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  33:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  34:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  36:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  38:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  40:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  43:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  45:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  46:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the x coordinate of a object
  47:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  48:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  50:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
ARM GAS  /tmp/ccjoq5Rd.s 			page 30


  52:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  53:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the y coordinate of a object
  54:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  55:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  57:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  59:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  60:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the size of an object.
  61:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  62:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  63:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  64:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  65:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  70:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  72:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  73:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Recalculate the size of the object
  74:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  75:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          true: the size has been changed
  76:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  77:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  79:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  80:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width of an object
  81:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  82:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  83:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  84:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  89:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  91:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  92:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height of an object
  93:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  94:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  95:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  96:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 101:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 103:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 104:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 106:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 108:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
ARM GAS  /tmp/ccjoq5Rd.s 			page 31


 109:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 110:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 111:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 113:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 115:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 117:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 118:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set a layout for an object
 119:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 120:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 122:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 124:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 125:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 129:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 131:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 132:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Mark the object for layout update.
 133:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 135:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 137:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 138:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Update the layout of an object.
 139:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 144:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Regsiter a new layout
 145:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param cb        the layout update callback
 146:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          the ID of the new layout
 148:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 149:Middlewares/lvgl/src/core/lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 151:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 152:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object.
 153:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 156:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 158:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 159:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Equivalent to:
 161:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
ARM GAS  /tmp/ccjoq5Rd.s 			page 32


 166:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 168:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 170:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 171:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to an other object.
 172:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 179:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 181:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 182:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 825              		.loc 5 186 20 view .LVU165
 826              	.LBB67:
 187:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 188:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 827              		.loc 5 188 5 view .LVU166
 828 0036 0023     		movs	r3, #0
 829 0038 1A46     		mov	r2, r3
 830 003a 0921     		movs	r1, #9
 831 003c 2046     		mov	r0, r4
 832 003e FFF7FEFF 		bl	lv_obj_align
 833              	.LVL84:
 834              		.loc 5 188 5 is_stmt 0 view .LVU167
 835              	.LBE67:
 836              	.LBE66:
 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 837              		.loc 1 126 5 is_stmt 1 view .LVU168
 838              	.LBB68:
 839              	.LBI68:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 840              		.loc 3 163 26 view .LVU169
 841              	.LBB69:
 842              		.loc 3 165 5 view .LVU170
 843              		.loc 3 165 12 is_stmt 0 view .LVU171
 844 0042 FFF7FEFF 		bl	lv_disp_get_default
 845              	.LVL85:
 846 0046 FFF7FEFF 		bl	lv_disp_get_scr_act
 847              	.LVL86:
 848              	.LBE69:
 849              	.LBE68:
 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 850              		.loc 1 126 23 view .LVU172
 851 004a FFF7FEFF 		bl	lv_btn_create
 852              	.LVL87:
 853 004e 0446     		mov	r4, r0
 854              	.LVL88:
 127:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_RIGHT, -20, 80);
ARM GAS  /tmp/ccjoq5Rd.s 			page 33


 855              		.loc 1 127 5 is_stmt 1 view .LVU173
 856 0050 0023     		movs	r3, #0
 857 0052 1A46     		mov	r2, r3
 858 0054 1249     		ldr	r1, .L43+8
 859 0056 FFF7FEFF 		bl	lv_obj_add_event_cb
 860              	.LVL89:
 128:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 861              		.loc 1 128 5 view .LVU174
 862 005a 5023     		movs	r3, #80
 863 005c 6FF01302 		mvn	r2, #19
 864 0060 0321     		movs	r1, #3
 865 0062 2046     		mov	r0, r4
 866 0064 FFF7FEFF 		bl	lv_obj_align
 867              	.LVL90:
 129:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 868              		.loc 1 129 5 view .LVU175
 869 0068 0821     		movs	r1, #8
 870 006a 2046     		mov	r0, r4
 871 006c FFF7FEFF 		bl	lv_obj_add_flag
 872              	.LVL91:
 130:Core/Src/lvgl_app.c **** 
 873              		.loc 1 130 5 view .LVU176
 874 0070 42F2D171 		movw	r1, #10193
 875 0074 2046     		mov	r0, r4
 876 0076 FFF7FEFF 		bl	lv_obj_set_height
 877              	.LVL92:
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 878              		.loc 1 132 5 view .LVU177
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 879              		.loc 1 132 13 is_stmt 0 view .LVU178
 880 007a 2046     		mov	r0, r4
 881 007c FFF7FEFF 		bl	lv_label_create
 882              	.LVL93:
 883 0080 0446     		mov	r4, r0
 884              	.LVL94:
 133:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 885              		.loc 1 133 5 is_stmt 1 view .LVU179
 886 0082 0849     		ldr	r1, .L43+12
 887 0084 FFF7FEFF 		bl	lv_label_set_text
 888              	.LVL95:
 134:Core/Src/lvgl_app.c **** 
 889              		.loc 1 134 5 view .LVU180
 890              	.LBB70:
 891              	.LBI70:
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 892              		.loc 5 186 20 view .LVU181
 893              	.LBB71:
 894              		.loc 5 188 5 view .LVU182
 895 0088 0023     		movs	r3, #0
 896 008a 1A46     		mov	r2, r3
 897 008c 0921     		movs	r1, #9
 898 008e 2046     		mov	r0, r4
 899 0090 FFF7FEFF 		bl	lv_obj_align
 900              	.LVL96:
 901              		.loc 5 188 5 is_stmt 0 view .LVU183
 902              	.LBE71:
 903              	.LBE70:
ARM GAS  /tmp/ccjoq5Rd.s 			page 34


 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 904              		.loc 1 145 1 view .LVU184
 905 0094 10BD     		pop	{r4, pc}
 906              	.LVL97:
 907              	.L44:
 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 908              		.loc 1 145 1 view .LVU185
 909 0096 00BF     		.align	2
 910              	.L43:
 911 0098 00000000 		.word	wave_zoom_stop
 912 009c 00000000 		.word	.LC4
 913 00a0 00000000 		.word	wave_draw_stop
 914 00a4 08000000 		.word	.LC5
 915              		.cfi_endproc
 916              	.LFE194:
 918              		.section	.rodata.distortion_list.str1.4,"aMS",%progbits,1
 919              		.align	2
 920              	.LC6:
 921 0000 4E6F2064 		.ascii	"No distortion\012Top distortion\012Bottom distortio"
 921      6973746F 
 921      7274696F 
 921      6E0A546F 
 921      70206469 
 922 002d 6E0A5477 		.ascii	"n\012Two-way distortion\012Crossover distortion\000"
 922      6F2D7761 
 922      79206469 
 922      73746F72 
 922      74696F6E 
 923              		.section	.text.distortion_list,"ax",%progbits
 924              		.align	1
 925              		.global	distortion_list
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 930              	distortion_list:
 931              	.LFB196:
 171:Core/Src/lvgl_app.c **** 
 172:Core/Src/lvgl_app.c **** void distortion_list(void)
 173:Core/Src/lvgl_app.c **** {
 932              		.loc 1 173 1 is_stmt 1 view -0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 10B5     		push	{r4, lr}
 937              	.LCFI13:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 4, -8
 940              		.cfi_offset 14, -4
 174:Core/Src/lvgl_app.c ****     /*Create a normal drop down list*/
 175:Core/Src/lvgl_app.c ****     lv_obj_t * dd = lv_dropdown_create(lv_scr_act());
 941              		.loc 1 175 5 view .LVU187
 942              	.LBB74:
 943              	.LBI74:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 944              		.loc 3 163 26 view .LVU188
 945              	.LBB75:
 946              		.loc 3 165 5 view .LVU189
ARM GAS  /tmp/ccjoq5Rd.s 			page 35


 947              		.loc 3 165 12 is_stmt 0 view .LVU190
 948 0002 FFF7FEFF 		bl	lv_disp_get_default
 949              	.LVL98:
 950 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 951              	.LVL99:
 952              	.LBE75:
 953              	.LBE74:
 954              		.loc 1 175 21 view .LVU191
 955 000a FFF7FEFF 		bl	lv_dropdown_create
 956              	.LVL100:
 957 000e 0446     		mov	r4, r0
 958              	.LVL101:
 176:Core/Src/lvgl_app.c ****     lv_dropdown_set_options(dd, "No distortion\n"
 959              		.loc 1 176 5 is_stmt 1 view .LVU192
 960 0010 0A49     		ldr	r1, .L47
 961 0012 FFF7FEFF 		bl	lv_dropdown_set_options
 962              	.LVL102:
 177:Core/Src/lvgl_app.c ****                                 "Top distortion\n"
 178:Core/Src/lvgl_app.c ****                                 "Bottom distortion\n"
 179:Core/Src/lvgl_app.c ****                                 "Two-way distortion\n"
 180:Core/Src/lvgl_app.c ****                                 "Crossover distortion"
 181:Core/Src/lvgl_app.c ****                                 );
 182:Core/Src/lvgl_app.c ****     lv_obj_align(dd, LV_ALIGN_TOP_RIGHT, -20, 200);
 963              		.loc 1 182 5 view .LVU193
 964 0016 C823     		movs	r3, #200
 965 0018 6FF01302 		mvn	r2, #19
 966 001c 0321     		movs	r1, #3
 967 001e 2046     		mov	r0, r4
 968 0020 FFF7FEFF 		bl	lv_obj_align
 969              	.LVL103:
 183:Core/Src/lvgl_app.c ****     lv_obj_set_width(dd,190);
 970              		.loc 1 183 5 view .LVU194
 971 0024 BE21     		movs	r1, #190
 972 0026 2046     		mov	r0, r4
 973 0028 FFF7FEFF 		bl	lv_obj_set_width
 974              	.LVL104:
 184:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(dd, distortion_handler, LV_EVENT_ALL, NULL);
 975              		.loc 1 184 5 view .LVU195
 976 002c 0023     		movs	r3, #0
 977 002e 1A46     		mov	r2, r3
 978 0030 0349     		ldr	r1, .L47+4
 979 0032 2046     		mov	r0, r4
 980 0034 FFF7FEFF 		bl	lv_obj_add_event_cb
 981              	.LVL105:
 185:Core/Src/lvgl_app.c **** }
 982              		.loc 1 185 1 is_stmt 0 view .LVU196
 983 0038 10BD     		pop	{r4, pc}
 984              	.LVL106:
 985              	.L48:
 986              		.loc 1 185 1 view .LVU197
 987 003a 00BF     		.align	2
 988              	.L47:
 989 003c 00000000 		.word	.LC6
 990 0040 00000000 		.word	distortion_handler
 991              		.cfi_endproc
 992              	.LFE196:
 994              		.section	.rodata.THD_label.str1.4,"aMS",%progbits,1
ARM GAS  /tmp/ccjoq5Rd.s 			page 36


 995              		.align	2
 996              	.LC7:
 997 0000 54484400 		.ascii	"THD\000"
 998              		.section	.text.THD_label,"ax",%progbits
 999              		.align	1
 1000              		.global	THD_label
 1001              		.syntax unified
 1002              		.thumb
 1003              		.thumb_func
 1005              	THD_label:
 1006              	.LFB197:
 186:Core/Src/lvgl_app.c **** 
 187:Core/Src/lvgl_app.c **** lv_obj_t * THD_text;
 188:Core/Src/lvgl_app.c **** void THD_label(void){
 1007              		.loc 1 188 21 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011 0000 10B5     		push	{r4, lr}
 1012              	.LCFI14:
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 4, -8
 1015              		.cfi_offset 14, -4
 189:Core/Src/lvgl_app.c ****     THD_text = lv_label_create(lv_scr_act());
 1016              		.loc 1 189 5 view .LVU199
 1017              	.LBB78:
 1018              	.LBI78:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 1019              		.loc 3 163 26 view .LVU200
 1020              	.LBB79:
 1021              		.loc 3 165 5 view .LVU201
 1022              		.loc 3 165 12 is_stmt 0 view .LVU202
 1023 0002 FFF7FEFF 		bl	lv_disp_get_default
 1024              	.LVL107:
 1025 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 1026              	.LVL108:
 1027              	.LBE79:
 1028              	.LBE78:
 1029              		.loc 1 189 16 view .LVU203
 1030 000a FFF7FEFF 		bl	lv_label_create
 1031              	.LVL109:
 1032              		.loc 1 189 14 view .LVU204
 1033 000e 0B4C     		ldr	r4, .L51
 1034 0010 2060     		str	r0, [r4]
 190:Core/Src/lvgl_app.c ****     lv_label_set_text(THD_text, "THD");
 1035              		.loc 1 190 5 is_stmt 1 view .LVU205
 1036 0012 0B49     		ldr	r1, .L51+4
 1037 0014 FFF7FEFF 		bl	lv_label_set_text
 1038              	.LVL110:
 191:Core/Src/lvgl_app.c ****     lv_obj_set_width(THD_text, 150);  /*Set smaller width to make the lines wrap*/
 1039              		.loc 1 191 5 view .LVU206
 1040 0018 9621     		movs	r1, #150
 1041 001a 2068     		ldr	r0, [r4]
 1042 001c FFF7FEFF 		bl	lv_obj_set_width
 1043              	.LVL111:
 192:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(THD_text, LV_TEXT_ALIGN_CENTER, 0);
 1044              		.loc 1 192 5 view .LVU207
ARM GAS  /tmp/ccjoq5Rd.s 			page 37


 1045 0020 0022     		movs	r2, #0
 1046 0022 0221     		movs	r1, #2
 1047 0024 2068     		ldr	r0, [r4]
 1048 0026 FFF7FEFF 		bl	lv_obj_set_style_text_align
 1049              	.LVL112:
 193:Core/Src/lvgl_app.c ****     lv_obj_align(THD_text, LV_ALIGN_TOP_RIGHT, -20, 140);
 1050              		.loc 1 193 5 view .LVU208
 1051 002a 8C23     		movs	r3, #140
 1052 002c 6FF01302 		mvn	r2, #19
 1053 0030 0321     		movs	r1, #3
 1054 0032 2068     		ldr	r0, [r4]
 1055 0034 FFF7FEFF 		bl	lv_obj_align
 1056              	.LVL113:
 194:Core/Src/lvgl_app.c **** }...
 1057              		.loc 1 194 1 is_stmt 0 view .LVU209
 1058 0038 10BD     		pop	{r4, pc}
 1059              	.L52:
 1060 003a 00BF     		.align	2
 1061              	.L51:
 1062 003c 00000000 		.word	.LANCHOR8
 1063 0040 00000000 		.word	.LC7
 1064              		.cfi_endproc
 1065              	.LFE197:
 1067              		.global	THD_text
 1068              		.global	distortion_mode
 1069              		.global	waveAutoFlg
 1070              		.global	waveStopFlg
 1071              		.global	wave_slider_y
 1072              		.global	wave_slider_x
 1073              		.global	wave_ser
 1074              		.global	wave_chart
 1075              		.global	label1
 1076              		.section	.rodata
 1077              		.align	2
 1078              		.set	.LANCHOR4,. + 0
 1079              	.LC0:
 1080 0000 4E6F2064 		.ascii	"No distortion\000"
 1080      6973746F 
 1080      7274696F 
 1080      6E00
 1081 000e 00000000 		.space	18
 1081      00000000 
 1081      00000000 
 1081      00000000 
 1081      0000
 1082 0020 546F7020 		.ascii	"Top distortion\000"
 1082      64697374 
 1082      6F727469 
 1082      6F6E00
 1083 002f 00000000 		.space	17
 1083      00000000 
 1083      00000000 
 1083      00000000 
 1083      00
 1084 0040 426F7474 		.ascii	"Bottom distortion\000"
 1084      6F6D2064 
 1084      6973746F 
ARM GAS  /tmp/ccjoq5Rd.s 			page 38


 1084      7274696F 
 1084      6E00
 1085 0052 00000000 		.space	14
 1085      00000000 
 1085      00000000 
 1085      0000
 1086 0060 54776F2D 		.ascii	"Two-way distortion\000"
 1086      77617920 
 1086      64697374 
 1086      6F727469 
 1086      6F6E00
 1087 0073 00000000 		.space	13
 1087      00000000 
 1087      00000000 
 1087      00
 1088 0080 43726F73 		.ascii	"Crossover distortion\000"
 1088      736F7665 
 1088      72206469 
 1088      73746F72 
 1088      74696F6E 
 1089 0095 00000000 		.space	11
 1089      00000000 
 1089      000000
 1090              		.section	.bss.THD_text,"aw",%nobits
 1091              		.align	2
 1092              		.set	.LANCHOR8,. + 0
 1095              	THD_text:
 1096 0000 00000000 		.space	4
 1097              		.section	.bss.distortion_mode,"aw",%nobits
 1098              		.set	.LANCHOR5,. + 0
 1101              	distortion_mode:
 1102 0000 00       		.space	1
 1103              		.section	.bss.label1,"aw",%nobits
 1104              		.align	2
 1105              		.set	.LANCHOR6,. + 0
 1108              	label1:
 1109 0000 00000000 		.space	4
 1110              		.section	.bss.waveAutoFlg,"aw",%nobits
 1113              	waveAutoFlg:
 1114 0000 00       		.space	1
 1115              		.section	.bss.waveStopFlg,"aw",%nobits
 1116              		.set	.LANCHOR1,. + 0
 1119              	waveStopFlg:
 1120 0000 00       		.space	1
 1121              		.section	.bss.wave_chart,"aw",%nobits
 1122              		.align	2
 1123              		.set	.LANCHOR0,. + 0
 1126              	wave_chart:
 1127 0000 00000000 		.space	4
 1128              		.section	.bss.wave_ser,"aw",%nobits
 1129              		.align	2
 1130              		.set	.LANCHOR7,. + 0
 1133              	wave_ser:
 1134 0000 00000000 		.space	4
 1135              		.section	.bss.wave_slider_x,"aw",%nobits
 1136              		.align	2
 1137              		.set	.LANCHOR2,. + 0
ARM GAS  /tmp/ccjoq5Rd.s 			page 39


 1140              	wave_slider_x:
 1141 0000 00000000 		.space	4
 1142              		.section	.bss.wave_slider_y,"aw",%nobits
 1143              		.align	2
 1144              		.set	.LANCHOR3,. + 0
 1147              	wave_slider_y:
 1148 0000 00000000 		.space	4
 1149              		.text
 1150              	.Letext0:
 1151              		.file 6 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1152              		.file 7 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1153              		.file 8 "Middlewares/lvgl/src/misc/lv_ll.h"
 1154              		.file 9 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 1155              		.file 10 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 1156              		.file 11 "Middlewares/lvgl/src/core/lv_obj.h"
 1157              		.file 12 "Middlewares/lvgl/src/core/lv_group.h"
 1158              		.file 13 "Middlewares/lvgl/src/core/../misc/lv_anim.h"
 1159              		.file 14 "Middlewares/lvgl/src/core/../misc/lv_txt.h"
 1160              		.file 15 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 1161              		.file 16 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 1162              		.file 17 "Middlewares/lvgl/src/core/lv_obj_class.h"
 1163              		.file 18 "Middlewares/lvgl/src/core/lv_event.h"
 1164              		.file 19 "Middlewares/lvgl/src/widgets/lv_label.h"
 1165              		.file 20 "Middlewares/lvgl/src/widgets/lv_bar.h"
 1166              		.file 21 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
 1167              		.file 22 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 1168              		.file 23 "Middlewares/lvgl/src/hal/lv_hal_disp.h"
 1169              		.file 24 "Middlewares/lvgl/src/core/lv_obj_style_gen.h"
 1170              		.file 25 "Middlewares/lvgl/src/widgets/lv_dropdown.h"
 1171              		.file 26 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/string.h"
 1172              		.file 27 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/stdio.h"
 1173              		.file 28 "Middlewares/lvgl/src/widgets/lv_btn.h"
 1174              		.file 29 "<built-in>"
ARM GAS  /tmp/ccjoq5Rd.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lvgl_app.c
     /tmp/ccjoq5Rd.s:19     .text.slider_y_event_cb:0000000000000000 $t
     /tmp/ccjoq5Rd.s:24     .text.slider_y_event_cb:0000000000000000 slider_y_event_cb
     /tmp/ccjoq5Rd.s:68     .text.slider_y_event_cb:0000000000000018 $d
     /tmp/ccjoq5Rd.s:73     .text.slider_x_event_cb:0000000000000000 $t
     /tmp/ccjoq5Rd.s:78     .text.slider_x_event_cb:0000000000000000 slider_x_event_cb
     /tmp/ccjoq5Rd.s:120    .text.slider_x_event_cb:0000000000000018 $d
     /tmp/ccjoq5Rd.s:125    .text.wave_draw_stop:0000000000000000 $t
     /tmp/ccjoq5Rd.s:130    .text.wave_draw_stop:0000000000000000 wave_draw_stop
     /tmp/ccjoq5Rd.s:179    .text.wave_draw_stop:0000000000000024 $d
     /tmp/ccjoq5Rd.s:184    .rodata.wave_zoom_stop.str1.4:0000000000000000 $d
     /tmp/ccjoq5Rd.s:188    .text.wave_zoom_stop:0000000000000000 $t
     /tmp/ccjoq5Rd.s:193    .text.wave_zoom_stop:0000000000000000 wave_zoom_stop
     /tmp/ccjoq5Rd.s:272    .text.wave_zoom_stop:0000000000000044 $d
     /tmp/ccjoq5Rd.s:280    .rodata.distortion_handler.str1.4:0000000000000000 $d
     /tmp/ccjoq5Rd.s:284    .text.distortion_handler:0000000000000000 $t
     /tmp/ccjoq5Rd.s:289    .text.distortion_handler:0000000000000000 distortion_handler
     /tmp/ccjoq5Rd.s:402    .text.distortion_handler:000000000000005c $d
     /tmp/ccjoq5Rd.s:409    .rodata.counter_label.str1.4:0000000000000000 $d
     /tmp/ccjoq5Rd.s:413    .text.counter_label:0000000000000000 $t
     /tmp/ccjoq5Rd.s:419    .text.counter_label:0000000000000000 counter_label
     /tmp/ccjoq5Rd.s:487    .text.counter_label:000000000000004c $d
     /tmp/ccjoq5Rd.s:493    .text.wave_chart_init:0000000000000000 $t
     /tmp/ccjoq5Rd.s:499    .text.wave_chart_init:0000000000000000 wave_chart_init
     /tmp/ccjoq5Rd.s:744    .text.wave_chart_init:0000000000000138 $d
     /tmp/ccjoq5Rd.s:754    .rodata.wave_btn.str1.4:0000000000000000 $d
     /tmp/ccjoq5Rd.s:761    .text.wave_btn:0000000000000000 $t
     /tmp/ccjoq5Rd.s:767    .text.wave_btn:0000000000000000 wave_btn
     /tmp/ccjoq5Rd.s:911    .text.wave_btn:0000000000000098 $d
     /tmp/ccjoq5Rd.s:919    .rodata.distortion_list.str1.4:0000000000000000 $d
     /tmp/ccjoq5Rd.s:924    .text.distortion_list:0000000000000000 $t
     /tmp/ccjoq5Rd.s:930    .text.distortion_list:0000000000000000 distortion_list
     /tmp/ccjoq5Rd.s:989    .text.distortion_list:000000000000003c $d
     /tmp/ccjoq5Rd.s:995    .rodata.THD_label.str1.4:0000000000000000 $d
     /tmp/ccjoq5Rd.s:999    .text.THD_label:0000000000000000 $t
     /tmp/ccjoq5Rd.s:1005   .text.THD_label:0000000000000000 THD_label
     /tmp/ccjoq5Rd.s:1062   .text.THD_label:000000000000003c $d
     /tmp/ccjoq5Rd.s:1095   .bss.THD_text:0000000000000000 THD_text
     /tmp/ccjoq5Rd.s:1101   .bss.distortion_mode:0000000000000000 distortion_mode
     /tmp/ccjoq5Rd.s:1113   .bss.waveAutoFlg:0000000000000000 waveAutoFlg
     /tmp/ccjoq5Rd.s:1119   .bss.waveStopFlg:0000000000000000 waveStopFlg
     /tmp/ccjoq5Rd.s:1147   .bss.wave_slider_y:0000000000000000 wave_slider_y
     /tmp/ccjoq5Rd.s:1140   .bss.wave_slider_x:0000000000000000 wave_slider_x
     /tmp/ccjoq5Rd.s:1133   .bss.wave_ser:0000000000000000 wave_ser
     /tmp/ccjoq5Rd.s:1126   .bss.wave_chart:0000000000000000 wave_chart
     /tmp/ccjoq5Rd.s:1108   .bss.label1:0000000000000000 label1
     /tmp/ccjoq5Rd.s:1077   .rodata:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1091   .bss.THD_text:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1102   .bss.distortion_mode:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1104   .bss.label1:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1114   .bss.waveAutoFlg:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1120   .bss.waveStopFlg:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1122   .bss.wave_chart:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1129   .bss.wave_ser:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1136   .bss.wave_slider_x:0000000000000000 $d
     /tmp/ccjoq5Rd.s:1143   .bss.wave_slider_y:0000000000000000 $d
ARM GAS  /tmp/ccjoq5Rd.s 			page 41



UNDEFINED SYMBOLS
lv_event_get_target
lv_bar_get_value
lv_chart_set_zoom_y
lv_chart_set_zoom_x
lv_event_get_code
puts
lv_bar_set_value
lv_dropdown_get_selected_str
memcpy
strstr
printf
lv_disp_get_default
lv_disp_get_scr_act
lv_label_create
lv_label_set_long_mode
lv_label_set_recolor
lv_label_set_text
lv_obj_set_width
lv_obj_set_style_text_align
lv_obj_align
lv_chart_create
lv_obj_set_size
lv_chart_set_range
lv_chart_set_axis_tick
lv_obj_set_style_width
lv_obj_set_style_height
lv_palette_main
lv_chart_add_series
lv_slider_create
lv_bar_set_range
lv_obj_add_event_cb
lv_obj_align_to
lv_btn_create
lv_obj_add_flag
lv_obj_set_height
lv_dropdown_create
lv_dropdown_set_options
