ARM GAS  /tmp/ccwMafHe.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"lvgl_app.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.slider_y_event_cb,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	slider_y_event_cb:
  25              	.LVL0:
  26              	.LFB189:
  27              		.file 1 "Core/Src/lvgl_app.c"
   1:Core/Src/lvgl_app.c **** #include "lvgl_app.h"
   2:Core/Src/lvgl_app.c **** #include <stdio.h>
   3:Core/Src/lvgl_app.c **** 
   4:Core/Src/lvgl_app.c **** 
   5:Core/Src/lvgl_app.c **** lv_obj_t * label1;
   6:Core/Src/lvgl_app.c **** void counter_label(void)
   7:Core/Src/lvgl_app.c **** {
   8:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
   9:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
  10:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
  11:Core/Src/lvgl_app.c ****     
  12:Core/Src/lvgl_app.c ****     lv_label_set_text(label1, "counter");
  13:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
  14:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
  15:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
  16:Core/Src/lvgl_app.c **** 
  17:Core/Src/lvgl_app.c **** 
  18:Core/Src/lvgl_app.c ****     // lv_obj_t * label2 = lv_label_create(lv_scr_act());
  19:Core/Src/lvgl_app.c ****     // lv_label_set_long_mode(label2, LV_LABEL_LONG_SCROLL_CIRCULAR);     /*Circular scroll*/
  20:Core/Src/lvgl_app.c ****     // lv_obj_set_width(label2, 150);
  21:Core/Src/lvgl_app.c ****     // lv_label_set_text(label2, "It is a circularly scrolling text.");
  22:Core/Src/lvgl_app.c ****     // lv_obj_align(label2, LV_ALIGN_CENTER, 0, 40);
  23:Core/Src/lvgl_app.c **** }
  24:Core/Src/lvgl_app.c **** 
  25:Core/Src/lvgl_app.c **** lv_obj_t * wave_chart;
  26:Core/Src/lvgl_app.c **** lv_chart_series_t * wave_ser ;
  27:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_x;
  28:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_y;
  29:Core/Src/lvgl_app.c **** static void slider_x_event_cb(lv_event_t * e)
  30:Core/Src/lvgl_app.c **** {
  31:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
ARM GAS  /tmp/ccwMafHe.s 			page 2


  32:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  33:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  34:Core/Src/lvgl_app.c **** }
  35:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
  36:Core/Src/lvgl_app.c **** {
  28              		.loc 1 36 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 36 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  37:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  38              		.loc 1 37 5 is_stmt 1 view .LVU2
  39              		.loc 1 37 22 is_stmt 0 view .LVU3
  40 0002 FFF7FEFF 		bl	lv_event_get_target
  41              	.LVL1:
  38:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  42              		.loc 1 38 5 is_stmt 1 view .LVU4
  43              	.LBB18:
  44              	.LBI18:
  45              		.file 2 "Middlewares/lvgl/src/widgets/lv_slider.h"
   1:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
   2:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:Middlewares/lvgl/src/widgets/lv_slider.h ****  *
   4:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
   5:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   6:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:Middlewares/lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   9:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  12:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  13:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  14:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  16:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  18:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  20:Middlewares/lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:Middlewares/lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  24:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  25:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  28:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  29:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  31:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  32:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
ARM GAS  /tmp/ccwMafHe.s 			page 3


  33:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  35:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  36:Middlewares/lvgl/src/widgets/lv_slider.h **** enum {
  37:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:Middlewares/lvgl/src/widgets/lv_slider.h **** };
  41:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  43:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:Middlewares/lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:Middlewares/lvgl/src/widgets/lv_slider.h **** }lv_slider_t;
  51:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  52:Middlewares/lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  54:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  55:Middlewares/lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  56:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  57:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  58:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  59:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Create a slider objects
  60:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  61:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  62:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  63:Middlewares/lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  64:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  65:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
  66:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Setter functions
  67:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
  68:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  69:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  70:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  71:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  72:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  73:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  74:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  76:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  77:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  78:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  79:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  80:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  81:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  82:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  83:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  84:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  85:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  86:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  87:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  88:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  89:Middlewares/lvgl/src/widgets/lv_slider.h **** }
ARM GAS  /tmp/ccwMafHe.s 			page 4


  90:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  91:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  92:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
  93:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
  94:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
  95:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
  96:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
  98:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  99:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 100:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 101:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 102:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 103:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 104:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 105:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 106:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 107:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 108:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 109:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 110:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 111:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 112:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
 113:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Getter functions
 114:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
 115:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 116:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 117:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 118:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 119:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 120:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  46              		.loc 2 121 23 view .LVU5
  47              	.LBB19:
 122:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 123:Middlewares/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
  48              		.loc 2 123 5 view .LVU6
  49              		.loc 2 123 12 is_stmt 0 view .LVU7
  50 0006 FFF7FEFF 		bl	lv_bar_get_value
  51              	.LVL2:
  52              		.loc 2 123 12 view .LVU8
  53              	.LBE19:
  54              	.LBE18:
  39:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_y(wave_chart, v);
  55              		.loc 1 39 5 is_stmt 1 view .LVU9
  56 000a 81B2     		uxth	r1, r0
  57 000c 024B     		ldr	r3, .L3
  58 000e 1868     		ldr	r0, [r3]
  59              	.LVL3:
  60              		.loc 1 39 5 is_stmt 0 view .LVU10
  61 0010 FFF7FEFF 		bl	lv_chart_set_zoom_y
  62              	.LVL4:
  40:Core/Src/lvgl_app.c **** }
  63              		.loc 1 40 1 view .LVU11
  64 0014 08BD     		pop	{r3, pc}
  65              	.L4:
  66 0016 00BF     		.align	2
ARM GAS  /tmp/ccwMafHe.s 			page 5


  67              	.L3:
  68 0018 00000000 		.word	.LANCHOR0
  69              		.cfi_endproc
  70              	.LFE189:
  72              		.section	.text.slider_x_event_cb,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-d16
  79              	slider_x_event_cb:
  80              	.LVL5:
  81              	.LFB188:
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  82              		.loc 1 30 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  86              		.loc 1 30 1 is_stmt 0 view .LVU13
  87 0000 08B5     		push	{r3, lr}
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 3, -8
  91              		.cfi_offset 14, -4
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  92              		.loc 1 31 5 is_stmt 1 view .LVU14
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  93              		.loc 1 31 22 is_stmt 0 view .LVU15
  94 0002 FFF7FEFF 		bl	lv_event_get_target
  95              	.LVL6:
  32:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  96              		.loc 1 32 5 is_stmt 1 view .LVU16
  97              	.LBB20:
  98              	.LBI20:
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  99              		.loc 2 121 23 view .LVU17
 100              	.LBB21:
 101              		.loc 2 123 5 view .LVU18
 102              		.loc 2 123 12 is_stmt 0 view .LVU19
 103 0006 FFF7FEFF 		bl	lv_bar_get_value
 104              	.LVL7:
 105              		.loc 2 123 12 view .LVU20
 106              	.LBE21:
 107              	.LBE20:
  33:Core/Src/lvgl_app.c **** }
 108              		.loc 1 33 5 is_stmt 1 view .LVU21
 109 000a 81B2     		uxth	r1, r0
 110 000c 024B     		ldr	r3, .L7
 111 000e 1868     		ldr	r0, [r3]
 112              	.LVL8:
  33:Core/Src/lvgl_app.c **** }
 113              		.loc 1 33 5 is_stmt 0 view .LVU22
 114 0010 FFF7FEFF 		bl	lv_chart_set_zoom_x
 115              	.LVL9:
  34:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
 116              		.loc 1 34 1 view .LVU23
ARM GAS  /tmp/ccwMafHe.s 			page 6


 117 0014 08BD     		pop	{r3, pc}
 118              	.L8:
 119 0016 00BF     		.align	2
 120              	.L7:
 121 0018 00000000 		.word	.LANCHOR0
 122              		.cfi_endproc
 123              	.LFE188:
 125              		.section	.text.wave_draw_stop,"ax",%progbits
 126              		.align	1
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv5-d16
 132              	wave_draw_stop:
 133              	.LVL10:
 134              	.LFB191:
  41:Core/Src/lvgl_app.c **** void wave_chart_init(void)
  42:Core/Src/lvgl_app.c **** {
  43:Core/Src/lvgl_app.c ****     /*Create a chart*/
  44:Core/Src/lvgl_app.c ****     wave_chart = lv_chart_create(lv_scr_act());
  45:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
  46:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1000);
  48:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 512);
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
  50:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
  51:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
  52:Core/Src/lvgl_app.c ****     lv_obj_set_style_size(wave_chart, 0, LV_PART_INDICATOR);
  53:Core/Src/lvgl_app.c **** 
  54:Core/Src/lvgl_app.c **** 
  55:Core/Src/lvgl_app.c ****     wave_ser = lv_chart_add_series(wave_chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_AXIS_PRIMA
  56:Core/Src/lvgl_app.c **** 
  57:Core/Src/lvgl_app.c ****     // uint32_t pcnt = sizeof(ecg_sample) / sizeof(ecg_sample[0]);
  58:Core/Src/lvgl_app.c ****     // lv_chart_set_point_count(chart, pcnt);
  59:Core/Src/lvgl_app.c ****     // lv_chart_set_ext_y_array(chart, ser, (lv_coord_t *)ecg_sample);
  60:Core/Src/lvgl_app.c **** 
  61:Core/Src/lvgl_app.c ****     
  62:Core/Src/lvgl_app.c ****     wave_slider_x = lv_slider_create(lv_scr_act());
  63:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  64:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  65:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 480, 10);
  66:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
  67:Core/Src/lvgl_app.c **** 
  68:Core/Src/lvgl_app.c ****     wave_slider_y = lv_slider_create(lv_scr_act());
  69:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  70:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  71:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 400);
  72:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 10, 0);
  73:Core/Src/lvgl_app.c **** }
  74:Core/Src/lvgl_app.c **** 
  75:Core/Src/lvgl_app.c **** uint8_t waveStopFlg=0;
  76:Core/Src/lvgl_app.c **** uint8_t waveAutoFlg=0;
  77:Core/Src/lvgl_app.c **** static void wave_draw_stop(lv_event_t * e)
  78:Core/Src/lvgl_app.c **** {
 135              		.loc 1 78 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwMafHe.s 			page 7


 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 78 1 is_stmt 0 view .LVU25
 140 0000 08B5     		push	{r3, lr}
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 3, -8
 144              		.cfi_offset 14, -4
  79:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 145              		.loc 1 79 5 is_stmt 1 view .LVU26
 146              		.loc 1 79 28 is_stmt 0 view .LVU27
 147 0002 FFF7FEFF 		bl	lv_event_get_code
 148              	.LVL11:
  80:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED){
 149              		.loc 1 80 5 is_stmt 1 view .LVU28
 150              		.loc 1 80 7 is_stmt 0 view .LVU29
 151 0006 1C28     		cmp	r0, #28
 152 0008 00D0     		beq	.L13
 153              	.L9:
  81:Core/Src/lvgl_app.c ****         //printf("STOP/RUN\r\n");
  82:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
  83:Core/Src/lvgl_app.c ****             waveStopFlg=0;
  84:Core/Src/lvgl_app.c ****         }else{
  85:Core/Src/lvgl_app.c ****             waveStopFlg=1;
  86:Core/Src/lvgl_app.c ****         }
  87:Core/Src/lvgl_app.c ****     }
  88:Core/Src/lvgl_app.c **** }
 154              		.loc 1 88 1 view .LVU30
 155 000a 08BD     		pop	{r3, pc}
 156              	.L13:
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 157              		.loc 1 82 9 is_stmt 1 view .LVU31
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 158              		.loc 1 82 23 is_stmt 0 view .LVU32
 159 000c 054B     		ldr	r3, .L15
 160 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 161              		.loc 1 82 11 view .LVU33
 162 0010 012B     		cmp	r3, #1
 163 0012 03D0     		beq	.L14
  85:Core/Src/lvgl_app.c ****         }
 164              		.loc 1 85 13 is_stmt 1 view .LVU34
  85:Core/Src/lvgl_app.c ****         }
 165              		.loc 1 85 24 is_stmt 0 view .LVU35
 166 0014 034B     		ldr	r3, .L15
 167 0016 0122     		movs	r2, #1
 168 0018 1A70     		strb	r2, [r3]
 169              		.loc 1 88 1 view .LVU36
 170 001a F6E7     		b	.L9
 171              	.L14:
  83:Core/Src/lvgl_app.c ****         }else{
 172              		.loc 1 83 13 is_stmt 1 view .LVU37
  83:Core/Src/lvgl_app.c ****         }else{
 173              		.loc 1 83 24 is_stmt 0 view .LVU38
 174 001c 014B     		ldr	r3, .L15
 175 001e 0022     		movs	r2, #0
 176 0020 1A70     		strb	r2, [r3]
 177 0022 F2E7     		b	.L9
ARM GAS  /tmp/ccwMafHe.s 			page 8


 178              	.L16:
 179              		.align	2
 180              	.L15:
 181 0024 00000000 		.word	.LANCHOR1
 182              		.cfi_endproc
 183              	.LFE191:
 185              		.section	.rodata.wave_zoom_stop.str1.4,"aMS",%progbits,1
 186              		.align	2
 187              	.LC1:
 188 0000 52455345 		.ascii	"RESET\015\000"
 188      540D00
 189              		.section	.text.wave_zoom_stop,"ax",%progbits
 190              		.align	1
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv5-d16
 196              	wave_zoom_stop:
 197              	.LVL12:
 198              	.LFB192:
  89:Core/Src/lvgl_app.c **** 
  90:Core/Src/lvgl_app.c **** static void wave_zoom_stop(lv_event_t * e)
  91:Core/Src/lvgl_app.c **** {
 199              		.loc 1 91 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 1 91 1 is_stmt 0 view .LVU40
 204 0000 10B5     		push	{r4, lr}
 205              	.LCFI3:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 4, -8
 208              		.cfi_offset 14, -4
  92:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 209              		.loc 1 92 5 is_stmt 1 view .LVU41
 210              		.loc 1 92 28 is_stmt 0 view .LVU42
 211 0002 FFF7FEFF 		bl	lv_event_get_code
 212              	.LVL13:
  93:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED){
 213              		.loc 1 93 5 is_stmt 1 view .LVU43
 214              		.loc 1 93 7 is_stmt 0 view .LVU44
 215 0006 0728     		cmp	r0, #7
 216 0008 00D0     		beq	.L20
 217              	.LVL14:
 218              	.L17:
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_x, 0, LV_ANIM_ON);
  96:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
  98:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
  99:Core/Src/lvgl_app.c ****     }
 100:Core/Src/lvgl_app.c **** }
 219              		.loc 1 100 1 view .LVU45
 220 000a 10BD     		pop	{r4, pc}
 221              	.LVL15:
 222              	.L20:
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
ARM GAS  /tmp/ccwMafHe.s 			page 9


 223              		.loc 1 94 9 is_stmt 1 view .LVU46
 224 000c 0D48     		ldr	r0, .L21
 225              	.LVL16:
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 226              		.loc 1 94 9 is_stmt 0 view .LVU47
 227 000e FFF7FEFF 		bl	puts
 228              	.LVL17:
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
 229              		.loc 1 95 9 is_stmt 1 view .LVU48
 230              	.LBB22:
 231              	.LBI22:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 232              		.loc 2 75 20 view .LVU49
 233              	.LBB23:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 234              		.loc 2 77 5 view .LVU50
 235 0012 0122     		movs	r2, #1
 236 0014 0021     		movs	r1, #0
 237 0016 0C4B     		ldr	r3, .L21+4
 238 0018 1868     		ldr	r0, [r3]
 239 001a FFF7FEFF 		bl	lv_bar_set_value
 240              	.LVL18:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 241              		.loc 2 77 5 is_stmt 0 view .LVU51
 242              	.LBE23:
 243              	.LBE22:
  96:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
 244              		.loc 1 96 9 is_stmt 1 view .LVU52
 245              	.LBB24:
 246              	.LBI24:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 247              		.loc 2 75 20 view .LVU53
 248              	.LBB25:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 249              		.loc 2 77 5 view .LVU54
 250 001e 0122     		movs	r2, #1
 251 0020 0021     		movs	r1, #0
 252 0022 0A4B     		ldr	r3, .L21+8
 253 0024 1868     		ldr	r0, [r3]
 254 0026 FFF7FEFF 		bl	lv_bar_set_value
 255              	.LVL19:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 256              		.loc 2 77 5 is_stmt 0 view .LVU55
 257              	.LBE25:
 258              	.LBE24:
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
 259              		.loc 1 97 9 is_stmt 1 view .LVU56
 260 002a 094C     		ldr	r4, .L21+12
 261 002c 4FF48071 		mov	r1, #256
 262 0030 2068     		ldr	r0, [r4]
 263 0032 FFF7FEFF 		bl	lv_chart_set_zoom_x
 264              	.LVL20:
  98:Core/Src/lvgl_app.c ****     }
 265              		.loc 1 98 9 view .LVU57
 266 0036 4FF48071 		mov	r1, #256
 267 003a 2068     		ldr	r0, [r4]
 268 003c FFF7FEFF 		bl	lv_chart_set_zoom_y
ARM GAS  /tmp/ccwMafHe.s 			page 10


 269              	.LVL21:
 270              		.loc 1 100 1 is_stmt 0 view .LVU58
 271 0040 E3E7     		b	.L17
 272              	.L22:
 273 0042 00BF     		.align	2
 274              	.L21:
 275 0044 00000000 		.word	.LC1
 276 0048 00000000 		.word	.LANCHOR2
 277 004c 00000000 		.word	.LANCHOR3
 278 0050 00000000 		.word	.LANCHOR0
 279              		.cfi_endproc
 280              	.LFE192:
 282              		.section	.rodata.distortion_handler.str1.4,"aMS",%progbits,1
 283              		.align	2
 284              	.LC2:
 285 0000 6D6F6465 		.ascii	"mode:%d\015\012\000"
 285      3A25640D 
 285      0A00
 286              		.section	.text.distortion_handler,"ax",%progbits
 287              		.align	1
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv5-d16
 293              	distortion_handler:
 294              	.LVL22:
 295              	.LFB195:
 101:Core/Src/lvgl_app.c **** 
 102:Core/Src/lvgl_app.c **** static void wave_auto_mode(lv_event_t * e)
 103:Core/Src/lvgl_app.c **** {
 104:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 105:Core/Src/lvgl_app.c ****    if(code == LV_EVENT_VALUE_CHANGED){
 106:Core/Src/lvgl_app.c ****         if(waveAutoFlg==1){
 107:Core/Src/lvgl_app.c ****             waveAutoFlg=0;
 108:Core/Src/lvgl_app.c ****         }else{
 109:Core/Src/lvgl_app.c ****             waveAutoFlg=1;
 110:Core/Src/lvgl_app.c ****         }
 111:Core/Src/lvgl_app.c ****     }
 112:Core/Src/lvgl_app.c **** }
 113:Core/Src/lvgl_app.c **** 
 114:Core/Src/lvgl_app.c **** void wave_btn(void)
 115:Core/Src/lvgl_app.c **** {
 116:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 117:Core/Src/lvgl_app.c **** 
 118:Core/Src/lvgl_app.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
 119:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 120:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_RIGHT, -20, 20);
 121:Core/Src/lvgl_app.c **** 
 122:Core/Src/lvgl_app.c ****     label = lv_label_create(btn1);
 123:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 124:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 125:Core/Src/lvgl_app.c **** 
 126:Core/Src/lvgl_app.c ****     lv_obj_t * btn2 = lv_btn_create(lv_scr_act());
 127:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 128:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_RIGHT, -20, 80);
 129:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 130:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
ARM GAS  /tmp/ccwMafHe.s 			page 11


 131:Core/Src/lvgl_app.c **** 
 132:Core/Src/lvgl_app.c ****     label = lv_label_create(btn2);
 133:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 134:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 135:Core/Src/lvgl_app.c **** 
 136:Core/Src/lvgl_app.c ****     // lv_obj_t * btn3 = lv_btn_create(lv_scr_act());
 137:Core/Src/lvgl_app.c ****     // lv_obj_add_event_cb(btn3, wave_auto_mode, LV_EVENT_ALL, NULL);
 138:Core/Src/lvgl_app.c ****     // lv_obj_align(btn3, LV_ALIGN_TOP_RIGHT, -20, 140);
 139:Core/Src/lvgl_app.c ****     // lv_obj_add_flag(btn3, LV_OBJ_FLAG_CHECKABLE);
 140:Core/Src/lvgl_app.c ****     // lv_obj_set_height(btn3, LV_SIZE_CONTENT);
 141:Core/Src/lvgl_app.c **** 
 142:Core/Src/lvgl_app.c ****     // label = lv_label_create(btn3);
 143:Core/Src/lvgl_app.c ****     // lv_label_set_text(label, "Auto");
 144:Core/Src/lvgl_app.c ****     // lv_obj_center(label); 
 145:Core/Src/lvgl_app.c **** }
 146:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 147:Core/Src/lvgl_app.c **** static void distortion_handler(lv_event_t * e)
 148:Core/Src/lvgl_app.c **** {
 296              		.loc 1 148 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 192
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		.loc 1 148 1 is_stmt 0 view .LVU60
 301 0000 30B5     		push	{r4, r5, lr}
 302              	.LCFI4:
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 5, -8
 306              		.cfi_offset 14, -4
 307 0002 B1B0     		sub	sp, sp, #196
 308              	.LCFI5:
 309              		.cfi_def_cfa_offset 208
 310 0004 0546     		mov	r5, r0
 149:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 311              		.loc 1 149 5 is_stmt 1 view .LVU61
 312              		.loc 1 149 28 is_stmt 0 view .LVU62
 313 0006 FFF7FEFF 		bl	lv_event_get_code
 314              	.LVL23:
 315              		.loc 1 149 28 view .LVU63
 316 000a 0446     		mov	r4, r0
 317              	.LVL24:
 150:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
 318              		.loc 1 150 5 is_stmt 1 view .LVU64
 319              		.loc 1 150 22 is_stmt 0 view .LVU65
 320 000c 2846     		mov	r0, r5
 321 000e FFF7FEFF 		bl	lv_event_get_target
 322              	.LVL25:
 151:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED) {
 323              		.loc 1 151 5 is_stmt 1 view .LVU66
 324              		.loc 1 151 7 is_stmt 0 view .LVU67
 325 0012 1C2C     		cmp	r4, #28
 326 0014 01D0     		beq	.L29
 327              	.LVL26:
 328              	.L23:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 153:Core/Src/lvgl_app.c ****         lv_dropdown_get_selected_str(obj, buf, sizeof(buf));
 154:Core/Src/lvgl_app.c ****         char list[5][32]={
ARM GAS  /tmp/ccwMafHe.s 			page 12


 155:Core/Src/lvgl_app.c ****             "No distortion",
 156:Core/Src/lvgl_app.c ****             "Top distortion",
 157:Core/Src/lvgl_app.c ****             "Bottom distortion",
 158:Core/Src/lvgl_app.c ****             "Two-way distortion",
 159:Core/Src/lvgl_app.c ****             "Crossover distortion",
 160:Core/Src/lvgl_app.c ****         };
 161:Core/Src/lvgl_app.c ****         for (uint8_t i = 0; i < 5; i++)
 162:Core/Src/lvgl_app.c ****         {
 163:Core/Src/lvgl_app.c ****             if(strstr(buf,list[i])){
 164:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 165:Core/Src/lvgl_app.c ****             }
 166:Core/Src/lvgl_app.c ****         
 167:Core/Src/lvgl_app.c ****         }
 168:Core/Src/lvgl_app.c ****         printf("mode:%d\r\n",distortion_mode);
 169:Core/Src/lvgl_app.c ****     }
 170:Core/Src/lvgl_app.c **** }
 329              		.loc 1 170 1 view .LVU68
 330 0016 31B0     		add	sp, sp, #196
 331              	.LCFI6:
 332              		.cfi_remember_state
 333              		.cfi_def_cfa_offset 12
 334              		@ sp needed
 335 0018 30BD     		pop	{r4, r5, pc}
 336              	.LVL27:
 337              	.L29:
 338              	.LCFI7:
 339              		.cfi_restore_state
 340              	.LBB26:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 341              		.loc 1 152 9 is_stmt 1 view .LVU69
 153:Core/Src/lvgl_app.c ****         char list[5][32]={
 342              		.loc 1 153 9 view .LVU70
 343 001a 2022     		movs	r2, #32
 344 001c 6946     		mov	r1, sp
 345 001e FFF7FEFF 		bl	lv_dropdown_get_selected_str
 346              	.LVL28:
 154:Core/Src/lvgl_app.c ****             "No distortion",
 347              		.loc 1 154 9 view .LVU71
 154:Core/Src/lvgl_app.c ****             "No distortion",
 348              		.loc 1 154 14 is_stmt 0 view .LVU72
 349 0022 A022     		movs	r2, #160
 350 0024 0D49     		ldr	r1, .L31
 351 0026 08A8     		add	r0, sp, #32
 352 0028 FFF7FEFF 		bl	memcpy
 353              	.LVL29:
 161:Core/Src/lvgl_app.c ****         {
 354              		.loc 1 161 9 is_stmt 1 view .LVU73
 355              	.LBB27:
 161:Core/Src/lvgl_app.c ****         {
 356              		.loc 1 161 14 view .LVU74
 161:Core/Src/lvgl_app.c ****         {
 357              		.loc 1 161 22 is_stmt 0 view .LVU75
 358 002c 0024     		movs	r4, #0
 359              	.LVL30:
 161:Core/Src/lvgl_app.c ****         {
 360              		.loc 1 161 9 view .LVU76
 361 002e 01E0     		b	.L25
ARM GAS  /tmp/ccwMafHe.s 			page 13


 362              	.LVL31:
 363              	.L26:
 161:Core/Src/lvgl_app.c ****         {
 364              		.loc 1 161 36 is_stmt 1 discriminator 2 view .LVU77
 161:Core/Src/lvgl_app.c ****         {
 365              		.loc 1 161 37 is_stmt 0 discriminator 2 view .LVU78
 366 0030 0134     		adds	r4, r4, #1
 367              	.LVL32:
 161:Core/Src/lvgl_app.c ****         {
 368              		.loc 1 161 37 discriminator 2 view .LVU79
 369 0032 E4B2     		uxtb	r4, r4
 370              	.LVL33:
 371              	.L25:
 161:Core/Src/lvgl_app.c ****         {
 372              		.loc 1 161 29 is_stmt 1 discriminator 1 view .LVU80
 161:Core/Src/lvgl_app.c ****         {
 373              		.loc 1 161 9 is_stmt 0 discriminator 1 view .LVU81
 374 0034 042C     		cmp	r4, #4
 375 0036 0AD8     		bhi	.L30
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 376              		.loc 1 163 13 is_stmt 1 view .LVU82
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 377              		.loc 1 163 16 is_stmt 0 view .LVU83
 378 0038 08AB     		add	r3, sp, #32
 379 003a 03EB4411 		add	r1, r3, r4, lsl #5
 380 003e 6846     		mov	r0, sp
 381 0040 FFF7FEFF 		bl	strstr
 382              	.LVL34:
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 383              		.loc 1 163 15 view .LVU84
 384 0044 0028     		cmp	r0, #0
 385 0046 F3D0     		beq	.L26
 164:Core/Src/lvgl_app.c ****             }
 386              		.loc 1 164 17 is_stmt 1 view .LVU85
 164:Core/Src/lvgl_app.c ****             }
 387              		.loc 1 164 32 is_stmt 0 view .LVU86
 388 0048 054B     		ldr	r3, .L31+4
 389 004a 1C70     		strb	r4, [r3]
 390 004c F0E7     		b	.L26
 391              	.L30:
 164:Core/Src/lvgl_app.c ****             }
 392              		.loc 1 164 32 view .LVU87
 393              	.LBE27:
 168:Core/Src/lvgl_app.c ****     }
 394              		.loc 1 168 9 is_stmt 1 view .LVU88
 395 004e 044B     		ldr	r3, .L31+4
 396 0050 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 397 0052 0448     		ldr	r0, .L31+8
 398 0054 FFF7FEFF 		bl	printf
 399              	.LVL35:
 400              	.LBE26:
 401              		.loc 1 170 1 is_stmt 0 view .LVU89
 402 0058 DDE7     		b	.L23
 403              	.L32:
 404 005a 00BF     		.align	2
 405              	.L31:
 406 005c 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccwMafHe.s 			page 14


 407 0060 00000000 		.word	.LANCHOR5
 408 0064 00000000 		.word	.LC2
 409              		.cfi_endproc
 410              	.LFE195:
 412              		.section	.rodata.counter_label.str1.4,"aMS",%progbits,1
 413              		.align	2
 414              	.LC3:
 415 0000 636F756E 		.ascii	"counter\000"
 415      74657200 
 416              		.section	.text.counter_label,"ax",%progbits
 417              		.align	1
 418              		.global	counter_label
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu fpv5-d16
 424              	counter_label:
 425              	.LFB187:
   7:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
 426              		.loc 1 7 1 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430 0000 10B5     		push	{r4, lr}
 431              	.LCFI8:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 4, -8
 434              		.cfi_offset 14, -4
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 435              		.loc 1 8 5 view .LVU91
 436              	.LBB30:
 437              	.LBI30:
 438              		.file 3 "Middlewares/lvgl/src/core/lv_disp.h"
   1:Middlewares/lvgl/src/core/lv_disp.h **** /**
   2:Middlewares/lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:Middlewares/lvgl/src/core/lv_disp.h ****  *
   4:Middlewares/lvgl/src/core/lv_disp.h ****  */
   5:Middlewares/lvgl/src/core/lv_disp.h **** 
   6:Middlewares/lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:Middlewares/lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:Middlewares/lvgl/src/core/lv_disp.h **** 
   9:Middlewares/lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_disp.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_disp.h **** #endif
  12:Middlewares/lvgl/src/core/lv_disp.h **** 
  13:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:Middlewares/lvgl/src/core/lv_disp.h **** 
  20:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_disp.h **** 
  24:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
ARM GAS  /tmp/ccwMafHe.s 			page 15


  25:Middlewares/lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_disp.h **** 
  28:Middlewares/lvgl/src/core/lv_disp.h **** typedef enum {
  29:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:Middlewares/lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:Middlewares/lvgl/src/core/lv_disp.h **** 
  41:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  42:Middlewares/lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  44:Middlewares/lvgl/src/core/lv_disp.h **** 
  45:Middlewares/lvgl/src/core/lv_disp.h **** /**
  46:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  49:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:Middlewares/lvgl/src/core/lv_disp.h ****  */
  51:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:Middlewares/lvgl/src/core/lv_disp.h **** 
  53:Middlewares/lvgl/src/core/lv_disp.h **** /**
  54:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  57:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:Middlewares/lvgl/src/core/lv_disp.h ****  */
  59:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:Middlewares/lvgl/src/core/lv_disp.h **** 
  61:Middlewares/lvgl/src/core/lv_disp.h **** /**
  62:Middlewares/lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:Middlewares/lvgl/src/core/lv_disp.h ****  */
  65:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:Middlewares/lvgl/src/core/lv_disp.h **** 
  67:Middlewares/lvgl/src/core/lv_disp.h **** /**
  68:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:Middlewares/lvgl/src/core/lv_disp.h ****  */
  72:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:Middlewares/lvgl/src/core/lv_disp.h **** 
  74:Middlewares/lvgl/src/core/lv_disp.h **** /**
  75:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:Middlewares/lvgl/src/core/lv_disp.h ****  * layer)
  77:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:Middlewares/lvgl/src/core/lv_disp.h ****  */
  80:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:Middlewares/lvgl/src/core/lv_disp.h **** 
ARM GAS  /tmp/ccwMafHe.s 			page 16


  82:Middlewares/lvgl/src/core/lv_disp.h **** /**
  83:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  84:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  85:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:Middlewares/lvgl/src/core/lv_disp.h ****  */
  87:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:Middlewares/lvgl/src/core/lv_disp.h **** 
  89:Middlewares/lvgl/src/core/lv_disp.h **** /**
  90:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  91:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  92:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:Middlewares/lvgl/src/core/lv_disp.h ****  */
  94:Middlewares/lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:Middlewares/lvgl/src/core/lv_disp.h **** 
  96:Middlewares/lvgl/src/core/lv_disp.h **** /**
  97:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  98:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  99:Middlewares/lvgl/src/core/lv_disp.h ****  * @param color color of the background
 100:Middlewares/lvgl/src/core/lv_disp.h ****  */
 101:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:Middlewares/lvgl/src/core/lv_disp.h **** 
 103:Middlewares/lvgl/src/core/lv_disp.h **** /**
 104:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 105:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 106:Middlewares/lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:Middlewares/lvgl/src/core/lv_disp.h ****  */
 108:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:Middlewares/lvgl/src/core/lv_disp.h **** 
 110:Middlewares/lvgl/src/core/lv_disp.h **** /**
 111:Middlewares/lvgl/src/core/lv_disp.h ****  * Opacity of the background
 112:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 113:Middlewares/lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:Middlewares/lvgl/src/core/lv_disp.h ****  */
 115:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:Middlewares/lvgl/src/core/lv_disp.h **** 
 117:Middlewares/lvgl/src/core/lv_disp.h **** /**
 118:Middlewares/lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 119:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:Middlewares/lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:Middlewares/lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 122:Middlewares/lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 123:Middlewares/lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:Middlewares/lvgl/src/core/lv_disp.h ****  */
 125:Middlewares/lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:Middlewares/lvgl/src/core/lv_disp.h **** 
 127:Middlewares/lvgl/src/core/lv_disp.h **** /**
 128:Middlewares/lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:Middlewares/lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:Middlewares/lvgl/src/core/lv_disp.h ****  */
 132:Middlewares/lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:Middlewares/lvgl/src/core/lv_disp.h **** 
 134:Middlewares/lvgl/src/core/lv_disp.h **** /**
 135:Middlewares/lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:Middlewares/lvgl/src/core/lv_disp.h ****  */
 138:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
ARM GAS  /tmp/ccwMafHe.s 			page 17


 139:Middlewares/lvgl/src/core/lv_disp.h **** 
 140:Middlewares/lvgl/src/core/lv_disp.h **** /**
 141:Middlewares/lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:Middlewares/lvgl/src/core/lv_disp.h ****  */
 144:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:Middlewares/lvgl/src/core/lv_disp.h **** 
 146:Middlewares/lvgl/src/core/lv_disp.h **** /**
 147:Middlewares/lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:Middlewares/lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 150:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:Middlewares/lvgl/src/core/lv_disp.h ****  */
 152:Middlewares/lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:Middlewares/lvgl/src/core/lv_disp.h **** 
 154:Middlewares/lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 155:Middlewares/lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 156:Middlewares/lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 157:Middlewares/lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 158:Middlewares/lvgl/src/core/lv_disp.h **** 
 159:Middlewares/lvgl/src/core/lv_disp.h **** /**
 160:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 161:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 162:Middlewares/lvgl/src/core/lv_disp.h ****  */
 163:Middlewares/lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 439              		.loc 3 163 26 view .LVU92
 440              	.LBB31:
 164:Middlewares/lvgl/src/core/lv_disp.h **** {
 165:Middlewares/lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 441              		.loc 3 165 5 view .LVU93
 442              		.loc 3 165 12 is_stmt 0 view .LVU94
 443 0002 FFF7FEFF 		bl	lv_disp_get_default
 444              	.LVL36:
 445 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 446              	.LVL37:
 447              	.LBE31:
 448              	.LBE30:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 449              		.loc 1 8 14 view .LVU95
 450 000a FFF7FEFF 		bl	lv_label_create
 451              	.LVL38:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 452              		.loc 1 8 12 view .LVU96
 453 000e 0F4C     		ldr	r4, .L35
 454 0010 2060     		str	r0, [r4]
   9:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
 455              		.loc 1 9 5 is_stmt 1 view .LVU97
 456 0012 0021     		movs	r1, #0
 457 0014 FFF7FEFF 		bl	lv_label_set_long_mode
 458              	.LVL39:
  10:Core/Src/lvgl_app.c ****     
 459              		.loc 1 10 5 view .LVU98
 460 0018 0121     		movs	r1, #1
 461 001a 2068     		ldr	r0, [r4]
 462 001c FFF7FEFF 		bl	lv_label_set_recolor
 463              	.LVL40:
  12:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
ARM GAS  /tmp/ccwMafHe.s 			page 18


 464              		.loc 1 12 5 view .LVU99
 465 0020 0B49     		ldr	r1, .L35+4
 466 0022 2068     		ldr	r0, [r4]
 467 0024 FFF7FEFF 		bl	lv_label_set_text
 468              	.LVL41:
  13:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
 469              		.loc 1 13 5 view .LVU100
 470 0028 9621     		movs	r1, #150
 471 002a 2068     		ldr	r0, [r4]
 472 002c FFF7FEFF 		bl	lv_obj_set_width
 473              	.LVL42:
  14:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
 474              		.loc 1 14 5 view .LVU101
 475 0030 0022     		movs	r2, #0
 476 0032 0221     		movs	r1, #2
 477 0034 2068     		ldr	r0, [r4]
 478 0036 FFF7FEFF 		bl	lv_obj_set_style_text_align
 479              	.LVL43:
  15:Core/Src/lvgl_app.c **** 
 480              		.loc 1 15 5 view .LVU102
 481 003a 6FF02703 		mvn	r3, #39
 482 003e 0022     		movs	r2, #0
 483 0040 0921     		movs	r1, #9
 484 0042 2068     		ldr	r0, [r4]
 485 0044 FFF7FEFF 		bl	lv_obj_align
 486              	.LVL44:
  23:Core/Src/lvgl_app.c **** 
 487              		.loc 1 23 1 is_stmt 0 view .LVU103
 488 0048 10BD     		pop	{r4, pc}
 489              	.L36:
 490 004a 00BF     		.align	2
 491              	.L35:
 492 004c 00000000 		.word	.LANCHOR6
 493 0050 00000000 		.word	.LC3
 494              		.cfi_endproc
 495              	.LFE187:
 497              		.section	.text.wave_chart_init,"ax",%progbits
 498              		.align	1
 499              		.global	wave_chart_init
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv5-d16
 505              	wave_chart_init:
 506              	.LFB190:
  42:Core/Src/lvgl_app.c ****     /*Create a chart*/
 507              		.loc 1 42 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 512              	.LCFI9:
 513              		.cfi_def_cfa_offset 20
 514              		.cfi_offset 4, -20
 515              		.cfi_offset 5, -16
 516              		.cfi_offset 6, -12
 517              		.cfi_offset 7, -8
ARM GAS  /tmp/ccwMafHe.s 			page 19


 518              		.cfi_offset 14, -4
 519 0002 85B0     		sub	sp, sp, #20
 520              	.LCFI10:
 521              		.cfi_def_cfa_offset 40
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 522              		.loc 1 44 5 view .LVU105
 523              	.LBB44:
 524              	.LBI44:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 525              		.loc 3 163 26 view .LVU106
 526              	.LBB45:
 527              		.loc 3 165 5 view .LVU107
 528              		.loc 3 165 12 is_stmt 0 view .LVU108
 529 0004 FFF7FEFF 		bl	lv_disp_get_default
 530              	.LVL45:
 531 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 532              	.LVL46:
 533              	.LBE45:
 534              	.LBE44:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 535              		.loc 1 44 18 view .LVU109
 536 000c FFF7FEFF 		bl	lv_chart_create
 537              	.LVL47:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 538              		.loc 1 44 16 view .LVU110
 539 0010 494C     		ldr	r4, .L39
 540 0012 2060     		str	r0, [r4]
  45:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
 541              		.loc 1 45 5 is_stmt 1 view .LVU111
 542 0014 4FF4D272 		mov	r2, #420
 543 0018 4FF4FA71 		mov	r1, #500
 544 001c FFF7FEFF 		bl	lv_obj_set_size
 545              	.LVL48:
  46:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1000);
 546              		.loc 1 46 5 view .LVU112
 547 0020 0023     		movs	r3, #0
 548 0022 3222     		movs	r2, #50
 549 0024 0121     		movs	r1, #1
 550 0026 2068     		ldr	r0, [r4]
 551 0028 FFF7FEFF 		bl	lv_obj_align
 552              	.LVL49:
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 512);
 553              		.loc 1 47 5 view .LVU113
 554 002c 4FF47A73 		mov	r3, #1000
 555 0030 0022     		movs	r2, #0
 556 0032 1146     		mov	r1, r2
 557 0034 2068     		ldr	r0, [r4]
 558 0036 FFF7FEFF 		bl	lv_chart_set_range
 559              	.LVL50:
  48:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
 560              		.loc 1 48 5 view .LVU114
 561 003a 4FF40073 		mov	r3, #512
 562 003e 0022     		movs	r2, #0
 563 0040 0221     		movs	r1, #2
 564 0042 2068     		ldr	r0, [r4]
 565 0044 FFF7FEFF 		bl	lv_chart_set_range
 566              	.LVL51:
ARM GAS  /tmp/ccwMafHe.s 			page 20


  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
 567              		.loc 1 49 5 view .LVU115
 568 0048 1427     		movs	r7, #20
 569 004a 0397     		str	r7, [sp, #12]
 570 004c 0126     		movs	r6, #1
 571 004e 0296     		str	r6, [sp, #8]
 572 0050 0196     		str	r6, [sp, #4]
 573 0052 0525     		movs	r5, #5
 574 0054 0095     		str	r5, [sp]
 575 0056 2B46     		mov	r3, r5
 576 0058 2A46     		mov	r2, r5
 577 005a 0221     		movs	r1, #2
 578 005c 2068     		ldr	r0, [r4]
 579 005e FFF7FEFF 		bl	lv_chart_set_axis_tick
 580              	.LVL52:
  50:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
 581              		.loc 1 50 5 view .LVU116
 582 0062 3C23     		movs	r3, #60
 583 0064 0393     		str	r3, [sp, #12]
 584 0066 0296     		str	r6, [sp, #8]
 585 0068 0195     		str	r5, [sp, #4]
 586 006a 0623     		movs	r3, #6
 587 006c 0093     		str	r3, [sp]
 588 006e 2B46     		mov	r3, r5
 589 0070 0A22     		movs	r2, #10
 590 0072 0021     		movs	r1, #0
 591 0074 2068     		ldr	r0, [r4]
 592 0076 FFF7FEFF 		bl	lv_chart_set_axis_tick
 593              	.LVL53:
  52:Core/Src/lvgl_app.c **** 
 594              		.loc 1 52 5 view .LVU117
 595 007a 2568     		ldr	r5, [r4]
 596              	.LVL54:
 597              	.LBB46:
 598              	.LBI46:
 599              		.file 4 "Middlewares/lvgl/src/core/lv_obj_style.h"
   1:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:Middlewares/lvgl/src/core/lv_obj_style.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:Middlewares/lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  20:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      DEFINES
ARM GAS  /tmp/ccwMafHe.s 			page 21


  22:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  24:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:Middlewares/lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  30:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef enum {
  31:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:Middlewares/lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  39:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t selector :24;
  42:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_local :1;
  43:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans :1;
  44:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_t;
  45:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  46:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:Middlewares/lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:Middlewares/lvgl/src/core/lv_obj_style.h ****     void * user_data;
  54:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  55:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  57:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  58:Middlewares/lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  60:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  61:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  62:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  65:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  67:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  68:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  75:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  77:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  78:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
ARM GAS  /tmp/ccwMafHe.s 			page 22


  79:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  86:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  88:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  89:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  92:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:Middlewares/lvgl/src/core/lv_obj_style.h **** {
  94:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
  95:Middlewares/lvgl/src/core/lv_obj_style.h **** }
  96:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  97:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  98:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 102:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 104:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 105:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
 111:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 112:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 114:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 115:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:Middlewares/lvgl/src/core/lv_obj_style.h ****  * or any other style change happens.
 117:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 119:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 121:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 122:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:Middlewares/lvgl/src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 131:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 133:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 134:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
ARM GAS  /tmp/ccwMafHe.s 			page 23


 136:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part to which the property should be added
 137:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     a state to which the property should be added
 138:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property
 139:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 140:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 142:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t
 144:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 145:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 146:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 147:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 148:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part of the object which style property should be removed.
 149:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     the state from which the property should be removed.
 150:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 151:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 152:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 153:Middlewares/lvgl/src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 154:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 155:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 156:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to create a style tarnsition
 157:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 158:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part
 159:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prev_state
 160:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param new_state
 161:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param tr
 162:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 163:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 164:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 165:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 166:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 167:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 168:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state1
 169:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state2
 170:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return
 171:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 172:Middlewares/lvgl/src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 173:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 174:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 175:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 176:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 177:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 178:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 179:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 180:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 181:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 182:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 183:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 184:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 185:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 186:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 187:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 188:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 189:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 190:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 191:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 192:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
ARM GAS  /tmp/ccwMafHe.s 			page 24


 193:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 194:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
 195:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 196:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 197:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 198:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 199:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 200:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 201:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 202:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 203:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 204:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 205:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 206:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 207:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 208:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 209:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 210:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 211:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 212:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 213:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_sel
 214:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_row(obj, value, selector);
 215:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_column(obj, value, selector);
 216:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 217:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 218:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_select
 600              		.loc 4 218 20 view .LVU118
 601              	.LBB47:
 219:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_width(obj, value, selector);
 602              		.loc 4 219 5 view .LVU119
 603 007c 4FF40032 		mov	r2, #131072
 604 0080 0021     		movs	r1, #0
 605 0082 2846     		mov	r0, r5
 606 0084 FFF7FEFF 		bl	lv_obj_set_style_width
 607              	.LVL55:
 220:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_height(obj, value, selector);
 608              		.loc 4 220 5 view .LVU120
 609 0088 4FF40032 		mov	r2, #131072
 610 008c 0021     		movs	r1, #0
 611 008e 2846     		mov	r0, r5
 612 0090 FFF7FEFF 		bl	lv_obj_set_style_height
 613              	.LVL56:
 614              		.loc 4 220 5 is_stmt 0 view .LVU121
 615              	.LBE47:
 616              	.LBE46:
  55:Core/Src/lvgl_app.c **** 
 617              		.loc 1 55 5 is_stmt 1 view .LVU122
  55:Core/Src/lvgl_app.c **** 
 618              		.loc 1 55 16 is_stmt 0 view .LVU123
 619 0094 2568     		ldr	r5, [r4]
 620 0096 0020     		movs	r0, #0
 621 0098 FFF7FEFF 		bl	lv_palette_main
 622              	.LVL57:
 623 009c 0146     		mov	r1, r0	@ movhi
 624 009e 0022     		movs	r2, #0
 625 00a0 2846     		mov	r0, r5
 626 00a2 FFF7FEFF 		bl	lv_chart_add_series
ARM GAS  /tmp/ccwMafHe.s 			page 25


 627              	.LVL58:
  55:Core/Src/lvgl_app.c **** 
 628              		.loc 1 55 14 view .LVU124
 629 00a6 254B     		ldr	r3, .L39+4
 630 00a8 1860     		str	r0, [r3]
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 631              		.loc 1 62 5 is_stmt 1 view .LVU125
 632              	.LBB48:
 633              	.LBI48:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 634              		.loc 3 163 26 view .LVU126
 635              	.LBB49:
 636              		.loc 3 165 5 view .LVU127
 637              		.loc 3 165 12 is_stmt 0 view .LVU128
 638 00aa FFF7FEFF 		bl	lv_disp_get_default
 639              	.LVL59:
 640 00ae FFF7FEFF 		bl	lv_disp_get_scr_act
 641              	.LVL60:
 642              	.LBE49:
 643              	.LBE48:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 644              		.loc 1 62 21 view .LVU129
 645 00b2 FFF7FEFF 		bl	lv_slider_create
 646              	.LVL61:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 647              		.loc 1 62 19 view .LVU130
 648 00b6 224D     		ldr	r5, .L39+8
 649 00b8 2860     		str	r0, [r5]
  63:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 650              		.loc 1 63 5 is_stmt 1 view .LVU131
 651              	.LVL62:
 652              	.LBB50:
 653              	.LBI50:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 654              		.loc 2 97 20 view .LVU132
 655              	.LBB51:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 656              		.loc 2 99 5 view .LVU133
 657 00ba 4FF42062 		mov	r2, #2560
 658 00be 4FF48071 		mov	r1, #256
 659 00c2 FFF7FEFF 		bl	lv_bar_set_range
 660              	.LVL63:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 661              		.loc 2 99 5 is_stmt 0 view .LVU134
 662              	.LBE51:
 663              	.LBE50:
  64:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 480, 10);
 664              		.loc 1 64 5 is_stmt 1 view .LVU135
 665 00c6 0023     		movs	r3, #0
 666 00c8 1C22     		movs	r2, #28
 667 00ca 1E49     		ldr	r1, .L39+12
 668 00cc 2868     		ldr	r0, [r5]
 669 00ce FFF7FEFF 		bl	lv_obj_add_event_cb
 670              	.LVL64:
  65:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
 671              		.loc 1 65 5 view .LVU136
 672 00d2 0A22     		movs	r2, #10
ARM GAS  /tmp/ccwMafHe.s 			page 26


 673 00d4 4FF4F071 		mov	r1, #480
 674 00d8 2868     		ldr	r0, [r5]
 675 00da FFF7FEFF 		bl	lv_obj_set_size
 676              	.LVL65:
  66:Core/Src/lvgl_app.c **** 
 677              		.loc 1 66 5 view .LVU137
 678 00de 1E23     		movs	r3, #30
 679 00e0 0093     		str	r3, [sp]
 680 00e2 0023     		movs	r3, #0
 681 00e4 0E22     		movs	r2, #14
 682 00e6 2168     		ldr	r1, [r4]
 683 00e8 2868     		ldr	r0, [r5]
 684 00ea FFF7FEFF 		bl	lv_obj_align_to
 685              	.LVL66:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 686              		.loc 1 68 5 view .LVU138
 687              	.LBB52:
 688              	.LBI52:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 689              		.loc 3 163 26 view .LVU139
 690              	.LBB53:
 691              		.loc 3 165 5 view .LVU140
 692              		.loc 3 165 12 is_stmt 0 view .LVU141
 693 00ee FFF7FEFF 		bl	lv_disp_get_default
 694              	.LVL67:
 695 00f2 FFF7FEFF 		bl	lv_disp_get_scr_act
 696              	.LVL68:
 697              	.LBE53:
 698              	.LBE52:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 699              		.loc 1 68 21 view .LVU142
 700 00f6 FFF7FEFF 		bl	lv_slider_create
 701              	.LVL69:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 702              		.loc 1 68 19 view .LVU143
 703 00fa 134D     		ldr	r5, .L39+16
 704 00fc 2860     		str	r0, [r5]
  69:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 705              		.loc 1 69 5 is_stmt 1 view .LVU144
 706              	.LVL70:
 707              	.LBB54:
 708              	.LBI54:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 709              		.loc 2 97 20 view .LVU145
 710              	.LBB55:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 711              		.loc 2 99 5 view .LVU146
 712 00fe 4FF42062 		mov	r2, #2560
 713 0102 4FF48071 		mov	r1, #256
 714 0106 FFF7FEFF 		bl	lv_bar_set_range
 715              	.LVL71:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 716              		.loc 2 99 5 is_stmt 0 view .LVU147
 717              	.LBE55:
 718              	.LBE54:
  70:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 400);
 719              		.loc 1 70 5 is_stmt 1 view .LVU148
ARM GAS  /tmp/ccwMafHe.s 			page 27


 720 010a 0023     		movs	r3, #0
 721 010c 1C22     		movs	r2, #28
 722 010e 0F49     		ldr	r1, .L39+20
 723 0110 2868     		ldr	r0, [r5]
 724 0112 FFF7FEFF 		bl	lv_obj_add_event_cb
 725              	.LVL72:
  71:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 10, 0);
 726              		.loc 1 71 5 view .LVU149
 727 0116 4FF4C872 		mov	r2, #400
 728 011a 0A21     		movs	r1, #10
 729 011c 2868     		ldr	r0, [r5]
 730 011e FFF7FEFF 		bl	lv_obj_set_size
 731              	.LVL73:
  72:Core/Src/lvgl_app.c **** }
 732              		.loc 1 72 5 view .LVU150
 733 0122 0023     		movs	r3, #0
 734 0124 0093     		str	r3, [sp]
 735 0126 0A23     		movs	r3, #10
 736 0128 3A46     		mov	r2, r7
 737 012a 2168     		ldr	r1, [r4]
 738 012c 2868     		ldr	r0, [r5]
 739 012e FFF7FEFF 		bl	lv_obj_align_to
 740              	.LVL74:
  73:Core/Src/lvgl_app.c **** 
 741              		.loc 1 73 1 is_stmt 0 view .LVU151
 742 0132 05B0     		add	sp, sp, #20
 743              	.LCFI11:
 744              		.cfi_def_cfa_offset 20
 745              		@ sp needed
 746 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 747              	.L40:
 748 0136 00BF     		.align	2
 749              	.L39:
 750 0138 00000000 		.word	.LANCHOR0
 751 013c 00000000 		.word	.LANCHOR7
 752 0140 00000000 		.word	.LANCHOR2
 753 0144 00000000 		.word	slider_x_event_cb
 754 0148 00000000 		.word	.LANCHOR3
 755 014c 00000000 		.word	slider_y_event_cb
 756              		.cfi_endproc
 757              	.LFE190:
 759              		.section	.rodata.wave_btn.str1.4,"aMS",%progbits,1
 760              		.align	2
 761              	.LC4:
 762 0000 52455345 		.ascii	"RESET\000"
 762      5400
 763 0006 0000     		.align	2
 764              	.LC5:
 765 0008 52756E2F 		.ascii	"Run/Stop\000"
 765      53746F70 
 765      00
 766              		.section	.text.wave_btn,"ax",%progbits
 767              		.align	1
 768              		.global	wave_btn
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
ARM GAS  /tmp/ccwMafHe.s 			page 28


 772              		.fpu fpv5-d16
 774              	wave_btn:
 775              	.LFB194:
 115:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 776              		.loc 1 115 1 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 10B5     		push	{r4, lr}
 781              	.LCFI12:
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 4, -8
 784              		.cfi_offset 14, -4
 116:Core/Src/lvgl_app.c **** 
 785              		.loc 1 116 5 view .LVU153
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 786              		.loc 1 118 5 view .LVU154
 787              	.LBB64:
 788              	.LBI64:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 789              		.loc 3 163 26 view .LVU155
 790              	.LBB65:
 791              		.loc 3 165 5 view .LVU156
 792              		.loc 3 165 12 is_stmt 0 view .LVU157
 793 0002 FFF7FEFF 		bl	lv_disp_get_default
 794              	.LVL75:
 795 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 796              	.LVL76:
 797              	.LBE65:
 798              	.LBE64:
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 799              		.loc 1 118 23 view .LVU158
 800 000a FFF7FEFF 		bl	lv_btn_create
 801              	.LVL77:
 802 000e 0446     		mov	r4, r0
 803              	.LVL78:
 119:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_RIGHT, -20, 20);
 804              		.loc 1 119 5 is_stmt 1 view .LVU159
 805 0010 0023     		movs	r3, #0
 806 0012 1A46     		mov	r2, r3
 807 0014 2049     		ldr	r1, .L43
 808 0016 FFF7FEFF 		bl	lv_obj_add_event_cb
 809              	.LVL79:
 120:Core/Src/lvgl_app.c **** 
 810              		.loc 1 120 5 view .LVU160
 811 001a 1423     		movs	r3, #20
 812 001c 6FF01302 		mvn	r2, #19
 813 0020 0321     		movs	r1, #3
 814 0022 2046     		mov	r0, r4
 815 0024 FFF7FEFF 		bl	lv_obj_align
 816              	.LVL80:
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 817              		.loc 1 122 5 view .LVU161
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 818              		.loc 1 122 13 is_stmt 0 view .LVU162
 819 0028 2046     		mov	r0, r4
 820 002a FFF7FEFF 		bl	lv_label_create
ARM GAS  /tmp/ccwMafHe.s 			page 29


 821              	.LVL81:
 822 002e 0446     		mov	r4, r0
 823              	.LVL82:
 123:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 824              		.loc 1 123 5 is_stmt 1 view .LVU163
 825 0030 1A49     		ldr	r1, .L43+4
 826 0032 FFF7FEFF 		bl	lv_label_set_text
 827              	.LVL83:
 124:Core/Src/lvgl_app.c **** 
 828              		.loc 1 124 5 view .LVU164
 829              	.LBB66:
 830              	.LBI66:
 831              		.file 5 "Middlewares/lvgl/src/core/lv_obj_pos.h"
   1:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:Middlewares/lvgl/src/core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_pos.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_pos.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  18:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  19:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      DEFINES
  20:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  21:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  22:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  23:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      TYPEDEFS
  24:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  25:Middlewares/lvgl/src/core/lv_obj_pos.h **** struct _lv_obj_t;
  26:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  27:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef struct {
  29:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:Middlewares/lvgl/src/core/lv_obj_pos.h ****     void * user_data;
  31:Middlewares/lvgl/src/core/lv_obj_pos.h **** }lv_layout_dsc_t;
  32:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  33:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  34:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  36:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  38:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  40:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  43:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
ARM GAS  /tmp/ccwMafHe.s 			page 30


  45:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  46:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the x coordinate of a object
  47:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  48:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  50:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  52:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  53:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the y coordinate of a object
  54:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  55:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  57:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  59:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  60:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the size of an object.
  61:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  62:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  63:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  64:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  65:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  70:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  72:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  73:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Recalculate the size of the object
  74:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  75:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          true: the size has been changed
  76:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  77:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  79:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  80:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width of an object
  81:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  82:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  83:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  84:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  89:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  91:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  92:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height of an object
  93:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  94:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  95:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  96:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 101:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
ARM GAS  /tmp/ccwMafHe.s 			page 31


 102:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 103:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 104:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 106:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 108:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 110:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 111:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 113:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 115:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 117:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 118:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set a layout for an object
 119:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 120:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 122:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 124:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 125:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 129:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 131:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 132:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Mark the object for layout update.
 133:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 135:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 137:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 138:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Update the layout of an object.
 139:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 144:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Regsiter a new layout
 145:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param cb        the layout update callback
 146:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          the ID of the new layout
 148:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 149:Middlewares/lvgl/src/core/lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 151:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 152:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object.
 153:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 156:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 158:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
ARM GAS  /tmp/ccwMafHe.s 			page 32


 159:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Equivalent to:
 161:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 168:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 170:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 171:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to an other object.
 172:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 179:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 181:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 182:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 832              		.loc 5 186 20 view .LVU165
 833              	.LBB67:
 187:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 188:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 834              		.loc 5 188 5 view .LVU166
 835 0036 0023     		movs	r3, #0
 836 0038 1A46     		mov	r2, r3
 837 003a 0921     		movs	r1, #9
 838 003c 2046     		mov	r0, r4
 839 003e FFF7FEFF 		bl	lv_obj_align
 840              	.LVL84:
 841              		.loc 5 188 5 is_stmt 0 view .LVU167
 842              	.LBE67:
 843              	.LBE66:
 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 844              		.loc 1 126 5 is_stmt 1 view .LVU168
 845              	.LBB68:
 846              	.LBI68:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 847              		.loc 3 163 26 view .LVU169
 848              	.LBB69:
 849              		.loc 3 165 5 view .LVU170
 850              		.loc 3 165 12 is_stmt 0 view .LVU171
 851 0042 FFF7FEFF 		bl	lv_disp_get_default
 852              	.LVL85:
 853 0046 FFF7FEFF 		bl	lv_disp_get_scr_act
 854              	.LVL86:
 855              	.LBE69:
 856              	.LBE68:
ARM GAS  /tmp/ccwMafHe.s 			page 33


 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 857              		.loc 1 126 23 view .LVU172
 858 004a FFF7FEFF 		bl	lv_btn_create
 859              	.LVL87:
 860 004e 0446     		mov	r4, r0
 861              	.LVL88:
 127:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_RIGHT, -20, 80);
 862              		.loc 1 127 5 is_stmt 1 view .LVU173
 863 0050 0023     		movs	r3, #0
 864 0052 1A46     		mov	r2, r3
 865 0054 1249     		ldr	r1, .L43+8
 866 0056 FFF7FEFF 		bl	lv_obj_add_event_cb
 867              	.LVL89:
 128:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 868              		.loc 1 128 5 view .LVU174
 869 005a 5023     		movs	r3, #80
 870 005c 6FF01302 		mvn	r2, #19
 871 0060 0321     		movs	r1, #3
 872 0062 2046     		mov	r0, r4
 873 0064 FFF7FEFF 		bl	lv_obj_align
 874              	.LVL90:
 129:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 875              		.loc 1 129 5 view .LVU175
 876 0068 0821     		movs	r1, #8
 877 006a 2046     		mov	r0, r4
 878 006c FFF7FEFF 		bl	lv_obj_add_flag
 879              	.LVL91:
 130:Core/Src/lvgl_app.c **** 
 880              		.loc 1 130 5 view .LVU176
 881 0070 42F2D171 		movw	r1, #10193
 882 0074 2046     		mov	r0, r4
 883 0076 FFF7FEFF 		bl	lv_obj_set_height
 884              	.LVL92:
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 885              		.loc 1 132 5 view .LVU177
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 886              		.loc 1 132 13 is_stmt 0 view .LVU178
 887 007a 2046     		mov	r0, r4
 888 007c FFF7FEFF 		bl	lv_label_create
 889              	.LVL93:
 890 0080 0446     		mov	r4, r0
 891              	.LVL94:
 133:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 892              		.loc 1 133 5 is_stmt 1 view .LVU179
 893 0082 0849     		ldr	r1, .L43+12
 894 0084 FFF7FEFF 		bl	lv_label_set_text
 895              	.LVL95:
 134:Core/Src/lvgl_app.c **** 
 896              		.loc 1 134 5 view .LVU180
 897              	.LBB70:
 898              	.LBI70:
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 899              		.loc 5 186 20 view .LVU181
 900              	.LBB71:
 901              		.loc 5 188 5 view .LVU182
 902 0088 0023     		movs	r3, #0
 903 008a 1A46     		mov	r2, r3
ARM GAS  /tmp/ccwMafHe.s 			page 34


 904 008c 0921     		movs	r1, #9
 905 008e 2046     		mov	r0, r4
 906 0090 FFF7FEFF 		bl	lv_obj_align
 907              	.LVL96:
 908              		.loc 5 188 5 is_stmt 0 view .LVU183
 909              	.LBE71:
 910              	.LBE70:
 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 911              		.loc 1 145 1 view .LVU184
 912 0094 10BD     		pop	{r4, pc}
 913              	.LVL97:
 914              	.L44:
 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 915              		.loc 1 145 1 view .LVU185
 916 0096 00BF     		.align	2
 917              	.L43:
 918 0098 00000000 		.word	wave_zoom_stop
 919 009c 00000000 		.word	.LC4
 920 00a0 00000000 		.word	wave_draw_stop
 921 00a4 08000000 		.word	.LC5
 922              		.cfi_endproc
 923              	.LFE194:
 925              		.section	.rodata.distortion_list.str1.4,"aMS",%progbits,1
 926              		.align	2
 927              	.LC6:
 928 0000 4E6F2064 		.ascii	"No distortion\012Top distortion\012Bottom distortio"
 928      6973746F 
 928      7274696F 
 928      6E0A546F 
 928      70206469 
 929 002d 6E0A5477 		.ascii	"n\012Two-way distortion\012Crossover distortion\000"
 929      6F2D7761 
 929      79206469 
 929      73746F72 
 929      74696F6E 
 930              		.section	.text.distortion_list,"ax",%progbits
 931              		.align	1
 932              		.global	distortion_list
 933              		.syntax unified
 934              		.thumb
 935              		.thumb_func
 936              		.fpu fpv5-d16
 938              	distortion_list:
 939              	.LFB196:
 171:Core/Src/lvgl_app.c **** 
 172:Core/Src/lvgl_app.c **** void distortion_list(void)
 173:Core/Src/lvgl_app.c **** {
 940              		.loc 1 173 1 is_stmt 1 view -0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944 0000 10B5     		push	{r4, lr}
 945              	.LCFI13:
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 4, -8
 948              		.cfi_offset 14, -4
 174:Core/Src/lvgl_app.c ****     /*Create a normal drop down list*/
ARM GAS  /tmp/ccwMafHe.s 			page 35


 175:Core/Src/lvgl_app.c ****     lv_obj_t * dd = lv_dropdown_create(lv_scr_act());
 949              		.loc 1 175 5 view .LVU187
 950              	.LBB74:
 951              	.LBI74:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 952              		.loc 3 163 26 view .LVU188
 953              	.LBB75:
 954              		.loc 3 165 5 view .LVU189
 955              		.loc 3 165 12 is_stmt 0 view .LVU190
 956 0002 FFF7FEFF 		bl	lv_disp_get_default
 957              	.LVL98:
 958 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 959              	.LVL99:
 960              	.LBE75:
 961              	.LBE74:
 962              		.loc 1 175 21 view .LVU191
 963 000a FFF7FEFF 		bl	lv_dropdown_create
 964              	.LVL100:
 965 000e 0446     		mov	r4, r0
 966              	.LVL101:
 176:Core/Src/lvgl_app.c ****     lv_dropdown_set_options(dd, "No distortion\n"
 967              		.loc 1 176 5 is_stmt 1 view .LVU192
 968 0010 0A49     		ldr	r1, .L47
 969 0012 FFF7FEFF 		bl	lv_dropdown_set_options
 970              	.LVL102:
 177:Core/Src/lvgl_app.c ****                                 "Top distortion\n"
 178:Core/Src/lvgl_app.c ****                                 "Bottom distortion\n"
 179:Core/Src/lvgl_app.c ****                                 "Two-way distortion\n"
 180:Core/Src/lvgl_app.c ****                                 "Crossover distortion"
 181:Core/Src/lvgl_app.c ****                                 );
 182:Core/Src/lvgl_app.c ****     lv_obj_align(dd, LV_ALIGN_TOP_RIGHT, -20, 200);
 971              		.loc 1 182 5 view .LVU193
 972 0016 C823     		movs	r3, #200
 973 0018 6FF01302 		mvn	r2, #19
 974 001c 0321     		movs	r1, #3
 975 001e 2046     		mov	r0, r4
 976 0020 FFF7FEFF 		bl	lv_obj_align
 977              	.LVL103:
 183:Core/Src/lvgl_app.c ****     lv_obj_set_width(dd,190);
 978              		.loc 1 183 5 view .LVU194
 979 0024 BE21     		movs	r1, #190
 980 0026 2046     		mov	r0, r4
 981 0028 FFF7FEFF 		bl	lv_obj_set_width
 982              	.LVL104:
 184:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(dd, distortion_handler, LV_EVENT_ALL, NULL);
 983              		.loc 1 184 5 view .LVU195
 984 002c 0023     		movs	r3, #0
 985 002e 1A46     		mov	r2, r3
 986 0030 0349     		ldr	r1, .L47+4
 987 0032 2046     		mov	r0, r4
 988 0034 FFF7FEFF 		bl	lv_obj_add_event_cb
 989              	.LVL105:
 185:Core/Src/lvgl_app.c **** }
 990              		.loc 1 185 1 is_stmt 0 view .LVU196
 991 0038 10BD     		pop	{r4, pc}
 992              	.LVL106:
 993              	.L48:
ARM GAS  /tmp/ccwMafHe.s 			page 36


 994              		.loc 1 185 1 view .LVU197
 995 003a 00BF     		.align	2
 996              	.L47:
 997 003c 00000000 		.word	.LC6
 998 0040 00000000 		.word	distortion_handler
 999              		.cfi_endproc
 1000              	.LFE196:
 1002              		.section	.rodata.THD_label.str1.4,"aMS",%progbits,1
 1003              		.align	2
 1004              	.LC7:
 1005 0000 54484400 		.ascii	"THD\000"
 1006              		.section	.text.THD_label,"ax",%progbits
 1007              		.align	1
 1008              		.global	THD_label
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv5-d16
 1014              	THD_label:
 1015              	.LFB197:
 186:Core/Src/lvgl_app.c **** 
 187:Core/Src/lvgl_app.c **** lv_obj_t * THD_text;
 188:Core/Src/lvgl_app.c **** void THD_label(void){
 1016              		.loc 1 188 21 is_stmt 1 view -0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020 0000 10B5     		push	{r4, lr}
 1021              	.LCFI14:
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 4, -8
 1024              		.cfi_offset 14, -4
 189:Core/Src/lvgl_app.c ****     THD_text = lv_label_create(lv_scr_act());
 1025              		.loc 1 189 5 view .LVU199
 1026              	.LBB78:
 1027              	.LBI78:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 1028              		.loc 3 163 26 view .LVU200
 1029              	.LBB79:
 1030              		.loc 3 165 5 view .LVU201
 1031              		.loc 3 165 12 is_stmt 0 view .LVU202
 1032 0002 FFF7FEFF 		bl	lv_disp_get_default
 1033              	.LVL107:
 1034 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 1035              	.LVL108:
 1036              	.LBE79:
 1037              	.LBE78:
 1038              		.loc 1 189 16 view .LVU203
 1039 000a FFF7FEFF 		bl	lv_label_create
 1040              	.LVL109:
 1041              		.loc 1 189 14 view .LVU204
 1042 000e 0B4C     		ldr	r4, .L51
 1043 0010 2060     		str	r0, [r4]
 190:Core/Src/lvgl_app.c ****     lv_label_set_text(THD_text, "THD");
 1044              		.loc 1 190 5 is_stmt 1 view .LVU205
 1045 0012 0B49     		ldr	r1, .L51+4
 1046 0014 FFF7FEFF 		bl	lv_label_set_text
ARM GAS  /tmp/ccwMafHe.s 			page 37


 1047              	.LVL110:
 191:Core/Src/lvgl_app.c ****     lv_obj_set_width(THD_text, 150);  /*Set smaller width to make the lines wrap*/
 1048              		.loc 1 191 5 view .LVU206
 1049 0018 9621     		movs	r1, #150
 1050 001a 2068     		ldr	r0, [r4]
 1051 001c FFF7FEFF 		bl	lv_obj_set_width
 1052              	.LVL111:
 192:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(THD_text, LV_TEXT_ALIGN_CENTER, 0);
 1053              		.loc 1 192 5 view .LVU207
 1054 0020 0022     		movs	r2, #0
 1055 0022 0221     		movs	r1, #2
 1056 0024 2068     		ldr	r0, [r4]
 1057 0026 FFF7FEFF 		bl	lv_obj_set_style_text_align
 1058              	.LVL112:
 193:Core/Src/lvgl_app.c ****     lv_obj_align(THD_text, LV_ALIGN_TOP_RIGHT, -20, 140);
 1059              		.loc 1 193 5 view .LVU208
 1060 002a 8C23     		movs	r3, #140
 1061 002c 6FF01302 		mvn	r2, #19
 1062 0030 0321     		movs	r1, #3
 1063 0032 2068     		ldr	r0, [r4]
 1064 0034 FFF7FEFF 		bl	lv_obj_align
 1065              	.LVL113:
 194:Core/Src/lvgl_app.c **** }...
 1066              		.loc 1 194 1 is_stmt 0 view .LVU209
 1067 0038 10BD     		pop	{r4, pc}
 1068              	.L52:
 1069 003a 00BF     		.align	2
 1070              	.L51:
 1071 003c 00000000 		.word	.LANCHOR8
 1072 0040 00000000 		.word	.LC7
 1073              		.cfi_endproc
 1074              	.LFE197:
 1076              		.global	THD_text
 1077              		.global	distortion_mode
 1078              		.global	waveAutoFlg
 1079              		.global	waveStopFlg
 1080              		.global	wave_slider_y
 1081              		.global	wave_slider_x
 1082              		.global	wave_ser
 1083              		.global	wave_chart
 1084              		.global	label1
 1085              		.section	.rodata
 1086              		.align	2
 1087              		.set	.LANCHOR4,. + 0
 1088              	.LC0:
 1089 0000 4E6F2064 		.ascii	"No distortion\000"
 1089      6973746F 
 1089      7274696F 
 1089      6E00
 1090 000e 00000000 		.space	18
 1090      00000000 
 1090      00000000 
 1090      00000000 
 1090      0000
 1091 0020 546F7020 		.ascii	"Top distortion\000"
 1091      64697374 
 1091      6F727469 
ARM GAS  /tmp/ccwMafHe.s 			page 38


 1091      6F6E00
 1092 002f 00000000 		.space	17
 1092      00000000 
 1092      00000000 
 1092      00000000 
 1092      00
 1093 0040 426F7474 		.ascii	"Bottom distortion\000"
 1093      6F6D2064 
 1093      6973746F 
 1093      7274696F 
 1093      6E00
 1094 0052 00000000 		.space	14
 1094      00000000 
 1094      00000000 
 1094      0000
 1095 0060 54776F2D 		.ascii	"Two-way distortion\000"
 1095      77617920 
 1095      64697374 
 1095      6F727469 
 1095      6F6E00
 1096 0073 00000000 		.space	13
 1096      00000000 
 1096      00000000 
 1096      00
 1097 0080 43726F73 		.ascii	"Crossover distortion\000"
 1097      736F7665 
 1097      72206469 
 1097      73746F72 
 1097      74696F6E 
 1098 0095 00000000 		.space	11
 1098      00000000 
 1098      000000
 1099              		.section	.bss.THD_text,"aw",%nobits
 1100              		.align	2
 1101              		.set	.LANCHOR8,. + 0
 1104              	THD_text:
 1105 0000 00000000 		.space	4
 1106              		.section	.bss.distortion_mode,"aw",%nobits
 1107              		.set	.LANCHOR5,. + 0
 1110              	distortion_mode:
 1111 0000 00       		.space	1
 1112              		.section	.bss.label1,"aw",%nobits
 1113              		.align	2
 1114              		.set	.LANCHOR6,. + 0
 1117              	label1:
 1118 0000 00000000 		.space	4
 1119              		.section	.bss.waveAutoFlg,"aw",%nobits
 1122              	waveAutoFlg:
 1123 0000 00       		.space	1
 1124              		.section	.bss.waveStopFlg,"aw",%nobits
 1125              		.set	.LANCHOR1,. + 0
 1128              	waveStopFlg:
 1129 0000 00       		.space	1
 1130              		.section	.bss.wave_chart,"aw",%nobits
 1131              		.align	2
 1132              		.set	.LANCHOR0,. + 0
 1135              	wave_chart:
ARM GAS  /tmp/ccwMafHe.s 			page 39


 1136 0000 00000000 		.space	4
 1137              		.section	.bss.wave_ser,"aw",%nobits
 1138              		.align	2
 1139              		.set	.LANCHOR7,. + 0
 1142              	wave_ser:
 1143 0000 00000000 		.space	4
 1144              		.section	.bss.wave_slider_x,"aw",%nobits
 1145              		.align	2
 1146              		.set	.LANCHOR2,. + 0
 1149              	wave_slider_x:
 1150 0000 00000000 		.space	4
 1151              		.section	.bss.wave_slider_y,"aw",%nobits
 1152              		.align	2
 1153              		.set	.LANCHOR3,. + 0
 1156              	wave_slider_y:
 1157 0000 00000000 		.space	4
 1158              		.text
 1159              	.Letext0:
 1160              		.file 6 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1161              		.file 7 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1162              		.file 8 "Middlewares/lvgl/src/misc/lv_ll.h"
 1163              		.file 9 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 1164              		.file 10 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 1165              		.file 11 "Middlewares/lvgl/src/core/lv_obj.h"
 1166              		.file 12 "Middlewares/lvgl/src/core/lv_group.h"
 1167              		.file 13 "Middlewares/lvgl/src/core/../misc/lv_anim.h"
 1168              		.file 14 "Middlewares/lvgl/src/core/../misc/lv_txt.h"
 1169              		.file 15 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 1170              		.file 16 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 1171              		.file 17 "Middlewares/lvgl/src/core/lv_obj_class.h"
 1172              		.file 18 "Middlewares/lvgl/src/core/lv_event.h"
 1173              		.file 19 "Middlewares/lvgl/src/widgets/lv_label.h"
 1174              		.file 20 "Middlewares/lvgl/src/widgets/lv_bar.h"
 1175              		.file 21 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
 1176              		.file 22 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 1177              		.file 23 "Middlewares/lvgl/src/hal/lv_hal_disp.h"
 1178              		.file 24 "Middlewares/lvgl/src/core/lv_obj_style_gen.h"
 1179              		.file 25 "Middlewares/lvgl/src/widgets/lv_dropdown.h"
 1180              		.file 26 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/string.h"
 1181              		.file 27 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/stdio.h"
 1182              		.file 28 "Middlewares/lvgl/src/widgets/lv_btn.h"
 1183              		.file 29 "<built-in>"
ARM GAS  /tmp/ccwMafHe.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lvgl_app.c
     /tmp/ccwMafHe.s:17     .text.slider_y_event_cb:0000000000000000 $t
     /tmp/ccwMafHe.s:24     .text.slider_y_event_cb:0000000000000000 slider_y_event_cb
     /tmp/ccwMafHe.s:68     .text.slider_y_event_cb:0000000000000018 $d
     /tmp/ccwMafHe.s:73     .text.slider_x_event_cb:0000000000000000 $t
     /tmp/ccwMafHe.s:79     .text.slider_x_event_cb:0000000000000000 slider_x_event_cb
     /tmp/ccwMafHe.s:121    .text.slider_x_event_cb:0000000000000018 $d
     /tmp/ccwMafHe.s:126    .text.wave_draw_stop:0000000000000000 $t
     /tmp/ccwMafHe.s:132    .text.wave_draw_stop:0000000000000000 wave_draw_stop
     /tmp/ccwMafHe.s:181    .text.wave_draw_stop:0000000000000024 $d
     /tmp/ccwMafHe.s:186    .rodata.wave_zoom_stop.str1.4:0000000000000000 $d
     /tmp/ccwMafHe.s:190    .text.wave_zoom_stop:0000000000000000 $t
     /tmp/ccwMafHe.s:196    .text.wave_zoom_stop:0000000000000000 wave_zoom_stop
     /tmp/ccwMafHe.s:275    .text.wave_zoom_stop:0000000000000044 $d
     /tmp/ccwMafHe.s:283    .rodata.distortion_handler.str1.4:0000000000000000 $d
     /tmp/ccwMafHe.s:287    .text.distortion_handler:0000000000000000 $t
     /tmp/ccwMafHe.s:293    .text.distortion_handler:0000000000000000 distortion_handler
     /tmp/ccwMafHe.s:406    .text.distortion_handler:000000000000005c $d
     /tmp/ccwMafHe.s:413    .rodata.counter_label.str1.4:0000000000000000 $d
     /tmp/ccwMafHe.s:417    .text.counter_label:0000000000000000 $t
     /tmp/ccwMafHe.s:424    .text.counter_label:0000000000000000 counter_label
     /tmp/ccwMafHe.s:492    .text.counter_label:000000000000004c $d
     /tmp/ccwMafHe.s:498    .text.wave_chart_init:0000000000000000 $t
     /tmp/ccwMafHe.s:505    .text.wave_chart_init:0000000000000000 wave_chart_init
     /tmp/ccwMafHe.s:750    .text.wave_chart_init:0000000000000138 $d
     /tmp/ccwMafHe.s:760    .rodata.wave_btn.str1.4:0000000000000000 $d
     /tmp/ccwMafHe.s:767    .text.wave_btn:0000000000000000 $t
     /tmp/ccwMafHe.s:774    .text.wave_btn:0000000000000000 wave_btn
     /tmp/ccwMafHe.s:918    .text.wave_btn:0000000000000098 $d
     /tmp/ccwMafHe.s:926    .rodata.distortion_list.str1.4:0000000000000000 $d
     /tmp/ccwMafHe.s:931    .text.distortion_list:0000000000000000 $t
     /tmp/ccwMafHe.s:938    .text.distortion_list:0000000000000000 distortion_list
     /tmp/ccwMafHe.s:997    .text.distortion_list:000000000000003c $d
     /tmp/ccwMafHe.s:1003   .rodata.THD_label.str1.4:0000000000000000 $d
     /tmp/ccwMafHe.s:1007   .text.THD_label:0000000000000000 $t
     /tmp/ccwMafHe.s:1014   .text.THD_label:0000000000000000 THD_label
     /tmp/ccwMafHe.s:1071   .text.THD_label:000000000000003c $d
     /tmp/ccwMafHe.s:1104   .bss.THD_text:0000000000000000 THD_text
     /tmp/ccwMafHe.s:1110   .bss.distortion_mode:0000000000000000 distortion_mode
     /tmp/ccwMafHe.s:1122   .bss.waveAutoFlg:0000000000000000 waveAutoFlg
     /tmp/ccwMafHe.s:1128   .bss.waveStopFlg:0000000000000000 waveStopFlg
     /tmp/ccwMafHe.s:1156   .bss.wave_slider_y:0000000000000000 wave_slider_y
     /tmp/ccwMafHe.s:1149   .bss.wave_slider_x:0000000000000000 wave_slider_x
     /tmp/ccwMafHe.s:1142   .bss.wave_ser:0000000000000000 wave_ser
     /tmp/ccwMafHe.s:1135   .bss.wave_chart:0000000000000000 wave_chart
     /tmp/ccwMafHe.s:1117   .bss.label1:0000000000000000 label1
     /tmp/ccwMafHe.s:1086   .rodata:0000000000000000 $d
     /tmp/ccwMafHe.s:1100   .bss.THD_text:0000000000000000 $d
     /tmp/ccwMafHe.s:1111   .bss.distortion_mode:0000000000000000 $d
     /tmp/ccwMafHe.s:1113   .bss.label1:0000000000000000 $d
     /tmp/ccwMafHe.s:1123   .bss.waveAutoFlg:0000000000000000 $d
     /tmp/ccwMafHe.s:1129   .bss.waveStopFlg:0000000000000000 $d
     /tmp/ccwMafHe.s:1131   .bss.wave_chart:0000000000000000 $d
     /tmp/ccwMafHe.s:1138   .bss.wave_ser:0000000000000000 $d
     /tmp/ccwMafHe.s:1145   .bss.wave_slider_x:0000000000000000 $d
     /tmp/ccwMafHe.s:1152   .bss.wave_slider_y:0000000000000000 $d
ARM GAS  /tmp/ccwMafHe.s 			page 41



UNDEFINED SYMBOLS
lv_event_get_target
lv_bar_get_value
lv_chart_set_zoom_y
lv_chart_set_zoom_x
lv_event_get_code
puts
lv_bar_set_value
lv_dropdown_get_selected_str
memcpy
strstr
printf
lv_disp_get_default
lv_disp_get_scr_act
lv_label_create
lv_label_set_long_mode
lv_label_set_recolor
lv_label_set_text
lv_obj_set_width
lv_obj_set_style_text_align
lv_obj_align
lv_chart_create
lv_obj_set_size
lv_chart_set_range
lv_chart_set_axis_tick
lv_obj_set_style_width
lv_obj_set_style_height
lv_palette_main
lv_chart_add_series
lv_slider_create
lv_bar_set_range
lv_obj_add_event_cb
lv_obj_align_to
lv_btn_create
lv_obj_add_flag
lv_obj_set_height
lv_dropdown_create
lv_dropdown_set_options
