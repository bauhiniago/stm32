ARM GAS  /tmp/ccQoW9Zn.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.global	SystemInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	SystemInit:
  26              	.LFB144:
  27              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32h7xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32h7xx.c ****   * License. You may obtain a copy of the License at:
  31:Core/Src/system_stm32h7xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/ccQoW9Zn.s 			page 2


  32:Core/Src/system_stm32h7xx.c ****   *
  33:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32h7xx.c ****   */
  35:Core/Src/system_stm32h7xx.c **** 
  36:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32h7xx.c ****   * @{
  38:Core/Src/system_stm32h7xx.c ****   */
  39:Core/Src/system_stm32h7xx.c **** 
  40:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  41:Core/Src/system_stm32h7xx.c ****   * @{
  42:Core/Src/system_stm32h7xx.c ****   */
  43:Core/Src/system_stm32h7xx.c **** 
  44:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  45:Core/Src/system_stm32h7xx.c ****   * @{
  46:Core/Src/system_stm32h7xx.c ****   */
  47:Core/Src/system_stm32h7xx.c **** 
  48:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  49:Core/Src/system_stm32h7xx.c **** #include <math.h>
  50:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32h7xx.c **** 
  54:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Core/Src/system_stm32h7xx.c **** 
  58:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** /**
  64:Core/Src/system_stm32h7xx.c ****   * @}
  65:Core/Src/system_stm32h7xx.c ****   */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32h7xx.c ****   * @{
  69:Core/Src/system_stm32h7xx.c ****   */
  70:Core/Src/system_stm32h7xx.c **** 
  71:Core/Src/system_stm32h7xx.c **** /**
  72:Core/Src/system_stm32h7xx.c ****   * @}
  73:Core/Src/system_stm32h7xx.c ****   */
  74:Core/Src/system_stm32h7xx.c **** 
  75:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Core/Src/system_stm32h7xx.c ****   * @{
  77:Core/Src/system_stm32h7xx.c ****   */
  78:Core/Src/system_stm32h7xx.c **** 
  79:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Core/Src/system_stm32h7xx.c **** 
  83:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  84:Core/Src/system_stm32h7xx.c ****      Internal SRAM. */
  85:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  86:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET  0x00000000UL /*!< Vector Table base offset field.
  87:Core/Src/system_stm32h7xx.c ****                                       This value must be a multiple of 0x200. */
  88:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
ARM GAS  /tmp/ccQoW9Zn.s 			page 3


  89:Core/Src/system_stm32h7xx.c **** 
  90:Core/Src/system_stm32h7xx.c **** /**
  91:Core/Src/system_stm32h7xx.c ****   * @}
  92:Core/Src/system_stm32h7xx.c ****   */
  93:Core/Src/system_stm32h7xx.c **** 
  94:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
  95:Core/Src/system_stm32h7xx.c ****   * @{
  96:Core/Src/system_stm32h7xx.c ****   */
  97:Core/Src/system_stm32h7xx.c **** 
  98:Core/Src/system_stm32h7xx.c **** /**
  99:Core/Src/system_stm32h7xx.c ****   * @}
 100:Core/Src/system_stm32h7xx.c ****   */
 101:Core/Src/system_stm32h7xx.c **** 
 102:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 103:Core/Src/system_stm32h7xx.c ****   * @{
 104:Core/Src/system_stm32h7xx.c ****   */
 105:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 106:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 107:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 108:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 109:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 110:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 111:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 112:Core/Src/system_stm32h7xx.c ****   */
 113:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 114:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 115:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 116:Core/Src/system_stm32h7xx.c **** 
 117:Core/Src/system_stm32h7xx.c **** /**
 118:Core/Src/system_stm32h7xx.c ****   * @}
 119:Core/Src/system_stm32h7xx.c ****   */
 120:Core/Src/system_stm32h7xx.c **** 
 121:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 122:Core/Src/system_stm32h7xx.c ****   * @{
 123:Core/Src/system_stm32h7xx.c ****   */
 124:Core/Src/system_stm32h7xx.c **** 
 125:Core/Src/system_stm32h7xx.c **** /**
 126:Core/Src/system_stm32h7xx.c ****   * @}
 127:Core/Src/system_stm32h7xx.c ****   */
 128:Core/Src/system_stm32h7xx.c **** 
 129:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 130:Core/Src/system_stm32h7xx.c ****   * @{
 131:Core/Src/system_stm32h7xx.c ****   */
 132:Core/Src/system_stm32h7xx.c **** 
 133:Core/Src/system_stm32h7xx.c **** /**
 134:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 135:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 136:Core/Src/system_stm32h7xx.c ****   *         configuration.
 137:Core/Src/system_stm32h7xx.c ****   * @param  None
 138:Core/Src/system_stm32h7xx.c ****   * @retval None
 139:Core/Src/system_stm32h7xx.c ****   */
 140:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 141:Core/Src/system_stm32h7xx.c **** {
  28              		.loc 1 141 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccQoW9Zn.s 			page 4


  32              		@ link register save eliminated.
 142:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 143:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 144:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 145:Core/Src/system_stm32h7xx.c **** 
 146:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 147:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 148:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 148 5 view .LVU1
  34              		.loc 1 148 16 is_stmt 0 view .LVU2
  35 0000 294A     		ldr	r2, .L5
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C2F88830 		str	r3, [r2, #136]
 149:Core/Src/system_stm32h7xx.c ****   #endif
 150:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 151:Core/Src/system_stm32h7xx.c **** 
 152:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 153:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  39              		.loc 1 153 3 is_stmt 1 view .LVU3
  40              		.loc 1 153 32 is_stmt 0 view .LVU4
  41 000e 274B     		ldr	r3, .L5+4
  42 0010 1B68     		ldr	r3, [r3]
  43 0012 03F00F03 		and	r3, r3, #15
  44              		.loc 1 153 5 view .LVU5
  45 0016 062B     		cmp	r3, #6
  46 0018 06D8     		bhi	.L2
 154:Core/Src/system_stm32h7xx.c ****   {
 155:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 156:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  47              		.loc 1 156 2 is_stmt 1 view .LVU6
  48 001a 244A     		ldr	r2, .L5+4
  49 001c 1368     		ldr	r3, [r2]
  50 001e 23F00F03 		bic	r3, r3, #15
  51 0022 43F00703 		orr	r3, r3, #7
  52 0026 1360     		str	r3, [r2]
  53              	.L2:
 157:Core/Src/system_stm32h7xx.c ****   }
 158:Core/Src/system_stm32h7xx.c **** 
 159:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 160:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  54              		.loc 1 160 3 view .LVU7
  55              		.loc 1 160 11 is_stmt 0 view .LVU8
  56 0028 214B     		ldr	r3, .L5+8
  57 002a 1A68     		ldr	r2, [r3]
  58 002c 42F00102 		orr	r2, r2, #1
  59 0030 1A60     		str	r2, [r3]
 161:Core/Src/system_stm32h7xx.c **** 
 162:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 163:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  60              		.loc 1 163 3 is_stmt 1 view .LVU9
  61              		.loc 1 163 13 is_stmt 0 view .LVU10
  62 0032 0022     		movs	r2, #0
  63 0034 1A61     		str	r2, [r3, #16]
 164:Core/Src/system_stm32h7xx.c **** 
 165:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 166:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
ARM GAS  /tmp/ccQoW9Zn.s 			page 5


  64              		.loc 1 166 3 is_stmt 1 view .LVU11
  65              		.loc 1 166 11 is_stmt 0 view .LVU12
  66 0036 1968     		ldr	r1, [r3]
  67 0038 1E4A     		ldr	r2, .L5+12
  68 003a 0A40     		ands	r2, r2, r1
  69 003c 1A60     		str	r2, [r3]
 167:Core/Src/system_stm32h7xx.c ****   
 168:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 169:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  70              		.loc 1 169 3 is_stmt 1 view .LVU13
  71              		.loc 1 169 32 is_stmt 0 view .LVU14
  72 003e 1B4B     		ldr	r3, .L5+4
  73 0040 1B68     		ldr	r3, [r3]
  74              		.loc 1 169 5 view .LVU15
  75 0042 13F0080F 		tst	r3, #8
  76 0046 06D0     		beq	.L3
 170:Core/Src/system_stm32h7xx.c ****   {
 171:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 172:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  77              		.loc 1 172 2 is_stmt 1 view .LVU16
  78 0048 184A     		ldr	r2, .L5+4
  79 004a 1368     		ldr	r3, [r2]
  80 004c 23F00F03 		bic	r3, r3, #15
  81 0050 43F00703 		orr	r3, r3, #7
  82 0054 1360     		str	r3, [r2]
  83              	.L3:
 173:Core/Src/system_stm32h7xx.c ****   }
 174:Core/Src/system_stm32h7xx.c **** 
 175:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 176:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 177:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  84              		.loc 1 177 3 view .LVU17
  85              		.loc 1 177 15 is_stmt 0 view .LVU18
  86 0056 164B     		ldr	r3, .L5+8
  87 0058 0022     		movs	r2, #0
  88 005a 9A61     		str	r2, [r3, #24]
 178:Core/Src/system_stm32h7xx.c **** 
 179:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 180:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  89              		.loc 1 180 3 is_stmt 1 view .LVU19
  90              		.loc 1 180 15 is_stmt 0 view .LVU20
  91 005c DA61     		str	r2, [r3, #28]
 181:Core/Src/system_stm32h7xx.c **** 
 182:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 183:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  92              		.loc 1 183 3 is_stmt 1 view .LVU21
  93              		.loc 1 183 15 is_stmt 0 view .LVU22
  94 005e 1A62     		str	r2, [r3, #32]
 184:Core/Src/system_stm32h7xx.c **** #else
 185:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 186:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 187:Core/Src/system_stm32h7xx.c **** 
 188:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 189:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 190:Core/Src/system_stm32h7xx.c **** 
 191:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 192:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
ARM GAS  /tmp/ccQoW9Zn.s 			page 6


 193:Core/Src/system_stm32h7xx.c **** #endif
 194:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 195:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  95              		.loc 1 195 3 is_stmt 1 view .LVU23
  96              		.loc 1 195 18 is_stmt 0 view .LVU24
  97 0060 1549     		ldr	r1, .L5+16
  98 0062 9962     		str	r1, [r3, #40]
 196:Core/Src/system_stm32h7xx.c **** 
 197:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 198:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
  99              		.loc 1 198 3 is_stmt 1 view .LVU25
 100              		.loc 1 198 16 is_stmt 0 view .LVU26
 101 0064 1549     		ldr	r1, .L5+20
 102 0066 D962     		str	r1, [r3, #44]
 199:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 200:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 103              		.loc 1 200 3 is_stmt 1 view .LVU27
 104              		.loc 1 200 17 is_stmt 0 view .LVU28
 105 0068 1549     		ldr	r1, .L5+24
 106 006a 1963     		str	r1, [r3, #48]
 201:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 202:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 107              		.loc 1 202 3 is_stmt 1 view .LVU29
 108              		.loc 1 202 18 is_stmt 0 view .LVU30
 109 006c 5A63     		str	r2, [r3, #52]
 203:Core/Src/system_stm32h7xx.c **** 
 204:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 205:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 110              		.loc 1 205 3 is_stmt 1 view .LVU31
 111              		.loc 1 205 17 is_stmt 0 view .LVU32
 112 006e 9963     		str	r1, [r3, #56]
 206:Core/Src/system_stm32h7xx.c **** 
 207:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 208:Core/Src/system_stm32h7xx.c **** 
 209:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 113              		.loc 1 209 3 is_stmt 1 view .LVU33
 114              		.loc 1 209 18 is_stmt 0 view .LVU34
 115 0070 DA63     		str	r2, [r3, #60]
 210:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 211:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 116              		.loc 1 211 3 is_stmt 1 view .LVU35
 117              		.loc 1 211 17 is_stmt 0 view .LVU36
 118 0072 1964     		str	r1, [r3, #64]
 212:Core/Src/system_stm32h7xx.c **** 
 213:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 214:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 119              		.loc 1 214 3 is_stmt 1 view .LVU37
 120              		.loc 1 214 18 is_stmt 0 view .LVU38
 121 0074 5A64     		str	r2, [r3, #68]
 215:Core/Src/system_stm32h7xx.c **** 
 216:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 217:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 122              		.loc 1 217 3 is_stmt 1 view .LVU39
 123              		.loc 1 217 11 is_stmt 0 view .LVU40
 124 0076 1968     		ldr	r1, [r3]
 125 0078 21F48021 		bic	r1, r1, #262144
 126 007c 1960     		str	r1, [r3]
ARM GAS  /tmp/ccQoW9Zn.s 			page 7


 218:Core/Src/system_stm32h7xx.c **** 
 219:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 220:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 127              		.loc 1 220 3 is_stmt 1 view .LVU41
 128              		.loc 1 220 13 is_stmt 0 view .LVU42
 129 007e 1A66     		str	r2, [r3, #96]
 221:Core/Src/system_stm32h7xx.c **** 
 222:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 223:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 224:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 130              		.loc 1 224 3 is_stmt 1 view .LVU43
 131              		.loc 1 224 13 is_stmt 0 view .LVU44
 132 0080 104B     		ldr	r3, .L5+28
 133 0082 1A68     		ldr	r2, [r3]
 134              		.loc 1 224 22 view .LVU45
 135 0084 104B     		ldr	r3, .L5+32
 136 0086 1340     		ands	r3, r3, r2
 137              		.loc 1 224 5 view .LVU46
 138 0088 B3F1005F 		cmp	r3, #536870912
 139 008c 03D2     		bcs	.L4
 225:Core/Src/system_stm32h7xx.c ****   {
 226:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 227:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 228:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 140              		.loc 1 228 5 is_stmt 1 view .LVU47
 141              		.loc 1 228 35 is_stmt 0 view .LVU48
 142 008e 0F4B     		ldr	r3, .L5+36
 143 0090 0122     		movs	r2, #1
 144 0092 C3F80821 		str	r2, [r3, #264]
 145              	.L4:
 229:Core/Src/system_stm32h7xx.c ****   }
 230:Core/Src/system_stm32h7xx.c **** #endif
 231:Core/Src/system_stm32h7xx.c **** 
 232:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 233:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM) , enable the D2 SRAM clock (AHB SRAM clock) 
 234:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 235:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 236:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 237:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 238:Core/Src/system_stm32h7xx.c **** #else
 239:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 240:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 241:Core/Src/system_stm32h7xx.c **** 
 242:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 243:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 244:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 245:Core/Src/system_stm32h7xx.c **** 
 246:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 247:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 248:Core/Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 249:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = D2_AXISRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 250:Core/Src/system_stm32h7xx.c **** #else
 251:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 252:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 253:Core/Src/system_stm32h7xx.c **** 
 254:Core/Src/system_stm32h7xx.c **** #else
 255:Core/Src/system_stm32h7xx.c **** 
ARM GAS  /tmp/ccQoW9Zn.s 			page 8


 256:Core/Src/system_stm32h7xx.c ****   /*
 257:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 258:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 259:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 260:Core/Src/system_stm32h7xx.c ****    */
 261:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 146              		.loc 1 261 3 is_stmt 1 view .LVU49
 147              		.loc 1 261 24 is_stmt 0 view .LVU50
 148 0096 0E4B     		ldr	r3, .L5+40
 149 0098 43F2D202 		movw	r2, #12498
 150 009c 1A60     		str	r2, [r3]
 262:Core/Src/system_stm32h7xx.c **** 
 263:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
 264:Core/Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 265:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal AXI-RAM */
 266:Core/Src/system_stm32h7xx.c **** #else
 267:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 151              		.loc 1 267 3 is_stmt 1 view .LVU51
 152              		.loc 1 267 13 is_stmt 0 view .LVU52
 153 009e 024B     		ldr	r3, .L5
 154 00a0 4FF00062 		mov	r2, #134217728
 155 00a4 9A60     		str	r2, [r3, #8]
 268:Core/Src/system_stm32h7xx.c **** #endif
 269:Core/Src/system_stm32h7xx.c **** 
 270:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 271:Core/Src/system_stm32h7xx.c **** 
 272:Core/Src/system_stm32h7xx.c **** }
 156              		.loc 1 272 1 view .LVU53
 157 00a6 7047     		bx	lr
 158              	.L6:
 159              		.align	2
 160              	.L5:
 161 00a8 00ED00E0 		.word	-536810240
 162 00ac 00200052 		.word	1375739904
 163 00b0 00440258 		.word	1476543488
 164 00b4 7FEDF6EA 		.word	-352916097
 165 00b8 00020202 		.word	33686016
 166 00bc 0000FF01 		.word	33488896
 167 00c0 80020101 		.word	16843392
 168 00c4 0010005C 		.word	1543507968
 169 00c8 0000FFFF 		.word	-65536
 170 00cc 00800051 		.word	1358987264
 171 00d0 00400052 		.word	1375748096
 172              		.cfi_endproc
 173              	.LFE144:
 175              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 176              		.align	1
 177              		.global	SystemCoreClockUpdate
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv5-d16
 183              	SystemCoreClockUpdate:
 184              	.LFB145:
 273:Core/Src/system_stm32h7xx.c **** 
 274:Core/Src/system_stm32h7xx.c **** /**
 275:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
ARM GAS  /tmp/ccQoW9Zn.s 			page 9


 276:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 277:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 278:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 279:Core/Src/system_stm32h7xx.c ****   *
 280:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 281:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 282:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 283:Core/Src/system_stm32h7xx.c ****   *
 284:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 285:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 286:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 287:Core/Src/system_stm32h7xx.c ****   *
 288:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 289:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 290:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 291:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 292:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 293:Core/Src/system_stm32h7xx.c ****   *
 294:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 295:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 296:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 297:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 298:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 299:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 300:Core/Src/system_stm32h7xx.c ****   *
 301:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 302:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 303:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 304:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 305:Core/Src/system_stm32h7xx.c ****   *
 306:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 307:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 308:Core/Src/system_stm32h7xx.c ****   * @param  None
 309:Core/Src/system_stm32h7xx.c ****   * @retval None
 310:Core/Src/system_stm32h7xx.c ****   */
 311:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 312:Core/Src/system_stm32h7xx.c **** {
 185              		.loc 1 312 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190 0000 10B4     		push	{r4}
 191              	.LCFI0:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 4, -4
 313:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 194              		.loc 1 313 3 view .LVU55
 314:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 195              		.loc 1 314 3 view .LVU56
 315:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 196              		.loc 1 315 3 view .LVU57
 316:Core/Src/system_stm32h7xx.c **** 
 317:Core/Src/system_stm32h7xx.c **** 
 318:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:Core/Src/system_stm32h7xx.c **** 
 320:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
ARM GAS  /tmp/ccQoW9Zn.s 			page 10


 197              		.loc 1 320 3 view .LVU58
 198              		.loc 1 320 14 is_stmt 0 view .LVU59
 199 0002 7A4B     		ldr	r3, .L21
 200 0004 1B69     		ldr	r3, [r3, #16]
 201              		.loc 1 320 21 view .LVU60
 202 0006 03F03803 		and	r3, r3, #56
 203              		.loc 1 320 3 view .LVU61
 204 000a 182B     		cmp	r3, #24
 205 000c 00F2E580 		bhi	.L8
 206 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 207              	.L10:
 208 0014 1B00     		.2byte	(.L13-.L10)/2
 209 0016 E300     		.2byte	(.L8-.L10)/2
 210 0018 E300     		.2byte	(.L8-.L10)/2
 211 001a E300     		.2byte	(.L8-.L10)/2
 212 001c E300     		.2byte	(.L8-.L10)/2
 213 001e E300     		.2byte	(.L8-.L10)/2
 214 0020 E300     		.2byte	(.L8-.L10)/2
 215 0022 E300     		.2byte	(.L8-.L10)/2
 216 0024 1900     		.2byte	(.L12-.L10)/2
 217 0026 E300     		.2byte	(.L8-.L10)/2
 218 0028 E300     		.2byte	(.L8-.L10)/2
 219 002a E300     		.2byte	(.L8-.L10)/2
 220 002c E300     		.2byte	(.L8-.L10)/2
 221 002e E300     		.2byte	(.L8-.L10)/2
 222 0030 E300     		.2byte	(.L8-.L10)/2
 223 0032 E300     		.2byte	(.L8-.L10)/2
 224 0034 EA00     		.2byte	(.L18-.L10)/2
 225 0036 E300     		.2byte	(.L8-.L10)/2
 226 0038 E300     		.2byte	(.L8-.L10)/2
 227 003a E300     		.2byte	(.L8-.L10)/2
 228 003c E300     		.2byte	(.L8-.L10)/2
 229 003e E300     		.2byte	(.L8-.L10)/2
 230 0040 E300     		.2byte	(.L8-.L10)/2
 231 0042 E300     		.2byte	(.L8-.L10)/2
 232 0044 3700     		.2byte	(.L9-.L10)/2
 233              		.p2align 1
 234              	.L12:
 235 0046 6A4A     		ldr	r2, .L21+4
 236 0048 05E0     		b	.L11
 237              	.L13:
 321:Core/Src/system_stm32h7xx.c ****   {
 322:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 323:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 238              		.loc 1 323 5 is_stmt 1 view .LVU62
 239              		.loc 1 323 57 is_stmt 0 view .LVU63
 240 004a 684B     		ldr	r3, .L21
 241 004c 1B68     		ldr	r3, [r3]
 242              		.loc 1 323 78 view .LVU64
 243 004e C3F3C103 		ubfx	r3, r3, #3, #2
 244              		.loc 1 323 25 view .LVU65
 245 0052 684A     		ldr	r2, .L21+8
 246 0054 DA40     		lsrs	r2, r2, r3
 247              	.LVL0:
 324:Core/Src/system_stm32h7xx.c ****     break;
 248              		.loc 1 324 5 is_stmt 1 view .LVU66
 249              	.L11:
ARM GAS  /tmp/ccQoW9Zn.s 			page 11


 325:Core/Src/system_stm32h7xx.c **** 
 326:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 327:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 328:Core/Src/system_stm32h7xx.c ****     break;
 329:Core/Src/system_stm32h7xx.c **** 
 330:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 331:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 332:Core/Src/system_stm32h7xx.c ****     break;
 333:Core/Src/system_stm32h7xx.c **** 
 334:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 335:Core/Src/system_stm32h7xx.c **** 
 336:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 337:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 338:Core/Src/system_stm32h7xx.c ****     */
 339:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 340:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 341:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 342:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 343:Core/Src/system_stm32h7xx.c **** 
 344:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 345:Core/Src/system_stm32h7xx.c ****     {
 346:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 347:Core/Src/system_stm32h7xx.c ****       {
 348:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 349:Core/Src/system_stm32h7xx.c **** 
 350:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 351:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 352:Core/Src/system_stm32h7xx.c **** 
 353:Core/Src/system_stm32h7xx.c ****         break;
 354:Core/Src/system_stm32h7xx.c **** 
 355:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 356:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 357:Core/Src/system_stm32h7xx.c ****         break;
 358:Core/Src/system_stm32h7xx.c **** 
 359:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 360:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 361:Core/Src/system_stm32h7xx.c ****         break;
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****       default:
 364:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 365:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 366:Core/Src/system_stm32h7xx.c ****         break;
 367:Core/Src/system_stm32h7xx.c ****       }
 368:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 369:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 370:Core/Src/system_stm32h7xx.c ****     }
 371:Core/Src/system_stm32h7xx.c ****     else
 372:Core/Src/system_stm32h7xx.c ****     {
 373:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 374:Core/Src/system_stm32h7xx.c ****     }
 375:Core/Src/system_stm32h7xx.c ****     break;
 376:Core/Src/system_stm32h7xx.c **** 
 377:Core/Src/system_stm32h7xx.c ****   default:
 378:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 379:Core/Src/system_stm32h7xx.c ****     break;
 380:Core/Src/system_stm32h7xx.c ****   }
 381:Core/Src/system_stm32h7xx.c **** 
ARM GAS  /tmp/ccQoW9Zn.s 			page 12


 382:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 383:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 384:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 250              		.loc 1 384 3 view .LVU67
 251              		.loc 1 384 30 is_stmt 0 view .LVU68
 252 0056 6548     		ldr	r0, .L21
 253 0058 8369     		ldr	r3, [r0, #24]
 254              		.loc 1 384 59 view .LVU69
 255 005a C3F30323 		ubfx	r3, r3, #8, #4
 256              		.loc 1 384 25 view .LVU70
 257 005e 6649     		ldr	r1, .L21+12
 258 0060 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 259              	.LVL1:
 385:Core/Src/system_stm32h7xx.c **** 
 386:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 387:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 260              		.loc 1 387 3 is_stmt 1 view .LVU71
 261              		.loc 1 387 23 is_stmt 0 view .LVU72
 262 0062 DA40     		lsrs	r2, r2, r3
 263              	.LVL2:
 388:Core/Src/system_stm32h7xx.c **** 
 389:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 390:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 264              		.loc 1 390 3 is_stmt 1 view .LVU73
 265              		.loc 1 390 66 is_stmt 0 view .LVU74
 266 0064 8369     		ldr	r3, [r0, #24]
 267              	.LVL3:
 268              		.loc 1 390 93 view .LVU75
 269 0066 03F00F03 		and	r3, r3, #15
 270              		.loc 1 390 61 view .LVU76
 271 006a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 272              		.loc 1 390 118 view .LVU77
 273 006c 03F01F03 		and	r3, r3, #31
 274              		.loc 1 390 40 view .LVU78
 275 0070 22FA03F3 		lsr	r3, r2, r3
 276              		.loc 1 390 17 view .LVU79
 277 0074 6149     		ldr	r1, .L21+16
 278              		.loc 1 390 17 view .LVU80
 279 0076 0B60     		str	r3, [r1]
 391:Core/Src/system_stm32h7xx.c **** 
 392:Core/Src/system_stm32h7xx.c **** #else
 393:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 394:Core/Src/system_stm32h7xx.c **** 
 395:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 396:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 397:Core/Src/system_stm32h7xx.c **** 
 398:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 399:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 400:Core/Src/system_stm32h7xx.c **** 
 401:Core/Src/system_stm32h7xx.c **** #endif
 402:Core/Src/system_stm32h7xx.c **** 
 403:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 404:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 405:Core/Src/system_stm32h7xx.c **** #else
 406:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 280              		.loc 1 406 3 is_stmt 1 view .LVU81
 281              		.loc 1 406 19 is_stmt 0 view .LVU82
ARM GAS  /tmp/ccQoW9Zn.s 			page 13


 282 0078 614B     		ldr	r3, .L21+20
 283 007a 1A60     		str	r2, [r3]
 407:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 408:Core/Src/system_stm32h7xx.c **** }
 284              		.loc 1 408 1 view .LVU83
 285 007c 5DF8044B 		ldr	r4, [sp], #4
 286              	.LCFI1:
 287              		.cfi_remember_state
 288              		.cfi_restore 4
 289              		.cfi_def_cfa_offset 0
 290 0080 7047     		bx	lr
 291              	.LVL4:
 292              	.L9:
 293              	.LCFI2:
 294              		.cfi_restore_state
 339:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 295              		.loc 1 339 5 is_stmt 1 view .LVU84
 339:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 296              		.loc 1 339 21 is_stmt 0 view .LVU85
 297 0082 5A49     		ldr	r1, .L21
 298 0084 886A     		ldr	r0, [r1, #40]
 339:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 299              		.loc 1 339 15 view .LVU86
 300 0086 00F00300 		and	r0, r0, #3
 301              	.LVL5:
 340:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 302              		.loc 1 340 5 is_stmt 1 view .LVU87
 340:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 303              		.loc 1 340 17 is_stmt 0 view .LVU88
 304 008a 8C6A     		ldr	r4, [r1, #40]
 340:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 305              		.loc 1 340 10 view .LVU89
 306 008c C4F30512 		ubfx	r2, r4, #4, #6
 307              	.LVL6:
 341:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 308              		.loc 1 341 5 is_stmt 1 view .LVU90
 341:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 309              		.loc 1 341 22 is_stmt 0 view .LVU91
 310 0090 CB6A     		ldr	r3, [r1, #44]
 341:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 311              		.loc 1 341 15 view .LVU92
 312 0092 03F0010C 		and	ip, r3, #1
 313              	.LVL7:
 342:Core/Src/system_stm32h7xx.c **** 
 314              		.loc 1 342 5 is_stmt 1 view .LVU93
 342:Core/Src/system_stm32h7xx.c **** 
 315              		.loc 1 342 50 is_stmt 0 view .LVU94
 316 0096 4B6B     		ldr	r3, [r1, #52]
 342:Core/Src/system_stm32h7xx.c **** 
 317              		.loc 1 342 85 view .LVU95
 318 0098 C3F3CC03 		ubfx	r3, r3, #3, #13
 342:Core/Src/system_stm32h7xx.c **** 
 319              		.loc 1 342 23 view .LVU96
 320 009c 0CFB03F3 		mul	r3, ip, r3
 342:Core/Src/system_stm32h7xx.c **** 
 321              		.loc 1 342 12 view .LVU97
 322 00a0 07EE903A 		vmov	s15, r3	@ int
ARM GAS  /tmp/ccQoW9Zn.s 			page 14


 323 00a4 F8EE677A 		vcvt.f32.u32	s15, s15
 324              	.LVL8:
 344:Core/Src/system_stm32h7xx.c ****     {
 325              		.loc 1 344 5 is_stmt 1 view .LVU98
 344:Core/Src/system_stm32h7xx.c ****     {
 326              		.loc 1 344 8 is_stmt 0 view .LVU99
 327 00a8 14F47C7F 		tst	r4, #1008
 328 00ac D3D0     		beq	.L11
 346:Core/Src/system_stm32h7xx.c ****       {
 329              		.loc 1 346 7 is_stmt 1 view .LVU100
 330 00ae 0128     		cmp	r0, #1
 331 00b0 59D0     		beq	.L14
 332 00b2 0228     		cmp	r0, #2
 333 00b4 74D0     		beq	.L15
 334 00b6 18B3     		cbz	r0, .L20
 364:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 335              		.loc 1 364 11 view .LVU101
 364:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 336              		.loc 1 364 41 is_stmt 0 view .LVU102
 337 00b8 4C48     		ldr	r0, .L21
 338              	.LVL9:
 364:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 339              		.loc 1 364 41 view .LVU103
 340 00ba 0168     		ldr	r1, [r0]
 364:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 341              		.loc 1 364 62 view .LVU104
 342 00bc C1F3C101 		ubfx	r1, r1, #3, #2
 364:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 343              		.loc 1 364 20 view .LVU105
 344 00c0 4C4B     		ldr	r3, .L21+8
 345 00c2 CB40     		lsrs	r3, r3, r1
 346              	.LVL10:
 365:Core/Src/system_stm32h7xx.c ****         break;
 347              		.loc 1 365 11 is_stmt 1 view .LVU106
 365:Core/Src/system_stm32h7xx.c ****         break;
 348              		.loc 1 365 21 is_stmt 0 view .LVU107
 349 00c4 07EE103A 		vmov	s14, r3	@ int
 350 00c8 F8EE476A 		vcvt.f32.u32	s13, s14
 365:Core/Src/system_stm32h7xx.c ****         break;
 351              		.loc 1 365 41 view .LVU108
 352 00cc 07EE102A 		vmov	s14, r2	@ int
 353 00d0 B8EE476A 		vcvt.f32.u32	s12, s14
 365:Core/Src/system_stm32h7xx.c ****         break;
 354              		.loc 1 365 39 view .LVU109
 355 00d4 86EE867A 		vdiv.f32	s14, s13, s12
 365:Core/Src/system_stm32h7xx.c ****         break;
 356              		.loc 1 365 82 view .LVU110
 357 00d8 036B     		ldr	r3, [r0, #48]
 358              	.LVL11:
 365:Core/Src/system_stm32h7xx.c ****         break;
 359              		.loc 1 365 68 view .LVU111
 360 00da C3F30803 		ubfx	r3, r3, #0, #9
 365:Core/Src/system_stm32h7xx.c ****         break;
 361              		.loc 1 365 59 view .LVU112
 362 00de 06EE903A 		vmov	s13, r3	@ int
 363 00e2 F8EE666A 		vcvt.f32.u32	s13, s13
 365:Core/Src/system_stm32h7xx.c ****         break;
ARM GAS  /tmp/ccQoW9Zn.s 			page 15


 364              		.loc 1 365 121 view .LVU113
 365 00e6 9FED476A 		vldr.32	s12, .L21+24
 366 00ea 67EE867A 		vmul.f32	s15, s15, s12
 367              	.LVL12:
 365:Core/Src/system_stm32h7xx.c ****         break;
 368              		.loc 1 365 112 view .LVU114
 369 00ee 76EEA77A 		vadd.f32	s15, s13, s15
 365:Core/Src/system_stm32h7xx.c ****         break;
 370              		.loc 1 365 139 view .LVU115
 371 00f2 F7EE006A 		vmov.f32	s13, #1.0e+0
 372 00f6 77EEA67A 		vadd.f32	s15, s15, s13
 365:Core/Src/system_stm32h7xx.c ****         break;
 373              		.loc 1 365 18 view .LVU116
 374 00fa 27EE277A 		vmul.f32	s14, s14, s15
 375              	.LVL13:
 366:Core/Src/system_stm32h7xx.c ****       }
 376              		.loc 1 366 9 is_stmt 1 view .LVU117
 377 00fe 22E0     		b	.L17
 378              	.LVL14:
 379              	.L20:
 350:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 380              		.loc 1 350 9 view .LVU118
 350:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 381              		.loc 1 350 39 is_stmt 0 view .LVU119
 382 0100 0846     		mov	r0, r1
 383              	.LVL15:
 350:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 384              		.loc 1 350 39 view .LVU120
 385 0102 0968     		ldr	r1, [r1]
 350:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 386              		.loc 1 350 60 view .LVU121
 387 0104 C1F3C101 		ubfx	r1, r1, #3, #2
 350:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 388              		.loc 1 350 18 view .LVU122
 389 0108 3A4B     		ldr	r3, .L21+8
 390 010a CB40     		lsrs	r3, r3, r1
 391              	.LVL16:
 351:Core/Src/system_stm32h7xx.c **** 
 392              		.loc 1 351 9 is_stmt 1 view .LVU123
 351:Core/Src/system_stm32h7xx.c **** 
 393              		.loc 1 351 20 is_stmt 0 view .LVU124
 394 010c 07EE103A 		vmov	s14, r3	@ int
 395 0110 F8EE476A 		vcvt.f32.u32	s13, s14
 351:Core/Src/system_stm32h7xx.c **** 
 396              		.loc 1 351 40 view .LVU125
 397 0114 07EE102A 		vmov	s14, r2	@ int
 398 0118 B8EE476A 		vcvt.f32.u32	s12, s14
 351:Core/Src/system_stm32h7xx.c **** 
 399              		.loc 1 351 38 view .LVU126
 400 011c 86EE867A 		vdiv.f32	s14, s13, s12
 351:Core/Src/system_stm32h7xx.c **** 
 401              		.loc 1 351 81 view .LVU127
 402 0120 036B     		ldr	r3, [r0, #48]
 403              	.LVL17:
 351:Core/Src/system_stm32h7xx.c **** 
 404              		.loc 1 351 67 view .LVU128
 405 0122 C3F30803 		ubfx	r3, r3, #0, #9
ARM GAS  /tmp/ccQoW9Zn.s 			page 16


 351:Core/Src/system_stm32h7xx.c **** 
 406              		.loc 1 351 58 view .LVU129
 407 0126 06EE903A 		vmov	s13, r3	@ int
 408 012a F8EE666A 		vcvt.f32.u32	s13, s13
 351:Core/Src/system_stm32h7xx.c **** 
 409              		.loc 1 351 120 view .LVU130
 410 012e 9FED356A 		vldr.32	s12, .L21+24
 411 0132 67EE867A 		vmul.f32	s15, s15, s12
 412              	.LVL18:
 351:Core/Src/system_stm32h7xx.c **** 
 413              		.loc 1 351 111 view .LVU131
 414 0136 76EEA77A 		vadd.f32	s15, s13, s15
 351:Core/Src/system_stm32h7xx.c **** 
 415              		.loc 1 351 138 view .LVU132
 416 013a F7EE006A 		vmov.f32	s13, #1.0e+0
 417 013e 77EEA67A 		vadd.f32	s15, s15, s13
 351:Core/Src/system_stm32h7xx.c **** 
 418              		.loc 1 351 16 view .LVU133
 419 0142 27EE277A 		vmul.f32	s14, s14, s15
 420              	.LVL19:
 353:Core/Src/system_stm32h7xx.c **** 
 421              		.loc 1 353 9 is_stmt 1 view .LVU134
 422              	.L17:
 368:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 423              		.loc 1 368 7 view .LVU135
 368:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 424              		.loc 1 368 20 is_stmt 0 view .LVU136
 425 0146 294B     		ldr	r3, .L21
 426 0148 1B6B     		ldr	r3, [r3, #48]
 368:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 427              		.loc 1 368 50 view .LVU137
 428 014a C3F34623 		ubfx	r3, r3, #9, #7
 368:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 429              		.loc 1 368 12 view .LVU138
 430 014e 0133     		adds	r3, r3, #1
 431              	.LVL20:
 369:Core/Src/system_stm32h7xx.c ****     }
 432              		.loc 1 369 7 is_stmt 1 view .LVU139
 369:Core/Src/system_stm32h7xx.c ****     }
 433              		.loc 1 369 57 is_stmt 0 view .LVU140
 434 0150 07EE903A 		vmov	s15, r3	@ int
 435 0154 F8EE677A 		vcvt.f32.u32	s15, s15
 369:Core/Src/system_stm32h7xx.c ****     }
 436              		.loc 1 369 40 view .LVU141
 437 0158 C7EE276A 		vdiv.f32	s13, s14, s15
 369:Core/Src/system_stm32h7xx.c ****     }
 438              		.loc 1 369 27 view .LVU142
 439 015c FCEEE67A 		vcvt.u32.f32	s15, s13
 440 0160 17EE902A 		vmov	r2, s15	@ int
 441              	.LVL21:
 369:Core/Src/system_stm32h7xx.c ****     }
 442              		.loc 1 369 27 view .LVU143
 443 0164 77E7     		b	.L11
 444              	.LVL22:
 445              	.L14:
 356:Core/Src/system_stm32h7xx.c ****         break;
 446              		.loc 1 356 11 is_stmt 1 view .LVU144
ARM GAS  /tmp/ccQoW9Zn.s 			page 17


 356:Core/Src/system_stm32h7xx.c ****         break;
 447              		.loc 1 356 42 is_stmt 0 view .LVU145
 448 0166 07EE102A 		vmov	s14, r2	@ int
 449 016a F8EE476A 		vcvt.f32.u32	s13, s14
 356:Core/Src/system_stm32h7xx.c ****         break;
 450              		.loc 1 356 40 view .LVU146
 451 016e 9FED266A 		vldr.32	s12, .L21+28
 452 0172 86EE267A 		vdiv.f32	s14, s12, s13
 356:Core/Src/system_stm32h7xx.c ****         break;
 453              		.loc 1 356 83 view .LVU147
 454 0176 1D4B     		ldr	r3, .L21
 455 0178 1B6B     		ldr	r3, [r3, #48]
 356:Core/Src/system_stm32h7xx.c ****         break;
 456              		.loc 1 356 69 view .LVU148
 457 017a C3F30803 		ubfx	r3, r3, #0, #9
 356:Core/Src/system_stm32h7xx.c ****         break;
 458              		.loc 1 356 60 view .LVU149
 459 017e 06EE903A 		vmov	s13, r3	@ int
 460 0182 F8EE666A 		vcvt.f32.u32	s13, s13
 356:Core/Src/system_stm32h7xx.c ****         break;
 461              		.loc 1 356 122 view .LVU150
 462 0186 9FED1F6A 		vldr.32	s12, .L21+24
 463 018a 67EE867A 		vmul.f32	s15, s15, s12
 464              	.LVL23:
 356:Core/Src/system_stm32h7xx.c ****         break;
 465              		.loc 1 356 113 view .LVU151
 466 018e 76EEA77A 		vadd.f32	s15, s13, s15
 356:Core/Src/system_stm32h7xx.c ****         break;
 467              		.loc 1 356 140 view .LVU152
 468 0192 F7EE006A 		vmov.f32	s13, #1.0e+0
 469 0196 77EEA67A 		vadd.f32	s15, s15, s13
 356:Core/Src/system_stm32h7xx.c ****         break;
 470              		.loc 1 356 18 view .LVU153
 471 019a 27EE277A 		vmul.f32	s14, s14, s15
 472              	.LVL24:
 357:Core/Src/system_stm32h7xx.c **** 
 473              		.loc 1 357 9 is_stmt 1 view .LVU154
 474 019e D2E7     		b	.L17
 475              	.LVL25:
 476              	.L15:
 360:Core/Src/system_stm32h7xx.c ****         break;
 477              		.loc 1 360 11 view .LVU155
 360:Core/Src/system_stm32h7xx.c ****         break;
 478              		.loc 1 360 42 is_stmt 0 view .LVU156
 479 01a0 07EE102A 		vmov	s14, r2	@ int
 480 01a4 F8EE476A 		vcvt.f32.u32	s13, s14
 360:Core/Src/system_stm32h7xx.c ****         break;
 481              		.loc 1 360 40 view .LVU157
 482 01a8 9FED186A 		vldr.32	s12, .L21+32
 483 01ac 86EE267A 		vdiv.f32	s14, s12, s13
 360:Core/Src/system_stm32h7xx.c ****         break;
 484              		.loc 1 360 83 view .LVU158
 485 01b0 0E4B     		ldr	r3, .L21
 486 01b2 1B6B     		ldr	r3, [r3, #48]
 360:Core/Src/system_stm32h7xx.c ****         break;
 487              		.loc 1 360 69 view .LVU159
 488 01b4 C3F30803 		ubfx	r3, r3, #0, #9
ARM GAS  /tmp/ccQoW9Zn.s 			page 18


 360:Core/Src/system_stm32h7xx.c ****         break;
 489              		.loc 1 360 60 view .LVU160
 490 01b8 06EE903A 		vmov	s13, r3	@ int
 491 01bc F8EE666A 		vcvt.f32.u32	s13, s13
 360:Core/Src/system_stm32h7xx.c ****         break;
 492              		.loc 1 360 122 view .LVU161
 493 01c0 9FED106A 		vldr.32	s12, .L21+24
 494 01c4 67EE867A 		vmul.f32	s15, s15, s12
 495              	.LVL26:
 360:Core/Src/system_stm32h7xx.c ****         break;
 496              		.loc 1 360 113 view .LVU162
 497 01c8 76EEA77A 		vadd.f32	s15, s13, s15
 360:Core/Src/system_stm32h7xx.c ****         break;
 498              		.loc 1 360 140 view .LVU163
 499 01cc F7EE006A 		vmov.f32	s13, #1.0e+0
 500 01d0 77EEA67A 		vadd.f32	s15, s15, s13
 360:Core/Src/system_stm32h7xx.c ****         break;
 501              		.loc 1 360 18 view .LVU164
 502 01d4 27EE277A 		vmul.f32	s14, s14, s15
 503              	.LVL27:
 361:Core/Src/system_stm32h7xx.c **** 
 504              		.loc 1 361 9 is_stmt 1 view .LVU165
 505 01d8 B5E7     		b	.L17
 506              	.LVL28:
 507              	.L8:
 378:Core/Src/system_stm32h7xx.c ****     break;
 508              		.loc 1 378 5 view .LVU166
 378:Core/Src/system_stm32h7xx.c ****     break;
 509              		.loc 1 378 57 is_stmt 0 view .LVU167
 510 01da 044B     		ldr	r3, .L21
 511 01dc 1B68     		ldr	r3, [r3]
 378:Core/Src/system_stm32h7xx.c ****     break;
 512              		.loc 1 378 78 view .LVU168
 513 01de C3F3C103 		ubfx	r3, r3, #3, #2
 378:Core/Src/system_stm32h7xx.c ****     break;
 514              		.loc 1 378 25 view .LVU169
 515 01e2 044A     		ldr	r2, .L21+8
 516 01e4 DA40     		lsrs	r2, r2, r3
 517              	.LVL29:
 379:Core/Src/system_stm32h7xx.c ****   }
 518              		.loc 1 379 5 is_stmt 1 view .LVU170
 519 01e6 36E7     		b	.L11
 520              	.LVL30:
 521              	.L18:
 331:Core/Src/system_stm32h7xx.c ****     break;
 522              		.loc 1 331 25 is_stmt 0 view .LVU171
 523 01e8 094A     		ldr	r2, .L21+36
 524 01ea 34E7     		b	.L11
 525              	.L22:
 526              		.align	2
 527              	.L21:
 528 01ec 00440258 		.word	1476543488
 529 01f0 00093D00 		.word	4000000
 530 01f4 0090D003 		.word	64000000
 531 01f8 00000000 		.word	.LANCHOR0
 532 01fc 00000000 		.word	.LANCHOR1
 533 0200 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccQoW9Zn.s 			page 19


 534 0204 00000039 		.word	956301312
 535 0208 0024744A 		.word	1249125376
 536 020c 0024F44A 		.word	1257513984
 537 0210 00127A00 		.word	8000000
 538              		.cfi_endproc
 539              	.LFE145:
 541              		.global	D1CorePrescTable
 542              		.global	SystemD2Clock
 543              		.global	SystemCoreClock
 544              		.section	.data.SystemCoreClock,"aw"
 545              		.align	2
 546              		.set	.LANCHOR2,. + 0
 549              	SystemCoreClock:
 550 0000 0090D003 		.word	64000000
 551              		.section	.data.SystemD2Clock,"aw"
 552              		.align	2
 553              		.set	.LANCHOR1,. + 0
 556              	SystemD2Clock:
 557 0000 0090D003 		.word	64000000
 558              		.section	.rodata.D1CorePrescTable,"a"
 559              		.align	2
 560              		.set	.LANCHOR0,. + 0
 563              	D1CorePrescTable:
 564 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 564      01020304 
 564      01020304 
 564      06
 565 000d 070809   		.ascii	"\007\010\011"
 566              		.text
 567              	.Letext0:
 568              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 569              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 570              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 571              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 572              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 573              		.file 7 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccQoW9Zn.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32h7xx.c
     /tmp/ccQoW9Zn.s:17     .text.SystemInit:0000000000000000 $t
     /tmp/ccQoW9Zn.s:25     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccQoW9Zn.s:161    .text.SystemInit:00000000000000a8 $d
     /tmp/ccQoW9Zn.s:176    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccQoW9Zn.s:183    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccQoW9Zn.s:208    .text.SystemCoreClockUpdate:0000000000000014 $d
     /tmp/ccQoW9Zn.s:233    .text.SystemCoreClockUpdate:0000000000000046 $t
     /tmp/ccQoW9Zn.s:528    .text.SystemCoreClockUpdate:00000000000001ec $d
     /tmp/ccQoW9Zn.s:563    .rodata.D1CorePrescTable:0000000000000000 D1CorePrescTable
     /tmp/ccQoW9Zn.s:556    .data.SystemD2Clock:0000000000000000 SystemD2Clock
     /tmp/ccQoW9Zn.s:549    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccQoW9Zn.s:545    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccQoW9Zn.s:552    .data.SystemD2Clock:0000000000000000 $d
     /tmp/ccQoW9Zn.s:559    .rodata.D1CorePrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
