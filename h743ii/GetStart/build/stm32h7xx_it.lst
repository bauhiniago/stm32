ARM GAS  /tmp/ccjvwdzY.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_it.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.NMI_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	NMI_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	NMI_Handler:
  26              	.LFB144:
  27              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32h7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32h7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32h7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32h7xx_it.c ****   *
  17:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32h7xx_it.c ****   */
  19:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32h7xx_it.c **** 
  21:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32h7xx_it.c **** #include "main.h"
  23:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  24:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32h7xx_it.c **** 
  28:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32h7xx_it.c **** 
  31:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccjvwdzY.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** 
  33:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32h7xx_it.c **** 
  36:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32h7xx_it.c **** 
  38:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32h7xx_it.c **** 
  41:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32h7xx_it.c **** 
  43:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32h7xx_it.c **** 
  46:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32h7xx_it.c **** 
  48:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32h7xx_it.c **** 
  51:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32h7xx_it.c **** 
  53:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32h7xx_it.c **** 
  56:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32h7xx_it.c **** 
  58:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32h7xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  60:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart1;
  61:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32h7xx_it.c **** 
  63:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32h7xx_it.c **** 
  65:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32h7xx_it.c **** /**
  69:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32h7xx_it.c ****   */
  71:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 72 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  73:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32h7xx_it.c **** 
  75:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32h7xx_it.c ****   while (1)
  35              		.loc 1 77 3 discriminator 1 view .LVU1
  78:Core/Src/stm32h7xx_it.c ****   {
  79:Core/Src/stm32h7xx_it.c ****   }
  36              		.loc 1 79 3 discriminator 1 view .LVU2
ARM GAS  /tmp/ccjvwdzY.s 			page 3


  77:Core/Src/stm32h7xx_it.c ****   {
  37              		.loc 1 77 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE144:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	HardFault_Handler:
  51              	.LFB145:
  80:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32h7xx_it.c **** }
  82:Core/Src/stm32h7xx_it.c **** 
  83:Core/Src/stm32h7xx_it.c **** /**
  84:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32h7xx_it.c ****   */
  86:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32h7xx_it.c **** {
  52              		.loc 1 87 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  88:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32h7xx_it.c **** 
  90:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32h7xx_it.c ****   while (1)
  59              		.loc 1 91 3 discriminator 1 view .LVU5
  92:Core/Src/stm32h7xx_it.c ****   {
  93:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32h7xx_it.c ****   }
  60              		.loc 1 95 3 discriminator 1 view .LVU6
  91:Core/Src/stm32h7xx_it.c ****   {
  61              		.loc 1 91 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE145:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv5-d16
  74              	MemManage_Handler:
  75              	.LFB146:
  96:Core/Src/stm32h7xx_it.c **** }
  97:Core/Src/stm32h7xx_it.c **** 
  98:Core/Src/stm32h7xx_it.c **** /**
  99:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  /tmp/ccjvwdzY.s 			page 4


 100:Core/Src/stm32h7xx_it.c ****   */
 101:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32h7xx_it.c **** {
  76              		.loc 1 102 1 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
 103:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32h7xx_it.c **** 
 105:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32h7xx_it.c ****   while (1)
  83              		.loc 1 106 3 discriminator 1 view .LVU9
 107:Core/Src/stm32h7xx_it.c ****   {
 108:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32h7xx_it.c ****   }
  84              		.loc 1 110 3 discriminator 1 view .LVU10
 106:Core/Src/stm32h7xx_it.c ****   {
  85              		.loc 1 106 9 discriminator 1 view .LVU11
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE146:
  90              		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.global	BusFault_Handler
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv5-d16
  98              	BusFault_Handler:
  99              	.LFB147:
 111:Core/Src/stm32h7xx_it.c **** }
 112:Core/Src/stm32h7xx_it.c **** 
 113:Core/Src/stm32h7xx_it.c **** /**
 114:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Core/Src/stm32h7xx_it.c ****   */
 116:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32h7xx_it.c **** {
 100              		.loc 1 117 1 view -0
 101              		.cfi_startproc
 102              		@ Volatile: function does not return.
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.L8:
 118:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32h7xx_it.c **** 
 120:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32h7xx_it.c ****   while (1)
 107              		.loc 1 121 3 discriminator 1 view .LVU13
 122:Core/Src/stm32h7xx_it.c ****   {
 123:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32h7xx_it.c ****   }
ARM GAS  /tmp/ccjvwdzY.s 			page 5


 108              		.loc 1 125 3 discriminator 1 view .LVU14
 121:Core/Src/stm32h7xx_it.c ****   {
 109              		.loc 1 121 9 discriminator 1 view .LVU15
 110 0000 FEE7     		b	.L8
 111              		.cfi_endproc
 112              	.LFE147:
 114              		.section	.text.UsageFault_Handler,"ax",%progbits
 115              		.align	1
 116              		.global	UsageFault_Handler
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv5-d16
 122              	UsageFault_Handler:
 123              	.LFB148:
 126:Core/Src/stm32h7xx_it.c **** }
 127:Core/Src/stm32h7xx_it.c **** 
 128:Core/Src/stm32h7xx_it.c **** /**
 129:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32h7xx_it.c ****   */
 131:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32h7xx_it.c **** {
 124              		.loc 1 132 1 view -0
 125              		.cfi_startproc
 126              		@ Volatile: function does not return.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.L10:
 133:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32h7xx_it.c **** 
 135:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32h7xx_it.c ****   while (1)
 131              		.loc 1 136 3 discriminator 1 view .LVU17
 137:Core/Src/stm32h7xx_it.c ****   {
 138:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32h7xx_it.c ****   }
 132              		.loc 1 140 3 discriminator 1 view .LVU18
 136:Core/Src/stm32h7xx_it.c ****   {
 133              		.loc 1 136 9 discriminator 1 view .LVU19
 134 0000 FEE7     		b	.L10
 135              		.cfi_endproc
 136              	.LFE148:
 138              		.section	.text.SVC_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	SVC_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv5-d16
 146              	SVC_Handler:
 147              	.LFB149:
 141:Core/Src/stm32h7xx_it.c **** }
 142:Core/Src/stm32h7xx_it.c **** 
 143:Core/Src/stm32h7xx_it.c **** /**
 144:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccjvwdzY.s 			page 6


 145:Core/Src/stm32h7xx_it.c ****   */
 146:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 147:Core/Src/stm32h7xx_it.c **** {
 148              		.loc 1 147 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 148:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:Core/Src/stm32h7xx_it.c **** 
 150:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 152:Core/Src/stm32h7xx_it.c **** 
 153:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:Core/Src/stm32h7xx_it.c **** }
 153              		.loc 1 154 1 view .LVU21
 154 0000 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE149:
 158              		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	DebugMon_Handler
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-d16
 166              	DebugMon_Handler:
 167              	.LFB150:
 155:Core/Src/stm32h7xx_it.c **** 
 156:Core/Src/stm32h7xx_it.c **** /**
 157:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 158:Core/Src/stm32h7xx_it.c ****   */
 159:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 160:Core/Src/stm32h7xx_it.c **** {
 168              		.loc 1 160 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 161:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Core/Src/stm32h7xx_it.c **** 
 163:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Core/Src/stm32h7xx_it.c **** 
 166:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Core/Src/stm32h7xx_it.c **** }
 173              		.loc 1 167 1 view .LVU23
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE150:
 178              		.section	.text.PendSV_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	PendSV_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-d16
ARM GAS  /tmp/ccjvwdzY.s 			page 7


 186              	PendSV_Handler:
 187              	.LFB151:
 168:Core/Src/stm32h7xx_it.c **** 
 169:Core/Src/stm32h7xx_it.c **** /**
 170:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Core/Src/stm32h7xx_it.c ****   */
 172:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 173:Core/Src/stm32h7xx_it.c **** {
 188              		.loc 1 173 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 174:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:Core/Src/stm32h7xx_it.c **** 
 176:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Core/Src/stm32h7xx_it.c **** 
 179:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Core/Src/stm32h7xx_it.c **** }
 193              		.loc 1 180 1 view .LVU25
 194 0000 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE151:
 198              		.section	.text.SysTick_Handler,"ax",%progbits
 199              		.align	1
 200              		.global	SysTick_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	SysTick_Handler:
 207              	.LFB152:
 181:Core/Src/stm32h7xx_it.c **** 
 182:Core/Src/stm32h7xx_it.c **** /**
 183:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 184:Core/Src/stm32h7xx_it.c ****   */
 185:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 186:Core/Src/stm32h7xx_it.c **** {
 208              		.loc 1 186 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI0:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 187:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Core/Src/stm32h7xx_it.c **** 
 189:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 217              		.loc 1 190 3 view .LVU27
 218 0002 FFF7FEFF 		bl	HAL_IncTick
 219              	.LVL0:
 191:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /tmp/ccjvwdzY.s 			page 8


 193:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Core/Src/stm32h7xx_it.c **** }
 220              		.loc 1 194 1 is_stmt 0 view .LVU28
 221 0006 08BD     		pop	{r3, pc}
 222              		.cfi_endproc
 223              	.LFE152:
 225              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 226              		.align	1
 227              		.global	DMA1_Stream0_IRQHandler
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-d16
 233              	DMA1_Stream0_IRQHandler:
 234              	.LFB153:
 195:Core/Src/stm32h7xx_it.c **** 
 196:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 197:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 198:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 201:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 202:Core/Src/stm32h7xx_it.c **** 
 203:Core/Src/stm32h7xx_it.c **** /**
 204:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA1 stream0 global interrupt.
 205:Core/Src/stm32h7xx_it.c ****   */
 206:Core/Src/stm32h7xx_it.c **** void DMA1_Stream0_IRQHandler(void)
 207:Core/Src/stm32h7xx_it.c **** {
 235              		.loc 1 207 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI1:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
 208:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */
 209:Core/Src/stm32h7xx_it.c **** 
 210:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 0 */
 211:Core/Src/stm32h7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 244              		.loc 1 211 3 view .LVU30
 245 0002 0248     		ldr	r0, .L18
 246 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 247              	.LVL1:
 212:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */
 213:Core/Src/stm32h7xx_it.c **** 
 214:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA1_Stream0_IRQn 1 */
 215:Core/Src/stm32h7xx_it.c **** }
 248              		.loc 1 215 1 is_stmt 0 view .LVU31
 249 0008 08BD     		pop	{r3, pc}
 250              	.L19:
 251 000a 00BF     		.align	2
 252              	.L18:
 253 000c 00000000 		.word	hdma_usart1_tx
 254              		.cfi_endproc
 255              	.LFE153:
ARM GAS  /tmp/ccjvwdzY.s 			page 9


 257              		.section	.text.USART1_IRQHandler,"ax",%progbits
 258              		.align	1
 259              		.global	USART1_IRQHandler
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv5-d16
 265              	USART1_IRQHandler:
 266              	.LFB154:
 216:Core/Src/stm32h7xx_it.c **** 
 217:Core/Src/stm32h7xx_it.c **** /**
 218:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART1 global interrupt.
 219:Core/Src/stm32h7xx_it.c ****   */
 220:Core/Src/stm32h7xx_it.c **** void USART1_IRQHandler(void)
 221:Core/Src/stm32h7xx_it.c **** {
 267              		.loc 1 221 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              	.LCFI2:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
 222:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 223:Core/Src/stm32h7xx_it.c **** 
 224:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 225:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 276              		.loc 1 225 3 view .LVU33
 277 0002 0248     		ldr	r0, .L22
 278 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 279              	.LVL2:
 226:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 227:Core/Src/stm32h7xx_it.c **** 
 228:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 229:Core/Src/stm32h7xx_it.c **** }
 280              		.loc 1 229 1 is_stmt 0 view .LVU34
 281 0008 08BD     		pop	{r3, pc}
 282              	.L23:
 283 000a 00BF     		.align	2
 284              	.L22:
 285 000c 00000000 		.word	huart1
 286              		.cfi_endproc
 287              	.LFE154:
 289              		.section	.text.DMAMUX1_OVR_IRQHandler,"ax",%progbits
 290              		.align	1
 291              		.global	DMAMUX1_OVR_IRQHandler
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv5-d16
 297              	DMAMUX1_OVR_IRQHandler:
 298              	.LFB155:
 230:Core/Src/stm32h7xx_it.c **** 
 231:Core/Src/stm32h7xx_it.c **** /**
 232:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMAMUX1 overrun interrupt.
 233:Core/Src/stm32h7xx_it.c ****   */
ARM GAS  /tmp/ccjvwdzY.s 			page 10


 234:Core/Src/stm32h7xx_it.c **** void DMAMUX1_OVR_IRQHandler(void)
 235:Core/Src/stm32h7xx_it.c **** {
 299              		.loc 1 235 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 236:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMAMUX1_OVR_IRQn 0 */
 237:Core/Src/stm32h7xx_it.c **** 
 238:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMAMUX1_OVR_IRQn 0 */
 239:Core/Src/stm32h7xx_it.c **** 
 240:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMAMUX1_OVR_IRQn 1 */
 241:Core/Src/stm32h7xx_it.c **** 
 242:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMAMUX1_OVR_IRQn 1 */
 243:Core/Src/stm32h7xx_it.c **** }
 304              		.loc 1 243 1 view .LVU36
 305 0000 7047     		bx	lr
 306              		.cfi_endproc
 307              	.LFE155:
 309              		.text
 310              	.Letext0:
 311              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 312              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 313              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 314              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 315              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 316              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 317              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccjvwdzY.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
     /tmp/ccjvwdzY.s:17     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccjvwdzY.s:43     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccjvwdzY.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:74     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccjvwdzY.s:91     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:98     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccjvwdzY.s:115    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:122    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccjvwdzY.s:139    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:146    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccjvwdzY.s:159    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:166    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccjvwdzY.s:179    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:186    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccjvwdzY.s:199    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccjvwdzY.s:206    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccjvwdzY.s:226    .text.DMA1_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccjvwdzY.s:233    .text.DMA1_Stream0_IRQHandler:0000000000000000 DMA1_Stream0_IRQHandler
     /tmp/ccjvwdzY.s:253    .text.DMA1_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccjvwdzY.s:258    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccjvwdzY.s:265    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccjvwdzY.s:285    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccjvwdzY.s:290    .text.DMAMUX1_OVR_IRQHandler:0000000000000000 $t
     /tmp/ccjvwdzY.s:297    .text.DMAMUX1_OVR_IRQHandler:0000000000000000 DMAMUX1_OVR_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart1_tx
HAL_UART_IRQHandler
huart1
