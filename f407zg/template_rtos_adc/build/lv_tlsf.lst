ARM GAS  /tmp/ccUBk765.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_tlsf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.block_size,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	block_size:
  26              	.LVL0:
  27              	.LFB3:
  28              		.file 1 "Middlewares/lvgl/src/misc/lv_tlsf.c"
   1:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "../lv_conf_internal.h"
   2:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if LV_MEM_CUSTOM == 0
   3:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
   4:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <limits.h>
   5:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <stddef.h>
   6:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_tlsf.h"
   7:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_mem.h"
   8:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_log.h"
   9:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_assert.h"
  10:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define printf LV_LOG_ERROR
  11:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  12:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_MAX_POOL_SIZE LV_MEM_SIZE
  13:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  14:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined(_DEBUG)
  15:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _DEBUG 0
  16:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  17:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  18:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined(__cplusplus)
  19:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl inline
  20:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  21:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl static
  22:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  23:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  24:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  25:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Architecture-specific bit manipulation routines.
  26:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  27:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF achieves O(1) cost for malloc and free operations by limiting
  28:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the search for a free block to a free list of guaranteed size
  29:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** adequate to fulfill the request, combined with efficient free list
  30:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** queries using bitmasks and architecture-specific bit-manipulation
ARM GAS  /tmp/ccUBk765.s 			page 2


  31:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** routines.
  32:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  33:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Most modern processors provide instructions to count leading zeroes
  34:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** in a word, find the lowest and highest set bit, etc. These
  35:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** specific implementations will be used when available, falling back
  36:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** to a reasonably efficient generic implementation.
  37:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  38:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** NOTE: TLSF spec relies on ffs/fls returning value 0..31.
  39:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** ffs/fls return 1-32 by default, returning 0 for error.
  40:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  41:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  42:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  43:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Detect whether or not we are building for a 32- or 64-bit (LP/LLP)
  44:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** architecture. There is no reliable portable method at compile-time.
  45:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  46:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) \
  47:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	|| defined (_WIN64) || defined (__LP64__) || defined (__LLP64__)
  48:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_64BIT
  49:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  50:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  51:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  52:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns one plus the index of the most significant 1-bit of n,
  53:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** or if n is zero, returns zero.
  54:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  55:Middlewares/lvgl/src/misc/lv_tlsf.c **** #ifdef TLSF_64BIT
  56:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) ((n) & 0xffffffff00000000ull ? 32 + TLSF_FLS32((size_t)(n) >> 32) : TLSF_FLS32(
  57:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  58:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) TLSF_FLS32(n)
  59:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  60:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  61:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS32(n) ((n) & 0xffff0000 ? 16 + TLSF_FLS16((n) >> 16) : TLSF_FLS16(n))
  62:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS16(n) ((n) & 0xff00     ?  8 + TLSF_FLS8 ((n) >>  8) : TLSF_FLS8 (n))
  63:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS8(n)  ((n) & 0xf0       ?  4 + TLSF_FLS4 ((n) >>  4) : TLSF_FLS4 (n))
  64:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS4(n)  ((n) & 0xc        ?  2 + TLSF_FLS2 ((n) >>  2) : TLSF_FLS2 (n))
  65:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS2(n)  ((n) & 0x2        ?  1 + TLSF_FLS1 ((n) >>  1) : TLSF_FLS1 (n))
  66:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS1(n)  ((n) & 0x1        ?  1 : 0)
  67:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  68:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  69:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns round up value of log2(n).
  70:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Note: it is used at compile time.
  71:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  72:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_LOG2_CEIL(n) ((n) & (n - 1) ? TLSF_FLS(n) : TLSF_FLS(n) - 1)
  73:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  74:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  75:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** gcc 3.4 and above have builtin support, specialized for architecture.
  76:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Some compilers masquerade as gcc; patchlevel test filters them out.
  77:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  78:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) \
  79:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	&& defined (__GNUC_PATCHLEVEL__)
  80:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  81:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__SNC__)
  82:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SNC for Playstation 3. */
  83:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  84:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  85:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  86:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
  87:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __builtin_clz(reverse);
ARM GAS  /tmp/ccUBk765.s 			page 3


  88:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
  89:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  90:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  91:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  92:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  93:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  97:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  98:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  99:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 100:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 105:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 106:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && (_MSC_VER >= 1400) && (defined (_M_IX86) || defined (_M_X64))
 107:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on x86/X64 architectures. */
 108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 109:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <intrin.h>
 110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 111:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanReverse)
 112:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanForward)
 113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 114:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 115:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 117:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanReverse(&index, word) ? index : -1;
 118:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 119:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 120:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 121:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanForward(&index, word) ? index : -1;
 124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 126:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && defined (_M_PPC)
 127:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on PowerPC architectures. */
 128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 129:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppcintrinsics.h>
 130:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 131:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 132:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 133:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(word);
 134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 137:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(reverse);
 141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 142:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 143:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 144:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ARMCC_VERSION)
ARM GAS  /tmp/ccUBk765.s 			page 4


 145:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* RealView Compilation Tools for ARM */
 146:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 147:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 148:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __clz(reverse);
 151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 152:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 154:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 155:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __clz(word) : 0;
 157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 158:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 160:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ghs__)
 161:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Green Hills support for PowerPC */
 162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 163:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppc_ghs.h>
 164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 165:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 166:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __CLZ32(reverse);
 169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 170:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 172:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 173:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __CLZ32(word) : 0;
 175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 176:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 178:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 179:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Fall back to generic implementation. */
 180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 181:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Implement ffs in terms of fls. */
 182:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 183:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(reverse) - 1;
 186:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 188:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 189:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(word) - 1;
 191:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 193:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 195:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Possibly 64-bit version of tlsf_fls. */
 196:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 197:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls_sizet(size_t size)
 198:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int high = (int)(size >> 32);
 200:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int bits = 0;
 201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (high)
ARM GAS  /tmp/ccUBk765.s 			page 5


 202:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = 32 + tlsf_fls(high);
 204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = tlsf_fls((int)size & 0xffffffff);
 208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bits;
 211:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 212:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 213:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_fls_sizet tlsf_fls
 214:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 215:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 216:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_decl
 217:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 218:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Constants.
 220:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 221:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 222:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Public constants: may be modified. */
 223:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_public
 224:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 225:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* log2 of number of linear subdivisions of block sizes. Larger
 226:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** values require more memory in the control structure. Values of
 227:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** 4 or 5 are typical.
 228:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 229:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT_LOG2 = 5,
 230:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 231:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 232:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Private constants: do not modify. */
 233:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_private
 234:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 235:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 8 bytes. */
 237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 3,
 238:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 4 bytes. */
 240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 2,
 241:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),
 243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We support allocations of sizes up to (1 << FL_INDEX_MAX) bits.
 246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** However, because we linearly subdivide the second-level lists, and
 247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our minimum size granularity is 4 bytes, it doesn't make sense to
 248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** create first-level lists for sizes smaller than SL_INDEX_COUNT * 4,
 249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** or (1 << (SL_INDEX_COUNT_LOG2 + 2)) bytes, as there we will be
 250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trying to split size ranges into more slots than we have available.
 251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Instead, we calculate the minimum threshold size, and place all
 252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** blocks below that size into the 0th first-level list.
 253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 255:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_MAX_POOL_SIZE)
 256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),
 257:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (TLSF_64BIT)
 258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
ARM GAS  /tmp/ccUBk765.s 			page 6


 259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** TODO: We can increase this to support larger sizes, at the expense
 260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** of more overhead in the TLSF structure.
 261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 32,
 263:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 30,
 265:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),
 267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),
 268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),
 269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),
 271:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 273:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 274:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Cast and min/max macros.
 275:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 277:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_cast(t, exp)	((t) (exp))
 278:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_min(a, b)		((a) < (b) ? (a) : (b))
 279:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_max(a, b)		((a) > (b) ? (a) : (b))
 280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 281:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 282:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Set assert macro, if it has not been provided by the user.
 283:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 284:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert LV_ASSERT
 285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 286:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined (tlsf_assert)
 287:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert assert
 288:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 289:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 290:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 291:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Static assertion mechanism.
 292:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 293:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 294:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue2(x, y) x ## y
 295:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue(x, y) _tlsf_glue2(x, y)
 296:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_static_assert(exp) \
 297:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	typedef char _tlsf_glue(static_assert, __LINE__) [(exp) ? 1 : -1]
 298:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 299:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This code has been tested on 32- and 64-bit (LP/LLP) architectures. */
 300:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(int) * CHAR_BIT == 32);
 301:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT >= 32);
 302:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT <= 64);
 303:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 304:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SL_INDEX_COUNT must be <= number of bits in sl_bitmap's storage type. */
 305:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);
 306:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 307:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Ensure we've properly tuned our sizes. */
 308:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(ALIGN_SIZE == SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 309:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 310:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 311:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Data structures and associated constants.
 312:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 313:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 314:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 315:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Block header structure.
ARM GAS  /tmp/ccUBk765.s 			page 7


 316:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
 317:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** There are several implementation subtleties involved:
 318:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is only valid if the previous block is free.
 319:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is actually stored at the end of the
 320:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   previous block. It appears at the beginning of this structure only to
 321:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   simplify the implementation.
 322:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The next_free / prev_free fields are only valid if the block is free.
 323:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 324:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct block_header_t
 325:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 326:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Points to the previous physical block. */
 327:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_phys_block;
 328:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 329:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* The size of this block, excluding the block header. */
 330:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size;
 331:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 332:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Next and previous free blocks. */
 333:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* next_free;
 334:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_free;
 335:Middlewares/lvgl/src/misc/lv_tlsf.c **** } block_header_t;
 336:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 337:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 338:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Since block sizes are always at least a multiple of 4, the two least
 339:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** significant bits of the size field are used to store the block status:
 340:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 0: whether block is busy or free
 341:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 1: whether previous block is busy or free
 342:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 343:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_free_bit = 1 << 0;
 344:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_prev_free_bit = 1 << 1;
 345:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 346:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 347:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The size of the block header exposed to used blocks is the size field.
 348:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The prev_phys_block field is stored *inside* the previous free block.
 349:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 350:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_overhead = sizeof(size_t);
 351:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 352:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* User data starts directly after the size field in a used block. */
 353:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_start_offset =
 354:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	offsetof(block_header_t, size) + sizeof(size_t);
 355:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 356:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 357:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** A free block must be large enough to store its header minus the size of
 358:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the prev_phys_block field, and no larger than the number of addressable
 359:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** bits for FL_INDEX.
 360:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 361:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_min = 
 362:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sizeof(block_header_t) - sizeof(block_header_t*);
 363:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;
 364:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 365:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 366:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* The TLSF control structure. */
 367:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct control_t
 368:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 369:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Empty lists point at this block to indicate they are free. */
 370:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t block_null;
 371:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 372:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Bitmaps for free lists. */
ARM GAS  /tmp/ccUBk765.s 			page 8


 373:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int fl_bitmap;
 374:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_bitmap[FL_INDEX_COUNT];
 375:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 376:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Head of free lists. */
 377:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];
 378:Middlewares/lvgl/src/misc/lv_tlsf.c **** } control_t;
 379:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 380:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* A type used for casting when doing pointer arithmetic. */
 381:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef ptrdiff_t tlsfptr_t;
 382:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 383:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 384:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** block_header_t member functions.
 385:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 386:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 387:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t block_size(const block_header_t* block)
 388:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  29              		.loc 1 388 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 389:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->size & ~(block_header_free_bit | block_header_prev_free_bit);
  34              		.loc 1 389 2 view .LVU1
  35              		.loc 1 389 14 is_stmt 0 view .LVU2
  36 0000 4068     		ldr	r0, [r0, #4]
  37              	.LVL1:
 390:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  38              		.loc 1 390 1 view .LVU3
  39 0002 20F00300 		bic	r0, r0, #3
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE3:
  44              		.section	.text.block_set_size,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	block_set_size:
  51              	.LVL2:
  52              	.LFB4:
 391:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 392:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_size(block_header_t* block, size_t size)
 393:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  53              		.loc 1 393 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 394:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t oldsize = block->size;
  58              		.loc 1 394 2 view .LVU5
  59              		.loc 1 394 15 is_stmt 0 view .LVU6
  60 0000 4368     		ldr	r3, [r0, #4]
  61              	.LVL3:
 395:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size = size | (oldsize & (block_header_free_bit | block_header_prev_free_bit));
  62              		.loc 1 395 2 is_stmt 1 view .LVU7
  63              		.loc 1 395 32 is_stmt 0 view .LVU8
  64 0002 03F00303 		and	r3, r3, #3
ARM GAS  /tmp/ccUBk765.s 			page 9


  65              	.LVL4:
  66              		.loc 1 395 21 view .LVU9
  67 0006 0B43     		orrs	r3, r3, r1
  68              		.loc 1 395 14 view .LVU10
  69 0008 4360     		str	r3, [r0, #4]
  70              	.LVL5:
 396:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  71              		.loc 1 396 1 view .LVU11
  72 000a 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE4:
  76              		.section	.text.block_is_last,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	block_is_last:
  83              	.LVL6:
  84              	.LFB5:
 397:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 398:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_last(const block_header_t* block)
 399:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  85              		.loc 1 399 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 399 1 is_stmt 0 view .LVU13
  90 0000 08B5     		push	{r3, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 3, -8
  94              		.cfi_offset 14, -4
 400:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) == 0;
  95              		.loc 1 400 2 is_stmt 1 view .LVU14
  96              		.loc 1 400 9 is_stmt 0 view .LVU15
  97 0002 FFF7FEFF 		bl	block_size
  98              	.LVL7:
 401:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  99              		.loc 1 401 1 view .LVU16
 100 0006 B0FA80F0 		clz	r0, r0
 101 000a 4009     		lsrs	r0, r0, #5
 102 000c 08BD     		pop	{r3, pc}
 103              		.cfi_endproc
 104              	.LFE5:
 106              		.section	.text.block_is_free,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	block_is_free:
 113              	.LVL8:
 114              	.LFB6:
 402:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 403:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_free(const block_header_t* block)
 404:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 115              		.loc 1 404 1 is_stmt 1 view -0
 116              		.cfi_startproc
ARM GAS  /tmp/ccUBk765.s 			page 10


 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 405:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_free_bit);
 120              		.loc 1 405 2 view .LVU18
 121              		.loc 1 405 9 is_stmt 0 view .LVU19
 122 0000 4068     		ldr	r0, [r0, #4]
 123              	.LVL9:
 406:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 124              		.loc 1 406 1 view .LVU20
 125 0002 00F00100 		and	r0, r0, #1
 126 0006 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE6:
 130              		.section	.text.block_set_free,"ax",%progbits
 131              		.align	1
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	block_set_free:
 137              	.LVL10:
 138              	.LFB7:
 407:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 408:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_free(block_header_t* block)
 409:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 139              		.loc 1 409 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 410:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_free_bit;
 144              		.loc 1 410 2 view .LVU22
 145              		.loc 1 410 14 is_stmt 0 view .LVU23
 146 0000 4368     		ldr	r3, [r0, #4]
 147 0002 43F00103 		orr	r3, r3, #1
 148 0006 4360     		str	r3, [r0, #4]
 411:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 149              		.loc 1 411 1 view .LVU24
 150 0008 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE7:
 154              		.section	.text.block_set_used,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	block_set_used:
 161              	.LVL11:
 162              	.LFB8:
 412:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 413:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_used(block_header_t* block)
 414:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 163              		.loc 1 414 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
ARM GAS  /tmp/ccUBk765.s 			page 11


 415:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_free_bit;
 168              		.loc 1 415 2 view .LVU26
 169              		.loc 1 415 14 is_stmt 0 view .LVU27
 170 0000 4368     		ldr	r3, [r0, #4]
 171 0002 23F00103 		bic	r3, r3, #1
 172 0006 4360     		str	r3, [r0, #4]
 416:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 173              		.loc 1 416 1 view .LVU28
 174 0008 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE8:
 178              		.section	.text.block_is_prev_free,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	block_is_prev_free:
 185              	.LVL12:
 186              	.LFB9:
 417:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 418:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_prev_free(const block_header_t* block)
 419:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 187              		.loc 1 419 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 420:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_prev_free_bit);
 192              		.loc 1 420 2 view .LVU30
 193              		.loc 1 420 9 is_stmt 0 view .LVU31
 194 0000 4068     		ldr	r0, [r0, #4]
 195              	.LVL13:
 421:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 196              		.loc 1 421 1 view .LVU32
 197 0002 00F00200 		and	r0, r0, #2
 198 0006 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE9:
 202              		.section	.text.block_set_prev_free,"ax",%progbits
 203              		.align	1
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 208              	block_set_prev_free:
 209              	.LVL14:
 210              	.LFB10:
 422:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 423:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_free(block_header_t* block)
 424:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 211              		.loc 1 424 1 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 425:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_prev_free_bit;
 216              		.loc 1 425 2 view .LVU34
 217              		.loc 1 425 14 is_stmt 0 view .LVU35
ARM GAS  /tmp/ccUBk765.s 			page 12


 218 0000 4368     		ldr	r3, [r0, #4]
 219 0002 43F00203 		orr	r3, r3, #2
 220 0006 4360     		str	r3, [r0, #4]
 426:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 221              		.loc 1 426 1 view .LVU36
 222 0008 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE10:
 226              		.section	.text.block_set_prev_used,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	block_set_prev_used:
 233              	.LVL15:
 234              	.LFB11:
 427:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 428:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_used(block_header_t* block)
 429:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 235              		.loc 1 429 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 430:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_prev_free_bit;
 240              		.loc 1 430 2 view .LVU38
 241              		.loc 1 430 14 is_stmt 0 view .LVU39
 242 0000 4368     		ldr	r3, [r0, #4]
 243 0002 23F00203 		bic	r3, r3, #2
 244 0006 4360     		str	r3, [r0, #4]
 431:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 245              		.loc 1 431 1 view .LVU40
 246 0008 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE11:
 250              		.section	.text.block_from_ptr,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	block_from_ptr:
 257              	.LVL16:
 258              	.LFB12:
 432:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 433:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_from_ptr(const void* ptr)
 434:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 259              		.loc 1 434 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 435:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*,
 264              		.loc 1 435 2 view .LVU42
 436:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, ptr) - block_start_offset);
 437:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 265              		.loc 1 437 1 is_stmt 0 view .LVU43
 266 0000 0838     		subs	r0, r0, #8
ARM GAS  /tmp/ccUBk765.s 			page 13


 267              	.LVL17:
 268              		.loc 1 437 1 view .LVU44
 269 0002 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE12:
 273              		.section	.text.block_to_ptr,"ax",%progbits
 274              		.align	1
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 279              	block_to_ptr:
 280              	.LVL18:
 281              	.LFB13:
 438:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 439:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_to_ptr(const block_header_t* block)
 440:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 282              		.loc 1 440 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 441:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*,
 287              		.loc 1 441 2 view .LVU46
 442:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, block) + block_start_offset);
 443:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 288              		.loc 1 443 1 is_stmt 0 view .LVU47
 289 0000 0830     		adds	r0, r0, #8
 290              	.LVL19:
 291              		.loc 1 443 1 view .LVU48
 292 0002 7047     		bx	lr
 293              		.cfi_endproc
 294              	.LFE13:
 296              		.section	.text.offset_to_block,"ax",%progbits
 297              		.align	1
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	offset_to_block:
 303              	.LVL20:
 304              	.LFB14:
 444:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 445:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next block after block of given size. */
 446:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* offset_to_block(const void* ptr, size_t size)
 447:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 305              		.loc 1 447 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 448:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*, tlsf_cast(tlsfptr_t, ptr) + size);
 310              		.loc 1 448 2 view .LVU50
 449:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 311              		.loc 1 449 1 is_stmt 0 view .LVU51
 312 0000 0844     		add	r0, r0, r1
 313              	.LVL21:
 314              		.loc 1 449 1 view .LVU52
 315 0002 7047     		bx	lr
ARM GAS  /tmp/ccUBk765.s 			page 14


 316              		.cfi_endproc
 317              	.LFE14:
 319              		.section	.text.block_prev,"ax",%progbits
 320              		.align	1
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	block_prev:
 326              	.LVL22:
 327              	.LFB15:
 450:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 451:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of previous block. */
 452:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_prev(const block_header_t* block)
 453:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 328              		.loc 1 453 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		.loc 1 453 1 is_stmt 0 view .LVU54
 333 0000 10B5     		push	{r4, lr}
 334              	.LCFI1:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 4, -8
 337              		.cfi_offset 14, -4
 338 0002 0446     		mov	r4, r0
 454:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 339              		.loc 1 454 2 is_stmt 1 view .LVU55
 340              		.loc 1 454 2 view .LVU56
 341 0004 FFF7FEFF 		bl	block_is_prev_free
 342              	.LVL23:
 343              		.loc 1 454 2 is_stmt 0 view .LVU57
 344 0008 00B9     		cbnz	r0, .L15
 345              	.L16:
 346              		.loc 1 454 2 is_stmt 1 discriminator 1 view .LVU58
 347              		.loc 1 454 2 discriminator 1 view .LVU59
 348              		.loc 1 454 2 discriminator 1 view .LVU60
 349              		.loc 1 454 2 discriminator 1 view .LVU61
 350 000a FEE7     		b	.L16
 351              	.L15:
 352              		.loc 1 454 2 discriminator 4 view .LVU62
 455:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 353              		.loc 1 455 2 discriminator 4 view .LVU63
 456:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 354              		.loc 1 456 1 is_stmt 0 discriminator 4 view .LVU64
 355 000c 2068     		ldr	r0, [r4]
 356 000e 10BD     		pop	{r4, pc}
 357              		.loc 1 456 1 discriminator 4 view .LVU65
 358              		.cfi_endproc
 359              	.LFE15:
 361              		.section	.text.block_next,"ax",%progbits
 362              		.align	1
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	block_next:
 368              	.LVL24:
 369              	.LFB16:
ARM GAS  /tmp/ccUBk765.s 			page 15


 457:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 458:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next existing block. */
 459:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_next(const block_header_t* block)
 460:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 370              		.loc 1 460 1 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		.loc 1 460 1 is_stmt 0 view .LVU67
 375 0000 38B5     		push	{r3, r4, r5, lr}
 376              	.LCFI2:
 377              		.cfi_def_cfa_offset 16
 378              		.cfi_offset 3, -16
 379              		.cfi_offset 4, -12
 380              		.cfi_offset 5, -8
 381              		.cfi_offset 14, -4
 382 0002 0446     		mov	r4, r0
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 383              		.loc 1 461 2 is_stmt 1 view .LVU68
 384              		.loc 1 461 41 is_stmt 0 view .LVU69
 385 0004 FFF7FEFF 		bl	block_to_ptr
 386              	.LVL25:
 387              		.loc 1 461 41 view .LVU70
 388 0008 0546     		mov	r5, r0
 462:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 389              		.loc 1 462 3 view .LVU71
 390 000a 2046     		mov	r0, r4
 391 000c FFF7FEFF 		bl	block_size
 392              	.LVL26:
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 393              		.loc 1 461 25 view .LVU72
 394 0010 011F     		subs	r1, r0, #4
 395 0012 2846     		mov	r0, r5
 396 0014 FFF7FEFF 		bl	offset_to_block
 397              	.LVL27:
 398 0018 0546     		mov	r5, r0
 399              	.LVL28:
 463:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(block));
 400              		.loc 1 463 2 is_stmt 1 view .LVU73
 401              		.loc 1 463 2 view .LVU74
 402 001a 2046     		mov	r0, r4
 403              	.LVL29:
 404              		.loc 1 463 2 is_stmt 0 view .LVU75
 405 001c FFF7FEFF 		bl	block_is_last
 406              	.LVL30:
 407 0020 00B1     		cbz	r0, .L18
 408              	.L20:
 409              		.loc 1 463 2 is_stmt 1 discriminator 1 view .LVU76
 410              		.loc 1 463 2 discriminator 1 view .LVU77
 411              		.loc 1 463 2 discriminator 1 view .LVU78
 412              		.loc 1 463 2 discriminator 1 view .LVU79
 413 0022 FEE7     		b	.L20
 414              	.L18:
 464:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 465:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 415              		.loc 1 465 1 is_stmt 0 view .LVU80
 416 0024 2846     		mov	r0, r5
ARM GAS  /tmp/ccUBk765.s 			page 16


 417 0026 38BD     		pop	{r3, r4, r5, pc}
 418              		.loc 1 465 1 view .LVU81
 419              		.cfi_endproc
 420              	.LFE16:
 422              		.section	.text.block_link_next,"ax",%progbits
 423              		.align	1
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	block_link_next:
 429              	.LVL31:
 430              	.LFB17:
 466:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 467:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 468:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_link_next(block_header_t* block)
 469:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 431              		.loc 1 469 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		.loc 1 469 1 is_stmt 0 view .LVU83
 436 0000 10B5     		push	{r4, lr}
 437              	.LCFI3:
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 4, -8
 440              		.cfi_offset 14, -4
 441 0002 0446     		mov	r4, r0
 470:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 442              		.loc 1 470 2 is_stmt 1 view .LVU84
 443              		.loc 1 470 25 is_stmt 0 view .LVU85
 444 0004 FFF7FEFF 		bl	block_next
 445              	.LVL32:
 471:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 446              		.loc 1 471 2 is_stmt 1 view .LVU86
 447              		.loc 1 471 24 is_stmt 0 view .LVU87
 448 0008 0460     		str	r4, [r0]
 472:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 449              		.loc 1 472 2 is_stmt 1 view .LVU88
 473:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 450              		.loc 1 473 1 is_stmt 0 view .LVU89
 451 000a 10BD     		pop	{r4, pc}
 452              		.loc 1 473 1 view .LVU90
 453              		.cfi_endproc
 454              	.LFE17:
 456              		.section	.text.block_mark_as_free,"ax",%progbits
 457              		.align	1
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 462              	block_mark_as_free:
 463              	.LVL33:
 464              	.LFB18:
 474:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 475:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_free(block_header_t* block)
 476:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 465              		.loc 1 476 1 is_stmt 1 view -0
 466              		.cfi_startproc
ARM GAS  /tmp/ccUBk765.s 			page 17


 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		.loc 1 476 1 is_stmt 0 view .LVU92
 470 0000 10B5     		push	{r4, lr}
 471              	.LCFI4:
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 4, -8
 474              		.cfi_offset 14, -4
 475 0002 0446     		mov	r4, r0
 477:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 478:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_link_next(block);
 476              		.loc 1 478 2 is_stmt 1 view .LVU93
 477              		.loc 1 478 25 is_stmt 0 view .LVU94
 478 0004 FFF7FEFF 		bl	block_link_next
 479              	.LVL34:
 479:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 480              		.loc 1 479 2 is_stmt 1 view .LVU95
 481 0008 FFF7FEFF 		bl	block_set_prev_free
 482              	.LVL35:
 480:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 483              		.loc 1 480 2 view .LVU96
 484 000c 2046     		mov	r0, r4
 485 000e FFF7FEFF 		bl	block_set_free
 486              	.LVL36:
 481:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 487              		.loc 1 481 1 is_stmt 0 view .LVU97
 488 0012 10BD     		pop	{r4, pc}
 489              		.loc 1 481 1 view .LVU98
 490              		.cfi_endproc
 491              	.LFE18:
 493              		.section	.text.block_mark_as_used,"ax",%progbits
 494              		.align	1
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 499              	block_mark_as_used:
 500              	.LVL37:
 501              	.LFB19:
 482:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 483:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_used(block_header_t* block)
 484:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 502              		.loc 1 484 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		.loc 1 484 1 is_stmt 0 view .LVU100
 507 0000 10B5     		push	{r4, lr}
 508              	.LCFI5:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
 512 0002 0446     		mov	r4, r0
 485:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 513              		.loc 1 485 2 is_stmt 1 view .LVU101
 514              		.loc 1 485 25 is_stmt 0 view .LVU102
 515 0004 FFF7FEFF 		bl	block_next
 516              	.LVL38:
ARM GAS  /tmp/ccUBk765.s 			page 18


 486:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
 517              		.loc 1 486 2 is_stmt 1 view .LVU103
 518 0008 FFF7FEFF 		bl	block_set_prev_used
 519              	.LVL39:
 487:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(block);
 520              		.loc 1 487 2 view .LVU104
 521 000c 2046     		mov	r0, r4
 522 000e FFF7FEFF 		bl	block_set_used
 523              	.LVL40:
 488:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 524              		.loc 1 488 1 is_stmt 0 view .LVU105
 525 0012 10BD     		pop	{r4, pc}
 526              		.loc 1 488 1 view .LVU106
 527              		.cfi_endproc
 528              	.LFE19:
 530              		.section	.text.align_up,"ax",%progbits
 531              		.align	1
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 536              	align_up:
 537              	.LVL41:
 538              	.LFB20:
 489:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 490:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_up(size_t x, size_t align)
 491:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 539              		.loc 1 491 1 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 492:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 544              		.loc 1 492 2 view .LVU108
 545              		.loc 1 492 2 view .LVU109
 546 0000 4B1E     		subs	r3, r1, #1
 547 0002 0B42     		tst	r3, r1
 548 0004 00D0     		beq	.L29
 549              	.L30:
 550              		.loc 1 492 2 discriminator 1 view .LVU110
 551              		.loc 1 492 2 discriminator 1 view .LVU111
 552              		.loc 1 492 2 discriminator 1 view .LVU112
 553              		.loc 1 492 2 discriminator 1 view .LVU113
 554 0006 FEE7     		b	.L30
 555              	.L29:
 556              		.loc 1 492 2 discriminator 2 view .LVU114
 493:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 557              		.loc 1 493 2 discriminator 2 view .LVU115
 558              		.loc 1 493 12 is_stmt 0 discriminator 2 view .LVU116
 559 0008 0844     		add	r0, r0, r1
 560              	.LVL42:
 561              		.loc 1 493 12 discriminator 2 view .LVU117
 562 000a 0138     		subs	r0, r0, #1
 563              		.loc 1 493 29 discriminator 2 view .LVU118
 564 000c 4942     		rsbs	r1, r1, #0
 565              	.LVL43:
 494:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 566              		.loc 1 494 1 discriminator 2 view .LVU119
ARM GAS  /tmp/ccUBk765.s 			page 19


 567 000e 0840     		ands	r0, r0, r1
 568 0010 7047     		bx	lr
 569              		.cfi_endproc
 570              	.LFE20:
 572              		.section	.text.align_down,"ax",%progbits
 573              		.align	1
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	align_down:
 579              	.LVL44:
 580              	.LFB21:
 495:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 496:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_down(size_t x, size_t align)
 497:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 581              		.loc 1 497 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 498:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 586              		.loc 1 498 2 view .LVU121
 587              		.loc 1 498 2 view .LVU122
 588 0000 4B1E     		subs	r3, r1, #1
 589 0002 0B42     		tst	r3, r1
 590 0004 00D0     		beq	.L32
 591              	.L33:
 592              		.loc 1 498 2 discriminator 1 view .LVU123
 593              		.loc 1 498 2 discriminator 1 view .LVU124
 594              		.loc 1 498 2 discriminator 1 view .LVU125
 595              		.loc 1 498 2 discriminator 1 view .LVU126
 596 0006 FEE7     		b	.L33
 597              	.L32:
 598              		.loc 1 498 2 discriminator 2 view .LVU127
 499:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 599              		.loc 1 499 2 discriminator 2 view .LVU128
 600              		.loc 1 499 11 is_stmt 0 discriminator 2 view .LVU129
 601 0008 4942     		rsbs	r1, r1, #0
 602              	.LVL45:
 500:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 603              		.loc 1 500 1 discriminator 2 view .LVU130
 604 000a 0840     		ands	r0, r0, r1
 605              	.LVL46:
 606              		.loc 1 500 1 discriminator 2 view .LVU131
 607 000c 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE21:
 611              		.section	.text.align_ptr,"ax",%progbits
 612              		.align	1
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 617              	align_ptr:
 618              	.LVL47:
 619              	.LFB22:
 501:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 502:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* align_ptr(const void* ptr, size_t align)
ARM GAS  /tmp/ccUBk765.s 			page 20


 503:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 620              		.loc 1 503 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 504:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 625              		.loc 1 504 2 view .LVU133
 505:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		(tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 626              		.loc 1 505 30 is_stmt 0 view .LVU134
 627 0000 0844     		add	r0, r0, r1
 628              	.LVL48:
 629              		.loc 1 505 30 view .LVU135
 630 0002 0138     		subs	r0, r0, #1
 631              		.loc 1 505 47 view .LVU136
 632 0004 4B42     		rsbs	r3, r1, #0
 633              		.loc 1 505 45 view .LVU137
 634 0006 1840     		ands	r0, r0, r3
 635              	.LVL49:
 506:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 636              		.loc 1 506 2 is_stmt 1 view .LVU138
 637              		.loc 1 506 2 view .LVU139
 638 0008 4B1E     		subs	r3, r1, #1
 639 000a 0B42     		tst	r3, r1
 640 000c 00D0     		beq	.L35
 641              	.L36:
 642              		.loc 1 506 2 discriminator 1 view .LVU140
 643              		.loc 1 506 2 discriminator 1 view .LVU141
 644              		.loc 1 506 2 discriminator 1 view .LVU142
 645              		.loc 1 506 2 discriminator 1 view .LVU143
 646 000e FEE7     		b	.L36
 647              	.L35:
 648              		.loc 1 506 2 discriminator 2 view .LVU144
 507:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 649              		.loc 1 507 2 discriminator 2 view .LVU145
 508:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 650              		.loc 1 508 1 is_stmt 0 discriminator 2 view .LVU146
 651 0010 7047     		bx	lr
 652              		.cfi_endproc
 653              	.LFE22:
 655              		.section	.text.adjust_request_size,"ax",%progbits
 656              		.align	1
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 661              	adjust_request_size:
 662              	.LVL50:
 663              	.LFB23:
 509:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 510:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 511:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 512:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** than internal minimum.
 513:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 514:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t adjust_request_size(size_t size, size_t align)
 515:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 664              		.loc 1 515 1 is_stmt 1 view -0
 665              		.cfi_startproc
ARM GAS  /tmp/ccUBk765.s 			page 21


 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		.loc 1 515 1 is_stmt 0 view .LVU148
 669 0000 08B5     		push	{r3, lr}
 670              	.LCFI6:
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 674              		.loc 1 516 2 is_stmt 1 view .LVU149
 675              	.LVL51:
 517:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 676              		.loc 1 517 2 view .LVU150
 677              		.loc 1 517 5 is_stmt 0 view .LVU151
 678 0002 00B9     		cbnz	r0, .L41
 679              	.LVL52:
 680              	.L38:
 518:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t aligned = align_up(size, align);
 520:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 521:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (aligned < block_size_max) 
 523:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			adjust = tlsf_max(aligned, block_size_min);
 525:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 526:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 527:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return adjust;
 681              		.loc 1 527 2 is_stmt 1 view .LVU152
 528:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 682              		.loc 1 528 1 is_stmt 0 view .LVU153
 683 0004 08BD     		pop	{r3, pc}
 684              	.LVL53:
 685              	.L41:
 686              	.LBB2:
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 687              		.loc 1 519 3 is_stmt 1 view .LVU154
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 688              		.loc 1 519 26 is_stmt 0 view .LVU155
 689 0006 FFF7FEFF 		bl	align_up
 690              	.LVL54:
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 691              		.loc 1 522 3 is_stmt 1 view .LVU156
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 692              		.loc 1 522 6 is_stmt 0 view .LVU157
 693 000a B0F5804F 		cmp	r0, #16384
 694 000e 03D2     		bcs	.L39
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 695              		.loc 1 524 4 is_stmt 1 view .LVU158
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 696              		.loc 1 524 11 is_stmt 0 view .LVU159
 697 0010 0C28     		cmp	r0, #12
 698 0012 38BF     		it	cc
 699 0014 0C20     		movcc	r0, #12
 700              	.LVL55:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 701              		.loc 1 524 11 view .LVU160
 702 0016 F5E7     		b	.L38
ARM GAS  /tmp/ccUBk765.s 			page 22


 703              	.LVL56:
 704              	.L39:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 705              		.loc 1 524 11 view .LVU161
 706              	.LBE2:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 707              		.loc 1 516 9 view .LVU162
 708 0018 0020     		movs	r0, #0
 709              	.LVL57:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 710              		.loc 1 516 9 view .LVU163
 711 001a F3E7     		b	.L38
 712              		.cfi_endproc
 713              	.LFE23:
 715              		.section	.text.remove_free_block,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 721              	remove_free_block:
 722              	.LVL58:
 723              	.LFB27:
 529:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 530:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 531:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF utility functions. In most cases, these are direct translations of
 532:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the documentation found in the white paper.
 533:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 534:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 535:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_insert(size_t size, int* fli, int* sli)
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 539:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 540:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* Store small blocks in first list. */
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = 0;
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 543:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 544:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 545:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_fls_sizet(size);
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 549:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*fli = fl;
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 553:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 554:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This version rounds up to the next block size (for allocations) */
 555:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_search(size_t size, int* fli, int* sli)
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 558:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 561:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(size, fli, sli);
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
ARM GAS  /tmp/ccUBk765.s 			page 23


 564:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 565:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* search_suitable_block(control_t* control, int* fli, int* sli)
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 569:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 570:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 571:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** First, search for a block in the list associated with the given
 572:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** fl/sl index.
 573:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_map = control->sl_bitmap[fl] & (~0U << sl);
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 576:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 577:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* No block exists. Search in the next largest first-level list. */
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const unsigned int fl_map = control->fl_bitmap & (~0U << (fl + 1));
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 580:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 581:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* No free blocks available, memory has been exhausted. */
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			return 0;
 583:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 584:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_ffs(fl_map);
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 588:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sl_map && "internal error - second level bitmap is null");
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 592:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 593:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Return the first block in the free list. */
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return control->blocks[fl][sl];
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 596:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 597:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a free block from the free list.*/
 598:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void remove_free_block(control_t* control, block_header_t* block, int fl, int sl)
 599:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 724              		.loc 1 599 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		.loc 1 599 1 is_stmt 0 view .LVU165
 729 0000 10B5     		push	{r4, lr}
 730              	.LCFI7:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 4, -8
 733              		.cfi_offset 14, -4
 734 0002 9646     		mov	lr, r2
 600:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 735              		.loc 1 600 2 is_stmt 1 view .LVU166
 736              		.loc 1 600 18 is_stmt 0 view .LVU167
 737 0004 CA68     		ldr	r2, [r1, #12]
 738              	.LVL59:
 601:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 739              		.loc 1 601 2 is_stmt 1 view .LVU168
 740              		.loc 1 601 18 is_stmt 0 view .LVU169
 741 0006 8C68     		ldr	r4, [r1, #8]
 742              	.LVL60:
ARM GAS  /tmp/ccUBk765.s 			page 24


 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
 743              		.loc 1 602 2 is_stmt 1 view .LVU170
 744              		.loc 1 602 2 view .LVU171
 745 0008 6AB1     		cbz	r2, .L44
 746              		.loc 1 602 2 discriminator 2 view .LVU172
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 747              		.loc 1 603 2 discriminator 2 view .LVU173
 748              		.loc 1 603 2 discriminator 2 view .LVU174
 749 000a 6CB1     		cbz	r4, .L46
 750              		.loc 1 603 2 discriminator 2 view .LVU175
 604:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 751              		.loc 1 604 2 discriminator 2 view .LVU176
 752              		.loc 1 604 18 is_stmt 0 discriminator 2 view .LVU177
 753 000c E260     		str	r2, [r4, #12]
 605:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 754              		.loc 1 605 2 is_stmt 1 discriminator 2 view .LVU178
 755              		.loc 1 605 18 is_stmt 0 discriminator 2 view .LVU179
 756 000e 9460     		str	r4, [r2, #8]
 606:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 607:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* If this block is the head of the free list, set new head. */
 608:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (control->blocks[fl][sl] == block)
 757              		.loc 1 608 2 is_stmt 1 discriminator 2 view .LVU180
 758              		.loc 1 608 25 is_stmt 0 discriminator 2 view .LVU181
 759 0010 03EB4E1C 		add	ip, r3, lr, lsl #5
 760 0014 0CF10C0C 		add	ip, ip, #12
 761 0018 00EB8C0C 		add	ip, r0, ip, lsl #2
 762 001c DCF80420 		ldr	r2, [ip, #4]
 763              	.LVL61:
 764              		.loc 1 608 5 discriminator 2 view .LVU182
 765 0020 8A42     		cmp	r2, r1
 766 0022 02D0     		beq	.L49
 767              	.LVL62:
 768              	.L42:
 609:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->blocks[fl][sl] = next;
 611:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 612:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the new head is null, clear the bitmap. */
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (next == &control->block_null)
 614:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->sl_bitmap[fl] &= ~(1U << sl);
 616:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 617:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* If the second bitmap is now empty, clear the fl bitmap. */
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!control->sl_bitmap[fl])
 619:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				control->fl_bitmap &= ~(1U << fl);
 621:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 622:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 623:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 624:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 769              		.loc 1 624 1 view .LVU183
 770 0024 10BD     		pop	{r4, pc}
 771              	.LVL63:
 772              	.L44:
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 773              		.loc 1 602 2 is_stmt 1 discriminator 1 view .LVU184
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 774              		.loc 1 602 2 discriminator 1 view .LVU185
ARM GAS  /tmp/ccUBk765.s 			page 25


 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 775              		.loc 1 602 2 discriminator 1 view .LVU186
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 776              		.loc 1 602 2 discriminator 1 view .LVU187
 777 0026 FEE7     		b	.L44
 778              	.L46:
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 779              		.loc 1 603 2 discriminator 2 view .LVU188
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 780              		.loc 1 603 2 discriminator 2 view .LVU189
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 781              		.loc 1 603 2 discriminator 2 view .LVU190
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 782              		.loc 1 603 2 discriminator 2 view .LVU191
 783 0028 FEE7     		b	.L46
 784              	.LVL64:
 785              	.L49:
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 786              		.loc 1 610 3 view .LVU192
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 787              		.loc 1 610 27 is_stmt 0 view .LVU193
 788 002a CCF80440 		str	r4, [ip, #4]
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 789              		.loc 1 613 3 is_stmt 1 view .LVU194
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 790              		.loc 1 613 6 is_stmt 0 view .LVU195
 791 002e A042     		cmp	r0, r4
 792 0030 F8D1     		bne	.L42
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 793              		.loc 1 615 4 is_stmt 1 view .LVU196
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 794              		.loc 1 615 35 is_stmt 0 view .LVU197
 795 0032 0121     		movs	r1, #1
 796              	.LVL65:
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 797              		.loc 1 615 35 view .LVU198
 798 0034 9940     		lsls	r1, r1, r3
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 799              		.loc 1 615 27 view .LVU199
 800 0036 0EF10402 		add	r2, lr, #4
 801 003a 00EB8202 		add	r2, r0, r2, lsl #2
 802 003e 5368     		ldr	r3, [r2, #4]
 803              	.LVL66:
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 804              		.loc 1 615 27 view .LVU200
 805 0040 23EA0103 		bic	r3, r3, r1
 806 0044 5360     		str	r3, [r2, #4]
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 807              		.loc 1 618 4 is_stmt 1 view .LVU201
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 808              		.loc 1 618 7 is_stmt 0 view .LVU202
 809 0046 002B     		cmp	r3, #0
 810 0048 ECD1     		bne	.L42
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 811              		.loc 1 620 5 is_stmt 1 view .LVU203
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 812              		.loc 1 620 32 is_stmt 0 view .LVU204
ARM GAS  /tmp/ccUBk765.s 			page 26


 813 004a 0123     		movs	r3, #1
 814 004c 03FA0EF2 		lsl	r2, r3, lr
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 815              		.loc 1 620 24 view .LVU205
 816 0050 0369     		ldr	r3, [r0, #16]
 817 0052 23EA0203 		bic	r3, r3, r2
 818 0056 0361     		str	r3, [r0, #16]
 819              		.loc 1 624 1 view .LVU206
 820 0058 E4E7     		b	.L42
 821              		.cfi_endproc
 822              	.LFE27:
 824              		.section	.text.insert_free_block,"ax",%progbits
 825              		.align	1
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 830              	insert_free_block:
 831              	.LVL67:
 832              	.LFB28:
 625:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 626:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a free block into the free block list. */
 627:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void insert_free_block(control_t* control, block_header_t* block, int fl, int sl)
 628:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 833              		.loc 1 628 1 is_stmt 1 view -0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		.loc 1 628 1 is_stmt 0 view .LVU208
 838 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 839              	.LCFI8:
 840              		.cfi_def_cfa_offset 24
 841              		.cfi_offset 4, -24
 842              		.cfi_offset 5, -20
 843              		.cfi_offset 6, -16
 844              		.cfi_offset 7, -12
 845              		.cfi_offset 8, -8
 846              		.cfi_offset 14, -4
 847 0004 1F46     		mov	r7, r3
 629:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 848              		.loc 1 629 2 is_stmt 1 view .LVU209
 849              		.loc 1 629 18 is_stmt 0 view .LVU210
 850 0006 03EB421C 		add	ip, r3, r2, lsl #5
 851 000a 0CF10C0C 		add	ip, ip, #12
 852 000e 00EB8C0C 		add	ip, r0, ip, lsl #2
 853 0012 DCF80430 		ldr	r3, [ip, #4]
 854              	.LVL68:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 855              		.loc 1 630 2 is_stmt 1 view .LVU211
 856              		.loc 1 630 2 view .LVU212
 857 0016 83B1     		cbz	r3, .L52
 858 0018 0546     		mov	r5, r0
 859 001a 0C46     		mov	r4, r1
 860 001c 1646     		mov	r6, r2
 861              		.loc 1 630 2 discriminator 2 view .LVU213
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 862              		.loc 1 631 2 discriminator 2 view .LVU214
 863              		.loc 1 631 2 discriminator 2 view .LVU215
ARM GAS  /tmp/ccUBk765.s 			page 27


 864 001e 69B1     		cbz	r1, .L54
 865              		.loc 1 631 2 discriminator 2 view .LVU216
 632:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 866              		.loc 1 632 2 discriminator 2 view .LVU217
 867              		.loc 1 632 19 is_stmt 0 discriminator 2 view .LVU218
 868 0020 8B60     		str	r3, [r1, #8]
 633:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 869              		.loc 1 633 2 is_stmt 1 discriminator 2 view .LVU219
 870              		.loc 1 633 19 is_stmt 0 discriminator 2 view .LVU220
 871 0022 C860     		str	r0, [r1, #12]
 634:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 872              		.loc 1 634 2 is_stmt 1 discriminator 2 view .LVU221
 873              		.loc 1 634 21 is_stmt 0 discriminator 2 view .LVU222
 874 0024 D960     		str	r1, [r3, #12]
 635:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 636:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
 875              		.loc 1 636 2 is_stmt 1 discriminator 2 view .LVU223
 876              		.loc 1 636 2 discriminator 2 view .LVU224
 877 0026 0846     		mov	r0, r1
 878              	.LVL69:
 879              		.loc 1 636 2 is_stmt 0 discriminator 2 view .LVU225
 880 0028 FFF7FEFF 		bl	block_to_ptr
 881              	.LVL70:
 882              		.loc 1 636 2 discriminator 2 view .LVU226
 883 002c 8046     		mov	r8, r0
 884 002e 0421     		movs	r1, #4
 885 0030 FFF7FEFF 		bl	align_ptr
 886              	.LVL71:
 887 0034 8045     		cmp	r8, r0
 888 0036 02D0     		beq	.L55
 889              	.L56:
 890              		.loc 1 636 2 is_stmt 1 discriminator 3 view .LVU227
 891              		.loc 1 636 2 discriminator 3 view .LVU228
 892              		.loc 1 636 2 discriminator 3 view .LVU229
 893              		.loc 1 636 2 discriminator 3 view .LVU230
 894 0038 FEE7     		b	.L56
 895              	.LVL72:
 896              	.L52:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 897              		.loc 1 630 2 discriminator 1 view .LVU231
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 898              		.loc 1 630 2 discriminator 1 view .LVU232
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 899              		.loc 1 630 2 discriminator 1 view .LVU233
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 900              		.loc 1 630 2 discriminator 1 view .LVU234
 901 003a FEE7     		b	.L52
 902              	.L54:
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 903              		.loc 1 631 2 discriminator 2 view .LVU235
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 904              		.loc 1 631 2 discriminator 2 view .LVU236
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 905              		.loc 1 631 2 discriminator 2 view .LVU237
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 906              		.loc 1 631 2 discriminator 2 view .LVU238
 907 003c FEE7     		b	.L54
ARM GAS  /tmp/ccUBk765.s 			page 28


 908              	.LVL73:
 909              	.L55:
 910              		.loc 1 636 2 discriminator 2 view .LVU239
 637:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 638:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 639:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Insert the new block at the head of the list, and mark the first-
 640:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** and second-level bitmaps appropriately.
 641:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 642:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->blocks[fl][sl] = block;
 911              		.loc 1 642 2 discriminator 2 view .LVU240
 912              		.loc 1 642 26 is_stmt 0 discriminator 2 view .LVU241
 913 003e 07EB4613 		add	r3, r7, r6, lsl #5
 914 0042 0C33     		adds	r3, r3, #12
 915 0044 05EB8303 		add	r3, r5, r3, lsl #2
 916 0048 5C60     		str	r4, [r3, #4]
 643:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 917              		.loc 1 643 2 is_stmt 1 discriminator 2 view .LVU242
 918              		.loc 1 643 28 is_stmt 0 discriminator 2 view .LVU243
 919 004a 0123     		movs	r3, #1
 920 004c 03FA06F1 		lsl	r1, r3, r6
 921              		.loc 1 643 21 discriminator 2 view .LVU244
 922 0050 2A69     		ldr	r2, [r5, #16]
 923 0052 0A43     		orrs	r2, r2, r1
 924 0054 2A61     		str	r2, [r5, #16]
 644:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 925              		.loc 1 644 2 is_stmt 1 discriminator 2 view .LVU245
 926              		.loc 1 644 32 is_stmt 0 discriminator 2 view .LVU246
 927 0056 BB40     		lsls	r3, r3, r7
 928              		.loc 1 644 25 discriminator 2 view .LVU247
 929 0058 0436     		adds	r6, r6, #4
 930              	.LVL74:
 931              		.loc 1 644 25 discriminator 2 view .LVU248
 932 005a 05EB8605 		add	r5, r5, r6, lsl #2
 933              	.LVL75:
 934              		.loc 1 644 25 discriminator 2 view .LVU249
 935 005e 6A68     		ldr	r2, [r5, #4]
 936 0060 1343     		orrs	r3, r3, r2
 937 0062 6B60     		str	r3, [r5, #4]
 645:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 938              		.loc 1 645 1 discriminator 2 view .LVU250
 939 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 940              		.loc 1 645 1 discriminator 2 view .LVU251
 941              		.cfi_endproc
 942              	.LFE28:
 944              		.section	.text.block_can_split,"ax",%progbits
 945              		.align	1
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 950              	block_can_split:
 951              	.LVL76:
 952              	.LFB31:
 646:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 647:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a given block from the free list. */
 648:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_remove(control_t* control, block_header_t* block)
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
ARM GAS  /tmp/ccUBk765.s 			page 29


 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 654:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 655:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a given block into the free list. */
 656:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_insert(control_t* control, block_header_t* block)
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 662:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 663:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_can_split(block_header_t* block, size_t size)
 664:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 953              		.loc 1 664 1 is_stmt 1 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		.loc 1 664 1 is_stmt 0 view .LVU253
 958 0000 10B5     		push	{r4, lr}
 959              	.LCFI9:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 4, -8
 962              		.cfi_offset 14, -4
 963 0002 0C46     		mov	r4, r1
 665:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) >= sizeof(block_header_t) + size;
 964              		.loc 1 665 2 is_stmt 1 view .LVU254
 965              		.loc 1 665 9 is_stmt 0 view .LVU255
 966 0004 FFF7FEFF 		bl	block_size
 967              	.LVL77:
 968              		.loc 1 665 53 view .LVU256
 969 0008 1034     		adds	r4, r4, #16
 970              	.LVL78:
 666:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 971              		.loc 1 666 1 view .LVU257
 972 000a A042     		cmp	r0, r4
 973 000c 34BF     		ite	cc
 974 000e 0020     		movcc	r0, #0
 975 0010 0120     		movcs	r0, #1
 976 0012 10BD     		pop	{r4, pc}
 977              		.loc 1 666 1 view .LVU258
 978              		.cfi_endproc
 979              	.LFE31:
 981              		.section	.text.block_split,"ax",%progbits
 982              		.align	1
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 987              	block_split:
 988              	.LVL79:
 989              	.LFB32:
 667:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 668:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Split a block into two, the second of which is free. */
 669:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_split(block_header_t* block, size_t size)
 670:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 990              		.loc 1 670 1 is_stmt 1 view -0
 991              		.cfi_startproc
ARM GAS  /tmp/ccUBk765.s 			page 30


 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              		.loc 1 670 1 is_stmt 0 view .LVU260
 995 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 996              	.LCFI10:
 997              		.cfi_def_cfa_offset 32
 998              		.cfi_offset 3, -32
 999              		.cfi_offset 4, -28
 1000              		.cfi_offset 5, -24
 1001              		.cfi_offset 6, -20
 1002              		.cfi_offset 7, -16
 1003              		.cfi_offset 8, -12
 1004              		.cfi_offset 9, -8
 1005              		.cfi_offset 14, -4
 1006 0004 0746     		mov	r7, r0
 1007 0006 0C46     		mov	r4, r1
 671:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 672:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining =
 1008              		.loc 1 672 2 is_stmt 1 view .LVU261
 673:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(block_to_ptr(block), size - block_header_overhead);
 1009              		.loc 1 673 19 is_stmt 0 view .LVU262
 1010 0008 FFF7FEFF 		bl	block_to_ptr
 1011              	.LVL80:
 1012              		.loc 1 673 3 view .LVU263
 1013 000c 211F     		subs	r1, r4, #4
 1014 000e FFF7FEFF 		bl	offset_to_block
 1015              	.LVL81:
 1016 0012 0546     		mov	r5, r0
 1017              	.LVL82:
 674:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 675:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t remain_size = block_size(block) - (size + block_header_overhead);
 1018              		.loc 1 675 2 is_stmt 1 view .LVU264
 1019              		.loc 1 675 29 is_stmt 0 view .LVU265
 1020 0014 3846     		mov	r0, r7
 1021              	.LVL83:
 1022              		.loc 1 675 29 view .LVU266
 1023 0016 FFF7FEFF 		bl	block_size
 1024              	.LVL84:
 1025 001a 0646     		mov	r6, r0
 1026              		.loc 1 675 47 view .LVU267
 1027 001c 031B     		subs	r3, r0, r4
 1028              		.loc 1 675 15 view .LVU268
 1029 001e A3F10409 		sub	r9, r3, #4
 1030              	.LVL85:
 676:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 677:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
 1031              		.loc 1 677 2 is_stmt 1 view .LVU269
 1032              		.loc 1 677 2 view .LVU270
 1033 0022 2846     		mov	r0, r5
 1034 0024 FFF7FEFF 		bl	block_to_ptr
 1035              	.LVL86:
 1036 0028 8046     		mov	r8, r0
 1037 002a 0421     		movs	r1, #4
 1038 002c FFF7FEFF 		bl	align_ptr
 1039              	.LVL87:
 1040 0030 8045     		cmp	r8, r0
 1041 0032 00D0     		beq	.L61
ARM GAS  /tmp/ccUBk765.s 			page 31


 1042              	.L62:
 1043              		.loc 1 677 2 discriminator 1 view .LVU271
 1044              		.loc 1 677 2 discriminator 1 view .LVU272
 1045              		.loc 1 677 2 discriminator 1 view .LVU273
 1046              		.loc 1 677 2 discriminator 1 view .LVU274
 1047 0034 FEE7     		b	.L62
 1048              	.L61:
 1049              		.loc 1 677 2 discriminator 2 view .LVU275
 678:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 679:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 680:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
 1050              		.loc 1 680 2 discriminator 2 view .LVU276
 1051              		.loc 1 680 2 discriminator 2 view .LVU277
 1052 0036 04EB0903 		add	r3, r4, r9
 1053 003a 0433     		adds	r3, r3, #4
 1054 003c 9E42     		cmp	r6, r3
 1055 003e 00D0     		beq	.L63
 1056              	.L64:
 1057              		.loc 1 680 2 discriminator 2 view .LVU278
 1058              		.loc 1 680 2 discriminator 2 view .LVU279
 1059              		.loc 1 680 2 discriminator 2 view .LVU280
 1060              		.loc 1 680 2 discriminator 2 view .LVU281
 1061 0040 FEE7     		b	.L64
 1062              	.L63:
 1063              		.loc 1 680 2 discriminator 2 view .LVU282
 681:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1064              		.loc 1 681 2 discriminator 2 view .LVU283
 1065 0042 4946     		mov	r1, r9
 1066 0044 2846     		mov	r0, r5
 1067 0046 FFF7FEFF 		bl	block_set_size
 1068              	.LVL88:
 682:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
 1069              		.loc 1 682 2 discriminator 2 view .LVU284
 1070              		.loc 1 682 2 discriminator 2 view .LVU285
 1071 004a 2846     		mov	r0, r5
 1072 004c FFF7FEFF 		bl	block_size
 1073              	.LVL89:
 1074 0050 0B28     		cmp	r0, #11
 1075 0052 00D8     		bhi	.L65
 1076              	.L66:
 1077              		.loc 1 682 2 discriminator 3 view .LVU286
 1078              		.loc 1 682 2 discriminator 3 view .LVU287
 1079              		.loc 1 682 2 discriminator 3 view .LVU288
 1080              		.loc 1 682 2 discriminator 3 view .LVU289
 1081 0054 FEE7     		b	.L66
 1082              	.L65:
 1083              		.loc 1 682 2 discriminator 4 view .LVU290
 683:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 684:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, size);
 1084              		.loc 1 684 2 discriminator 4 view .LVU291
 1085 0056 2146     		mov	r1, r4
 1086 0058 3846     		mov	r0, r7
 1087 005a FFF7FEFF 		bl	block_set_size
 1088              	.LVL90:
 685:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_mark_as_free(remaining);
 1089              		.loc 1 685 2 discriminator 4 view .LVU292
 1090 005e 2846     		mov	r0, r5
ARM GAS  /tmp/ccUBk765.s 			page 32


 1091 0060 FFF7FEFF 		bl	block_mark_as_free
 1092              	.LVL91:
 686:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 687:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining;
 1093              		.loc 1 687 2 discriminator 4 view .LVU293
 688:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1094              		.loc 1 688 1 is_stmt 0 discriminator 4 view .LVU294
 1095 0064 2846     		mov	r0, r5
 1096 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1097              		.loc 1 688 1 discriminator 4 view .LVU295
 1098              		.cfi_endproc
 1099              	.LFE32:
 1101              		.section	.text.block_absorb,"ax",%progbits
 1102              		.align	1
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1107              	block_absorb:
 1108              	.LVL92:
 1109              	.LFB33:
 689:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 690:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 691:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_absorb(block_header_t* prev, block_header_t* block)
 692:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1110              		.loc 1 692 1 is_stmt 1 view -0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              		.loc 1 692 1 is_stmt 0 view .LVU297
 1115 0000 38B5     		push	{r3, r4, r5, lr}
 1116              	.LCFI11:
 1117              		.cfi_def_cfa_offset 16
 1118              		.cfi_offset 3, -16
 1119              		.cfi_offset 4, -12
 1120              		.cfi_offset 5, -8
 1121              		.cfi_offset 14, -4
 1122 0002 0446     		mov	r4, r0
 1123 0004 0D46     		mov	r5, r1
 693:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1124              		.loc 1 693 2 is_stmt 1 view .LVU298
 1125              		.loc 1 693 2 view .LVU299
 1126 0006 FFF7FEFF 		bl	block_is_last
 1127              	.LVL93:
 1128              		.loc 1 693 2 is_stmt 0 view .LVU300
 1129 000a 00B1     		cbz	r0, .L69
 1130              	.L70:
 1131              		.loc 1 693 2 is_stmt 1 discriminator 1 view .LVU301
 1132              		.loc 1 693 2 discriminator 1 view .LVU302
 1133              		.loc 1 693 2 discriminator 1 view .LVU303
 1134              		.loc 1 693 2 discriminator 1 view .LVU304
 1135 000c FEE7     		b	.L70
 1136              	.L69:
 1137              		.loc 1 693 2 discriminator 2 view .LVU305
 694:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 695:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->size += block_size(block) + block_header_overhead;
 1138              		.loc 1 695 2 discriminator 2 view .LVU306
 1139              		.loc 1 695 16 is_stmt 0 discriminator 2 view .LVU307
ARM GAS  /tmp/ccUBk765.s 			page 33


 1140 000e 2846     		mov	r0, r5
 1141 0010 FFF7FEFF 		bl	block_size
 1142              	.LVL94:
 1143              		.loc 1 695 34 discriminator 2 view .LVU308
 1144 0014 021D     		adds	r2, r0, #4
 1145              		.loc 1 695 13 discriminator 2 view .LVU309
 1146 0016 6368     		ldr	r3, [r4, #4]
 1147 0018 1344     		add	r3, r3, r2
 1148 001a 6360     		str	r3, [r4, #4]
 696:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1149              		.loc 1 696 2 is_stmt 1 discriminator 2 view .LVU310
 1150 001c 2046     		mov	r0, r4
 1151 001e FFF7FEFF 		bl	block_link_next
 1152              	.LVL95:
 697:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return prev;
 1153              		.loc 1 697 2 discriminator 2 view .LVU311
 698:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1154              		.loc 1 698 1 is_stmt 0 discriminator 2 view .LVU312
 1155 0022 2046     		mov	r0, r4
 1156 0024 38BD     		pop	{r3, r4, r5, pc}
 1157              		.loc 1 698 1 discriminator 2 view .LVU313
 1158              		.cfi_endproc
 1159              	.LFE33:
 1161              		.section	.text.control_constructor,"ax",%progbits
 1162              		.align	1
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1167              	control_constructor:
 1168              	.LVL96:
 1169              	.LFB41:
 699:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 700:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent previous free block. */
 701:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_prev(control_t* control, block_header_t* block)
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 704:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* prev = block_prev(block);
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 710:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 711:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 714:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 715:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent free block. */
 716:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_next(control_t* control, block_header_t* block)
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 720:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_free(next))
 722:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_last(block) && "previous block can't be last");
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
ARM GAS  /tmp/ccUBk765.s 			page 34


 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 726:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 727:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 730:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 731:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 732:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_free(control_t* control, block_header_t* block, size_t size)
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 736:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 741:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 743:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 744:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 745:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_used(control_t* control, block_header_t* block, size_t size)
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 749:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 750:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the next block is free, we must coalesce. */
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 753:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_merge_next(control, remaining_block);
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 756:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 758:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 759:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_trim_free_leading(control_t* control, block_header_t* block, size_t si
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 763:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 764:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* We want the 2nd block. */
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_split(block, size - block_header_overhead);
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 767:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 770:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 771:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining_block;
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 774:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 775:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_locate_free(control_t* control, size_t size)
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 779:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 781:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  /tmp/ccUBk765.s 			page 35


 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		mapping_search(size, &fl, &sl);
 783:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 784:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
 785:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** mapping_search can futz with the size, so for excessively large sizes it can sometimes wind up
 786:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** with indices that are off the end of the block array.
 787:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** So, we protect against that here, since this is the only callsite of mapping_search.
 788:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** Note that we don't need to check sl, since it comes from a modulo operation that guarantees it
 789:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (fl < FL_INDEX_COUNT)
 791:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = search_suitable_block(control, &fl, &sl);
 793:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 794:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 795:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 797:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_size(block) >= size);
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 800:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 801:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 804:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 805:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_prepare_used(control_t* control, block_header_t* block, size_t size)
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 809:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(size && "size must be non-zero");
 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 814:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 817:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 818:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Clear structure and point all empty lists at the null block. */
 819:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void control_constructor(control_t* control)
 820:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1170              		.loc 1 820 1 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 821:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 1175              		.loc 1 821 2 view .LVU315
 822:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 823:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.next_free = &control->block_null;
 1176              		.loc 1 823 2 view .LVU316
 1177              		.loc 1 823 32 is_stmt 0 view .LVU317
 1178 0000 8060     		str	r0, [r0, #8]
 824:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.prev_free = &control->block_null;
 1179              		.loc 1 824 2 is_stmt 1 view .LVU318
 1180              		.loc 1 824 32 is_stmt 0 view .LVU319
 1181 0002 C060     		str	r0, [r0, #12]
 825:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 826:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap = 0;
ARM GAS  /tmp/ccUBk765.s 			page 36


 1182              		.loc 1 826 2 is_stmt 1 view .LVU320
 1183              		.loc 1 826 21 is_stmt 0 view .LVU321
 1184 0004 0021     		movs	r1, #0
 1185 0006 0161     		str	r1, [r0, #16]
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1186              		.loc 1 827 2 is_stmt 1 view .LVU322
 1187              	.LVL97:
 1188              		.loc 1 827 2 is_stmt 0 view .LVU323
 1189 0008 09E0     		b	.L73
 1190              	.LVL98:
 1191              	.L75:
 828:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->sl_bitmap[i] = 0;
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 831:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 832:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->blocks[i][j] = &control->block_null;
 1192              		.loc 1 832 4 is_stmt 1 discriminator 3 view .LVU324
 1193              		.loc 1 832 26 is_stmt 0 discriminator 3 view .LVU325
 1194 000a 02EB4113 		add	r3, r2, r1, lsl #5
 1195 000e 0C33     		adds	r3, r3, #12
 1196 0010 00EB8303 		add	r3, r0, r3, lsl #2
 1197 0014 5860     		str	r0, [r3, #4]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1198              		.loc 1 830 35 is_stmt 1 discriminator 3 view .LVU326
 1199 0016 0132     		adds	r2, r2, #1
 1200              	.LVL99:
 1201              	.L74:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1202              		.loc 1 830 15 discriminator 1 view .LVU327
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1203              		.loc 1 830 3 is_stmt 0 discriminator 1 view .LVU328
 1204 0018 1F2A     		cmp	r2, #31
 1205 001a F6DD     		ble	.L75
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1206              		.loc 1 827 34 is_stmt 1 discriminator 2 view .LVU329
 1207 001c 0131     		adds	r1, r1, #1
 1208              	.LVL100:
 1209              	.L73:
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1210              		.loc 1 827 14 discriminator 1 view .LVU330
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1211              		.loc 1 827 2 is_stmt 0 discriminator 1 view .LVU331
 1212 001e 0729     		cmp	r1, #7
 1213 0020 05DC     		bgt	.L77
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1214              		.loc 1 829 3 is_stmt 1 view .LVU332
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1215              		.loc 1 829 25 is_stmt 0 view .LVU333
 1216 0022 0B1D     		adds	r3, r1, #4
 1217 0024 00EB8303 		add	r3, r0, r3, lsl #2
 1218 0028 0022     		movs	r2, #0
 1219 002a 5A60     		str	r2, [r3, #4]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1220              		.loc 1 830 3 is_stmt 1 view .LVU334
 1221              	.LVL101:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1222              		.loc 1 830 3 is_stmt 0 view .LVU335
ARM GAS  /tmp/ccUBk765.s 			page 37


 1223 002c F4E7     		b	.L74
 1224              	.LVL102:
 1225              	.L77:
 833:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 834:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 835:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1226              		.loc 1 835 1 view .LVU336
 1227 002e 7047     		bx	lr
 1228              		.cfi_endproc
 1229              	.LFE41:
 1231              		.section	.text.integrity_walker,"ax",%progbits
 1232              		.align	1
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1237              	integrity_walker:
 1238              	.LVL103:
 1239              	.LFB42:
 836:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 837:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 838:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Debugging utilities.
 839:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 840:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 841:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct integrity_t
 842:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 843:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int prev_status;
 844:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status;
 845:Middlewares/lvgl/src/misc/lv_tlsf.c **** } integrity_t;
 846:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 847:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_insist(x) { tlsf_assert(x); if (!(x)) { status--; } }
 848:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 849:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void integrity_walker(void* ptr, size_t size, int used, void* user)
 850:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1240              		.loc 1 850 1 is_stmt 1 view -0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              		.loc 1 850 1 is_stmt 0 view .LVU338
 1245 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1246              	.LCFI12:
 1247              		.cfi_def_cfa_offset 24
 1248              		.cfi_offset 4, -24
 1249              		.cfi_offset 5, -20
 1250              		.cfi_offset 6, -16
 1251              		.cfi_offset 7, -12
 1252              		.cfi_offset 8, -8
 1253              		.cfi_offset 14, -4
 1254 0004 0F46     		mov	r7, r1
 1255 0006 1D46     		mov	r5, r3
 851:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 1256              		.loc 1 851 2 is_stmt 1 view .LVU339
 1257              		.loc 1 851 26 is_stmt 0 view .LVU340
 1258 0008 FFF7FEFF 		bl	block_from_ptr
 1259              	.LVL104:
 1260              		.loc 1 851 26 view .LVU341
 1261 000c 0446     		mov	r4, r0
 1262              	.LVL105:
ARM GAS  /tmp/ccUBk765.s 			page 38


 852:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 1263              		.loc 1 852 2 is_stmt 1 view .LVU342
 853:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 1264              		.loc 1 853 2 view .LVU343
 1265              		.loc 1 853 31 is_stmt 0 view .LVU344
 1266 000e FFF7FEFF 		bl	block_is_prev_free
 1267              	.LVL106:
 1268              		.loc 1 853 61 view .LVU345
 1269 0012 061E     		subs	r6, r0, #0
 1270 0014 18BF     		it	ne
 1271 0016 0126     		movne	r6, #1
 1272              	.LVL107:
 854:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 1273              		.loc 1 854 2 is_stmt 1 view .LVU346
 1274              		.loc 1 854 26 is_stmt 0 view .LVU347
 1275 0018 2046     		mov	r0, r4
 1276 001a FFF7FEFF 		bl	block_is_free
 1277              	.LVL108:
 1278              		.loc 1 854 51 view .LVU348
 1279 001e B0F10008 		subs	r8, r0, #0
 1280 0022 18BF     		it	ne
 1281 0024 4FF00108 		movne	r8, #1
 1282              	.LVL109:
 855:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 1283              		.loc 1 855 2 is_stmt 1 view .LVU349
 1284              		.loc 1 855 33 is_stmt 0 view .LVU350
 1285 0028 2046     		mov	r0, r4
 1286 002a FFF7FEFF 		bl	block_size
 1287              	.LVL110:
 856:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 857:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 1288              		.loc 1 857 2 is_stmt 1 view .LVU351
 858:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)used;
 1289              		.loc 1 858 2 view .LVU352
 859:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 1290              		.loc 1 859 2 view .LVU353
 1291              		.loc 1 859 2 view .LVU354
 1292 002e 2B68     		ldr	r3, [r5]
 1293 0030 B342     		cmp	r3, r6
 1294 0032 00D0     		beq	.L79
 1295              	.L80:
 1296              		.loc 1 859 2 discriminator 1 view .LVU355
 1297              		.loc 1 859 2 discriminator 1 view .LVU356
 1298              		.loc 1 859 2 discriminator 1 view .LVU357
 1299              		.loc 1 859 2 discriminator 1 view .LVU358
 1300 0034 FEE7     		b	.L80
 1301              	.L79:
 1302              		.loc 1 859 2 discriminator 5 view .LVU359
 1303              		.loc 1 859 2 discriminator 5 view .LVU360
 1304              		.loc 1 859 80 discriminator 5 view .LVU361
 860:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 1305              		.loc 1 860 2 discriminator 5 view .LVU362
 1306              		.loc 1 860 2 discriminator 5 view .LVU363
 1307 0036 B842     		cmp	r0, r7
 1308 0038 00D0     		beq	.L81
 1309              	.L82:
 1310              		.loc 1 860 2 discriminator 2 view .LVU364
ARM GAS  /tmp/ccUBk765.s 			page 39


 1311              		.loc 1 860 2 discriminator 2 view .LVU365
 1312              		.loc 1 860 2 discriminator 2 view .LVU366
 1313              		.loc 1 860 2 discriminator 2 view .LVU367
 1314 003a FEE7     		b	.L82
 1315              	.L81:
 1316              		.loc 1 860 2 discriminator 5 view .LVU368
 1317              		.loc 1 860 2 discriminator 5 view .LVU369
 1318              		.loc 1 860 64 discriminator 5 view .LVU370
 861:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 862:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->prev_status = this_status;
 1319              		.loc 1 862 2 discriminator 5 view .LVU371
 1320              		.loc 1 862 21 is_stmt 0 discriminator 5 view .LVU372
 1321 003c C5F80080 		str	r8, [r5]
 863:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 1322              		.loc 1 863 2 is_stmt 1 discriminator 5 view .LVU373
 864:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1323              		.loc 1 864 1 is_stmt 0 discriminator 5 view .LVU374
 1324 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1325              		.loc 1 864 1 discriminator 5 view .LVU375
 1326              		.cfi_endproc
 1327              	.LFE42:
 1329              		.section	.text.default_walker,"ax",%progbits
 1330              		.align	1
 1331              		.syntax unified
 1332              		.thumb
 1333              		.thumb_func
 1335              	default_walker:
 1336              	.LVL111:
 1337              	.LFB44:
 865:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 866:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check(lv_tlsf_t tlsf)
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 869:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 872:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 873:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the free lists and bitmaps are accurate. */
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 875:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 877:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int fl_map = control->fl_bitmap & (1U << i);
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 882:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 883:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that first- and second-level lists agree. */
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!fl_map)
 885:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!sl_map && "second-level map must be null");
 887:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 888:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!sl_map)
 890:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block == &control->block_null && "block list must be null");
 892:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
ARM GAS  /tmp/ccUBk765.s 			page 40


 893:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 894:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 895:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that there is at least one free block. */
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(sl_list && "no free blocks in second-level map");
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 898:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			while (block != &control->block_null)
 900:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				int fli, sli;
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 907:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				mapping_insert(block_size(block), &fli, &sli);
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 911:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 912:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 913:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 914:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return status;
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 917:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 918:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_insist
 919:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 920:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void default_walker(void* ptr, size_t size, int used, void* user)
 921:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1338              		.loc 1 921 1 is_stmt 1 view -0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 0
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              		@ link register save eliminated.
 922:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)user;
 1343              		.loc 1 922 2 view .LVU377
 923:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void*)block_fr
 1344              		.loc 1 923 112 view .LVU378
 924:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1345              		.loc 1 924 1 is_stmt 0 view .LVU379
 1346 0000 7047     		bx	lr
 1347              		.cfi_endproc
 1348              	.LFE44:
 1350              		.section	.text.tlsf_fls,"ax",%progbits
 1351              		.align	1
 1352              		.syntax unified
 1353              		.thumb
 1354              		.thumb_func
 1356              	tlsf_fls:
 1357              	.LVL112:
 1358              	.LFB2:
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 1359              		.loc 1 101 1 is_stmt 1 view -0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363              		@ link register save eliminated.
ARM GAS  /tmp/ccUBk765.s 			page 41


 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1364              		.loc 1 102 2 view .LVU381
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1365              		.loc 1 102 50 is_stmt 0 view .LVU382
 1366 0000 28B1     		cbz	r0, .L87
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1367              		.loc 1 102 30 discriminator 1 view .LVU383
 1368 0002 B0FA80F0 		clz	r0, r0
 1369              	.LVL113:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1370              		.loc 1 102 50 discriminator 1 view .LVU384
 1371 0006 C0F12000 		rsb	r0, r0, #32
 1372              	.L86:
 1373              	.LVL114:
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1374              		.loc 1 103 2 is_stmt 1 discriminator 4 view .LVU385
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1375              		.loc 1 104 1 is_stmt 0 discriminator 4 view .LVU386
 1376 000a 0138     		subs	r0, r0, #1
 1377              	.LVL115:
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1378              		.loc 1 104 1 discriminator 4 view .LVU387
 1379 000c 7047     		bx	lr
 1380              	.LVL116:
 1381              	.L87:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1382              		.loc 1 102 50 view .LVU388
 1383 000e 0020     		movs	r0, #0
 1384              	.LVL117:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1385              		.loc 1 102 50 view .LVU389
 1386 0010 FBE7     		b	.L86
 1387              		.cfi_endproc
 1388              	.LFE2:
 1390              		.section	.text.mapping_insert,"ax",%progbits
 1391              		.align	1
 1392              		.syntax unified
 1393              		.thumb
 1394              		.thumb_func
 1396              	mapping_insert:
 1397              	.LVL118:
 1398              	.LFB24:
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1399              		.loc 1 536 1 is_stmt 1 view -0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1403              		.loc 1 536 1 is_stmt 0 view .LVU391
 1404 0000 70B5     		push	{r4, r5, r6, lr}
 1405              	.LCFI13:
 1406              		.cfi_def_cfa_offset 16
 1407              		.cfi_offset 4, -16
 1408              		.cfi_offset 5, -12
 1409              		.cfi_offset 6, -8
 1410              		.cfi_offset 14, -4
 1411 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccUBk765.s 			page 42


 1412 0004 0D46     		mov	r5, r1
 1413 0006 1646     		mov	r6, r2
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 1414              		.loc 1 537 2 is_stmt 1 view .LVU392
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1415              		.loc 1 538 2 view .LVU393
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1416              		.loc 1 538 5 is_stmt 0 view .LVU394
 1417 0008 7F28     		cmp	r0, #127
 1418 000a 08D8     		bhi	.L89
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1419              		.loc 1 541 3 is_stmt 1 view .LVU395
 1420              	.LVL119:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1421              		.loc 1 542 3 view .LVU396
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1422              		.loc 1 542 6 is_stmt 0 view .LVU397
 1423 000c 0028     		cmp	r0, #0
 1424 000e 04DB     		blt	.L93
 1425              	.LVL120:
 1426              	.L90:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1427              		.loc 1 542 6 view .LVU398
 1428 0010 8410     		asrs	r4, r0, #2
 1429              	.LVL121:
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1430              		.loc 1 541 6 view .LVU399
 1431 0012 0020     		movs	r0, #0
 1432              	.LVL122:
 1433              	.L91:
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1434              		.loc 1 550 2 is_stmt 1 view .LVU400
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1435              		.loc 1 550 7 is_stmt 0 view .LVU401
 1436 0014 2860     		str	r0, [r5]
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1437              		.loc 1 551 2 is_stmt 1 view .LVU402
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1438              		.loc 1 551 7 is_stmt 0 view .LVU403
 1439 0016 3460     		str	r4, [r6]
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1440              		.loc 1 552 1 view .LVU404
 1441 0018 70BD     		pop	{r4, r5, r6, pc}
 1442              	.LVL123:
 1443              	.L93:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1444              		.loc 1 542 6 view .LVU405
 1445 001a 0330     		adds	r0, r0, #3
 1446              	.LVL124:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1447              		.loc 1 542 6 view .LVU406
 1448 001c F8E7     		b	.L90
 1449              	.LVL125:
 1450              	.L89:
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1451              		.loc 1 546 3 is_stmt 1 view .LVU407
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
ARM GAS  /tmp/ccUBk765.s 			page 43


 1452              		.loc 1 546 8 is_stmt 0 view .LVU408
 1453 001e FFF7FEFF 		bl	tlsf_fls
 1454              	.LVL126:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1455              		.loc 1 547 3 is_stmt 1 view .LVU409
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1456              		.loc 1 547 8 is_stmt 0 view .LVU410
 1457 0022 431F     		subs	r3, r0, #5
 1458 0024 DC40     		lsrs	r4, r4, r3
 1459              	.LVL127:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1460              		.loc 1 547 6 view .LVU411
 1461 0026 84F02004 		eor	r4, r4, #32
 1462              	.LVL128:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1463              		.loc 1 548 3 is_stmt 1 view .LVU412
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1464              		.loc 1 548 6 is_stmt 0 view .LVU413
 1465 002a 0638     		subs	r0, r0, #6
 1466              	.LVL129:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1467              		.loc 1 548 6 view .LVU414
 1468 002c F2E7     		b	.L91
 1469              		.cfi_endproc
 1470              	.LFE24:
 1472              		.section	.text.block_insert,"ax",%progbits
 1473              		.align	1
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1478              	block_insert:
 1479              	.LVL130:
 1480              	.LFB30:
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1481              		.loc 1 657 1 is_stmt 1 view -0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 8
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1485              		.loc 1 657 1 is_stmt 0 view .LVU416
 1486 0000 30B5     		push	{r4, r5, lr}
 1487              	.LCFI14:
 1488              		.cfi_def_cfa_offset 12
 1489              		.cfi_offset 4, -12
 1490              		.cfi_offset 5, -8
 1491              		.cfi_offset 14, -4
 1492 0002 83B0     		sub	sp, sp, #12
 1493              	.LCFI15:
 1494              		.cfi_def_cfa_offset 24
 1495 0004 0546     		mov	r5, r0
 1496 0006 0C46     		mov	r4, r1
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1497              		.loc 1 658 2 is_stmt 1 view .LVU417
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1498              		.loc 1 659 2 view .LVU418
 1499 0008 0846     		mov	r0, r1
 1500              	.LVL131:
ARM GAS  /tmp/ccUBk765.s 			page 44


 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1501              		.loc 1 659 2 is_stmt 0 view .LVU419
 1502 000a FFF7FEFF 		bl	block_size
 1503              	.LVL132:
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1504              		.loc 1 659 2 view .LVU420
 1505 000e 6A46     		mov	r2, sp
 1506 0010 01A9     		add	r1, sp, #4
 1507 0012 FFF7FEFF 		bl	mapping_insert
 1508              	.LVL133:
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1509              		.loc 1 660 2 is_stmt 1 view .LVU421
 1510 0016 009B     		ldr	r3, [sp]
 1511 0018 019A     		ldr	r2, [sp, #4]
 1512 001a 2146     		mov	r1, r4
 1513 001c 2846     		mov	r0, r5
 1514 001e FFF7FEFF 		bl	insert_free_block
 1515              	.LVL134:
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1516              		.loc 1 661 1 is_stmt 0 view .LVU422
 1517 0022 03B0     		add	sp, sp, #12
 1518              	.LCFI16:
 1519              		.cfi_def_cfa_offset 12
 1520              		@ sp needed
 1521 0024 30BD     		pop	{r4, r5, pc}
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1522              		.loc 1 661 1 view .LVU423
 1523              		.cfi_endproc
 1524              	.LFE30:
 1526              		.section	.text.block_trim_free,"ax",%progbits
 1527              		.align	1
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1532              	block_trim_free:
 1533              	.LVL135:
 1534              	.LFB36:
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1535              		.loc 1 733 1 is_stmt 1 view -0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1539              		.loc 1 733 1 is_stmt 0 view .LVU425
 1540 0000 70B5     		push	{r4, r5, r6, lr}
 1541              	.LCFI17:
 1542              		.cfi_def_cfa_offset 16
 1543              		.cfi_offset 4, -16
 1544              		.cfi_offset 5, -12
 1545              		.cfi_offset 6, -8
 1546              		.cfi_offset 14, -4
 1547 0002 0646     		mov	r6, r0
 1548 0004 0C46     		mov	r4, r1
 1549 0006 1546     		mov	r5, r2
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1550              		.loc 1 734 2 is_stmt 1 view .LVU426
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
ARM GAS  /tmp/ccUBk765.s 			page 45


 1551              		.loc 1 734 2 view .LVU427
 1552 0008 0846     		mov	r0, r1
 1553              	.LVL136:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1554              		.loc 1 734 2 is_stmt 0 view .LVU428
 1555 000a FFF7FEFF 		bl	block_is_free
 1556              	.LVL137:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1557              		.loc 1 734 2 view .LVU429
 1558 000e 00B9     		cbnz	r0, .L97
 1559              	.L98:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1560              		.loc 1 734 2 is_stmt 1 discriminator 1 view .LVU430
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1561              		.loc 1 734 2 discriminator 1 view .LVU431
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1562              		.loc 1 734 2 discriminator 1 view .LVU432
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1563              		.loc 1 734 2 discriminator 1 view .LVU433
 1564 0010 FEE7     		b	.L98
 1565              	.L97:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1566              		.loc 1 734 2 discriminator 4 view .LVU434
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1567              		.loc 1 735 2 discriminator 4 view .LVU435
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1568              		.loc 1 735 6 is_stmt 0 discriminator 4 view .LVU436
 1569 0012 2946     		mov	r1, r5
 1570 0014 2046     		mov	r0, r4
 1571 0016 FFF7FEFF 		bl	block_can_split
 1572              	.LVL138:
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1573              		.loc 1 735 5 discriminator 4 view .LVU437
 1574 001a 00B9     		cbnz	r0, .L101
 1575              	.LVL139:
 1576              	.L96:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1577              		.loc 1 742 1 view .LVU438
 1578 001c 70BD     		pop	{r4, r5, r6, pc}
 1579              	.LVL140:
 1580              	.L101:
 1581              	.LBB3:
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1582              		.loc 1 737 3 is_stmt 1 view .LVU439
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1583              		.loc 1 737 37 is_stmt 0 view .LVU440
 1584 001e 2946     		mov	r1, r5
 1585 0020 2046     		mov	r0, r4
 1586 0022 FFF7FEFF 		bl	block_split
 1587              	.LVL141:
 1588 0026 0546     		mov	r5, r0
 1589              	.LVL142:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1590              		.loc 1 738 3 is_stmt 1 view .LVU441
 1591 0028 2046     		mov	r0, r4
 1592              	.LVL143:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
ARM GAS  /tmp/ccUBk765.s 			page 46


 1593              		.loc 1 738 3 is_stmt 0 view .LVU442
 1594 002a FFF7FEFF 		bl	block_link_next
 1595              	.LVL144:
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 1596              		.loc 1 739 3 is_stmt 1 view .LVU443
 1597 002e 2846     		mov	r0, r5
 1598 0030 FFF7FEFF 		bl	block_set_prev_free
 1599              	.LVL145:
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1600              		.loc 1 740 3 view .LVU444
 1601 0034 2946     		mov	r1, r5
 1602 0036 3046     		mov	r0, r6
 1603 0038 FFF7FEFF 		bl	block_insert
 1604              	.LVL146:
 1605              	.LBE3:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1606              		.loc 1 742 1 is_stmt 0 view .LVU445
 1607 003c EEE7     		b	.L96
 1608              		.cfi_endproc
 1609              	.LFE36:
 1611              		.section	.text.block_prepare_used,"ax",%progbits
 1612              		.align	1
 1613              		.syntax unified
 1614              		.thumb
 1615              		.thumb_func
 1617              	block_prepare_used:
 1618              	.LVL147:
 1619              	.LFB40:
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1620              		.loc 1 806 1 is_stmt 1 view -0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1624              		.loc 1 806 1 is_stmt 0 view .LVU447
 1625 0000 10B5     		push	{r4, lr}
 1626              	.LCFI18:
 1627              		.cfi_def_cfa_offset 8
 1628              		.cfi_offset 4, -8
 1629              		.cfi_offset 14, -4
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1630              		.loc 1 807 2 is_stmt 1 view .LVU448
 1631              	.LVL148:
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1632              		.loc 1 808 2 view .LVU449
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1633              		.loc 1 808 5 is_stmt 0 view .LVU450
 1634 0002 0C46     		mov	r4, r1
 1635 0004 51B1     		cbz	r1, .L106
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1636              		.loc 1 810 3 is_stmt 1 view .LVU451
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1637              		.loc 1 810 3 view .LVU452
 1638 0006 02B9     		cbnz	r2, .L104
 1639              	.L105:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1640              		.loc 1 810 3 discriminator 1 view .LVU453
ARM GAS  /tmp/ccUBk765.s 			page 47


 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1641              		.loc 1 810 3 discriminator 1 view .LVU454
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1642              		.loc 1 810 3 discriminator 1 view .LVU455
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1643              		.loc 1 810 3 discriminator 1 view .LVU456
 1644 0008 FEE7     		b	.L105
 1645              	.L104:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1646              		.loc 1 810 3 discriminator 2 view .LVU457
 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 1647              		.loc 1 811 3 discriminator 2 view .LVU458
 1648 000a FFF7FEFF 		bl	block_trim_free
 1649              	.LVL149:
 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 1650              		.loc 1 812 3 discriminator 2 view .LVU459
 1651 000e 2046     		mov	r0, r4
 1652 0010 FFF7FEFF 		bl	block_mark_as_used
 1653              	.LVL150:
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1654              		.loc 1 813 3 discriminator 2 view .LVU460
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1655              		.loc 1 813 7 is_stmt 0 discriminator 2 view .LVU461
 1656 0014 2046     		mov	r0, r4
 1657 0016 FFF7FEFF 		bl	block_to_ptr
 1658              	.LVL151:
 1659              	.L102:
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1660              		.loc 1 816 1 view .LVU462
 1661 001a 10BD     		pop	{r4, pc}
 1662              	.LVL152:
 1663              	.L106:
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1664              		.loc 1 807 8 view .LVU463
 1665 001c 0846     		mov	r0, r1
 1666              	.LVL153:
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1667              		.loc 1 815 2 is_stmt 1 view .LVU464
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1668              		.loc 1 815 9 is_stmt 0 view .LVU465
 1669 001e FCE7     		b	.L102
 1670              		.cfi_endproc
 1671              	.LFE40:
 1673              		.section	.text.block_trim_free_leading,"ax",%progbits
 1674              		.align	1
 1675              		.syntax unified
 1676              		.thumb
 1677              		.thumb_func
 1679              	block_trim_free_leading:
 1680              	.LVL154:
 1681              	.LFB38:
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1682              		.loc 1 760 1 is_stmt 1 view -0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 0
 1685              		@ frame_needed = 0, uses_anonymous_args = 0
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
ARM GAS  /tmp/ccUBk765.s 			page 48


 1686              		.loc 1 760 1 is_stmt 0 view .LVU467
 1687 0000 70B5     		push	{r4, r5, r6, lr}
 1688              	.LCFI19:
 1689              		.cfi_def_cfa_offset 16
 1690              		.cfi_offset 4, -16
 1691              		.cfi_offset 5, -12
 1692              		.cfi_offset 6, -8
 1693              		.cfi_offset 14, -4
 1694 0002 0646     		mov	r6, r0
 1695 0004 0C46     		mov	r4, r1
 1696 0006 1546     		mov	r5, r2
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1697              		.loc 1 761 2 is_stmt 1 view .LVU468
 1698              	.LVL155:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1699              		.loc 1 762 2 view .LVU469
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1700              		.loc 1 762 6 is_stmt 0 view .LVU470
 1701 0008 1146     		mov	r1, r2
 1702              	.LVL156:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1703              		.loc 1 762 6 view .LVU471
 1704 000a 2046     		mov	r0, r4
 1705              	.LVL157:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1706              		.loc 1 762 6 view .LVU472
 1707 000c FFF7FEFF 		bl	block_can_split
 1708              	.LVL158:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1709              		.loc 1 762 5 view .LVU473
 1710 0010 08B9     		cbnz	r0, .L111
 1711              	.LVL159:
 1712              	.L109:
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1713              		.loc 1 772 2 is_stmt 1 view .LVU474
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1714              		.loc 1 773 1 is_stmt 0 view .LVU475
 1715 0012 2046     		mov	r0, r4
 1716 0014 70BD     		pop	{r4, r5, r6, pc}
 1717              	.LVL160:
 1718              	.L111:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1719              		.loc 1 765 3 is_stmt 1 view .LVU476
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1720              		.loc 1 765 21 is_stmt 0 view .LVU477
 1721 0016 291F     		subs	r1, r5, #4
 1722 0018 2046     		mov	r0, r4
 1723 001a FFF7FEFF 		bl	block_split
 1724              	.LVL161:
 1725 001e 0546     		mov	r5, r0
 1726              	.LVL162:
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1727              		.loc 1 766 3 is_stmt 1 view .LVU478
 1728 0020 FFF7FEFF 		bl	block_set_prev_free
 1729              	.LVL163:
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 1730              		.loc 1 768 3 view .LVU479
ARM GAS  /tmp/ccUBk765.s 			page 49


 1731 0024 2046     		mov	r0, r4
 1732 0026 FFF7FEFF 		bl	block_link_next
 1733              	.LVL164:
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1734              		.loc 1 769 3 view .LVU480
 1735 002a 2146     		mov	r1, r4
 1736 002c 3046     		mov	r0, r6
 1737 002e FFF7FEFF 		bl	block_insert
 1738              	.LVL165:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1739              		.loc 1 765 21 is_stmt 0 view .LVU481
 1740 0032 2C46     		mov	r4, r5
 1741              	.LVL166:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1742              		.loc 1 765 21 view .LVU482
 1743 0034 EDE7     		b	.L109
 1744              		.cfi_endproc
 1745              	.LFE38:
 1747              		.section	.text.block_remove,"ax",%progbits
 1748              		.align	1
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1753              	block_remove:
 1754              	.LVL167:
 1755              	.LFB29:
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1756              		.loc 1 649 1 is_stmt 1 view -0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 8
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1760              		.loc 1 649 1 is_stmt 0 view .LVU484
 1761 0000 30B5     		push	{r4, r5, lr}
 1762              	.LCFI20:
 1763              		.cfi_def_cfa_offset 12
 1764              		.cfi_offset 4, -12
 1765              		.cfi_offset 5, -8
 1766              		.cfi_offset 14, -4
 1767 0002 83B0     		sub	sp, sp, #12
 1768              	.LCFI21:
 1769              		.cfi_def_cfa_offset 24
 1770 0004 0546     		mov	r5, r0
 1771 0006 0C46     		mov	r4, r1
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1772              		.loc 1 650 2 is_stmt 1 view .LVU485
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1773              		.loc 1 651 2 view .LVU486
 1774 0008 0846     		mov	r0, r1
 1775              	.LVL168:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1776              		.loc 1 651 2 is_stmt 0 view .LVU487
 1777 000a FFF7FEFF 		bl	block_size
 1778              	.LVL169:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1779              		.loc 1 651 2 view .LVU488
 1780 000e 6A46     		mov	r2, sp
ARM GAS  /tmp/ccUBk765.s 			page 50


 1781 0010 01A9     		add	r1, sp, #4
 1782 0012 FFF7FEFF 		bl	mapping_insert
 1783              	.LVL170:
 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1784              		.loc 1 652 2 is_stmt 1 view .LVU489
 1785 0016 009B     		ldr	r3, [sp]
 1786 0018 019A     		ldr	r2, [sp, #4]
 1787 001a 2146     		mov	r1, r4
 1788 001c 2846     		mov	r0, r5
 1789 001e FFF7FEFF 		bl	remove_free_block
 1790              	.LVL171:
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1791              		.loc 1 653 1 is_stmt 0 view .LVU490
 1792 0022 03B0     		add	sp, sp, #12
 1793              	.LCFI22:
 1794              		.cfi_def_cfa_offset 12
 1795              		@ sp needed
 1796 0024 30BD     		pop	{r4, r5, pc}
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1797              		.loc 1 653 1 view .LVU491
 1798              		.cfi_endproc
 1799              	.LFE29:
 1801              		.section	.text.block_merge_prev,"ax",%progbits
 1802              		.align	1
 1803              		.syntax unified
 1804              		.thumb
 1805              		.thumb_func
 1807              	block_merge_prev:
 1808              	.LVL172:
 1809              	.LFB34:
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1810              		.loc 1 702 1 is_stmt 1 view -0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 0
 1813              		@ frame_needed = 0, uses_anonymous_args = 0
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1814              		.loc 1 702 1 is_stmt 0 view .LVU493
 1815 0000 70B5     		push	{r4, r5, r6, lr}
 1816              	.LCFI23:
 1817              		.cfi_def_cfa_offset 16
 1818              		.cfi_offset 4, -16
 1819              		.cfi_offset 5, -12
 1820              		.cfi_offset 6, -8
 1821              		.cfi_offset 14, -4
 1822 0002 0546     		mov	r5, r0
 1823 0004 0C46     		mov	r4, r1
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1824              		.loc 1 703 2 is_stmt 1 view .LVU494
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1825              		.loc 1 703 6 is_stmt 0 view .LVU495
 1826 0006 0846     		mov	r0, r1
 1827              	.LVL173:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1828              		.loc 1 703 6 view .LVU496
 1829 0008 FFF7FEFF 		bl	block_is_prev_free
 1830              	.LVL174:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  /tmp/ccUBk765.s 			page 51


 1831              		.loc 1 703 5 view .LVU497
 1832 000c 08B9     		cbnz	r0, .L121
 1833              	.L115:
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1834              		.loc 1 712 2 is_stmt 1 view .LVU498
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1835              		.loc 1 713 1 is_stmt 0 view .LVU499
 1836 000e 2046     		mov	r0, r4
 1837 0010 70BD     		pop	{r4, r5, r6, pc}
 1838              	.LVL175:
 1839              	.L121:
 1840              	.LBB4:
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1841              		.loc 1 705 3 is_stmt 1 view .LVU500
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1842              		.loc 1 705 26 is_stmt 0 view .LVU501
 1843 0012 2046     		mov	r0, r4
 1844 0014 FFF7FEFF 		bl	block_prev
 1845              	.LVL176:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1846              		.loc 1 706 3 is_stmt 1 view .LVU502
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1847              		.loc 1 706 3 view .LVU503
 1848 0018 0646     		mov	r6, r0
 1849 001a 18B1     		cbz	r0, .L117
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1850              		.loc 1 706 3 discriminator 2 view .LVU504
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1851              		.loc 1 707 3 discriminator 2 view .LVU505
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1852              		.loc 1 707 3 discriminator 2 view .LVU506
 1853 001c FFF7FEFF 		bl	block_is_free
 1854              	.LVL177:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1855              		.loc 1 707 3 is_stmt 0 discriminator 2 view .LVU507
 1856 0020 08B9     		cbnz	r0, .L118
 1857              	.L119:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1858              		.loc 1 707 3 is_stmt 1 discriminator 2 view .LVU508
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1859              		.loc 1 707 3 discriminator 2 view .LVU509
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1860              		.loc 1 707 3 discriminator 2 view .LVU510
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1861              		.loc 1 707 3 discriminator 2 view .LVU511
 1862 0022 FEE7     		b	.L119
 1863              	.LVL178:
 1864              	.L117:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1865              		.loc 1 706 3 discriminator 1 view .LVU512
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1866              		.loc 1 706 3 discriminator 1 view .LVU513
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1867              		.loc 1 706 3 discriminator 1 view .LVU514
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1868              		.loc 1 706 3 discriminator 1 view .LVU515
 1869 0024 FEE7     		b	.L117
ARM GAS  /tmp/ccUBk765.s 			page 52


 1870              	.LVL179:
 1871              	.L118:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1872              		.loc 1 707 3 discriminator 4 view .LVU516
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 1873              		.loc 1 708 3 discriminator 4 view .LVU517
 1874 0026 3146     		mov	r1, r6
 1875 0028 2846     		mov	r0, r5
 1876 002a FFF7FEFF 		bl	block_remove
 1877              	.LVL180:
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1878              		.loc 1 709 3 discriminator 4 view .LVU518
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1879              		.loc 1 709 11 is_stmt 0 discriminator 4 view .LVU519
 1880 002e 2146     		mov	r1, r4
 1881 0030 3046     		mov	r0, r6
 1882 0032 FFF7FEFF 		bl	block_absorb
 1883              	.LVL181:
 1884 0036 0446     		mov	r4, r0
 1885              	.LVL182:
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1886              		.loc 1 709 11 discriminator 4 view .LVU520
 1887 0038 E9E7     		b	.L115
 1888              	.LBE4:
 1889              		.cfi_endproc
 1890              	.LFE34:
 1892              		.section	.text.block_merge_next,"ax",%progbits
 1893              		.align	1
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1898              	block_merge_next:
 1899              	.LVL183:
 1900              	.LFB35:
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1901              		.loc 1 717 1 is_stmt 1 view -0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1905              		.loc 1 717 1 is_stmt 0 view .LVU522
 1906 0000 70B5     		push	{r4, r5, r6, lr}
 1907              	.LCFI24:
 1908              		.cfi_def_cfa_offset 16
 1909              		.cfi_offset 4, -16
 1910              		.cfi_offset 5, -12
 1911              		.cfi_offset 6, -8
 1912              		.cfi_offset 14, -4
 1913 0002 0546     		mov	r5, r0
 1914 0004 0C46     		mov	r4, r1
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1915              		.loc 1 718 2 is_stmt 1 view .LVU523
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1916              		.loc 1 718 25 is_stmt 0 view .LVU524
 1917 0006 0846     		mov	r0, r1
 1918              	.LVL184:
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
ARM GAS  /tmp/ccUBk765.s 			page 53


 1919              		.loc 1 718 25 view .LVU525
 1920 0008 FFF7FEFF 		bl	block_next
 1921              	.LVL185:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1922              		.loc 1 719 2 is_stmt 1 view .LVU526
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1923              		.loc 1 719 2 view .LVU527
 1924 000c 40B1     		cbz	r0, .L124
 1925 000e 0646     		mov	r6, r0
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1926              		.loc 1 719 2 discriminator 2 view .LVU528
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1927              		.loc 1 721 2 discriminator 2 view .LVU529
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1928              		.loc 1 721 6 is_stmt 0 discriminator 2 view .LVU530
 1929 0010 FFF7FEFF 		bl	block_is_free
 1930              	.LVL186:
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1931              		.loc 1 721 5 discriminator 2 view .LVU531
 1932 0014 70B1     		cbz	r0, .L125
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1933              		.loc 1 723 3 is_stmt 1 view .LVU532
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1934              		.loc 1 723 3 view .LVU533
 1935 0016 2046     		mov	r0, r4
 1936 0018 FFF7FEFF 		bl	block_is_last
 1937              	.LVL187:
 1938 001c 08B1     		cbz	r0, .L126
 1939              	.L127:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1940              		.loc 1 723 3 discriminator 2 view .LVU534
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1941              		.loc 1 723 3 discriminator 2 view .LVU535
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1942              		.loc 1 723 3 discriminator 2 view .LVU536
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1943              		.loc 1 723 3 discriminator 2 view .LVU537
 1944 001e FEE7     		b	.L127
 1945              	.LVL188:
 1946              	.L124:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1947              		.loc 1 719 2 discriminator 1 view .LVU538
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1948              		.loc 1 719 2 discriminator 1 view .LVU539
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1949              		.loc 1 719 2 discriminator 1 view .LVU540
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1950              		.loc 1 719 2 discriminator 1 view .LVU541
 1951 0020 FEE7     		b	.L124
 1952              	.LVL189:
 1953              	.L126:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1954              		.loc 1 723 3 discriminator 2 view .LVU542
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 1955              		.loc 1 724 3 discriminator 2 view .LVU543
 1956 0022 3146     		mov	r1, r6
 1957 0024 2846     		mov	r0, r5
ARM GAS  /tmp/ccUBk765.s 			page 54


 1958 0026 FFF7FEFF 		bl	block_remove
 1959              	.LVL190:
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1960              		.loc 1 725 3 discriminator 2 view .LVU544
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1961              		.loc 1 725 11 is_stmt 0 discriminator 2 view .LVU545
 1962 002a 3146     		mov	r1, r6
 1963 002c 2046     		mov	r0, r4
 1964 002e FFF7FEFF 		bl	block_absorb
 1965              	.LVL191:
 1966 0032 0446     		mov	r4, r0
 1967              	.LVL192:
 1968              	.L125:
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1969              		.loc 1 728 2 is_stmt 1 view .LVU546
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1970              		.loc 1 729 1 is_stmt 0 view .LVU547
 1971 0034 2046     		mov	r0, r4
 1972 0036 70BD     		pop	{r4, r5, r6, pc}
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1973              		.loc 1 729 1 view .LVU548
 1974              		.cfi_endproc
 1975              	.LFE35:
 1977              		.section	.text.block_trim_used,"ax",%progbits
 1978              		.align	1
 1979              		.syntax unified
 1980              		.thumb
 1981              		.thumb_func
 1983              	block_trim_used:
 1984              	.LVL193:
 1985              	.LFB37:
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 1986              		.loc 1 746 1 is_stmt 1 view -0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 0
 1989              		@ frame_needed = 0, uses_anonymous_args = 0
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 1990              		.loc 1 746 1 is_stmt 0 view .LVU550
 1991 0000 70B5     		push	{r4, r5, r6, lr}
 1992              	.LCFI25:
 1993              		.cfi_def_cfa_offset 16
 1994              		.cfi_offset 4, -16
 1995              		.cfi_offset 5, -12
 1996              		.cfi_offset 6, -8
 1997              		.cfi_offset 14, -4
 1998 0002 0646     		mov	r6, r0
 1999 0004 0C46     		mov	r4, r1
 2000 0006 1546     		mov	r5, r2
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2001              		.loc 1 747 2 is_stmt 1 view .LVU551
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2002              		.loc 1 747 2 view .LVU552
 2003 0008 0846     		mov	r0, r1
 2004              	.LVL194:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2005              		.loc 1 747 2 is_stmt 0 view .LVU553
 2006 000a FFF7FEFF 		bl	block_is_free
ARM GAS  /tmp/ccUBk765.s 			page 55


 2007              	.LVL195:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2008              		.loc 1 747 2 view .LVU554
 2009 000e 00B1     		cbz	r0, .L130
 2010              	.L131:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2011              		.loc 1 747 2 is_stmt 1 discriminator 1 view .LVU555
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2012              		.loc 1 747 2 discriminator 1 view .LVU556
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2013              		.loc 1 747 2 discriminator 1 view .LVU557
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2014              		.loc 1 747 2 discriminator 1 view .LVU558
 2015 0010 FEE7     		b	.L131
 2016              	.L130:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2017              		.loc 1 747 2 discriminator 2 view .LVU559
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2018              		.loc 1 748 2 discriminator 2 view .LVU560
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2019              		.loc 1 748 6 is_stmt 0 discriminator 2 view .LVU561
 2020 0012 2946     		mov	r1, r5
 2021 0014 2046     		mov	r0, r4
 2022 0016 FFF7FEFF 		bl	block_can_split
 2023              	.LVL196:
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2024              		.loc 1 748 5 discriminator 2 view .LVU562
 2025 001a 00B9     		cbnz	r0, .L134
 2026              	.LVL197:
 2027              	.L129:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2028              		.loc 1 757 1 view .LVU563
 2029 001c 70BD     		pop	{r4, r5, r6, pc}
 2030              	.LVL198:
 2031              	.L134:
 2032              	.LBB5:
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2033              		.loc 1 751 3 is_stmt 1 view .LVU564
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2034              		.loc 1 751 37 is_stmt 0 view .LVU565
 2035 001e 2946     		mov	r1, r5
 2036 0020 2046     		mov	r0, r4
 2037 0022 FFF7FEFF 		bl	block_split
 2038              	.LVL199:
 2039 0026 0446     		mov	r4, r0
 2040              	.LVL200:
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2041              		.loc 1 752 3 is_stmt 1 view .LVU566
 2042 0028 FFF7FEFF 		bl	block_set_prev_used
 2043              	.LVL201:
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2044              		.loc 1 754 3 view .LVU567
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2045              		.loc 1 754 21 is_stmt 0 view .LVU568
 2046 002c 2146     		mov	r1, r4
 2047 002e 3046     		mov	r0, r6
 2048 0030 FFF7FEFF 		bl	block_merge_next
ARM GAS  /tmp/ccUBk765.s 			page 56


 2049              	.LVL202:
 2050 0034 0146     		mov	r1, r0
 2051              	.LVL203:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2052              		.loc 1 755 3 is_stmt 1 view .LVU569
 2053 0036 3046     		mov	r0, r6
 2054              	.LVL204:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2055              		.loc 1 755 3 is_stmt 0 view .LVU570
 2056 0038 FFF7FEFF 		bl	block_insert
 2057              	.LVL205:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2058              		.loc 1 755 3 view .LVU571
 2059              	.LBE5:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2060              		.loc 1 757 1 view .LVU572
 2061 003c EEE7     		b	.L129
 2062              		.cfi_endproc
 2063              	.LFE37:
 2065              		.section	.text.mapping_search,"ax",%progbits
 2066              		.align	1
 2067              		.syntax unified
 2068              		.thumb
 2069              		.thumb_func
 2071              	mapping_search:
 2072              	.LVL206:
 2073              	.LFB25:
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2074              		.loc 1 556 1 is_stmt 1 view -0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 0
 2077              		@ frame_needed = 0, uses_anonymous_args = 0
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2078              		.loc 1 556 1 is_stmt 0 view .LVU574
 2079 0000 70B5     		push	{r4, r5, r6, lr}
 2080              	.LCFI26:
 2081              		.cfi_def_cfa_offset 16
 2082              		.cfi_offset 4, -16
 2083              		.cfi_offset 5, -12
 2084              		.cfi_offset 6, -8
 2085              		.cfi_offset 14, -4
 2086 0002 0446     		mov	r4, r0
 2087 0004 0D46     		mov	r5, r1
 2088 0006 1646     		mov	r6, r2
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2089              		.loc 1 557 2 is_stmt 1 view .LVU575
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2090              		.loc 1 557 5 is_stmt 0 view .LVU576
 2091 0008 7F28     		cmp	r0, #127
 2092 000a 06D9     		bls	.L136
 2093              	.LBB6:
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2094              		.loc 1 559 3 is_stmt 1 view .LVU577
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2095              		.loc 1 559 31 is_stmt 0 view .LVU578
 2096 000c FFF7FEFF 		bl	tlsf_fls
 2097              	.LVL207:
ARM GAS  /tmp/ccUBk765.s 			page 57


 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2098              		.loc 1 559 52 view .LVU579
 2099 0010 431F     		subs	r3, r0, #5
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2100              		.loc 1 559 27 view .LVU580
 2101 0012 0120     		movs	r0, #1
 2102 0014 9840     		lsls	r0, r0, r3
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2103              		.loc 1 559 76 view .LVU581
 2104 0016 0138     		subs	r0, r0, #1
 2105              	.LVL208:
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2106              		.loc 1 560 3 is_stmt 1 view .LVU582
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2107              		.loc 1 560 8 is_stmt 0 view .LVU583
 2108 0018 0444     		add	r4, r4, r0
 2109              	.LVL209:
 2110              	.L136:
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2111              		.loc 1 560 8 view .LVU584
 2112              	.LBE6:
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2113              		.loc 1 562 2 is_stmt 1 view .LVU585
 2114 001a 3246     		mov	r2, r6
 2115 001c 2946     		mov	r1, r5
 2116 001e 2046     		mov	r0, r4
 2117 0020 FFF7FEFF 		bl	mapping_insert
 2118              	.LVL210:
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2119              		.loc 1 563 1 is_stmt 0 view .LVU586
 2120 0024 70BD     		pop	{r4, r5, r6, pc}
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2121              		.loc 1 563 1 view .LVU587
 2122              		.cfi_endproc
 2123              	.LFE25:
 2125              		.section	.text.tlsf_ffs,"ax",%progbits
 2126              		.align	1
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2131              	tlsf_ffs:
 2132              	.LVL211:
 2133              	.LFB1:
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2134              		.loc 1 94 1 is_stmt 1 view -0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 0
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138              		@ link register save eliminated.
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2139              		.loc 1 94 1 is_stmt 0 view .LVU589
 2140 0000 0346     		mov	r3, r0
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2141              		.loc 1 95 2 is_stmt 1 view .LVU590
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2142              		.loc 1 95 9 is_stmt 0 view .LVU591
 2143 0002 90FAA0F0 		rbit	r0, r0
ARM GAS  /tmp/ccUBk765.s 			page 58


 2144              	.LVL212:
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2145              		.loc 1 95 9 view .LVU592
 2146 0006 B0FA80F0 		clz	r0, r0
 2147 000a 0BB9     		cbnz	r3, .L139
 2148 000c 4FF0FF30 		mov	r0, #-1
 2149              	.L139:
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2150              		.loc 1 96 1 view .LVU593
 2151 0010 7047     		bx	lr
 2152              		.cfi_endproc
 2153              	.LFE1:
 2155              		.section	.text.search_suitable_block,"ax",%progbits
 2156              		.align	1
 2157              		.syntax unified
 2158              		.thumb
 2159              		.thumb_func
 2161              	search_suitable_block:
 2162              	.LVL213:
 2163              	.LFB26:
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2164              		.loc 1 566 1 is_stmt 1 view -0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 0
 2167              		@ frame_needed = 0, uses_anonymous_args = 0
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2168              		.loc 1 566 1 is_stmt 0 view .LVU595
 2169 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2170              	.LCFI27:
 2171              		.cfi_def_cfa_offset 24
 2172              		.cfi_offset 3, -24
 2173              		.cfi_offset 4, -20
 2174              		.cfi_offset 5, -16
 2175              		.cfi_offset 6, -12
 2176              		.cfi_offset 7, -8
 2177              		.cfi_offset 14, -4
 2178 0002 0446     		mov	r4, r0
 2179 0004 1646     		mov	r6, r2
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2180              		.loc 1 567 2 is_stmt 1 view .LVU596
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2181              		.loc 1 567 6 is_stmt 0 view .LVU597
 2182 0006 0D68     		ldr	r5, [r1]
 2183              	.LVL214:
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2184              		.loc 1 568 2 is_stmt 1 view .LVU598
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2185              		.loc 1 568 6 is_stmt 0 view .LVU599
 2186 0008 1268     		ldr	r2, [r2]
 2187              	.LVL215:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2188              		.loc 1 574 2 is_stmt 1 view .LVU600
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2189              		.loc 1 574 42 is_stmt 0 view .LVU601
 2190 000a 2B1D     		adds	r3, r5, #4
 2191 000c 00EB8303 		add	r3, r0, r3, lsl #2
 2192 0010 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccUBk765.s 			page 59


 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2193              		.loc 1 574 54 view .LVU602
 2194 0012 4FF0FF30 		mov	r0, #-1
 2195              	.LVL216:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2196              		.loc 1 574 54 view .LVU603
 2197 0016 9040     		lsls	r0, r0, r2
 2198              	.LVL217:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2199              		.loc 1 575 2 is_stmt 1 view .LVU604
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2200              		.loc 1 575 5 is_stmt 0 view .LVU605
 2201 0018 1840     		ands	r0, r3, r0
 2202              	.LVL218:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2203              		.loc 1 575 5 view .LVU606
 2204 001a 10D1     		bne	.L141
 2205 001c 0F46     		mov	r7, r1
 2206              	.LBB7:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2207              		.loc 1 578 3 is_stmt 1 view .LVU607
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2208              		.loc 1 578 38 is_stmt 0 view .LVU608
 2209 001e 2269     		ldr	r2, [r4, #16]
 2210              	.LVL219:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2211              		.loc 1 578 64 view .LVU609
 2212 0020 0135     		adds	r5, r5, #1
 2213              	.LVL220:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2214              		.loc 1 578 57 view .LVU610
 2215 0022 4FF0FF33 		mov	r3, #-1
 2216 0026 AB40     		lsls	r3, r3, r5
 2217              	.LVL221:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2218              		.loc 1 579 3 is_stmt 1 view .LVU611
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2219              		.loc 1 579 6 is_stmt 0 view .LVU612
 2220 0028 12EA0300 		ands	r0, r2, r3
 2221              	.LVL222:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2222              		.loc 1 579 6 view .LVU613
 2223 002c 13D0     		beq	.L145
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2224              		.loc 1 585 3 is_stmt 1 view .LVU614
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2225              		.loc 1 585 8 is_stmt 0 view .LVU615
 2226 002e FFF7FEFF 		bl	tlsf_ffs
 2227              	.LVL223:
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2228              		.loc 1 585 8 view .LVU616
 2229 0032 0546     		mov	r5, r0
 2230              	.LVL224:
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2231              		.loc 1 586 3 is_stmt 1 view .LVU617
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2232              		.loc 1 586 8 is_stmt 0 view .LVU618
ARM GAS  /tmp/ccUBk765.s 			page 60


 2233 0034 3860     		str	r0, [r7]
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2234              		.loc 1 587 3 is_stmt 1 view .LVU619
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2235              		.loc 1 587 10 is_stmt 0 view .LVU620
 2236 0036 031D     		adds	r3, r0, #4
 2237 0038 04EB8303 		add	r3, r4, r3, lsl #2
 2238 003c 5868     		ldr	r0, [r3, #4]
 2239              	.LVL225:
 2240              	.L141:
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2241              		.loc 1 587 10 view .LVU621
 2242              	.LBE7:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2243              		.loc 1 589 2 is_stmt 1 view .LVU622
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2244              		.loc 1 589 2 view .LVU623
 2245 003e 00B9     		cbnz	r0, .L143
 2246              	.L144:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2247              		.loc 1 589 2 discriminator 1 view .LVU624
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2248              		.loc 1 589 2 discriminator 1 view .LVU625
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2249              		.loc 1 589 2 discriminator 1 view .LVU626
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2250              		.loc 1 589 2 discriminator 1 view .LVU627
 2251 0040 FEE7     		b	.L144
 2252              	.L143:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2253              		.loc 1 589 2 discriminator 2 view .LVU628
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2254              		.loc 1 590 2 discriminator 2 view .LVU629
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2255              		.loc 1 590 7 is_stmt 0 discriminator 2 view .LVU630
 2256 0042 FFF7FEFF 		bl	tlsf_ffs
 2257              	.LVL226:
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2258              		.loc 1 591 2 is_stmt 1 discriminator 2 view .LVU631
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2259              		.loc 1 591 7 is_stmt 0 discriminator 2 view .LVU632
 2260 0046 3060     		str	r0, [r6]
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2261              		.loc 1 594 2 is_stmt 1 discriminator 2 view .LVU633
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2262              		.loc 1 594 28 is_stmt 0 discriminator 2 view .LVU634
 2263 0048 00EB4513 		add	r3, r0, r5, lsl #5
 2264 004c 0C33     		adds	r3, r3, #12
 2265 004e 04EB8304 		add	r4, r4, r3, lsl #2
 2266              	.LVL227:
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2267              		.loc 1 594 28 discriminator 2 view .LVU635
 2268 0052 6068     		ldr	r0, [r4, #4]
 2269              	.LVL228:
 2270              	.L140:
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2271              		.loc 1 595 1 view .LVU636
ARM GAS  /tmp/ccUBk765.s 			page 61


 2272 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2273              	.LVL229:
 2274              	.L145:
 2275              	.LBB8:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2276              		.loc 1 582 11 view .LVU637
 2277 0056 0020     		movs	r0, #0
 2278              	.LVL230:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2279              		.loc 1 582 11 view .LVU638
 2280 0058 FCE7     		b	.L140
 2281              	.LBE8:
 2282              		.cfi_endproc
 2283              	.LFE26:
 2285              		.section	.text.block_locate_free,"ax",%progbits
 2286              		.align	1
 2287              		.syntax unified
 2288              		.thumb
 2289              		.thumb_func
 2291              	block_locate_free:
 2292              	.LVL231:
 2293              	.LFB39:
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2294              		.loc 1 776 1 is_stmt 1 view -0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 8
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2298              		.loc 1 776 1 is_stmt 0 view .LVU640
 2299 0000 70B5     		push	{r4, r5, r6, lr}
 2300              	.LCFI28:
 2301              		.cfi_def_cfa_offset 16
 2302              		.cfi_offset 4, -16
 2303              		.cfi_offset 5, -12
 2304              		.cfi_offset 6, -8
 2305              		.cfi_offset 14, -4
 2306 0002 82B0     		sub	sp, sp, #8
 2307              	.LCFI29:
 2308              		.cfi_def_cfa_offset 24
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2309              		.loc 1 777 2 is_stmt 1 view .LVU641
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2310              		.loc 1 777 6 is_stmt 0 view .LVU642
 2311 0004 0023     		movs	r3, #0
 2312 0006 0193     		str	r3, [sp, #4]
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2313              		.loc 1 777 14 view .LVU643
 2314 0008 0093     		str	r3, [sp]
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2315              		.loc 1 778 2 is_stmt 1 view .LVU644
 2316              	.LVL232:
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2317              		.loc 1 780 2 view .LVU645
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2318              		.loc 1 780 5 is_stmt 0 view .LVU646
 2319 000a E1B1     		cbz	r1, .L151
 2320 000c 0446     		mov	r4, r0
ARM GAS  /tmp/ccUBk765.s 			page 62


 2321 000e 0E46     		mov	r6, r1
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2322              		.loc 1 782 3 is_stmt 1 view .LVU647
 2323 0010 6A46     		mov	r2, sp
 2324 0012 01A9     		add	r1, sp, #4
 2325              	.LVL233:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2326              		.loc 1 782 3 is_stmt 0 view .LVU648
 2327 0014 3046     		mov	r0, r6
 2328              	.LVL234:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2329              		.loc 1 782 3 view .LVU649
 2330 0016 FFF7FEFF 		bl	mapping_search
 2331              	.LVL235:
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2332              		.loc 1 790 3 is_stmt 1 view .LVU650
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2333              		.loc 1 790 10 is_stmt 0 view .LVU651
 2334 001a 019B     		ldr	r3, [sp, #4]
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2335              		.loc 1 790 6 view .LVU652
 2336 001c 072B     		cmp	r3, #7
 2337 001e 16DC     		bgt	.L152
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2338              		.loc 1 792 4 is_stmt 1 view .LVU653
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2339              		.loc 1 792 12 is_stmt 0 view .LVU654
 2340 0020 6A46     		mov	r2, sp
 2341 0022 01A9     		add	r1, sp, #4
 2342 0024 2046     		mov	r0, r4
 2343 0026 FFF7FEFF 		bl	search_suitable_block
 2344              	.LVL236:
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2345              		.loc 1 796 2 is_stmt 1 view .LVU655
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2346              		.loc 1 796 5 is_stmt 0 view .LVU656
 2347 002a 0546     		mov	r5, r0
 2348 002c 60B1     		cbz	r0, .L147
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2349              		.loc 1 798 3 is_stmt 1 view .LVU657
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2350              		.loc 1 798 3 view .LVU658
 2351 002e FFF7FEFF 		bl	block_size
 2352              	.LVL237:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2353              		.loc 1 798 3 is_stmt 0 view .LVU659
 2354 0032 B042     		cmp	r0, r6
 2355 0034 00D2     		bcs	.L149
 2356              	.L150:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2357              		.loc 1 798 3 is_stmt 1 discriminator 1 view .LVU660
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2358              		.loc 1 798 3 discriminator 1 view .LVU661
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2359              		.loc 1 798 3 discriminator 1 view .LVU662
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2360              		.loc 1 798 3 discriminator 1 view .LVU663
ARM GAS  /tmp/ccUBk765.s 			page 63


 2361 0036 FEE7     		b	.L150
 2362              	.L149:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2363              		.loc 1 798 3 discriminator 2 view .LVU664
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2364              		.loc 1 799 3 discriminator 2 view .LVU665
 2365 0038 009B     		ldr	r3, [sp]
 2366 003a 019A     		ldr	r2, [sp, #4]
 2367 003c 2946     		mov	r1, r5
 2368 003e 2046     		mov	r0, r4
 2369 0040 FFF7FEFF 		bl	remove_free_block
 2370              	.LVL238:
 2371 0044 00E0     		b	.L147
 2372              	.LVL239:
 2373              	.L151:
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2374              		.loc 1 778 18 is_stmt 0 view .LVU666
 2375 0046 0025     		movs	r5, #0
 2376              	.LVL240:
 2377              	.L147:
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2378              		.loc 1 803 1 view .LVU667
 2379 0048 2846     		mov	r0, r5
 2380 004a 02B0     		add	sp, sp, #8
 2381              	.LCFI30:
 2382              		.cfi_remember_state
 2383              		.cfi_def_cfa_offset 16
 2384              		@ sp needed
 2385 004c 70BD     		pop	{r4, r5, r6, pc}
 2386              	.LVL241:
 2387              	.L152:
 2388              	.LCFI31:
 2389              		.cfi_restore_state
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2390              		.loc 1 778 18 view .LVU668
 2391 004e 0025     		movs	r5, #0
 2392              	.LVL242:
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2393              		.loc 1 802 2 is_stmt 1 view .LVU669
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2394              		.loc 1 802 9 is_stmt 0 view .LVU670
 2395 0050 FAE7     		b	.L147
 2396              		.cfi_endproc
 2397              	.LFE39:
 2399              		.section	.text.lv_tlsf_check,"ax",%progbits
 2400              		.align	1
 2401              		.global	lv_tlsf_check
 2402              		.syntax unified
 2403              		.thumb
 2404              		.thumb_func
 2406              	lv_tlsf_check:
 2407              	.LVL243:
 2408              	.LFB43:
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2409              		.loc 1 867 1 is_stmt 1 view -0
 2410              		.cfi_startproc
 2411              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccUBk765.s 			page 64


 2412              		@ frame_needed = 0, uses_anonymous_args = 0
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2413              		.loc 1 867 1 is_stmt 0 view .LVU672
 2414 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2415              	.LCFI32:
 2416              		.cfi_def_cfa_offset 24
 2417              		.cfi_offset 4, -24
 2418              		.cfi_offset 5, -20
 2419              		.cfi_offset 6, -16
 2420              		.cfi_offset 7, -12
 2421              		.cfi_offset 8, -8
 2422              		.cfi_offset 14, -4
 2423 0004 82B0     		sub	sp, sp, #8
 2424              	.LCFI33:
 2425              		.cfi_def_cfa_offset 32
 2426 0006 0546     		mov	r5, r0
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2427              		.loc 1 868 2 is_stmt 1 view .LVU673
 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 2428              		.loc 1 870 2 view .LVU674
 2429              	.LVL244:
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2430              		.loc 1 871 2 view .LVU675
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2431              		.loc 1 874 2 view .LVU676
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2432              		.loc 1 874 9 is_stmt 0 view .LVU677
 2433 0008 0026     		movs	r6, #0
 2434              	.LVL245:
 2435              	.L155:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2436              		.loc 1 874 14 is_stmt 1 discriminator 1 view .LVU678
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2437              		.loc 1 874 2 is_stmt 0 discriminator 1 view .LVU679
 2438 000a 072E     		cmp	r6, #7
 2439 000c 4FDC     		bgt	.L182
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2440              		.loc 1 876 10 view .LVU680
 2441 000e 0027     		movs	r7, #0
 2442              	.L179:
 2443              	.LVL246:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2444              		.loc 1 876 15 is_stmt 1 discriminator 1 view .LVU681
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2445              		.loc 1 876 3 is_stmt 0 discriminator 1 view .LVU682
 2446 0010 1F2F     		cmp	r7, #31
 2447 0012 4ADC     		bgt	.L183
 2448              	.LBB9:
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2449              		.loc 1 878 4 is_stmt 1 view .LVU683
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2450              		.loc 1 878 48 is_stmt 0 view .LVU684
 2451 0014 0123     		movs	r3, #1
 2452 0016 03FA06F0 		lsl	r0, r3, r6
 2453              	.LVL247:
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2454              		.loc 1 879 4 is_stmt 1 view .LVU685
ARM GAS  /tmp/ccUBk765.s 			page 65


 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2455              		.loc 1 879 42 is_stmt 0 view .LVU686
 2456 001a 311D     		adds	r1, r6, #4
 2457 001c 05EB8101 		add	r1, r5, r1, lsl #2
 2458 0020 4A68     		ldr	r2, [r1, #4]
 2459              	.LVL248:
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2460              		.loc 1 880 4 is_stmt 1 view .LVU687
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2461              		.loc 1 880 37 is_stmt 0 view .LVU688
 2462 0022 BB40     		lsls	r3, r3, r7
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2463              		.loc 1 880 31 view .LVU689
 2464 0024 1340     		ands	r3, r3, r2
 2465              	.LVL249:
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2466              		.loc 1 881 4 is_stmt 1 view .LVU690
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2467              		.loc 1 881 26 is_stmt 0 view .LVU691
 2468 0026 07EB4611 		add	r1, r7, r6, lsl #5
 2469 002a 0C31     		adds	r1, r1, #12
 2470 002c 05EB8101 		add	r1, r5, r1, lsl #2
 2471 0030 4C68     		ldr	r4, [r1, #4]
 2472              	.LVL250:
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2473              		.loc 1 884 4 is_stmt 1 view .LVU692
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2474              		.loc 1 884 7 is_stmt 0 view .LVU693
 2475 0032 2969     		ldr	r1, [r5, #16]
 2476 0034 0142     		tst	r1, r0
 2477 0036 00D1     		bne	.L156
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2478              		.loc 1 886 5 is_stmt 1 view .LVU694
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2479              		.loc 1 886 5 view .LVU695
 2480 0038 1BB9     		cbnz	r3, .L157
 2481              	.L156:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2482              		.loc 1 886 60 discriminator 5 view .LVU696
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2483              		.loc 1 889 4 discriminator 5 view .LVU697
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2484              		.loc 1 889 7 is_stmt 0 discriminator 5 view .LVU698
 2485 003a 1BB9     		cbnz	r3, .L158
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2486              		.loc 1 891 5 is_stmt 1 view .LVU699
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2487              		.loc 1 891 5 view .LVU700
 2488 003c A542     		cmp	r5, r4
 2489 003e 32D0     		beq	.L159
 2490              	.L160:
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2491              		.loc 1 891 5 discriminator 2 view .LVU701
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2492              		.loc 1 891 5 discriminator 2 view .LVU702
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2493              		.loc 1 891 5 discriminator 2 view .LVU703
ARM GAS  /tmp/ccUBk765.s 			page 66


 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2494              		.loc 1 891 5 discriminator 2 view .LVU704
 2495 0040 FEE7     		b	.L160
 2496              	.LVL251:
 2497              	.L157:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2498              		.loc 1 886 5 discriminator 1 view .LVU705
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2499              		.loc 1 886 5 discriminator 1 view .LVU706
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2500              		.loc 1 886 5 discriminator 1 view .LVU707
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2501              		.loc 1 886 5 discriminator 1 view .LVU708
 2502 0042 FEE7     		b	.L157
 2503              	.L158:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2504              		.loc 1 896 4 view .LVU709
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2505              		.loc 1 896 4 view .LVU710
 2506 0044 3AB3     		cbz	r2, .L162
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2507              		.loc 1 896 4 discriminator 5 view .LVU711
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2508              		.loc 1 896 4 discriminator 5 view .LVU712
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2509              		.loc 1 896 64 discriminator 5 view .LVU713
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2510              		.loc 1 897 4 discriminator 5 view .LVU714
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2511              		.loc 1 897 4 discriminator 5 view .LVU715
 2512 0046 A542     		cmp	r5, r4
 2513 0048 26D0     		beq	.L164
 2514              	.LVL252:
 2515              	.L163:
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2516              		.loc 1 899 10 view .LVU716
 2517 004a A542     		cmp	r5, r4
 2518 004c 2BD0     		beq	.L159
 2519              	.LBB10:
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 2520              		.loc 1 901 5 view .LVU717
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2521              		.loc 1 902 5 view .LVU718
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2522              		.loc 1 902 5 view .LVU719
 2523 004e 2046     		mov	r0, r4
 2524 0050 FFF7FEFF 		bl	block_is_free
 2525              	.LVL253:
 2526 0054 08B3     		cbz	r0, .L166
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2527              		.loc 1 902 5 discriminator 9 view .LVU720
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2528              		.loc 1 902 5 discriminator 9 view .LVU721
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2529              		.loc 1 902 64 discriminator 9 view .LVU722
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2530              		.loc 1 903 5 discriminator 9 view .LVU723
ARM GAS  /tmp/ccUBk765.s 			page 67


 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2531              		.loc 1 903 5 discriminator 9 view .LVU724
 2532 0056 2046     		mov	r0, r4
 2533 0058 FFF7FEFF 		bl	block_is_prev_free
 2534              	.LVL254:
 2535 005c F0B9     		cbnz	r0, .L168
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2536              		.loc 1 903 5 discriminator 5 view .LVU725
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2537              		.loc 1 903 5 discriminator 5 view .LVU726
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2538              		.loc 1 903 78 discriminator 5 view .LVU727
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2539              		.loc 1 904 5 discriminator 5 view .LVU728
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2540              		.loc 1 904 5 discriminator 5 view .LVU729
 2541 005e 2046     		mov	r0, r4
 2542 0060 FFF7FEFF 		bl	block_next
 2543              	.LVL255:
 2544 0064 8046     		mov	r8, r0
 2545 0066 FFF7FEFF 		bl	block_is_free
 2546              	.LVL256:
 2547 006a C0B9     		cbnz	r0, .L170
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2548              		.loc 1 904 5 discriminator 5 view .LVU730
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2549              		.loc 1 904 5 discriminator 5 view .LVU731
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2550              		.loc 1 904 85 discriminator 5 view .LVU732
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2551              		.loc 1 905 5 discriminator 5 view .LVU733
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2552              		.loc 1 905 5 discriminator 5 view .LVU734
 2553 006c 4046     		mov	r0, r8
 2554 006e FFF7FEFF 		bl	block_is_prev_free
 2555              	.LVL257:
 2556 0072 A8B1     		cbz	r0, .L172
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2557              		.loc 1 905 5 discriminator 9 view .LVU735
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2558              		.loc 1 905 5 discriminator 9 view .LVU736
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2559              		.loc 1 905 81 discriminator 9 view .LVU737
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2560              		.loc 1 906 5 discriminator 9 view .LVU738
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2561              		.loc 1 906 5 discriminator 9 view .LVU739
 2562 0074 2046     		mov	r0, r4
 2563 0076 FFF7FEFF 		bl	block_size
 2564              	.LVL258:
 2565 007a 0B28     		cmp	r0, #11
 2566 007c 11D9     		bls	.L174
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2567              		.loc 1 906 5 discriminator 9 view .LVU740
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2568              		.loc 1 906 5 discriminator 9 view .LVU741
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccUBk765.s 			page 68


 2569              		.loc 1 906 81 discriminator 9 view .LVU742
 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 2570              		.loc 1 908 5 discriminator 9 view .LVU743
 2571 007e 01AA     		add	r2, sp, #4
 2572 0080 6946     		mov	r1, sp
 2573 0082 FFF7FEFF 		bl	mapping_insert
 2574              	.LVL259:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2575              		.loc 1 909 5 discriminator 9 view .LVU744
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2576              		.loc 1 909 5 discriminator 9 view .LVU745
 2577 0086 009B     		ldr	r3, [sp]
 2578 0088 B342     		cmp	r3, r6
 2579 008a 0BD1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2580              		.loc 1 909 5 is_stmt 0 discriminator 2 view .LVU746
 2581 008c 019B     		ldr	r3, [sp, #4]
 2582 008e BB42     		cmp	r3, r7
 2583 0090 08D1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2584              		.loc 1 909 5 is_stmt 1 discriminator 9 view .LVU747
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2585              		.loc 1 909 5 discriminator 9 view .LVU748
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2586              		.loc 1 909 76 discriminator 9 view .LVU749
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2587              		.loc 1 910 5 discriminator 9 view .LVU750
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2588              		.loc 1 910 11 is_stmt 0 discriminator 9 view .LVU751
 2589 0092 A468     		ldr	r4, [r4, #8]
 2590              	.LVL260:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2591              		.loc 1 910 11 discriminator 9 view .LVU752
 2592 0094 D9E7     		b	.L163
 2593              	.LVL261:
 2594              	.L162:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2595              		.loc 1 910 11 discriminator 9 view .LVU753
 2596              	.LBE10:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2597              		.loc 1 896 4 is_stmt 1 discriminator 3 view .LVU754
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2598              		.loc 1 896 4 discriminator 3 view .LVU755
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2599              		.loc 1 896 4 discriminator 3 view .LVU756
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2600              		.loc 1 896 4 discriminator 3 view .LVU757
 2601 0096 FEE7     		b	.L162
 2602              	.L164:
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2603              		.loc 1 897 4 discriminator 4 view .LVU758
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2604              		.loc 1 897 4 discriminator 4 view .LVU759
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2605              		.loc 1 897 4 discriminator 4 view .LVU760
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2606              		.loc 1 897 4 discriminator 4 view .LVU761
ARM GAS  /tmp/ccUBk765.s 			page 69


 2607 0098 FEE7     		b	.L164
 2608              	.LVL262:
 2609              	.L166:
 2610              	.LBB11:
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2611              		.loc 1 902 5 discriminator 5 view .LVU762
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2612              		.loc 1 902 5 discriminator 5 view .LVU763
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2613              		.loc 1 902 5 discriminator 5 view .LVU764
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2614              		.loc 1 902 5 discriminator 5 view .LVU765
 2615 009a FEE7     		b	.L166
 2616              	.L168:
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2617              		.loc 1 903 5 discriminator 6 view .LVU766
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2618              		.loc 1 903 5 discriminator 6 view .LVU767
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2619              		.loc 1 903 5 discriminator 6 view .LVU768
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2620              		.loc 1 903 5 discriminator 6 view .LVU769
 2621 009c FEE7     		b	.L168
 2622              	.L170:
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2623              		.loc 1 904 5 discriminator 7 view .LVU770
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2624              		.loc 1 904 5 discriminator 7 view .LVU771
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2625              		.loc 1 904 5 discriminator 7 view .LVU772
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2626              		.loc 1 904 5 discriminator 7 view .LVU773
 2627 009e FEE7     		b	.L170
 2628              	.L172:
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2629              		.loc 1 905 5 discriminator 8 view .LVU774
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2630              		.loc 1 905 5 discriminator 8 view .LVU775
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2631              		.loc 1 905 5 discriminator 8 view .LVU776
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2632              		.loc 1 905 5 discriminator 8 view .LVU777
 2633 00a0 FEE7     		b	.L172
 2634              	.L174:
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2635              		.loc 1 906 5 discriminator 9 view .LVU778
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2636              		.loc 1 906 5 discriminator 9 view .LVU779
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2637              		.loc 1 906 5 discriminator 9 view .LVU780
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2638              		.loc 1 906 5 discriminator 9 view .LVU781
 2639 00a2 FEE7     		b	.L174
 2640              	.L175:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2641              		.loc 1 909 5 discriminator 10 view .LVU782
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
ARM GAS  /tmp/ccUBk765.s 			page 70


 2642              		.loc 1 909 5 discriminator 10 view .LVU783
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2643              		.loc 1 909 5 discriminator 10 view .LVU784
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2644              		.loc 1 909 5 discriminator 10 view .LVU785
 2645 00a4 FEE7     		b	.L175
 2646              	.L159:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2647              		.loc 1 909 5 is_stmt 0 discriminator 10 view .LVU786
 2648              	.LBE11:
 2649              	.LBE9:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2650              		.loc 1 876 35 is_stmt 1 discriminator 2 view .LVU787
 2651 00a6 0137     		adds	r7, r7, #1
 2652              	.LVL263:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2653              		.loc 1 876 35 is_stmt 0 discriminator 2 view .LVU788
 2654 00a8 B2E7     		b	.L179
 2655              	.LVL264:
 2656              	.L183:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2657              		.loc 1 874 34 is_stmt 1 discriminator 2 view .LVU789
 2658 00aa 0136     		adds	r6, r6, #1
 2659              	.LVL265:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2660              		.loc 1 874 34 is_stmt 0 discriminator 2 view .LVU790
 2661 00ac ADE7     		b	.L155
 2662              	.LVL266:
 2663              	.L182:
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2664              		.loc 1 915 2 is_stmt 1 view .LVU791
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2665              		.loc 1 916 1 is_stmt 0 view .LVU792
 2666 00ae 0020     		movs	r0, #0
 2667 00b0 02B0     		add	sp, sp, #8
 2668              	.LCFI34:
 2669              		.cfi_def_cfa_offset 24
 2670              		@ sp needed
 2671 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2672              		.loc 1 916 1 view .LVU793
 2673              		.cfi_endproc
 2674              	.LFE43:
 2676              		.section	.text.lv_tlsf_walk_pool,"ax",%progbits
 2677              		.align	1
 2678              		.global	lv_tlsf_walk_pool
 2679              		.syntax unified
 2680              		.thumb
 2681              		.thumb_func
 2683              	lv_tlsf_walk_pool:
 2684              	.LVL267:
 2685              	.LFB45:
 925:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 926:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void* user)
 927:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2686              		.loc 1 927 1 is_stmt 1 view -0
 2687              		.cfi_startproc
ARM GAS  /tmp/ccUBk765.s 			page 71


 2688              		@ args = 0, pretend = 0, frame = 0
 2689              		@ frame_needed = 0, uses_anonymous_args = 0
 2690              		.loc 1 927 1 is_stmt 0 view .LVU795
 2691 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2692              	.LCFI35:
 2693              		.cfi_def_cfa_offset 24
 2694              		.cfi_offset 4, -24
 2695              		.cfi_offset 5, -20
 2696              		.cfi_offset 6, -16
 2697              		.cfi_offset 7, -12
 2698              		.cfi_offset 8, -8
 2699              		.cfi_offset 14, -4
 2700 0004 1746     		mov	r7, r2
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walker pool_walker = walker ? walker : default_walker;
 2701              		.loc 1 928 2 is_stmt 1 view .LVU796
 2702              		.loc 1 928 47 is_stmt 0 view .LVU797
 2703 0006 8846     		mov	r8, r1
 2704 0008 29B1     		cbz	r1, .L191
 2705              	.L185:
 2706              	.LVL268:
 929:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2707              		.loc 1 929 2 is_stmt 1 discriminator 4 view .LVU798
 930:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(pool, -(int)block_header_overhead);
 2708              		.loc 1 930 3 is_stmt 0 discriminator 4 view .LVU799
 2709 000a 6FF00301 		mvn	r1, #3
 2710              	.LVL269:
 2711              		.loc 1 930 3 discriminator 4 view .LVU800
 2712 000e FFF7FEFF 		bl	offset_to_block
 2713              	.LVL270:
 2714              		.loc 1 930 3 discriminator 4 view .LVU801
 2715 0012 0446     		mov	r4, r0
 2716              	.LVL271:
 931:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	while (block && !block_is_last(block))
 2717              		.loc 1 932 2 is_stmt 1 discriminator 4 view .LVU802
 2718              		.loc 1 932 8 is_stmt 0 discriminator 4 view .LVU803
 2719 0014 18E0     		b	.L186
 2720              	.LVL272:
 2721              	.L191:
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2722              		.loc 1 928 47 view .LVU804
 2723 0016 DFF84080 		ldr	r8, .L192
 2724 001a F6E7     		b	.L185
 2725              	.LVL273:
 2726              	.L188:
 933:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		pool_walker(
 2727              		.loc 1 934 3 is_stmt 1 view .LVU805
 2728 001c 2046     		mov	r0, r4
 2729 001e FFF7FEFF 		bl	block_to_ptr
 2730              	.LVL274:
 2731 0022 0546     		mov	r5, r0
 2732 0024 2046     		mov	r0, r4
 2733 0026 FFF7FEFF 		bl	block_size
 2734              	.LVL275:
 2735 002a 0646     		mov	r6, r0
 935:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
ARM GAS  /tmp/ccUBk765.s 			page 72


 936:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_size(block),
 937:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			!block_is_free(block),
 2736              		.loc 1 937 5 is_stmt 0 view .LVU806
 2737 002c 2046     		mov	r0, r4
 2738 002e FFF7FEFF 		bl	block_is_free
 2739              	.LVL276:
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 2740              		.loc 1 934 3 view .LVU807
 2741 0032 3B46     		mov	r3, r7
 2742 0034 B0FA80F2 		clz	r2, r0
 2743 0038 5209     		lsrs	r2, r2, #5
 2744 003a 3146     		mov	r1, r6
 2745 003c 2846     		mov	r0, r5
 2746 003e C047     		blx	r8
 2747              	.LVL277:
 938:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			user);
 939:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_next(block);
 2748              		.loc 1 939 3 is_stmt 1 view .LVU808
 2749              		.loc 1 939 11 is_stmt 0 view .LVU809
 2750 0040 2046     		mov	r0, r4
 2751 0042 FFF7FEFF 		bl	block_next
 2752              	.LVL278:
 2753 0046 0446     		mov	r4, r0
 2754              	.LVL279:
 2755              	.L186:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2756              		.loc 1 932 8 is_stmt 1 view .LVU810
 2757 0048 24B1     		cbz	r4, .L184
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2758              		.loc 1 932 19 is_stmt 0 discriminator 1 view .LVU811
 2759 004a 2046     		mov	r0, r4
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2760              		.loc 1 932 19 discriminator 1 view .LVU812
 2761 004c FFF7FEFF 		bl	block_is_last
 2762              	.LVL280:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2763              		.loc 1 932 15 discriminator 1 view .LVU813
 2764 0050 0028     		cmp	r0, #0
 2765 0052 E3D0     		beq	.L188
 2766              	.L184:
 940:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 941:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2767              		.loc 1 941 1 view .LVU814
 2768 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2769              	.LVL281:
 2770              	.L193:
 2771              		.loc 1 941 1 view .LVU815
 2772              		.align	2
 2773              	.L192:
 2774 0058 00000000 		.word	default_walker
 2775              		.cfi_endproc
 2776              	.LFE45:
 2778              		.section	.text.lv_tlsf_block_size,"ax",%progbits
 2779              		.align	1
 2780              		.global	lv_tlsf_block_size
 2781              		.syntax unified
 2782              		.thumb
ARM GAS  /tmp/ccUBk765.s 			page 73


 2783              		.thumb_func
 2785              	lv_tlsf_block_size:
 2786              	.LVL282:
 2787              	.LFB46:
 942:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 943:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size(void* ptr)
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2788              		.loc 1 944 1 is_stmt 1 view -0
 2789              		.cfi_startproc
 2790              		@ args = 0, pretend = 0, frame = 0
 2791              		@ frame_needed = 0, uses_anonymous_args = 0
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2792              		.loc 1 945 2 view .LVU817
 946:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2793              		.loc 1 946 2 view .LVU818
 2794              		.loc 1 946 5 is_stmt 0 view .LVU819
 2795 0000 28B1     		cbz	r0, .L196
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2796              		.loc 1 944 1 view .LVU820
 2797 0002 08B5     		push	{r3, lr}
 2798              	.LCFI36:
 2799              		.cfi_def_cfa_offset 8
 2800              		.cfi_offset 3, -8
 2801              		.cfi_offset 14, -4
 2802              	.LBB12:
 947:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 948:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const block_header_t* block = block_from_ptr(ptr);
 2803              		.loc 1 948 3 is_stmt 1 view .LVU821
 2804              		.loc 1 948 33 is_stmt 0 view .LVU822
 2805 0004 FFF7FEFF 		bl	block_from_ptr
 2806              	.LVL283:
 949:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size = block_size(block);
 2807              		.loc 1 949 3 is_stmt 1 view .LVU823
 2808              		.loc 1 949 10 is_stmt 0 view .LVU824
 2809 0008 FFF7FEFF 		bl	block_size
 2810              	.LVL284:
 2811              		.loc 1 949 10 view .LVU825
 2812              	.LBE12:
 950:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return size;
 952:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2813              		.loc 1 952 1 view .LVU826
 2814 000c 08BD     		pop	{r3, pc}
 2815              	.LVL285:
 2816              	.L196:
 2817              	.LCFI37:
 2818              		.cfi_def_cfa_offset 0
 2819              		.cfi_restore 3
 2820              		.cfi_restore 14
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2821              		.loc 1 945 9 view .LVU827
 2822 000e 0020     		movs	r0, #0
 2823              	.LVL286:
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2824              		.loc 1 951 2 is_stmt 1 view .LVU828
 2825              		.loc 1 952 1 is_stmt 0 view .LVU829
 2826 0010 7047     		bx	lr
ARM GAS  /tmp/ccUBk765.s 			page 74


 2827              		.cfi_endproc
 2828              	.LFE46:
 2830              		.section	.text.lv_tlsf_check_pool,"ax",%progbits
 2831              		.align	1
 2832              		.global	lv_tlsf_check_pool
 2833              		.syntax unified
 2834              		.thumb
 2835              		.thumb_func
 2837              	lv_tlsf_check_pool:
 2838              	.LVL287:
 2839              	.LFB47:
 953:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 954:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check_pool(lv_pool_t pool)
 955:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2840              		.loc 1 955 1 is_stmt 1 view -0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 8
 2843              		@ frame_needed = 0, uses_anonymous_args = 0
 2844              		.loc 1 955 1 is_stmt 0 view .LVU831
 2845 0000 00B5     		push	{lr}
 2846              	.LCFI38:
 2847              		.cfi_def_cfa_offset 4
 2848              		.cfi_offset 14, -4
 2849 0002 83B0     		sub	sp, sp, #12
 2850              	.LCFI39:
 2851              		.cfi_def_cfa_offset 16
 956:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the blocks are physically correct. */
 957:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t integ = { 0, 0 };
 2852              		.loc 1 957 2 is_stmt 1 view .LVU832
 2853              		.loc 1 957 14 is_stmt 0 view .LVU833
 2854 0004 0023     		movs	r3, #0
 2855 0006 0093     		str	r3, [sp]
 2856 0008 0193     		str	r3, [sp, #4]
 958:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walk_pool(pool, integrity_walker, &integ);
 2857              		.loc 1 958 2 is_stmt 1 view .LVU834
 2858 000a 6A46     		mov	r2, sp
 2859 000c 0349     		ldr	r1, .L203
 2860 000e FFF7FEFF 		bl	lv_tlsf_walk_pool
 2861              	.LVL288:
 959:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 960:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return integ.status;
 2862              		.loc 1 960 2 view .LVU835
 961:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2863              		.loc 1 961 1 is_stmt 0 view .LVU836
 2864 0012 0198     		ldr	r0, [sp, #4]
 2865 0014 03B0     		add	sp, sp, #12
 2866              	.LCFI40:
 2867              		.cfi_def_cfa_offset 4
 2868              		@ sp needed
 2869 0016 5DF804FB 		ldr	pc, [sp], #4
 2870              	.L204:
 2871 001a 00BF     		.align	2
 2872              	.L203:
 2873 001c 00000000 		.word	integrity_walker
 2874              		.cfi_endproc
 2875              	.LFE47:
 2877              		.section	.text.lv_tlsf_size,"ax",%progbits
ARM GAS  /tmp/ccUBk765.s 			page 75


 2878              		.align	1
 2879              		.global	lv_tlsf_size
 2880              		.syntax unified
 2881              		.thumb
 2882              		.thumb_func
 2884              	lv_tlsf_size:
 2885              	.LFB48:
 962:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 963:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 964:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Size of the TLSF structures in a given memory block passed to
 965:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_create, equal to the size of a control_t
 966:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 967:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_size(void)
 968:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2886              		.loc 1 968 1 is_stmt 1 view -0
 2887              		.cfi_startproc
 2888              		@ args = 0, pretend = 0, frame = 0
 2889              		@ frame_needed = 0, uses_anonymous_args = 0
 2890              		@ link register save eliminated.
 969:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return sizeof(control_t);
 2891              		.loc 1 969 2 view .LVU838
 970:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2892              		.loc 1 970 1 is_stmt 0 view .LVU839
 2893 0000 40F23440 		movw	r0, #1076
 2894 0004 7047     		bx	lr
 2895              		.cfi_endproc
 2896              	.LFE48:
 2898              		.section	.text.lv_tlsf_align_size,"ax",%progbits
 2899              		.align	1
 2900              		.global	lv_tlsf_align_size
 2901              		.syntax unified
 2902              		.thumb
 2903              		.thumb_func
 2905              	lv_tlsf_align_size:
 2906              	.LFB49:
 971:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 972:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_align_size(void)
 973:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2907              		.loc 1 973 1 is_stmt 1 view -0
 2908              		.cfi_startproc
 2909              		@ args = 0, pretend = 0, frame = 0
 2910              		@ frame_needed = 0, uses_anonymous_args = 0
 2911              		@ link register save eliminated.
 974:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return ALIGN_SIZE;
 2912              		.loc 1 974 2 view .LVU841
 975:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2913              		.loc 1 975 1 is_stmt 0 view .LVU842
 2914 0000 0420     		movs	r0, #4
 2915 0002 7047     		bx	lr
 2916              		.cfi_endproc
 2917              	.LFE49:
 2919              		.section	.text.lv_tlsf_block_size_min,"ax",%progbits
 2920              		.align	1
 2921              		.global	lv_tlsf_block_size_min
 2922              		.syntax unified
 2923              		.thumb
 2924              		.thumb_func
ARM GAS  /tmp/ccUBk765.s 			page 76


 2926              	lv_tlsf_block_size_min:
 2927              	.LFB50:
 976:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 977:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_min(void)
 978:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2928              		.loc 1 978 1 is_stmt 1 view -0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 0
 2931              		@ frame_needed = 0, uses_anonymous_args = 0
 2932              		@ link register save eliminated.
 979:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_min;
 2933              		.loc 1 979 2 view .LVU844
 980:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2934              		.loc 1 980 1 is_stmt 0 view .LVU845
 2935 0000 0C20     		movs	r0, #12
 2936 0002 7047     		bx	lr
 2937              		.cfi_endproc
 2938              	.LFE50:
 2940              		.section	.text.lv_tlsf_block_size_max,"ax",%progbits
 2941              		.align	1
 2942              		.global	lv_tlsf_block_size_max
 2943              		.syntax unified
 2944              		.thumb
 2945              		.thumb_func
 2947              	lv_tlsf_block_size_max:
 2948              	.LFB51:
 981:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 982:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_max(void)
 983:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2949              		.loc 1 983 1 is_stmt 1 view -0
 2950              		.cfi_startproc
 2951              		@ args = 0, pretend = 0, frame = 0
 2952              		@ frame_needed = 0, uses_anonymous_args = 0
 2953              		@ link register save eliminated.
 984:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_max;
 2954              		.loc 1 984 2 view .LVU847
 985:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2955              		.loc 1 985 1 is_stmt 0 view .LVU848
 2956 0000 4FF48040 		mov	r0, #16384
 2957 0004 7047     		bx	lr
 2958              		.cfi_endproc
 2959              	.LFE51:
 2961              		.section	.text.lv_tlsf_pool_overhead,"ax",%progbits
 2962              		.align	1
 2963              		.global	lv_tlsf_pool_overhead
 2964              		.syntax unified
 2965              		.thumb
 2966              		.thumb_func
 2968              	lv_tlsf_pool_overhead:
 2969              	.LFB52:
 986:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 987:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 988:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Overhead of the TLSF structures in a given memory block passed to
 989:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_add_pool, equal to the overhead of a free block and the
 990:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** sentinel block.
 991:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 992:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_pool_overhead(void)
ARM GAS  /tmp/ccUBk765.s 			page 77


 993:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2970              		.loc 1 993 1 is_stmt 1 view -0
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 0
 2973              		@ frame_needed = 0, uses_anonymous_args = 0
 2974              		@ link register save eliminated.
 994:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return 2 * block_header_overhead;
 2975              		.loc 1 994 2 view .LVU850
 995:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2976              		.loc 1 995 1 is_stmt 0 view .LVU851
 2977 0000 0820     		movs	r0, #8
 2978 0002 7047     		bx	lr
 2979              		.cfi_endproc
 2980              	.LFE52:
 2982              		.section	.text.lv_tlsf_alloc_overhead,"ax",%progbits
 2983              		.align	1
 2984              		.global	lv_tlsf_alloc_overhead
 2985              		.syntax unified
 2986              		.thumb
 2987              		.thumb_func
 2989              	lv_tlsf_alloc_overhead:
 2990              	.LFB53:
 996:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 997:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_alloc_overhead(void)
 998:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2991              		.loc 1 998 1 is_stmt 1 view -0
 2992              		.cfi_startproc
 2993              		@ args = 0, pretend = 0, frame = 0
 2994              		@ frame_needed = 0, uses_anonymous_args = 0
 2995              		@ link register save eliminated.
 999:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_header_overhead;
 2996              		.loc 1 999 2 view .LVU853
1000:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2997              		.loc 1 1000 1 is_stmt 0 view .LVU854
 2998 0000 0420     		movs	r0, #4
 2999 0002 7047     		bx	lr
 3000              		.cfi_endproc
 3001              	.LFE53:
 3003              		.section	.text.lv_tlsf_add_pool,"ax",%progbits
 3004              		.align	1
 3005              		.global	lv_tlsf_add_pool
 3006              		.syntax unified
 3007              		.thumb
 3008              		.thumb_func
 3010              	lv_tlsf_add_pool:
 3011              	.LVL289:
 3012              	.LFB54:
1001:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1002:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void* mem, size_t bytes)
1003:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3013              		.loc 1 1003 1 is_stmt 1 view -0
 3014              		.cfi_startproc
 3015              		@ args = 0, pretend = 0, frame = 0
 3016              		@ frame_needed = 0, uses_anonymous_args = 0
 3017              		.loc 1 1003 1 is_stmt 0 view .LVU856
 3018 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3019              	.LCFI41:
ARM GAS  /tmp/ccUBk765.s 			page 78


 3020              		.cfi_def_cfa_offset 24
 3021              		.cfi_offset 3, -24
 3022              		.cfi_offset 4, -20
 3023              		.cfi_offset 5, -16
 3024              		.cfi_offset 6, -12
 3025              		.cfi_offset 7, -8
 3026              		.cfi_offset 14, -4
 3027 0002 0746     		mov	r7, r0
 3028 0004 0C46     		mov	r4, r1
 3029 0006 1546     		mov	r5, r2
1004:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block;
 3030              		.loc 1 1004 2 is_stmt 1 view .LVU857
1005:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next;
 3031              		.loc 1 1005 2 view .LVU858
1006:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1007:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_overhead = lv_tlsf_pool_overhead();
 3032              		.loc 1 1007 2 view .LVU859
 3033              		.loc 1 1007 31 is_stmt 0 view .LVU860
 3034 0008 FFF7FEFF 		bl	lv_tlsf_pool_overhead
 3035              	.LVL290:
1008:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_bytes = align_down(bytes - pool_overhead, ALIGN_SIZE);
 3036              		.loc 1 1008 2 is_stmt 1 view .LVU861
 3037              		.loc 1 1008 28 is_stmt 0 view .LVU862
 3038 000c 0421     		movs	r1, #4
 3039 000e 281A     		subs	r0, r5, r0
 3040              	.LVL291:
 3041              		.loc 1 1008 28 view .LVU863
 3042 0010 FFF7FEFF 		bl	align_down
 3043              	.LVL292:
1009:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1010:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((ptrdiff_t)mem % ALIGN_SIZE) != 0)
 3044              		.loc 1 1010 2 is_stmt 1 view .LVU864
 3045              		.loc 1 1010 5 is_stmt 0 view .LVU865
 3046 0014 14F0030F 		tst	r4, #3
 3047 0018 28D1     		bne	.L213
 3048 001a 0546     		mov	r5, r0
 3049              	.LVL293:
1011:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1012:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory must be aligned by %u bytes.\n",
1013:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1015:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1016:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1017:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (pool_bytes < block_size_min || pool_bytes > block_size_max)
 3050              		.loc 1 1017 2 is_stmt 1 view .LVU866
 3051              		.loc 1 1017 34 is_stmt 0 view .LVU867
 3052 001c A0F10C02 		sub	r2, r0, #12
 3053              		.loc 1 1017 5 view .LVU868
 3054 0020 43F6F473 		movw	r3, #16372
 3055 0024 9A42     		cmp	r2, r3
 3056 0026 23D8     		bhi	.L214
1018:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1019:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1020:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between 0x%x and 0x%x00 bytes.\n", 
1021:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1022:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)((pool_overhead + block_size_max) / 256));
1023:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
ARM GAS  /tmp/ccUBk765.s 			page 79


1024:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between %u and %u bytes.\n", 
1025:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1026:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_max));
1027:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1029:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1030:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1031:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1032:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Create the main free block. Offset the start of the block slightly
1033:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** so that the prev_phys_block field falls outside of the pool -
1034:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** it will never be used.
1035:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1036:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block = offset_to_block(mem, -(tlsfptr_t)block_header_overhead);
 3057              		.loc 1 1036 2 is_stmt 1 view .LVU869
 3058              		.loc 1 1036 10 is_stmt 0 view .LVU870
 3059 0028 6FF00301 		mvn	r1, #3
 3060 002c 2046     		mov	r0, r4
 3061              	.LVL294:
 3062              		.loc 1 1036 10 view .LVU871
 3063 002e FFF7FEFF 		bl	offset_to_block
 3064              	.LVL295:
 3065 0032 0646     		mov	r6, r0
 3066              	.LVL296:
1037:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, pool_bytes);
 3067              		.loc 1 1037 2 is_stmt 1 view .LVU872
 3068 0034 2946     		mov	r1, r5
 3069 0036 FFF7FEFF 		bl	block_set_size
 3070              	.LVL297:
1038:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 3071              		.loc 1 1038 2 view .LVU873
 3072 003a 3046     		mov	r0, r6
 3073 003c FFF7FEFF 		bl	block_set_free
 3074              	.LVL298:
1039:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(block);
 3075              		.loc 1 1039 2 view .LVU874
 3076 0040 3046     		mov	r0, r6
 3077 0042 FFF7FEFF 		bl	block_set_prev_used
 3078              	.LVL299:
1040:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_insert(tlsf_cast(control_t*, tlsf), block);
 3079              		.loc 1 1040 2 view .LVU875
 3080 0046 3146     		mov	r1, r6
 3081 0048 3846     		mov	r0, r7
 3082 004a FFF7FEFF 		bl	block_insert
 3083              	.LVL300:
1041:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1042:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Split the block to create a zero-size sentinel block. */
1043:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next = block_link_next(block);
 3084              		.loc 1 1043 2 view .LVU876
 3085              		.loc 1 1043 9 is_stmt 0 view .LVU877
 3086 004e 3046     		mov	r0, r6
 3087 0050 FFF7FEFF 		bl	block_link_next
 3088              	.LVL301:
 3089 0054 0546     		mov	r5, r0
 3090              	.LVL302:
1044:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(next, 0);
 3091              		.loc 1 1044 2 is_stmt 1 view .LVU878
 3092 0056 0021     		movs	r1, #0
ARM GAS  /tmp/ccUBk765.s 			page 80


 3093 0058 FFF7FEFF 		bl	block_set_size
 3094              	.LVL303:
1045:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(next);
 3095              		.loc 1 1045 2 view .LVU879
 3096 005c 2846     		mov	r0, r5
 3097 005e FFF7FEFF 		bl	block_set_used
 3098              	.LVL304:
1046:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 3099              		.loc 1 1046 2 view .LVU880
 3100 0062 2846     		mov	r0, r5
 3101 0064 FFF7FEFF 		bl	block_set_prev_free
 3102              	.LVL305:
1047:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1048:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return mem;
 3103              		.loc 1 1048 2 view .LVU881
 3104              		.loc 1 1048 9 is_stmt 0 view .LVU882
 3105 0068 2046     		mov	r0, r4
 3106              	.LVL306:
 3107              	.L211:
1049:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3108              		.loc 1 1049 1 view .LVU883
 3109 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3110              	.LVL307:
 3111              	.L213:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3112              		.loc 1 1014 10 view .LVU884
 3113 006c 0020     		movs	r0, #0
 3114              	.LVL308:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3115              		.loc 1 1014 10 view .LVU885
 3116 006e FCE7     		b	.L211
 3117              	.LVL309:
 3118              	.L214:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3119              		.loc 1 1028 10 view .LVU886
 3120 0070 0020     		movs	r0, #0
 3121              	.LVL310:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3122              		.loc 1 1028 10 view .LVU887
 3123 0072 FAE7     		b	.L211
 3124              		.cfi_endproc
 3125              	.LFE54:
 3127              		.section	.text.lv_tlsf_remove_pool,"ax",%progbits
 3128              		.align	1
 3129              		.global	lv_tlsf_remove_pool
 3130              		.syntax unified
 3131              		.thumb
 3132              		.thumb_func
 3134              	lv_tlsf_remove_pool:
 3135              	.LVL311:
 3136              	.LFB55:
1050:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1051:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)
1052:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3137              		.loc 1 1052 1 is_stmt 1 view -0
 3138              		.cfi_startproc
 3139              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccUBk765.s 			page 81


 3140              		@ frame_needed = 0, uses_anonymous_args = 0
 3141              		.loc 1 1052 1 is_stmt 0 view .LVU889
 3142 0000 70B5     		push	{r4, r5, r6, lr}
 3143              	.LCFI42:
 3144              		.cfi_def_cfa_offset 16
 3145              		.cfi_offset 4, -16
 3146              		.cfi_offset 5, -12
 3147              		.cfi_offset 6, -8
 3148              		.cfi_offset 14, -4
 3149 0002 82B0     		sub	sp, sp, #8
 3150              	.LCFI43:
 3151              		.cfi_def_cfa_offset 24
 3152 0004 0546     		mov	r5, r0
 3153 0006 0846     		mov	r0, r1
 3154              	.LVL312:
1053:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3155              		.loc 1 1053 2 is_stmt 1 view .LVU890
1054:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = offset_to_block(pool, -(int)block_header_overhead);
 3156              		.loc 1 1054 2 view .LVU891
 3157              		.loc 1 1054 26 is_stmt 0 view .LVU892
 3158 0008 6FF00301 		mvn	r1, #3
 3159              	.LVL313:
 3160              		.loc 1 1054 26 view .LVU893
 3161 000c FFF7FEFF 		bl	offset_to_block
 3162              	.LVL314:
 3163              		.loc 1 1054 26 view .LVU894
 3164 0010 0446     		mov	r4, r0
 3165              	.LVL315:
1055:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1056:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 3166              		.loc 1 1056 2 is_stmt 1 view .LVU895
 3167              		.loc 1 1056 6 is_stmt 0 view .LVU896
 3168 0012 0023     		movs	r3, #0
 3169 0014 0193     		str	r3, [sp, #4]
 3170              		.loc 1 1056 14 view .LVU897
 3171 0016 0093     		str	r3, [sp]
1057:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1058:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block should be free");
 3172              		.loc 1 1058 2 is_stmt 1 view .LVU898
 3173              		.loc 1 1058 2 view .LVU899
 3174 0018 FFF7FEFF 		bl	block_is_free
 3175              	.LVL316:
 3176              		.loc 1 1058 2 is_stmt 0 view .LVU900
 3177 001c 00B9     		cbnz	r0, .L217
 3178              	.L218:
 3179              		.loc 1 1058 2 is_stmt 1 discriminator 1 view .LVU901
 3180              		.loc 1 1058 2 discriminator 1 view .LVU902
 3181              		.loc 1 1058 2 discriminator 1 view .LVU903
 3182              		.loc 1 1058 2 discriminator 1 view .LVU904
 3183 001e FEE7     		b	.L218
 3184              	.L217:
 3185              		.loc 1 1058 2 discriminator 4 view .LVU905
1059:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
 3186              		.loc 1 1059 2 discriminator 4 view .LVU906
 3187              		.loc 1 1059 2 discriminator 4 view .LVU907
 3188 0020 2046     		mov	r0, r4
 3189 0022 FFF7FEFF 		bl	block_next
ARM GAS  /tmp/ccUBk765.s 			page 82


 3190              	.LVL317:
 3191 0026 0646     		mov	r6, r0
 3192 0028 FFF7FEFF 		bl	block_is_free
 3193              	.LVL318:
 3194 002c 00B1     		cbz	r0, .L219
 3195              	.L220:
 3196              		.loc 1 1059 2 discriminator 2 view .LVU908
 3197              		.loc 1 1059 2 discriminator 2 view .LVU909
 3198              		.loc 1 1059 2 discriminator 2 view .LVU910
 3199              		.loc 1 1059 2 discriminator 2 view .LVU911
 3200 002e FEE7     		b	.L220
 3201              	.L219:
 3202              		.loc 1 1059 2 discriminator 2 view .LVU912
1060:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
 3203              		.loc 1 1060 2 discriminator 2 view .LVU913
 3204              		.loc 1 1060 2 discriminator 2 view .LVU914
 3205 0030 3046     		mov	r0, r6
 3206 0032 FFF7FEFF 		bl	block_size
 3207              	.LVL319:
 3208 0036 00B1     		cbz	r0, .L221
 3209              	.L222:
 3210              		.loc 1 1060 2 discriminator 3 view .LVU915
 3211              		.loc 1 1060 2 discriminator 3 view .LVU916
 3212              		.loc 1 1060 2 discriminator 3 view .LVU917
 3213              		.loc 1 1060 2 discriminator 3 view .LVU918
 3214 0038 FEE7     		b	.L222
 3215              	.L221:
 3216              		.loc 1 1060 2 discriminator 2 view .LVU919
1061:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1062:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 3217              		.loc 1 1062 2 discriminator 2 view .LVU920
 3218 003a 2046     		mov	r0, r4
 3219 003c FFF7FEFF 		bl	block_size
 3220              	.LVL320:
 3221 0040 6A46     		mov	r2, sp
 3222 0042 01A9     		add	r1, sp, #4
 3223 0044 FFF7FEFF 		bl	mapping_insert
 3224              	.LVL321:
1063:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 3225              		.loc 1 1063 2 discriminator 2 view .LVU921
 3226 0048 009B     		ldr	r3, [sp]
 3227 004a 019A     		ldr	r2, [sp, #4]
 3228 004c 2146     		mov	r1, r4
 3229 004e 2846     		mov	r0, r5
 3230 0050 FFF7FEFF 		bl	remove_free_block
 3231              	.LVL322:
1064:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3232              		.loc 1 1064 1 is_stmt 0 discriminator 2 view .LVU922
 3233 0054 02B0     		add	sp, sp, #8
 3234              	.LCFI44:
 3235              		.cfi_def_cfa_offset 16
 3236              		@ sp needed
 3237 0056 70BD     		pop	{r4, r5, r6, pc}
 3238              		.loc 1 1064 1 discriminator 2 view .LVU923
 3239              		.cfi_endproc
 3240              	.LFE55:
 3242              		.section	.text.lv_tlsf_create,"ax",%progbits
ARM GAS  /tmp/ccUBk765.s 			page 83


 3243              		.align	1
 3244              		.global	lv_tlsf_create
 3245              		.syntax unified
 3246              		.thumb
 3247              		.thumb_func
 3249              	lv_tlsf_create:
 3250              	.LVL323:
 3251              	.LFB56:
1065:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1066:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1067:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF main interface.
1068:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1069:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1070:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1071:Middlewares/lvgl/src/misc/lv_tlsf.c **** int test_ffs_fls()
1072:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
1073:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Verify ffs/fls work properly. */
1074:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int rv = 0;
1075:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0) == -1) ? 0 : 0x1;
1076:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0) == -1) ? 0 : 0x2;
1077:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(1) == 0) ? 0 : 0x4;
1078:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(1) == 0) ? 0 : 0x8;
1079:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80000000) == 31) ? 0 : 0x10;
1080:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80008000) == 15) ? 0 : 0x20;
1081:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x80000008) == 31) ? 0 : 0x40;
1082:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x7FFFFFFF) == 30) ? 0 : 0x80;
1083:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1084:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1085:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x80000000) == 31) ? 0 : 0x100;
1086:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x100000000) == 32) ? 0 : 0x200;
1087:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0xffffffffffffffff) == 63) ? 0 : 0x400;
1088:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1089:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1090:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (rv)
1091:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1092:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("test_ffs_fls: %x ffs/fls tests failed.\n", rv);
1093:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1094:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return rv;
1095:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
1096:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1097:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1098:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create(void* mem)
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3252              		.loc 1 1099 1 is_stmt 1 view -0
 3253              		.cfi_startproc
 3254              		@ args = 0, pretend = 0, frame = 0
 3255              		@ frame_needed = 0, uses_anonymous_args = 0
1100:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (test_ffs_fls())
1102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1105:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1106:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1107:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((tlsfptr_t)mem % ALIGN_SIZE) != 0)
 3256              		.loc 1 1107 2 view .LVU925
 3257              		.loc 1 1107 5 is_stmt 0 view .LVU926
ARM GAS  /tmp/ccUBk765.s 			page 84


 3258 0000 10F0030F 		tst	r0, #3
 3259 0004 05D1     		bne	.L226
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
 3260              		.loc 1 1099 1 view .LVU927
 3261 0006 10B5     		push	{r4, lr}
 3262              	.LCFI45:
 3263              		.cfi_def_cfa_offset 8
 3264              		.cfi_offset 4, -8
 3265              		.cfi_offset 14, -4
 3266 0008 0446     		mov	r4, r0
1108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1109:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_create: Memory must be aligned to %u bytes.\n",
1110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1112:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1114:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_constructor(tlsf_cast(control_t*, mem));
 3267              		.loc 1 1114 2 is_stmt 1 view .LVU928
 3268 000a FFF7FEFF 		bl	control_constructor
 3269              	.LVL324:
1115:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_tlsf_t, mem);
 3270              		.loc 1 1116 2 view .LVU929
 3271              		.loc 1 1116 9 is_stmt 0 view .LVU930
 3272 000e 2046     		mov	r0, r4
1117:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3273              		.loc 1 1117 1 view .LVU931
 3274 0010 10BD     		pop	{r4, pc}
 3275              	.LVL325:
 3276              	.L226:
 3277              	.LCFI46:
 3278              		.cfi_def_cfa_offset 0
 3279              		.cfi_restore 4
 3280              		.cfi_restore 14
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3281              		.loc 1 1111 10 view .LVU932
 3282 0012 0020     		movs	r0, #0
 3283              	.LVL326:
 3284              		.loc 1 1117 1 view .LVU933
 3285 0014 7047     		bx	lr
 3286              		.cfi_endproc
 3287              	.LFE56:
 3289              		.section	.text.lv_tlsf_create_with_pool,"ax",%progbits
 3290              		.align	1
 3291              		.global	lv_tlsf_create_with_pool
 3292              		.syntax unified
 3293              		.thumb
 3294              		.thumb_func
 3296              	lv_tlsf_create_with_pool:
 3297              	.LVL327:
 3298              	.LFB57:
1118:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1119:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create_with_pool(void* mem, size_t bytes)
1120:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3299              		.loc 1 1120 1 is_stmt 1 view -0
 3300              		.cfi_startproc
 3301              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccUBk765.s 			page 85


 3302              		@ frame_needed = 0, uses_anonymous_args = 0
 3303              		.loc 1 1120 1 is_stmt 0 view .LVU935
 3304 0000 70B5     		push	{r4, r5, r6, lr}
 3305              	.LCFI47:
 3306              		.cfi_def_cfa_offset 16
 3307              		.cfi_offset 4, -16
 3308              		.cfi_offset 5, -12
 3309              		.cfi_offset 6, -8
 3310              		.cfi_offset 14, -4
 3311 0002 0546     		mov	r5, r0
 3312 0004 0E46     		mov	r6, r1
1121:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_t tlsf = lv_tlsf_create(mem);
 3313              		.loc 1 1121 2 is_stmt 1 view .LVU936
 3314              		.loc 1 1121 19 is_stmt 0 view .LVU937
 3315 0006 FFF7FEFF 		bl	lv_tlsf_create
 3316              	.LVL328:
 3317              		.loc 1 1121 19 view .LVU938
 3318 000a 0446     		mov	r4, r0
 3319              	.LVL329:
1122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_add_pool(tlsf, (char*)mem + lv_tlsf_size(), bytes - lv_tlsf_size());
 3320              		.loc 1 1122 2 is_stmt 1 view .LVU939
 3321              		.loc 1 1122 38 is_stmt 0 view .LVU940
 3322 000c FFF7FEFF 		bl	lv_tlsf_size
 3323              	.LVL330:
 3324              		.loc 1 1122 2 view .LVU941
 3325 0010 321A     		subs	r2, r6, r0
 3326 0012 2918     		adds	r1, r5, r0
 3327 0014 2046     		mov	r0, r4
 3328 0016 FFF7FEFF 		bl	lv_tlsf_add_pool
 3329              	.LVL331:
1123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf;
 3330              		.loc 1 1123 2 is_stmt 1 view .LVU942
1124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3331              		.loc 1 1124 1 is_stmt 0 view .LVU943
 3332 001a 2046     		mov	r0, r4
 3333 001c 70BD     		pop	{r4, r5, r6, pc}
 3334              		.loc 1 1124 1 view .LVU944
 3335              		.cfi_endproc
 3336              	.LFE57:
 3338              		.section	.text.lv_tlsf_destroy,"ax",%progbits
 3339              		.align	1
 3340              		.global	lv_tlsf_destroy
 3341              		.syntax unified
 3342              		.thumb
 3343              		.thumb_func
 3345              	lv_tlsf_destroy:
 3346              	.LVL332:
 3347              	.LFB58:
1125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1126:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_destroy(lv_tlsf_t tlsf)
1127:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3348              		.loc 1 1127 1 is_stmt 1 view -0
 3349              		.cfi_startproc
 3350              		@ args = 0, pretend = 0, frame = 0
 3351              		@ frame_needed = 0, uses_anonymous_args = 0
 3352              		@ link register save eliminated.
1128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Nothing to do. */
ARM GAS  /tmp/ccUBk765.s 			page 86


1129:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)tlsf;
 3353              		.loc 1 1129 2 view .LVU946
1130:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3354              		.loc 1 1130 1 is_stmt 0 view .LVU947
 3355 0000 7047     		bx	lr
 3356              		.cfi_endproc
 3357              	.LFE58:
 3359              		.section	.text.lv_tlsf_get_pool,"ax",%progbits
 3360              		.align	1
 3361              		.global	lv_tlsf_get_pool
 3362              		.syntax unified
 3363              		.thumb
 3364              		.thumb_func
 3366              	lv_tlsf_get_pool:
 3367              	.LVL333:
 3368              	.LFB59:
1131:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1132:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)
1133:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3369              		.loc 1 1133 1 is_stmt 1 view -0
 3370              		.cfi_startproc
 3371              		@ args = 0, pretend = 0, frame = 0
 3372              		@ frame_needed = 0, uses_anonymous_args = 0
 3373              		.loc 1 1133 1 is_stmt 0 view .LVU949
 3374 0000 10B5     		push	{r4, lr}
 3375              	.LCFI48:
 3376              		.cfi_def_cfa_offset 8
 3377              		.cfi_offset 4, -8
 3378              		.cfi_offset 14, -4
 3379 0002 0446     		mov	r4, r0
1134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_pool_t, (char*)tlsf + lv_tlsf_size());
 3380              		.loc 1 1134 2 is_stmt 1 view .LVU950
 3381              		.loc 1 1134 9 is_stmt 0 view .LVU951
 3382 0004 FFF7FEFF 		bl	lv_tlsf_size
 3383              	.LVL334:
1135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3384              		.loc 1 1135 1 view .LVU952
 3385 0008 2044     		add	r0, r0, r4
 3386 000a 10BD     		pop	{r4, pc}
 3387              		.loc 1 1135 1 view .LVU953
 3388              		.cfi_endproc
 3389              	.LFE59:
 3391              		.section	.text.lv_tlsf_malloc,"ax",%progbits
 3392              		.align	1
 3393              		.global	lv_tlsf_malloc
 3394              		.syntax unified
 3395              		.thumb
 3396              		.thumb_func
 3398              	lv_tlsf_malloc:
 3399              	.LVL335:
 3400              	.LFB60:
1136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1137:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
1138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3401              		.loc 1 1138 1 is_stmt 1 view -0
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccUBk765.s 			page 87


 3404              		@ frame_needed = 0, uses_anonymous_args = 0
 3405              		.loc 1 1138 1 is_stmt 0 view .LVU955
 3406 0000 38B5     		push	{r3, r4, r5, lr}
 3407              	.LCFI49:
 3408              		.cfi_def_cfa_offset 16
 3409              		.cfi_offset 3, -16
 3410              		.cfi_offset 4, -12
 3411              		.cfi_offset 5, -8
 3412              		.cfi_offset 14, -4
 3413 0002 0446     		mov	r4, r0
 3414 0004 0846     		mov	r0, r1
 3415              	.LVL336:
1139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3416              		.loc 1 1139 2 is_stmt 1 view .LVU956
1140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3417              		.loc 1 1140 2 view .LVU957
 3418              		.loc 1 1140 24 is_stmt 0 view .LVU958
 3419 0006 0421     		movs	r1, #4
 3420              	.LVL337:
 3421              		.loc 1 1140 24 view .LVU959
 3422 0008 FFF7FEFF 		bl	adjust_request_size
 3423              	.LVL338:
 3424              		.loc 1 1140 24 view .LVU960
 3425 000c 0546     		mov	r5, r0
 3426              	.LVL339:
1141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, adjust);
 3427              		.loc 1 1141 2 is_stmt 1 view .LVU961
 3428              		.loc 1 1141 26 is_stmt 0 view .LVU962
 3429 000e 0146     		mov	r1, r0
 3430 0010 2046     		mov	r0, r4
 3431              	.LVL340:
 3432              		.loc 1 1141 26 view .LVU963
 3433 0012 FFF7FEFF 		bl	block_locate_free
 3434              	.LVL341:
 3435              		.loc 1 1141 26 view .LVU964
 3436 0016 0146     		mov	r1, r0
 3437              	.LVL342:
1142:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3438              		.loc 1 1142 2 is_stmt 1 view .LVU965
 3439              		.loc 1 1142 9 is_stmt 0 view .LVU966
 3440 0018 2A46     		mov	r2, r5
 3441 001a 2046     		mov	r0, r4
 3442              	.LVL343:
 3443              		.loc 1 1142 9 view .LVU967
 3444 001c FFF7FEFF 		bl	block_prepare_used
 3445              	.LVL344:
1143:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3446              		.loc 1 1143 1 view .LVU968
 3447 0020 38BD     		pop	{r3, r4, r5, pc}
 3448              		.loc 1 1143 1 view .LVU969
 3449              		.cfi_endproc
 3450              	.LFE60:
 3452              		.section	.text.lv_tlsf_memalign,"ax",%progbits
 3453              		.align	1
 3454              		.global	lv_tlsf_memalign
 3455              		.syntax unified
 3456              		.thumb
ARM GAS  /tmp/ccUBk765.s 			page 88


 3457              		.thumb_func
 3459              	lv_tlsf_memalign:
 3460              	.LVL345:
 3461              	.LFB61:
1144:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1145:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
1146:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3462              		.loc 1 1146 1 is_stmt 1 view -0
 3463              		.cfi_startproc
 3464              		@ args = 0, pretend = 0, frame = 0
 3465              		@ frame_needed = 0, uses_anonymous_args = 0
 3466              		.loc 1 1146 1 is_stmt 0 view .LVU971
 3467 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3468              	.LCFI50:
 3469              		.cfi_def_cfa_offset 24
 3470              		.cfi_offset 4, -24
 3471              		.cfi_offset 5, -20
 3472              		.cfi_offset 6, -16
 3473              		.cfi_offset 7, -12
 3474              		.cfi_offset 8, -8
 3475              		.cfi_offset 14, -4
 3476 0004 0646     		mov	r6, r0
 3477 0006 0C46     		mov	r4, r1
1147:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3478              		.loc 1 1147 2 is_stmt 1 view .LVU972
 3479              	.LVL346:
1148:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3480              		.loc 1 1148 2 view .LVU973
 3481              		.loc 1 1148 24 is_stmt 0 view .LVU974
 3482 0008 0421     		movs	r1, #4
 3483              	.LVL347:
 3484              		.loc 1 1148 24 view .LVU975
 3485 000a 1046     		mov	r0, r2
 3486              	.LVL348:
 3487              		.loc 1 1148 24 view .LVU976
 3488 000c FFF7FEFF 		bl	adjust_request_size
 3489              	.LVL349:
 3490              		.loc 1 1148 24 view .LVU977
 3491 0010 0546     		mov	r5, r0
 3492              	.LVL350:
1149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We must allocate an additional minimum block size bytes so that if
1152:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our free block will leave an alignment gap which is smaller, we can
1153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trim a leading free block and release it back to the pool. We must
1154:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** do this because the previous physical block is in use, therefore
1155:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the prev_phys_block field is not valid, and we can't simply adjust
1156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the size of that block.
1157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1158:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t gap_minimum = sizeof(block_header_t);
 3493              		.loc 1 1158 2 is_stmt 1 view .LVU978
1159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t size_with_gap = adjust_request_size(adjust + align + gap_minimum, align);
 3494              		.loc 1 1159 2 view .LVU979
 3495              		.loc 1 1159 58 is_stmt 0 view .LVU980
 3496 0012 2044     		add	r0, r0, r4
 3497              	.LVL351:
 3498              		.loc 1 1159 31 view .LVU981
ARM GAS  /tmp/ccUBk765.s 			page 89


 3499 0014 2146     		mov	r1, r4
 3500 0016 1030     		adds	r0, r0, #16
 3501 0018 FFF7FEFF 		bl	adjust_request_size
 3502              	.LVL352:
1160:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1161:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If alignment is less than or equals base alignment, we're done.
1163:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If we requested 0 bytes, return null, as lv_tlsf_malloc(0) does.
1164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1165:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t aligned_size = (adjust && align > ALIGN_SIZE) ? size_with_gap : adjust;
 3503              		.loc 1 1165 2 is_stmt 1 view .LVU982
 3504              		.loc 1 1165 77 is_stmt 0 view .LVU983
 3505 001c 25B1     		cbz	r5, .L244
 3506 001e 0146     		mov	r1, r0
 3507              		.loc 1 1165 38 discriminator 1 view .LVU984
 3508 0020 042C     		cmp	r4, #4
 3509 0022 02D8     		bhi	.L239
 3510              		.loc 1 1165 77 view .LVU985
 3511 0024 2946     		mov	r1, r5
 3512 0026 00E0     		b	.L239
 3513              	.L244:
 3514              		.loc 1 1165 77 view .LVU986
 3515 0028 2946     		mov	r1, r5
 3516              	.L239:
 3517              	.LVL353:
1166:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, aligned_size);
 3518              		.loc 1 1167 2 is_stmt 1 discriminator 6 view .LVU987
 3519              		.loc 1 1167 26 is_stmt 0 discriminator 6 view .LVU988
 3520 002a 3046     		mov	r0, r6
 3521              	.LVL354:
 3522              		.loc 1 1167 26 discriminator 6 view .LVU989
 3523 002c FFF7FEFF 		bl	block_locate_free
 3524              	.LVL355:
1168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* This can't be a static assert. */
1170:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
 3525              		.loc 1 1170 2 is_stmt 1 discriminator 6 view .LVU990
 3526              		.loc 1 1170 2 discriminator 6 view .LVU991
 3527              		.loc 1 1170 2 discriminator 6 view .LVU992
1171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1172:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 3528              		.loc 1 1172 2 discriminator 6 view .LVU993
 3529              		.loc 1 1172 5 is_stmt 0 discriminator 6 view .LVU994
 3530 0030 0746     		mov	r7, r0
 3531 0032 F8B1     		cbz	r0, .L240
 3532              	.LBB13:
1173:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* ptr = block_to_ptr(block);
 3533              		.loc 1 1174 3 is_stmt 1 view .LVU995
 3534              		.loc 1 1174 15 is_stmt 0 view .LVU996
 3535 0034 FFF7FEFF 		bl	block_to_ptr
 3536              	.LVL356:
 3537              		.loc 1 1174 15 view .LVU997
 3538 0038 8046     		mov	r8, r0
 3539              	.LVL357:
1175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* aligned = align_ptr(ptr, align);
ARM GAS  /tmp/ccUBk765.s 			page 90


 3540              		.loc 1 1175 3 is_stmt 1 view .LVU998
 3541              		.loc 1 1175 19 is_stmt 0 view .LVU999
 3542 003a 2146     		mov	r1, r4
 3543 003c FFF7FEFF 		bl	align_ptr
 3544              	.LVL358:
1176:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size_t gap = tlsf_cast(size_t,
 3545              		.loc 1 1176 3 is_stmt 1 view .LVU1000
 3546              		.loc 1 1176 16 is_stmt 0 view .LVU1001
 3547 0040 A0EB0802 		sub	r2, r0, r8
 3548              	.LVL359:
1177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1178:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1179:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If gap size is too small, offset to next aligned boundary. */
1180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap && gap < gap_minimum)
 3549              		.loc 1 1180 3 is_stmt 1 view .LVU1002
 3550              		.loc 1 1180 11 is_stmt 0 view .LVU1003
 3551 0044 531E     		subs	r3, r2, #1
 3552              		.loc 1 1180 6 view .LVU1004
 3553 0046 0E2B     		cmp	r3, #14
 3554 0048 03D9     		bls	.L246
 3555              	.L241:
1181:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t gap_remain = gap_minimum - gap;
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
1185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
1186:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			aligned = align_ptr(next_aligned, align);
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
1189:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1191:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap)
 3556              		.loc 1 1192 3 is_stmt 1 view .LVU1005
 3557              		.loc 1 1192 6 is_stmt 0 view .LVU1006
 3558 004a 9AB1     		cbz	r2, .L240
1193:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_assert(gap >= gap_minimum && "gap size too small");
 3559              		.loc 1 1194 4 is_stmt 1 view .LVU1007
 3560              		.loc 1 1194 4 view .LVU1008
 3561 004c 0F2A     		cmp	r2, #15
 3562 004e 0CD8     		bhi	.L242
 3563              	.L243:
 3564              		.loc 1 1194 4 discriminator 2 view .LVU1009
 3565              		.loc 1 1194 4 discriminator 2 view .LVU1010
 3566              		.loc 1 1194 4 discriminator 2 view .LVU1011
 3567              		.loc 1 1194 4 discriminator 2 view .LVU1012
 3568 0050 FEE7     		b	.L243
 3569              	.L246:
 3570              	.LBB14:
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3571              		.loc 1 1182 4 view .LVU1013
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3572              		.loc 1 1182 17 is_stmt 0 view .LVU1014
 3573 0052 C2F11002 		rsb	r2, r2, #16
 3574              	.LVL360:
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
ARM GAS  /tmp/ccUBk765.s 			page 91


 3575              		.loc 1 1183 4 is_stmt 1 view .LVU1015
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
 3576              		.loc 1 1184 4 view .LVU1016
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3577              		.loc 1 1187 4 view .LVU1017
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3578              		.loc 1 1187 14 is_stmt 0 view .LVU1018
 3579 0056 2146     		mov	r1, r4
 3580 0058 9442     		cmp	r4, r2
 3581 005a 2CBF     		ite	cs
 3582 005c 0019     		addcs	r0, r0, r4
 3583 005e 8018     		addcc	r0, r0, r2
 3584              	.LVL361:
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3585              		.loc 1 1187 14 view .LVU1019
 3586 0060 FFF7FEFF 		bl	align_ptr
 3587              	.LVL362:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3588              		.loc 1 1188 4 is_stmt 1 view .LVU1020
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3589              		.loc 1 1188 10 is_stmt 0 view .LVU1021
 3590 0064 A0EB0802 		sub	r2, r0, r8
 3591              	.LVL363:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3592              		.loc 1 1188 10 view .LVU1022
 3593 0068 EFE7     		b	.L241
 3594              	.L242:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3595              		.loc 1 1188 10 view .LVU1023
 3596              	.LBE14:
 3597              		.loc 1 1194 4 is_stmt 1 discriminator 2 view .LVU1024
1195:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = block_trim_free_leading(control, block, gap);
 3598              		.loc 1 1195 4 discriminator 2 view .LVU1025
 3599              		.loc 1 1195 12 is_stmt 0 discriminator 2 view .LVU1026
 3600 006a 3946     		mov	r1, r7
 3601 006c 3046     		mov	r0, r6
 3602              	.LVL364:
 3603              		.loc 1 1195 12 discriminator 2 view .LVU1027
 3604 006e FFF7FEFF 		bl	block_trim_free_leading
 3605              	.LVL365:
 3606              		.loc 1 1195 12 discriminator 2 view .LVU1028
 3607 0072 0746     		mov	r7, r0
 3608              	.LVL366:
 3609              	.L240:
 3610              		.loc 1 1195 12 discriminator 2 view .LVU1029
 3611              	.LBE13:
1196:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1197:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1198:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3612              		.loc 1 1199 2 is_stmt 1 view .LVU1030
 3613              		.loc 1 1199 9 is_stmt 0 view .LVU1031
 3614 0074 2A46     		mov	r2, r5
 3615 0076 3946     		mov	r1, r7
 3616 0078 3046     		mov	r0, r6
 3617 007a FFF7FEFF 		bl	block_prepare_used
 3618              	.LVL367:
ARM GAS  /tmp/ccUBk765.s 			page 92


1200:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3619              		.loc 1 1200 1 view .LVU1032
 3620 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3621              		.loc 1 1200 1 view .LVU1033
 3622              		.cfi_endproc
 3623              	.LFE61:
 3625              		.section	.text.lv_tlsf_free,"ax",%progbits
 3626              		.align	1
 3627              		.global	lv_tlsf_free
 3628              		.syntax unified
 3629              		.thumb
 3630              		.thumb_func
 3632              	lv_tlsf_free:
 3633              	.LVL368:
 3634              	.LFB62:
1201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1202:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_free(lv_tlsf_t tlsf, void* ptr)
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3635              		.loc 1 1203 1 is_stmt 1 view -0
 3636              		.cfi_startproc
 3637              		@ args = 0, pretend = 0, frame = 0
 3638              		@ frame_needed = 0, uses_anonymous_args = 0
1204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
1205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 3639              		.loc 1 1205 2 view .LVU1035
 3640              		.loc 1 1205 5 is_stmt 0 view .LVU1036
 3641 0000 C9B1     		cbz	r1, .L252
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
 3642              		.loc 1 1203 1 view .LVU1037
 3643 0002 38B5     		push	{r3, r4, r5, lr}
 3644              	.LCFI51:
 3645              		.cfi_def_cfa_offset 16
 3646              		.cfi_offset 3, -16
 3647              		.cfi_offset 4, -12
 3648              		.cfi_offset 5, -8
 3649              		.cfi_offset 14, -4
 3650 0004 0446     		mov	r4, r0
 3651 0006 0846     		mov	r0, r1
 3652              	.LVL369:
 3653              	.LBB15:
1206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control_t* control = tlsf_cast(control_t*, tlsf);
 3654              		.loc 1 1207 3 is_stmt 1 view .LVU1038
1208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3655              		.loc 1 1208 3 view .LVU1039
 3656              		.loc 1 1208 27 is_stmt 0 view .LVU1040
 3657 0008 FFF7FEFF 		bl	block_from_ptr
 3658              	.LVL370:
 3659              		.loc 1 1208 27 view .LVU1041
 3660 000c 0546     		mov	r5, r0
 3661              	.LVL371:
1209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3662              		.loc 1 1209 3 is_stmt 1 view .LVU1042
 3663              		.loc 1 1209 3 view .LVU1043
 3664 000e FFF7FEFF 		bl	block_is_free
 3665              	.LVL372:
 3666              		.loc 1 1209 3 is_stmt 0 view .LVU1044
ARM GAS  /tmp/ccUBk765.s 			page 93


 3667 0012 00B1     		cbz	r0, .L249
 3668              	.L250:
 3669              		.loc 1 1209 3 is_stmt 1 discriminator 1 view .LVU1045
 3670              		.loc 1 1209 3 discriminator 1 view .LVU1046
 3671              		.loc 1 1209 3 discriminator 1 view .LVU1047
 3672              		.loc 1 1209 3 discriminator 1 view .LVU1048
 3673 0014 FEE7     		b	.L250
 3674              	.L249:
 3675              		.loc 1 1209 3 discriminator 2 view .LVU1049
1210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_free(block);
 3676              		.loc 1 1210 3 discriminator 2 view .LVU1050
 3677 0016 2846     		mov	r0, r5
 3678 0018 FFF7FEFF 		bl	block_mark_as_free
 3679              	.LVL373:
1211:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_prev(control, block);
 3680              		.loc 1 1211 3 discriminator 2 view .LVU1051
 3681              		.loc 1 1211 11 is_stmt 0 discriminator 2 view .LVU1052
 3682 001c 2946     		mov	r1, r5
 3683 001e 2046     		mov	r0, r4
 3684 0020 FFF7FEFF 		bl	block_merge_prev
 3685              	.LVL374:
 3686 0024 0146     		mov	r1, r0
 3687              	.LVL375:
1212:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_next(control, block);
 3688              		.loc 1 1212 3 is_stmt 1 discriminator 2 view .LVU1053
 3689              		.loc 1 1212 11 is_stmt 0 discriminator 2 view .LVU1054
 3690 0026 2046     		mov	r0, r4
 3691              	.LVL376:
 3692              		.loc 1 1212 11 discriminator 2 view .LVU1055
 3693 0028 FFF7FEFF 		bl	block_merge_next
 3694              	.LVL377:
 3695              		.loc 1 1212 11 discriminator 2 view .LVU1056
 3696 002c 0146     		mov	r1, r0
 3697              	.LVL378:
1213:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 3698              		.loc 1 1213 3 is_stmt 1 discriminator 2 view .LVU1057
 3699 002e 2046     		mov	r0, r4
 3700              	.LVL379:
 3701              		.loc 1 1213 3 is_stmt 0 discriminator 2 view .LVU1058
 3702 0030 FFF7FEFF 		bl	block_insert
 3703              	.LVL380:
 3704              		.loc 1 1213 3 discriminator 2 view .LVU1059
 3705              	.LBE15:
1214:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1215:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3706              		.loc 1 1215 1 discriminator 2 view .LVU1060
 3707 0034 38BD     		pop	{r3, r4, r5, pc}
 3708              	.LVL381:
 3709              	.L252:
 3710              	.LCFI52:
 3711              		.cfi_def_cfa_offset 0
 3712              		.cfi_restore 3
 3713              		.cfi_restore 4
 3714              		.cfi_restore 5
 3715              		.cfi_restore 14
 3716              		.loc 1 1215 1 discriminator 2 view .LVU1061
 3717 0036 7047     		bx	lr
ARM GAS  /tmp/ccUBk765.s 			page 94


 3718              		.cfi_endproc
 3719              	.LFE62:
 3721              		.section	.text.lv_tlsf_realloc,"ax",%progbits
 3722              		.align	1
 3723              		.global	lv_tlsf_realloc
 3724              		.syntax unified
 3725              		.thumb
 3726              		.thumb_func
 3728              	lv_tlsf_realloc:
 3729              	.LVL382:
 3730              	.LFB63:
1216:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1217:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1218:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The TLSF block information provides us with enough information to
1219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** provide a reasonably intelligent implementation of realloc, growing or
1220:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** shrinking the currently allocated block as required.
1221:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
1222:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** This routine handles the somewhat esoteric edge cases of realloc:
1223:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a non-zero size with a null pointer will behave like malloc
1224:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a zero size with a non-null pointer will behave like free
1225:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a request that cannot be satisfied will leave the original buffer
1226:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   untouched
1227:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - an extended buffer size will leave the newly-allocated area with
1228:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   contents undefined
1229:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1230:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_realloc(lv_tlsf_t tlsf, void* ptr, size_t size)
1231:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3731              		.loc 1 1231 1 is_stmt 1 view -0
 3732              		.cfi_startproc
 3733              		@ args = 0, pretend = 0, frame = 0
 3734              		@ frame_needed = 0, uses_anonymous_args = 0
 3735              		.loc 1 1231 1 is_stmt 0 view .LVU1063
 3736 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3737              	.LCFI53:
 3738              		.cfi_def_cfa_offset 40
 3739              		.cfi_offset 3, -40
 3740              		.cfi_offset 4, -36
 3741              		.cfi_offset 5, -32
 3742              		.cfi_offset 6, -28
 3743              		.cfi_offset 7, -24
 3744              		.cfi_offset 8, -20
 3745              		.cfi_offset 9, -16
 3746              		.cfi_offset 10, -12
 3747              		.cfi_offset 11, -8
 3748              		.cfi_offset 14, -4
 3749 0004 0546     		mov	r5, r0
 3750 0006 1446     		mov	r4, r2
1232:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3751              		.loc 1 1232 2 is_stmt 1 view .LVU1064
 3752              	.LVL383:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 3753              		.loc 1 1233 2 view .LVU1065
1234:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1235:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Zero-size requests are treated as free. */
1236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr && size == 0)
 3754              		.loc 1 1236 2 view .LVU1066
 3755              		.loc 1 1236 5 is_stmt 0 view .LVU1067
ARM GAS  /tmp/ccUBk765.s 			page 95


 3756 0008 8946     		mov	r9, r1
 3757 000a 01B1     		cbz	r1, .L256
 3758              		.loc 1 1236 10 discriminator 1 view .LVU1068
 3759 000c F2B1     		cbz	r2, .L265
 3760              	.L256:
1237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		lv_tlsf_free(tlsf, ptr);
1239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Requests with NULL pointers are treated as malloc. */
1241:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else if (!ptr)
 3761              		.loc 1 1241 7 is_stmt 1 view .LVU1069
 3762              		.loc 1 1241 10 is_stmt 0 view .LVU1070
 3763 000e B9F1000F 		cmp	r9, #0
 3764 0012 1FD0     		beq	.L266
 3765              	.LBB16:
1242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = lv_tlsf_malloc(tlsf, size);
1244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
1246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3766              		.loc 1 1247 3 is_stmt 1 view .LVU1071
 3767              		.loc 1 1247 27 is_stmt 0 view .LVU1072
 3768 0014 4846     		mov	r0, r9
 3769              	.LVL384:
 3770              		.loc 1 1247 27 view .LVU1073
 3771 0016 FFF7FEFF 		bl	block_from_ptr
 3772              	.LVL385:
 3773              		.loc 1 1247 27 view .LVU1074
 3774 001a 0646     		mov	r6, r0
 3775              	.LVL386:
1248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* next = block_next(block);
 3776              		.loc 1 1248 3 is_stmt 1 view .LVU1075
 3777              		.loc 1 1248 26 is_stmt 0 view .LVU1076
 3778 001c FFF7FEFF 		bl	block_next
 3779              	.LVL387:
 3780              		.loc 1 1248 26 view .LVU1077
 3781 0020 8246     		mov	r10, r0
 3782              	.LVL388:
1249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t cursize = block_size(block);
 3783              		.loc 1 1250 3 is_stmt 1 view .LVU1078
 3784              		.loc 1 1250 26 is_stmt 0 view .LVU1079
 3785 0022 3046     		mov	r0, r6
 3786              	.LVL389:
 3787              		.loc 1 1250 26 view .LVU1080
 3788 0024 FFF7FEFF 		bl	block_size
 3789              	.LVL390:
 3790 0028 8046     		mov	r8, r0
 3791              	.LVL391:
1251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t combined = cursize + block_size(next) + block_header_overhead;
 3792              		.loc 1 1251 3 is_stmt 1 view .LVU1081
 3793              		.loc 1 1251 37 is_stmt 0 view .LVU1082
 3794 002a 5046     		mov	r0, r10
 3795              	.LVL392:
 3796              		.loc 1 1251 37 view .LVU1083
 3797 002c FFF7FEFF 		bl	block_size
ARM GAS  /tmp/ccUBk765.s 			page 96


 3798              	.LVL393:
 3799              		.loc 1 1251 35 view .LVU1084
 3800 0030 00EB0803 		add	r3, r0, r8
 3801              		.loc 1 1251 16 view .LVU1085
 3802 0034 03F1040B 		add	fp, r3, #4
 3803              	.LVL394:
1252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3804              		.loc 1 1252 3 is_stmt 1 view .LVU1086
 3805              		.loc 1 1252 25 is_stmt 0 view .LVU1087
 3806 0038 0421     		movs	r1, #4
 3807 003a 2046     		mov	r0, r4
 3808 003c FFF7FEFF 		bl	adjust_request_size
 3809              	.LVL395:
 3810 0040 0746     		mov	r7, r0
 3811              	.LVL396:
1253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3812              		.loc 1 1254 3 is_stmt 1 view .LVU1088
 3813              		.loc 1 1254 3 view .LVU1089
 3814 0042 3046     		mov	r0, r6
 3815              	.LVL397:
 3816              		.loc 1 1254 3 is_stmt 0 view .LVU1090
 3817 0044 FFF7FEFF 		bl	block_is_free
 3818              	.LVL398:
 3819 0048 60B1     		cbz	r0, .L259
 3820              	.L260:
 3821              		.loc 1 1254 3 is_stmt 1 discriminator 1 view .LVU1091
 3822              		.loc 1 1254 3 discriminator 1 view .LVU1092
 3823              		.loc 1 1254 3 discriminator 1 view .LVU1093
 3824              		.loc 1 1254 3 discriminator 1 view .LVU1094
 3825 004a FEE7     		b	.L260
 3826              	.LVL399:
 3827              	.L265:
 3828              		.loc 1 1254 3 is_stmt 0 discriminator 1 view .LVU1095
 3829              	.LBE16:
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3830              		.loc 1 1238 3 is_stmt 1 view .LVU1096
 3831 004c FFF7FEFF 		bl	lv_tlsf_free
 3832              	.LVL400:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3833              		.loc 1 1233 8 is_stmt 0 view .LVU1097
 3834 0050 0026     		movs	r6, #0
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3835              		.loc 1 1238 3 view .LVU1098
 3836 0052 04E0     		b	.L255
 3837              	.LVL401:
 3838              	.L266:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3839              		.loc 1 1243 3 is_stmt 1 view .LVU1099
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3840              		.loc 1 1243 7 is_stmt 0 view .LVU1100
 3841 0054 2146     		mov	r1, r4
 3842              	.LVL402:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3843              		.loc 1 1243 7 view .LVU1101
 3844 0056 2846     		mov	r0, r5
 3845              	.LVL403:
ARM GAS  /tmp/ccUBk765.s 			page 97


1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3846              		.loc 1 1243 7 view .LVU1102
 3847 0058 FFF7FEFF 		bl	lv_tlsf_malloc
 3848              	.LVL404:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3849              		.loc 1 1243 7 view .LVU1103
 3850 005c 0646     		mov	r6, r0
 3851              	.LVL405:
 3852              	.L255:
1255:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
1257:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** If the next block is used, or when combined with the current
1258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** block, does not offer enough space, we must reallocate and copy.
1259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (adjust > cursize && (!block_is_free(next) || adjust > combined))
1261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = lv_tlsf_malloc(tlsf, size);
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
1264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				const size_t minsize = tlsf_min(cursize, size);
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
1268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		else
1271:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Do we need to expand to the next block? */
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (adjust > cursize)
1274:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_merge_next(control, block);
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
1277:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1278:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1279:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Trim the resulting block and return the original pointer. */
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_trim_used(control, block, adjust);
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
1282:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1283:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1284:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
1286:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3853              		.loc 1 1286 1 view .LVU1104
 3854 005e 3046     		mov	r0, r6
 3855 0060 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3856              	.LVL406:
 3857              	.L259:
 3858              	.LBB18:
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3859              		.loc 1 1254 3 is_stmt 1 discriminator 2 view .LVU1105
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3860              		.loc 1 1260 3 discriminator 2 view .LVU1106
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3861              		.loc 1 1260 6 is_stmt 0 discriminator 2 view .LVU1107
 3862 0064 B845     		cmp	r8, r7
 3863 0066 18D2     		bcs	.L261
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3864              		.loc 1 1260 29 discriminator 1 view .LVU1108
ARM GAS  /tmp/ccUBk765.s 			page 98


 3865 0068 5046     		mov	r0, r10
 3866 006a FFF7FEFF 		bl	block_is_free
 3867              	.LVL407:
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3868              		.loc 1 1260 24 discriminator 1 view .LVU1109
 3869 006e 08B1     		cbz	r0, .L262
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3870              		.loc 1 1260 49 discriminator 2 view .LVU1110
 3871 0070 BB45     		cmp	fp, r7
 3872 0072 12D2     		bcs	.L261
 3873              	.L262:
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3874              		.loc 1 1262 4 is_stmt 1 view .LVU1111
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3875              		.loc 1 1262 8 is_stmt 0 view .LVU1112
 3876 0074 2146     		mov	r1, r4
 3877 0076 2846     		mov	r0, r5
 3878 0078 FFF7FEFF 		bl	lv_tlsf_malloc
 3879              	.LVL408:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3880              		.loc 1 1263 4 is_stmt 1 view .LVU1113
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3881              		.loc 1 1263 7 is_stmt 0 view .LVU1114
 3882 007c 0646     		mov	r6, r0
 3883              	.LVL409:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3884              		.loc 1 1263 7 view .LVU1115
 3885 007e 0028     		cmp	r0, #0
 3886 0080 EDD0     		beq	.L255
 3887              	.LBB17:
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
 3888              		.loc 1 1265 5 is_stmt 1 view .LVU1116
 3889              	.LVL410:
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
 3890              		.loc 1 1266 5 view .LVU1117
 3891 0082 2246     		mov	r2, r4
 3892 0084 4445     		cmp	r4, r8
 3893 0086 28BF     		it	cs
 3894 0088 4246     		movcs	r2, r8
 3895 008a 4946     		mov	r1, r9
 3896 008c FFF7FEFF 		bl	lv_memcpy
 3897              	.LVL411:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3898              		.loc 1 1267 5 view .LVU1118
 3899 0090 4946     		mov	r1, r9
 3900 0092 2846     		mov	r0, r5
 3901 0094 FFF7FEFF 		bl	lv_tlsf_free
 3902              	.LVL412:
 3903 0098 E1E7     		b	.L255
 3904              	.LVL413:
 3905              	.L261:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3906              		.loc 1 1267 5 is_stmt 0 view .LVU1119
 3907              	.LBE17:
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3908              		.loc 1 1273 4 is_stmt 1 view .LVU1120
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
ARM GAS  /tmp/ccUBk765.s 			page 99


 3909              		.loc 1 1273 7 is_stmt 0 view .LVU1121
 3910 009a B845     		cmp	r8, r7
 3911 009c 06D3     		bcc	.L267
 3912              	.L263:
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
 3913              		.loc 1 1280 4 is_stmt 1 view .LVU1122
 3914 009e 3A46     		mov	r2, r7
 3915 00a0 3146     		mov	r1, r6
 3916 00a2 2846     		mov	r0, r5
 3917 00a4 FFF7FEFF 		bl	block_trim_used
 3918              	.LVL414:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3919              		.loc 1 1281 4 view .LVU1123
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3920              		.loc 1 1281 6 is_stmt 0 view .LVU1124
 3921 00a8 4E46     		mov	r6, r9
 3922              	.LVL415:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3923              		.loc 1 1281 6 view .LVU1125
 3924              	.LBE18:
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3925              		.loc 1 1285 2 is_stmt 1 view .LVU1126
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3926              		.loc 1 1285 9 is_stmt 0 view .LVU1127
 3927 00aa D8E7     		b	.L255
 3928              	.LVL416:
 3929              	.L267:
 3930              	.LBB19:
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
 3931              		.loc 1 1275 5 is_stmt 1 view .LVU1128
 3932 00ac 3146     		mov	r1, r6
 3933 00ae 2846     		mov	r0, r5
 3934 00b0 FFF7FEFF 		bl	block_merge_next
 3935              	.LVL417:
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3936              		.loc 1 1276 5 view .LVU1129
 3937 00b4 3046     		mov	r0, r6
 3938 00b6 FFF7FEFF 		bl	block_mark_as_used
 3939              	.LVL418:
 3940 00ba F0E7     		b	.L263
 3941              	.LBE19:
 3942              		.cfi_endproc
 3943              	.LFE63:
 3945              		.text
 3946              	.Letext0:
 3947              		.file 2 "/home/akinya/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 3948              		.file 3 "Middlewares/lvgl/src/misc/lv_tlsf.h"
 3949              		.file 4 "Middlewares/lvgl/src/misc/lv_mem.h"
ARM GAS  /tmp/ccUBk765.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_tlsf.c
     /tmp/ccUBk765.s:20     .text.block_size:0000000000000000 $t
     /tmp/ccUBk765.s:25     .text.block_size:0000000000000000 block_size
     /tmp/ccUBk765.s:45     .text.block_set_size:0000000000000000 $t
     /tmp/ccUBk765.s:50     .text.block_set_size:0000000000000000 block_set_size
     /tmp/ccUBk765.s:77     .text.block_is_last:0000000000000000 $t
     /tmp/ccUBk765.s:82     .text.block_is_last:0000000000000000 block_is_last
     /tmp/ccUBk765.s:107    .text.block_is_free:0000000000000000 $t
     /tmp/ccUBk765.s:112    .text.block_is_free:0000000000000000 block_is_free
     /tmp/ccUBk765.s:131    .text.block_set_free:0000000000000000 $t
     /tmp/ccUBk765.s:136    .text.block_set_free:0000000000000000 block_set_free
     /tmp/ccUBk765.s:155    .text.block_set_used:0000000000000000 $t
     /tmp/ccUBk765.s:160    .text.block_set_used:0000000000000000 block_set_used
     /tmp/ccUBk765.s:179    .text.block_is_prev_free:0000000000000000 $t
     /tmp/ccUBk765.s:184    .text.block_is_prev_free:0000000000000000 block_is_prev_free
     /tmp/ccUBk765.s:203    .text.block_set_prev_free:0000000000000000 $t
     /tmp/ccUBk765.s:208    .text.block_set_prev_free:0000000000000000 block_set_prev_free
     /tmp/ccUBk765.s:227    .text.block_set_prev_used:0000000000000000 $t
     /tmp/ccUBk765.s:232    .text.block_set_prev_used:0000000000000000 block_set_prev_used
     /tmp/ccUBk765.s:251    .text.block_from_ptr:0000000000000000 $t
     /tmp/ccUBk765.s:256    .text.block_from_ptr:0000000000000000 block_from_ptr
     /tmp/ccUBk765.s:274    .text.block_to_ptr:0000000000000000 $t
     /tmp/ccUBk765.s:279    .text.block_to_ptr:0000000000000000 block_to_ptr
     /tmp/ccUBk765.s:297    .text.offset_to_block:0000000000000000 $t
     /tmp/ccUBk765.s:302    .text.offset_to_block:0000000000000000 offset_to_block
     /tmp/ccUBk765.s:320    .text.block_prev:0000000000000000 $t
     /tmp/ccUBk765.s:325    .text.block_prev:0000000000000000 block_prev
     /tmp/ccUBk765.s:362    .text.block_next:0000000000000000 $t
     /tmp/ccUBk765.s:367    .text.block_next:0000000000000000 block_next
     /tmp/ccUBk765.s:423    .text.block_link_next:0000000000000000 $t
     /tmp/ccUBk765.s:428    .text.block_link_next:0000000000000000 block_link_next
     /tmp/ccUBk765.s:457    .text.block_mark_as_free:0000000000000000 $t
     /tmp/ccUBk765.s:462    .text.block_mark_as_free:0000000000000000 block_mark_as_free
     /tmp/ccUBk765.s:494    .text.block_mark_as_used:0000000000000000 $t
     /tmp/ccUBk765.s:499    .text.block_mark_as_used:0000000000000000 block_mark_as_used
     /tmp/ccUBk765.s:531    .text.align_up:0000000000000000 $t
     /tmp/ccUBk765.s:536    .text.align_up:0000000000000000 align_up
     /tmp/ccUBk765.s:573    .text.align_down:0000000000000000 $t
     /tmp/ccUBk765.s:578    .text.align_down:0000000000000000 align_down
     /tmp/ccUBk765.s:612    .text.align_ptr:0000000000000000 $t
     /tmp/ccUBk765.s:617    .text.align_ptr:0000000000000000 align_ptr
     /tmp/ccUBk765.s:656    .text.adjust_request_size:0000000000000000 $t
     /tmp/ccUBk765.s:661    .text.adjust_request_size:0000000000000000 adjust_request_size
     /tmp/ccUBk765.s:716    .text.remove_free_block:0000000000000000 $t
     /tmp/ccUBk765.s:721    .text.remove_free_block:0000000000000000 remove_free_block
     /tmp/ccUBk765.s:825    .text.insert_free_block:0000000000000000 $t
     /tmp/ccUBk765.s:830    .text.insert_free_block:0000000000000000 insert_free_block
     /tmp/ccUBk765.s:945    .text.block_can_split:0000000000000000 $t
     /tmp/ccUBk765.s:950    .text.block_can_split:0000000000000000 block_can_split
     /tmp/ccUBk765.s:982    .text.block_split:0000000000000000 $t
     /tmp/ccUBk765.s:987    .text.block_split:0000000000000000 block_split
     /tmp/ccUBk765.s:1102   .text.block_absorb:0000000000000000 $t
     /tmp/ccUBk765.s:1107   .text.block_absorb:0000000000000000 block_absorb
     /tmp/ccUBk765.s:1162   .text.control_constructor:0000000000000000 $t
     /tmp/ccUBk765.s:1167   .text.control_constructor:0000000000000000 control_constructor
     /tmp/ccUBk765.s:1232   .text.integrity_walker:0000000000000000 $t
ARM GAS  /tmp/ccUBk765.s 			page 101


     /tmp/ccUBk765.s:1237   .text.integrity_walker:0000000000000000 integrity_walker
     /tmp/ccUBk765.s:1330   .text.default_walker:0000000000000000 $t
     /tmp/ccUBk765.s:1335   .text.default_walker:0000000000000000 default_walker
     /tmp/ccUBk765.s:1351   .text.tlsf_fls:0000000000000000 $t
     /tmp/ccUBk765.s:1356   .text.tlsf_fls:0000000000000000 tlsf_fls
     /tmp/ccUBk765.s:1391   .text.mapping_insert:0000000000000000 $t
     /tmp/ccUBk765.s:1396   .text.mapping_insert:0000000000000000 mapping_insert
     /tmp/ccUBk765.s:1473   .text.block_insert:0000000000000000 $t
     /tmp/ccUBk765.s:1478   .text.block_insert:0000000000000000 block_insert
     /tmp/ccUBk765.s:1527   .text.block_trim_free:0000000000000000 $t
     /tmp/ccUBk765.s:1532   .text.block_trim_free:0000000000000000 block_trim_free
     /tmp/ccUBk765.s:1612   .text.block_prepare_used:0000000000000000 $t
     /tmp/ccUBk765.s:1617   .text.block_prepare_used:0000000000000000 block_prepare_used
     /tmp/ccUBk765.s:1674   .text.block_trim_free_leading:0000000000000000 $t
     /tmp/ccUBk765.s:1679   .text.block_trim_free_leading:0000000000000000 block_trim_free_leading
     /tmp/ccUBk765.s:1748   .text.block_remove:0000000000000000 $t
     /tmp/ccUBk765.s:1753   .text.block_remove:0000000000000000 block_remove
     /tmp/ccUBk765.s:1802   .text.block_merge_prev:0000000000000000 $t
     /tmp/ccUBk765.s:1807   .text.block_merge_prev:0000000000000000 block_merge_prev
     /tmp/ccUBk765.s:1893   .text.block_merge_next:0000000000000000 $t
     /tmp/ccUBk765.s:1898   .text.block_merge_next:0000000000000000 block_merge_next
     /tmp/ccUBk765.s:1978   .text.block_trim_used:0000000000000000 $t
     /tmp/ccUBk765.s:1983   .text.block_trim_used:0000000000000000 block_trim_used
     /tmp/ccUBk765.s:2066   .text.mapping_search:0000000000000000 $t
     /tmp/ccUBk765.s:2071   .text.mapping_search:0000000000000000 mapping_search
     /tmp/ccUBk765.s:2126   .text.tlsf_ffs:0000000000000000 $t
     /tmp/ccUBk765.s:2131   .text.tlsf_ffs:0000000000000000 tlsf_ffs
     /tmp/ccUBk765.s:2156   .text.search_suitable_block:0000000000000000 $t
     /tmp/ccUBk765.s:2161   .text.search_suitable_block:0000000000000000 search_suitable_block
     /tmp/ccUBk765.s:2286   .text.block_locate_free:0000000000000000 $t
     /tmp/ccUBk765.s:2291   .text.block_locate_free:0000000000000000 block_locate_free
     /tmp/ccUBk765.s:2400   .text.lv_tlsf_check:0000000000000000 $t
     /tmp/ccUBk765.s:2406   .text.lv_tlsf_check:0000000000000000 lv_tlsf_check
     /tmp/ccUBk765.s:2677   .text.lv_tlsf_walk_pool:0000000000000000 $t
     /tmp/ccUBk765.s:2683   .text.lv_tlsf_walk_pool:0000000000000000 lv_tlsf_walk_pool
     /tmp/ccUBk765.s:2774   .text.lv_tlsf_walk_pool:0000000000000058 $d
     /tmp/ccUBk765.s:2779   .text.lv_tlsf_block_size:0000000000000000 $t
     /tmp/ccUBk765.s:2785   .text.lv_tlsf_block_size:0000000000000000 lv_tlsf_block_size
     /tmp/ccUBk765.s:2831   .text.lv_tlsf_check_pool:0000000000000000 $t
     /tmp/ccUBk765.s:2837   .text.lv_tlsf_check_pool:0000000000000000 lv_tlsf_check_pool
     /tmp/ccUBk765.s:2873   .text.lv_tlsf_check_pool:000000000000001c $d
     /tmp/ccUBk765.s:2878   .text.lv_tlsf_size:0000000000000000 $t
     /tmp/ccUBk765.s:2884   .text.lv_tlsf_size:0000000000000000 lv_tlsf_size
     /tmp/ccUBk765.s:2899   .text.lv_tlsf_align_size:0000000000000000 $t
     /tmp/ccUBk765.s:2905   .text.lv_tlsf_align_size:0000000000000000 lv_tlsf_align_size
     /tmp/ccUBk765.s:2920   .text.lv_tlsf_block_size_min:0000000000000000 $t
     /tmp/ccUBk765.s:2926   .text.lv_tlsf_block_size_min:0000000000000000 lv_tlsf_block_size_min
     /tmp/ccUBk765.s:2941   .text.lv_tlsf_block_size_max:0000000000000000 $t
     /tmp/ccUBk765.s:2947   .text.lv_tlsf_block_size_max:0000000000000000 lv_tlsf_block_size_max
     /tmp/ccUBk765.s:2962   .text.lv_tlsf_pool_overhead:0000000000000000 $t
     /tmp/ccUBk765.s:2968   .text.lv_tlsf_pool_overhead:0000000000000000 lv_tlsf_pool_overhead
     /tmp/ccUBk765.s:2983   .text.lv_tlsf_alloc_overhead:0000000000000000 $t
     /tmp/ccUBk765.s:2989   .text.lv_tlsf_alloc_overhead:0000000000000000 lv_tlsf_alloc_overhead
     /tmp/ccUBk765.s:3004   .text.lv_tlsf_add_pool:0000000000000000 $t
     /tmp/ccUBk765.s:3010   .text.lv_tlsf_add_pool:0000000000000000 lv_tlsf_add_pool
     /tmp/ccUBk765.s:3128   .text.lv_tlsf_remove_pool:0000000000000000 $t
     /tmp/ccUBk765.s:3134   .text.lv_tlsf_remove_pool:0000000000000000 lv_tlsf_remove_pool
ARM GAS  /tmp/ccUBk765.s 			page 102


     /tmp/ccUBk765.s:3243   .text.lv_tlsf_create:0000000000000000 $t
     /tmp/ccUBk765.s:3249   .text.lv_tlsf_create:0000000000000000 lv_tlsf_create
     /tmp/ccUBk765.s:3290   .text.lv_tlsf_create_with_pool:0000000000000000 $t
     /tmp/ccUBk765.s:3296   .text.lv_tlsf_create_with_pool:0000000000000000 lv_tlsf_create_with_pool
     /tmp/ccUBk765.s:3339   .text.lv_tlsf_destroy:0000000000000000 $t
     /tmp/ccUBk765.s:3345   .text.lv_tlsf_destroy:0000000000000000 lv_tlsf_destroy
     /tmp/ccUBk765.s:3360   .text.lv_tlsf_get_pool:0000000000000000 $t
     /tmp/ccUBk765.s:3366   .text.lv_tlsf_get_pool:0000000000000000 lv_tlsf_get_pool
     /tmp/ccUBk765.s:3392   .text.lv_tlsf_malloc:0000000000000000 $t
     /tmp/ccUBk765.s:3398   .text.lv_tlsf_malloc:0000000000000000 lv_tlsf_malloc
     /tmp/ccUBk765.s:3453   .text.lv_tlsf_memalign:0000000000000000 $t
     /tmp/ccUBk765.s:3459   .text.lv_tlsf_memalign:0000000000000000 lv_tlsf_memalign
     /tmp/ccUBk765.s:3626   .text.lv_tlsf_free:0000000000000000 $t
     /tmp/ccUBk765.s:3632   .text.lv_tlsf_free:0000000000000000 lv_tlsf_free
     /tmp/ccUBk765.s:3722   .text.lv_tlsf_realloc:0000000000000000 $t
     /tmp/ccUBk765.s:3728   .text.lv_tlsf_realloc:0000000000000000 lv_tlsf_realloc

UNDEFINED SYMBOLS
lv_memcpy
