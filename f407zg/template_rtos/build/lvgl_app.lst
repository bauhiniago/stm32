ARM GAS  /tmp/ccWwa8pC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lvgl_app.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.slider_y_event_cb,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	slider_y_event_cb:
  26              	.LVL0:
  27              	.LFB189:
  28              		.file 1 "Core/Src/lvgl_app.c"
   1:Core/Src/lvgl_app.c **** #include "lvgl_app.h"
   2:Core/Src/lvgl_app.c **** #include <stdio.h>
   3:Core/Src/lvgl_app.c **** 
   4:Core/Src/lvgl_app.c **** 
   5:Core/Src/lvgl_app.c **** lv_obj_t * label1;
   6:Core/Src/lvgl_app.c **** void counter_label(void)
   7:Core/Src/lvgl_app.c **** {
   8:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
   9:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
  10:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
  11:Core/Src/lvgl_app.c ****     
  12:Core/Src/lvgl_app.c ****     lv_label_set_text(label1, "counter");
  13:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
  14:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
  15:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
  16:Core/Src/lvgl_app.c **** 
  17:Core/Src/lvgl_app.c **** 
  18:Core/Src/lvgl_app.c ****     // lv_obj_t * label2 = lv_label_create(lv_scr_act());
  19:Core/Src/lvgl_app.c ****     // lv_label_set_long_mode(label2, LV_LABEL_LONG_SCROLL_CIRCULAR);     /*Circular scroll*/
  20:Core/Src/lvgl_app.c ****     // lv_obj_set_width(label2, 150);
  21:Core/Src/lvgl_app.c ****     // lv_label_set_text(label2, "It is a circularly scrolling text.");
  22:Core/Src/lvgl_app.c ****     // lv_obj_align(label2, LV_ALIGN_CENTER, 0, 40);
  23:Core/Src/lvgl_app.c **** }
  24:Core/Src/lvgl_app.c **** 
  25:Core/Src/lvgl_app.c **** lv_obj_t * wave_chart;
  26:Core/Src/lvgl_app.c **** lv_chart_series_t * wave_ser ;
  27:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_x;
  28:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_y;
  29:Core/Src/lvgl_app.c **** static void slider_x_event_cb(lv_event_t * e)
  30:Core/Src/lvgl_app.c **** {
ARM GAS  /tmp/ccWwa8pC.s 			page 2


  31:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  32:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  33:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  34:Core/Src/lvgl_app.c **** }
  35:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
  36:Core/Src/lvgl_app.c **** {
  29              		.loc 1 36 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 36 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  37:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  39              		.loc 1 37 5 is_stmt 1 view .LVU2
  40              		.loc 1 37 22 is_stmt 0 view .LVU3
  41 0002 FFF7FEFF 		bl	lv_event_get_target
  42              	.LVL1:
  38:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  43              		.loc 1 38 5 is_stmt 1 view .LVU4
  44              	.LBB20:
  45              	.LBI20:
  46              		.file 2 "Middlewares/lvgl/src/widgets/lv_slider.h"
   1:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
   2:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:Middlewares/lvgl/src/widgets/lv_slider.h ****  *
   4:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
   5:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   6:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:Middlewares/lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   9:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  12:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  13:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  14:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  16:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  18:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  20:Middlewares/lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:Middlewares/lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  24:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  25:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  28:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  29:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  31:Middlewares/lvgl/src/widgets/lv_slider.h **** 
ARM GAS  /tmp/ccWwa8pC.s 			page 3


  32:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  33:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  35:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  36:Middlewares/lvgl/src/widgets/lv_slider.h **** enum {
  37:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:Middlewares/lvgl/src/widgets/lv_slider.h **** };
  41:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  43:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:Middlewares/lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:Middlewares/lvgl/src/widgets/lv_slider.h **** }lv_slider_t;
  51:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  52:Middlewares/lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  54:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  55:Middlewares/lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  56:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  57:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  58:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  59:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Create a slider objects
  60:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  61:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  62:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  63:Middlewares/lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  64:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  65:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
  66:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Setter functions
  67:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
  68:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  69:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  70:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  71:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  72:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  73:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  74:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  76:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  77:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  78:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  79:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  80:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  81:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  82:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  83:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  84:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  85:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  86:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  87:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  88:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
ARM GAS  /tmp/ccWwa8pC.s 			page 4


  89:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  90:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  91:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  92:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
  93:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
  94:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
  95:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
  96:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
  98:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  99:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 100:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 101:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 102:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 103:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 104:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 105:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 106:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 107:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 108:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 109:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 110:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 111:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 112:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
 113:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Getter functions
 114:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
 115:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 116:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 117:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 118:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 119:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 120:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  47              		.loc 2 121 23 view .LVU5
  48              	.LBB21:
 122:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 123:Middlewares/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
  49              		.loc 2 123 5 view .LVU6
  50              		.loc 2 123 12 is_stmt 0 view .LVU7
  51 0006 FFF7FEFF 		bl	lv_bar_get_value
  52              	.LVL2:
  53              		.loc 2 123 12 view .LVU8
  54              	.LBE21:
  55              	.LBE20:
  39:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_y(wave_chart, v);
  56              		.loc 1 39 5 is_stmt 1 view .LVU9
  57 000a 81B2     		uxth	r1, r0
  58 000c 024B     		ldr	r3, .L3
  59 000e 1868     		ldr	r0, [r3]
  60              	.LVL3:
  61              		.loc 1 39 5 is_stmt 0 view .LVU10
  62 0010 FFF7FEFF 		bl	lv_chart_set_zoom_y
  63              	.LVL4:
  40:Core/Src/lvgl_app.c **** }
  64              		.loc 1 40 1 view .LVU11
  65 0014 08BD     		pop	{r3, pc}
  66              	.L4:
ARM GAS  /tmp/ccWwa8pC.s 			page 5


  67 0016 00BF     		.align	2
  68              	.L3:
  69 0018 00000000 		.word	.LANCHOR0
  70              		.cfi_endproc
  71              	.LFE189:
  73              		.section	.text.slider_x_event_cb,"ax",%progbits
  74              		.align	1
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	slider_x_event_cb:
  81              	.LVL5:
  82              	.LFB188:
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  83              		.loc 1 30 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  87              		.loc 1 30 1 is_stmt 0 view .LVU13
  88 0000 08B5     		push	{r3, lr}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  93              		.loc 1 31 5 is_stmt 1 view .LVU14
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  94              		.loc 1 31 22 is_stmt 0 view .LVU15
  95 0002 FFF7FEFF 		bl	lv_event_get_target
  96              	.LVL6:
  32:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  97              		.loc 1 32 5 is_stmt 1 view .LVU16
  98              	.LBB22:
  99              	.LBI22:
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 100              		.loc 2 121 23 view .LVU17
 101              	.LBB23:
 102              		.loc 2 123 5 view .LVU18
 103              		.loc 2 123 12 is_stmt 0 view .LVU19
 104 0006 FFF7FEFF 		bl	lv_bar_get_value
 105              	.LVL7:
 106              		.loc 2 123 12 view .LVU20
 107              	.LBE23:
 108              	.LBE22:
  33:Core/Src/lvgl_app.c **** }
 109              		.loc 1 33 5 is_stmt 1 view .LVU21
 110 000a 81B2     		uxth	r1, r0
 111 000c 024B     		ldr	r3, .L7
 112 000e 1868     		ldr	r0, [r3]
 113              	.LVL8:
  33:Core/Src/lvgl_app.c **** }
 114              		.loc 1 33 5 is_stmt 0 view .LVU22
 115 0010 FFF7FEFF 		bl	lv_chart_set_zoom_x
 116              	.LVL9:
  34:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
ARM GAS  /tmp/ccWwa8pC.s 			page 6


 117              		.loc 1 34 1 view .LVU23
 118 0014 08BD     		pop	{r3, pc}
 119              	.L8:
 120 0016 00BF     		.align	2
 121              	.L7:
 122 0018 00000000 		.word	.LANCHOR0
 123              		.cfi_endproc
 124              	.LFE188:
 126              		.section	.text.wave_auto_mode,"ax",%progbits
 127              		.align	1
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	wave_auto_mode:
 134              	.LVL10:
 135              	.LFB193:
  41:Core/Src/lvgl_app.c **** void wave_chart_init(void)
  42:Core/Src/lvgl_app.c **** {
  43:Core/Src/lvgl_app.c ****     /*Create a chart*/
  44:Core/Src/lvgl_app.c ****     wave_chart = lv_chart_create(lv_scr_act());
  45:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
  46:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 3300);
  48:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 380);
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
  50:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
  51:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
  52:Core/Src/lvgl_app.c ****     lv_obj_set_style_size(wave_chart, 0, LV_PART_INDICATOR);
  53:Core/Src/lvgl_app.c **** 
  54:Core/Src/lvgl_app.c **** 
  55:Core/Src/lvgl_app.c ****     wave_ser = lv_chart_add_series(wave_chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_AXIS_PRIMA
  56:Core/Src/lvgl_app.c **** 
  57:Core/Src/lvgl_app.c ****     // uint32_t pcnt = sizeof(ecg_sample) / sizeof(ecg_sample[0]);
  58:Core/Src/lvgl_app.c ****     // lv_chart_set_point_count(chart, pcnt);
  59:Core/Src/lvgl_app.c ****     // lv_chart_set_ext_y_array(chart, ser, (lv_coord_t *)ecg_sample);
  60:Core/Src/lvgl_app.c **** 
  61:Core/Src/lvgl_app.c ****     
  62:Core/Src/lvgl_app.c ****     wave_slider_x = lv_slider_create(lv_scr_act());
  63:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  64:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  65:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 380, 10);
  66:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
  67:Core/Src/lvgl_app.c **** 
  68:Core/Src/lvgl_app.c ****     wave_slider_y = lv_slider_create(lv_scr_act());
  69:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  70:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  71:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 290);
  72:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 20, 0);
  73:Core/Src/lvgl_app.c **** }
  74:Core/Src/lvgl_app.c **** 
  75:Core/Src/lvgl_app.c **** uint8_t waveStopFlg=0;
  76:Core/Src/lvgl_app.c **** uint8_t waveAutoFlg=0;
  77:Core/Src/lvgl_app.c **** static void wave_draw_stop(lv_event_t * e)
  78:Core/Src/lvgl_app.c **** {
  79:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
  80:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED){
ARM GAS  /tmp/ccWwa8pC.s 			page 7


  81:Core/Src/lvgl_app.c ****         //printf("STOP/RUN\r\n");
  82:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
  83:Core/Src/lvgl_app.c ****             waveStopFlg=0;
  84:Core/Src/lvgl_app.c ****         }else{
  85:Core/Src/lvgl_app.c ****             waveStopFlg=1;
  86:Core/Src/lvgl_app.c ****         }
  87:Core/Src/lvgl_app.c ****     }
  88:Core/Src/lvgl_app.c **** }
  89:Core/Src/lvgl_app.c **** 
  90:Core/Src/lvgl_app.c **** static void wave_zoom_stop(lv_event_t * e)
  91:Core/Src/lvgl_app.c **** {
  92:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
  93:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED){
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_x, 0, LV_ANIM_ON);
  96:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
  98:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
  99:Core/Src/lvgl_app.c ****     }
 100:Core/Src/lvgl_app.c **** }
 101:Core/Src/lvgl_app.c **** 
 102:Core/Src/lvgl_app.c **** static void wave_auto_mode(lv_event_t * e)
 103:Core/Src/lvgl_app.c **** {
 136              		.loc 1 103 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 103 1 is_stmt 0 view .LVU25
 141 0000 08B5     		push	{r3, lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 3, -8
 145              		.cfi_offset 14, -4
 104:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 146              		.loc 1 104 5 is_stmt 1 view .LVU26
 147              		.loc 1 104 28 is_stmt 0 view .LVU27
 148 0002 FFF7FEFF 		bl	lv_event_get_code
 149              	.LVL11:
 105:Core/Src/lvgl_app.c ****    if(code == LV_EVENT_VALUE_CHANGED){
 150              		.loc 1 105 4 is_stmt 1 view .LVU28
 151              		.loc 1 105 6 is_stmt 0 view .LVU29
 152 0006 1C28     		cmp	r0, #28
 153 0008 00D0     		beq	.L13
 154              	.L9:
 106:Core/Src/lvgl_app.c ****         if(waveAutoFlg==1){
 107:Core/Src/lvgl_app.c ****             waveAutoFlg=0;
 108:Core/Src/lvgl_app.c ****         }else{
 109:Core/Src/lvgl_app.c ****             waveAutoFlg=1;
 110:Core/Src/lvgl_app.c ****         }
 111:Core/Src/lvgl_app.c ****     }
 112:Core/Src/lvgl_app.c **** }
 155              		.loc 1 112 1 view .LVU30
 156 000a 08BD     		pop	{r3, pc}
 157              	.L13:
 106:Core/Src/lvgl_app.c ****         if(waveAutoFlg==1){
 158              		.loc 1 106 9 is_stmt 1 view .LVU31
 106:Core/Src/lvgl_app.c ****         if(waveAutoFlg==1){
ARM GAS  /tmp/ccWwa8pC.s 			page 8


 159              		.loc 1 106 23 is_stmt 0 view .LVU32
 160 000c 054B     		ldr	r3, .L15
 161 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 106:Core/Src/lvgl_app.c ****         if(waveAutoFlg==1){
 162              		.loc 1 106 11 view .LVU33
 163 0010 012B     		cmp	r3, #1
 164 0012 03D0     		beq	.L14
 109:Core/Src/lvgl_app.c ****         }
 165              		.loc 1 109 13 is_stmt 1 view .LVU34
 109:Core/Src/lvgl_app.c ****         }
 166              		.loc 1 109 24 is_stmt 0 view .LVU35
 167 0014 034B     		ldr	r3, .L15
 168 0016 0122     		movs	r2, #1
 169 0018 1A70     		strb	r2, [r3]
 170              		.loc 1 112 1 view .LVU36
 171 001a F6E7     		b	.L9
 172              	.L14:
 107:Core/Src/lvgl_app.c ****         }else{
 173              		.loc 1 107 13 is_stmt 1 view .LVU37
 107:Core/Src/lvgl_app.c ****         }else{
 174              		.loc 1 107 24 is_stmt 0 view .LVU38
 175 001c 014B     		ldr	r3, .L15
 176 001e 0022     		movs	r2, #0
 177 0020 1A70     		strb	r2, [r3]
 178 0022 F2E7     		b	.L9
 179              	.L16:
 180              		.align	2
 181              	.L15:
 182 0024 00000000 		.word	.LANCHOR1
 183              		.cfi_endproc
 184              	.LFE193:
 186              		.section	.text.wave_draw_stop,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	wave_draw_stop:
 194              	.LVL12:
 195              	.LFB191:
  78:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 196              		.loc 1 78 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
  78:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 200              		.loc 1 78 1 is_stmt 0 view .LVU40
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI3:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
  79:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED){
 206              		.loc 1 79 5 is_stmt 1 view .LVU41
  79:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED){
 207              		.loc 1 79 28 is_stmt 0 view .LVU42
 208 0002 FFF7FEFF 		bl	lv_event_get_code
ARM GAS  /tmp/ccWwa8pC.s 			page 9


 209              	.LVL13:
  80:Core/Src/lvgl_app.c ****         //printf("STOP/RUN\r\n");
 210              		.loc 1 80 5 is_stmt 1 view .LVU43
  80:Core/Src/lvgl_app.c ****         //printf("STOP/RUN\r\n");
 211              		.loc 1 80 7 is_stmt 0 view .LVU44
 212 0006 1C28     		cmp	r0, #28
 213 0008 00D0     		beq	.L21
 214              	.L17:
  88:Core/Src/lvgl_app.c **** 
 215              		.loc 1 88 1 view .LVU45
 216 000a 08BD     		pop	{r3, pc}
 217              	.L21:
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 218              		.loc 1 82 9 is_stmt 1 view .LVU46
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 219              		.loc 1 82 23 is_stmt 0 view .LVU47
 220 000c 054B     		ldr	r3, .L23
 221 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 222              		.loc 1 82 11 view .LVU48
 223 0010 012B     		cmp	r3, #1
 224 0012 03D0     		beq	.L22
  85:Core/Src/lvgl_app.c ****         }
 225              		.loc 1 85 13 is_stmt 1 view .LVU49
  85:Core/Src/lvgl_app.c ****         }
 226              		.loc 1 85 24 is_stmt 0 view .LVU50
 227 0014 034B     		ldr	r3, .L23
 228 0016 0122     		movs	r2, #1
 229 0018 1A70     		strb	r2, [r3]
  88:Core/Src/lvgl_app.c **** 
 230              		.loc 1 88 1 view .LVU51
 231 001a F6E7     		b	.L17
 232              	.L22:
  83:Core/Src/lvgl_app.c ****         }else{
 233              		.loc 1 83 13 is_stmt 1 view .LVU52
  83:Core/Src/lvgl_app.c ****         }else{
 234              		.loc 1 83 24 is_stmt 0 view .LVU53
 235 001c 014B     		ldr	r3, .L23
 236 001e 0022     		movs	r2, #0
 237 0020 1A70     		strb	r2, [r3]
 238 0022 F2E7     		b	.L17
 239              	.L24:
 240              		.align	2
 241              	.L23:
 242 0024 00000000 		.word	.LANCHOR2
 243              		.cfi_endproc
 244              	.LFE191:
 246              		.section	.rodata.wave_zoom_stop.str1.4,"aMS",%progbits,1
 247              		.align	2
 248              	.LC1:
 249 0000 52455345 		.ascii	"RESET\015\000"
 249      540D00
 250              		.section	.text.wave_zoom_stop,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
ARM GAS  /tmp/ccWwa8pC.s 			page 10


 255              		.fpu fpv4-sp-d16
 257              	wave_zoom_stop:
 258              	.LVL14:
 259              	.LFB192:
  91:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 260              		.loc 1 91 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
  91:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 264              		.loc 1 91 1 is_stmt 0 view .LVU55
 265 0000 10B5     		push	{r4, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 4, -8
 269              		.cfi_offset 14, -4
  92:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED){
 270              		.loc 1 92 5 is_stmt 1 view .LVU56
  92:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED){
 271              		.loc 1 92 28 is_stmt 0 view .LVU57
 272 0002 FFF7FEFF 		bl	lv_event_get_code
 273              	.LVL15:
  93:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 274              		.loc 1 93 5 is_stmt 1 view .LVU58
  93:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 275              		.loc 1 93 7 is_stmt 0 view .LVU59
 276 0006 0728     		cmp	r0, #7
 277 0008 00D0     		beq	.L28
 278              	.LVL16:
 279              	.L25:
 100:Core/Src/lvgl_app.c **** 
 280              		.loc 1 100 1 view .LVU60
 281 000a 10BD     		pop	{r4, pc}
 282              	.LVL17:
 283              	.L28:
  94:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_x, 0, LV_ANIM_ON);
 284              		.loc 1 94 9 is_stmt 1 view .LVU61
 285 000c 0D48     		ldr	r0, .L29
 286              	.LVL18:
  94:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_x, 0, LV_ANIM_ON);
 287              		.loc 1 94 9 is_stmt 0 view .LVU62
 288 000e FFF7FEFF 		bl	puts
 289              	.LVL19:
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
 290              		.loc 1 95 9 is_stmt 1 view .LVU63
 291              	.LBB24:
 292              	.LBI24:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 293              		.loc 2 75 20 view .LVU64
 294              	.LBB25:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 295              		.loc 2 77 5 view .LVU65
 296 0012 0122     		movs	r2, #1
 297 0014 0021     		movs	r1, #0
 298 0016 0C4B     		ldr	r3, .L29+4
 299 0018 1868     		ldr	r0, [r3]
 300 001a FFF7FEFF 		bl	lv_bar_set_value
ARM GAS  /tmp/ccWwa8pC.s 			page 11


 301              	.LVL20:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 302              		.loc 2 77 5 is_stmt 0 view .LVU66
 303              	.LBE25:
 304              	.LBE24:
  96:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
 305              		.loc 1 96 9 is_stmt 1 view .LVU67
 306              	.LBB26:
 307              	.LBI26:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 308              		.loc 2 75 20 view .LVU68
 309              	.LBB27:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 310              		.loc 2 77 5 view .LVU69
 311 001e 0122     		movs	r2, #1
 312 0020 0021     		movs	r1, #0
 313 0022 0A4B     		ldr	r3, .L29+8
 314 0024 1868     		ldr	r0, [r3]
 315 0026 FFF7FEFF 		bl	lv_bar_set_value
 316              	.LVL21:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 317              		.loc 2 77 5 is_stmt 0 view .LVU70
 318              	.LBE27:
 319              	.LBE26:
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
 320              		.loc 1 97 9 is_stmt 1 view .LVU71
 321 002a 094C     		ldr	r4, .L29+12
 322 002c 4FF48071 		mov	r1, #256
 323 0030 2068     		ldr	r0, [r4]
 324 0032 FFF7FEFF 		bl	lv_chart_set_zoom_x
 325              	.LVL22:
  98:Core/Src/lvgl_app.c ****     }
 326              		.loc 1 98 9 view .LVU72
 327 0036 4FF48071 		mov	r1, #256
 328 003a 2068     		ldr	r0, [r4]
 329 003c FFF7FEFF 		bl	lv_chart_set_zoom_y
 330              	.LVL23:
 100:Core/Src/lvgl_app.c **** 
 331              		.loc 1 100 1 is_stmt 0 view .LVU73
 332 0040 E3E7     		b	.L25
 333              	.L30:
 334 0042 00BF     		.align	2
 335              	.L29:
 336 0044 00000000 		.word	.LC1
 337 0048 00000000 		.word	.LANCHOR3
 338 004c 00000000 		.word	.LANCHOR4
 339 0050 00000000 		.word	.LANCHOR0
 340              		.cfi_endproc
 341              	.LFE192:
 343              		.section	.rodata.distortion_handler.str1.4,"aMS",%progbits,1
 344              		.align	2
 345              	.LC2:
 346 0000 6D6F6465 		.ascii	"mode:%d\015\012\000"
 346      3A25640D 
 346      0A00
 347              		.section	.text.distortion_handler,"ax",%progbits
 348              		.align	1
ARM GAS  /tmp/ccWwa8pC.s 			page 12


 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu fpv4-sp-d16
 354              	distortion_handler:
 355              	.LVL24:
 356              	.LFB195:
 113:Core/Src/lvgl_app.c **** 
 114:Core/Src/lvgl_app.c **** void wave_btn(void)
 115:Core/Src/lvgl_app.c **** {
 116:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 117:Core/Src/lvgl_app.c **** 
 118:Core/Src/lvgl_app.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
 119:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 120:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_LEFT, 20, 400);
 121:Core/Src/lvgl_app.c **** 
 122:Core/Src/lvgl_app.c ****     label = lv_label_create(btn1);
 123:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 124:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 125:Core/Src/lvgl_app.c **** 
 126:Core/Src/lvgl_app.c ****     lv_obj_t * btn2 = lv_btn_create(lv_scr_act());
 127:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 128:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_LEFT, 120, 400);
 129:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 130:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 131:Core/Src/lvgl_app.c **** 
 132:Core/Src/lvgl_app.c ****     label = lv_label_create(btn2);
 133:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 134:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 135:Core/Src/lvgl_app.c **** 
 136:Core/Src/lvgl_app.c ****     lv_obj_t * btn3 = lv_btn_create(lv_scr_act());
 137:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn3, wave_auto_mode, LV_EVENT_ALL, NULL);
 138:Core/Src/lvgl_app.c ****     lv_obj_align(btn3, LV_ALIGN_TOP_LEFT, 250, 400);
 139:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn3, LV_OBJ_FLAG_CHECKABLE);
 140:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn3, LV_SIZE_CONTENT);
 141:Core/Src/lvgl_app.c **** 
 142:Core/Src/lvgl_app.c ****     label = lv_label_create(btn3);
 143:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Auto");
 144:Core/Src/lvgl_app.c ****     lv_obj_center(label); 
 145:Core/Src/lvgl_app.c **** }
 146:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 147:Core/Src/lvgl_app.c **** static void distortion_handler(lv_event_t * e)
 148:Core/Src/lvgl_app.c **** {
 357              		.loc 1 148 1 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 192
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		.loc 1 148 1 is_stmt 0 view .LVU75
 362 0000 30B5     		push	{r4, r5, lr}
 363              	.LCFI5:
 364              		.cfi_def_cfa_offset 12
 365              		.cfi_offset 4, -12
 366              		.cfi_offset 5, -8
 367              		.cfi_offset 14, -4
 368 0002 B1B0     		sub	sp, sp, #196
 369              	.LCFI6:
 370              		.cfi_def_cfa_offset 208
ARM GAS  /tmp/ccWwa8pC.s 			page 13


 371 0004 0546     		mov	r5, r0
 149:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 372              		.loc 1 149 5 is_stmt 1 view .LVU76
 373              		.loc 1 149 28 is_stmt 0 view .LVU77
 374 0006 FFF7FEFF 		bl	lv_event_get_code
 375              	.LVL25:
 376              		.loc 1 149 28 view .LVU78
 377 000a 0446     		mov	r4, r0
 378              	.LVL26:
 150:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
 379              		.loc 1 150 5 is_stmt 1 view .LVU79
 380              		.loc 1 150 22 is_stmt 0 view .LVU80
 381 000c 2846     		mov	r0, r5
 382 000e FFF7FEFF 		bl	lv_event_get_target
 383              	.LVL27:
 151:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED) {
 384              		.loc 1 151 5 is_stmt 1 view .LVU81
 385              		.loc 1 151 7 is_stmt 0 view .LVU82
 386 0012 1C2C     		cmp	r4, #28
 387 0014 01D0     		beq	.L37
 388              	.LVL28:
 389              	.L31:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 153:Core/Src/lvgl_app.c ****         lv_dropdown_get_selected_str(obj, buf, sizeof(buf));
 154:Core/Src/lvgl_app.c ****         char list[5][32]={
 155:Core/Src/lvgl_app.c ****             "No distortion",
 156:Core/Src/lvgl_app.c ****             "Top distortion",
 157:Core/Src/lvgl_app.c ****             "Bottom distortion",
 158:Core/Src/lvgl_app.c ****             "Two-way distortion",
 159:Core/Src/lvgl_app.c ****             "Crossover distortion",
 160:Core/Src/lvgl_app.c ****         };
 161:Core/Src/lvgl_app.c ****         for (uint8_t i = 0; i < 5; i++)
 162:Core/Src/lvgl_app.c ****         {
 163:Core/Src/lvgl_app.c ****             if(strstr(buf,list[i])){
 164:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 165:Core/Src/lvgl_app.c ****             }
 166:Core/Src/lvgl_app.c ****         
 167:Core/Src/lvgl_app.c ****         }
 168:Core/Src/lvgl_app.c ****         printf("mode:%d\r\n",distortion_mode);
 169:Core/Src/lvgl_app.c ****     }
 170:Core/Src/lvgl_app.c **** }
 390              		.loc 1 170 1 view .LVU83
 391 0016 31B0     		add	sp, sp, #196
 392              	.LCFI7:
 393              		.cfi_remember_state
 394              		.cfi_def_cfa_offset 12
 395              		@ sp needed
 396 0018 30BD     		pop	{r4, r5, pc}
 397              	.LVL29:
 398              	.L37:
 399              	.LCFI8:
 400              		.cfi_restore_state
 401              	.LBB28:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 402              		.loc 1 152 9 is_stmt 1 view .LVU84
 153:Core/Src/lvgl_app.c ****         char list[5][32]={
 403              		.loc 1 153 9 view .LVU85
ARM GAS  /tmp/ccWwa8pC.s 			page 14


 404 001a 2022     		movs	r2, #32
 405 001c 6946     		mov	r1, sp
 406 001e FFF7FEFF 		bl	lv_dropdown_get_selected_str
 407              	.LVL30:
 154:Core/Src/lvgl_app.c ****             "No distortion",
 408              		.loc 1 154 9 view .LVU86
 154:Core/Src/lvgl_app.c ****             "No distortion",
 409              		.loc 1 154 14 is_stmt 0 view .LVU87
 410 0022 A022     		movs	r2, #160
 411 0024 0D49     		ldr	r1, .L39
 412 0026 08A8     		add	r0, sp, #32
 413 0028 FFF7FEFF 		bl	memcpy
 414              	.LVL31:
 161:Core/Src/lvgl_app.c ****         {
 415              		.loc 1 161 9 is_stmt 1 view .LVU88
 416              	.LBB29:
 161:Core/Src/lvgl_app.c ****         {
 417              		.loc 1 161 14 view .LVU89
 161:Core/Src/lvgl_app.c ****         {
 418              		.loc 1 161 22 is_stmt 0 view .LVU90
 419 002c 0024     		movs	r4, #0
 420              	.LVL32:
 161:Core/Src/lvgl_app.c ****         {
 421              		.loc 1 161 9 view .LVU91
 422 002e 01E0     		b	.L33
 423              	.LVL33:
 424              	.L34:
 161:Core/Src/lvgl_app.c ****         {
 425              		.loc 1 161 36 is_stmt 1 discriminator 2 view .LVU92
 161:Core/Src/lvgl_app.c ****         {
 426              		.loc 1 161 37 is_stmt 0 discriminator 2 view .LVU93
 427 0030 0134     		adds	r4, r4, #1
 428              	.LVL34:
 161:Core/Src/lvgl_app.c ****         {
 429              		.loc 1 161 37 discriminator 2 view .LVU94
 430 0032 E4B2     		uxtb	r4, r4
 431              	.LVL35:
 432              	.L33:
 161:Core/Src/lvgl_app.c ****         {
 433              		.loc 1 161 29 is_stmt 1 discriminator 1 view .LVU95
 161:Core/Src/lvgl_app.c ****         {
 434              		.loc 1 161 9 is_stmt 0 discriminator 1 view .LVU96
 435 0034 042C     		cmp	r4, #4
 436 0036 0AD8     		bhi	.L38
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 437              		.loc 1 163 13 is_stmt 1 view .LVU97
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 438              		.loc 1 163 16 is_stmt 0 view .LVU98
 439 0038 08AB     		add	r3, sp, #32
 440 003a 03EB4411 		add	r1, r3, r4, lsl #5
 441 003e 6846     		mov	r0, sp
 442 0040 FFF7FEFF 		bl	strstr
 443              	.LVL36:
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 444              		.loc 1 163 15 view .LVU99
 445 0044 0028     		cmp	r0, #0
 446 0046 F3D0     		beq	.L34
ARM GAS  /tmp/ccWwa8pC.s 			page 15


 164:Core/Src/lvgl_app.c ****             }
 447              		.loc 1 164 17 is_stmt 1 view .LVU100
 164:Core/Src/lvgl_app.c ****             }
 448              		.loc 1 164 32 is_stmt 0 view .LVU101
 449 0048 054B     		ldr	r3, .L39+4
 450 004a 1C70     		strb	r4, [r3]
 451 004c F0E7     		b	.L34
 452              	.L38:
 164:Core/Src/lvgl_app.c ****             }
 453              		.loc 1 164 32 view .LVU102
 454              	.LBE29:
 168:Core/Src/lvgl_app.c ****     }
 455              		.loc 1 168 9 is_stmt 1 view .LVU103
 456 004e 044B     		ldr	r3, .L39+4
 457 0050 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 458 0052 0448     		ldr	r0, .L39+8
 459 0054 FFF7FEFF 		bl	printf
 460              	.LVL37:
 461              	.LBE28:
 462              		.loc 1 170 1 is_stmt 0 view .LVU104
 463 0058 DDE7     		b	.L31
 464              	.L40:
 465 005a 00BF     		.align	2
 466              	.L39:
 467 005c 00000000 		.word	.LANCHOR5
 468 0060 00000000 		.word	.LANCHOR6
 469 0064 00000000 		.word	.LC2
 470              		.cfi_endproc
 471              	.LFE195:
 473              		.section	.rodata.counter_label.str1.4,"aMS",%progbits,1
 474              		.align	2
 475              	.LC3:
 476 0000 636F756E 		.ascii	"counter\000"
 476      74657200 
 477              		.section	.text.counter_label,"ax",%progbits
 478              		.align	1
 479              		.global	counter_label
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	counter_label:
 486              	.LFB187:
   7:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
 487              		.loc 1 7 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 10B5     		push	{r4, lr}
 492              	.LCFI9:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 4, -8
 495              		.cfi_offset 14, -4
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 496              		.loc 1 8 5 view .LVU106
 497              	.LBB32:
 498              	.LBI32:
ARM GAS  /tmp/ccWwa8pC.s 			page 16


 499              		.file 3 "Middlewares/lvgl/src/core/lv_disp.h"
   1:Middlewares/lvgl/src/core/lv_disp.h **** /**
   2:Middlewares/lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:Middlewares/lvgl/src/core/lv_disp.h ****  *
   4:Middlewares/lvgl/src/core/lv_disp.h ****  */
   5:Middlewares/lvgl/src/core/lv_disp.h **** 
   6:Middlewares/lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:Middlewares/lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:Middlewares/lvgl/src/core/lv_disp.h **** 
   9:Middlewares/lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_disp.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_disp.h **** #endif
  12:Middlewares/lvgl/src/core/lv_disp.h **** 
  13:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:Middlewares/lvgl/src/core/lv_disp.h **** 
  20:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_disp.h **** 
  24:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_disp.h **** 
  28:Middlewares/lvgl/src/core/lv_disp.h **** typedef enum {
  29:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:Middlewares/lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:Middlewares/lvgl/src/core/lv_disp.h **** 
  41:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  42:Middlewares/lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  44:Middlewares/lvgl/src/core/lv_disp.h **** 
  45:Middlewares/lvgl/src/core/lv_disp.h **** /**
  46:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  49:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:Middlewares/lvgl/src/core/lv_disp.h ****  */
  51:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:Middlewares/lvgl/src/core/lv_disp.h **** 
  53:Middlewares/lvgl/src/core/lv_disp.h **** /**
  54:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
ARM GAS  /tmp/ccWwa8pC.s 			page 17


  57:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:Middlewares/lvgl/src/core/lv_disp.h ****  */
  59:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:Middlewares/lvgl/src/core/lv_disp.h **** 
  61:Middlewares/lvgl/src/core/lv_disp.h **** /**
  62:Middlewares/lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:Middlewares/lvgl/src/core/lv_disp.h ****  */
  65:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:Middlewares/lvgl/src/core/lv_disp.h **** 
  67:Middlewares/lvgl/src/core/lv_disp.h **** /**
  68:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:Middlewares/lvgl/src/core/lv_disp.h ****  */
  72:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:Middlewares/lvgl/src/core/lv_disp.h **** 
  74:Middlewares/lvgl/src/core/lv_disp.h **** /**
  75:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:Middlewares/lvgl/src/core/lv_disp.h ****  * layer)
  77:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:Middlewares/lvgl/src/core/lv_disp.h ****  */
  80:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:Middlewares/lvgl/src/core/lv_disp.h **** 
  82:Middlewares/lvgl/src/core/lv_disp.h **** /**
  83:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  84:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  85:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:Middlewares/lvgl/src/core/lv_disp.h ****  */
  87:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:Middlewares/lvgl/src/core/lv_disp.h **** 
  89:Middlewares/lvgl/src/core/lv_disp.h **** /**
  90:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  91:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  92:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:Middlewares/lvgl/src/core/lv_disp.h ****  */
  94:Middlewares/lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:Middlewares/lvgl/src/core/lv_disp.h **** 
  96:Middlewares/lvgl/src/core/lv_disp.h **** /**
  97:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  98:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  99:Middlewares/lvgl/src/core/lv_disp.h ****  * @param color color of the background
 100:Middlewares/lvgl/src/core/lv_disp.h ****  */
 101:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:Middlewares/lvgl/src/core/lv_disp.h **** 
 103:Middlewares/lvgl/src/core/lv_disp.h **** /**
 104:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 105:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 106:Middlewares/lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:Middlewares/lvgl/src/core/lv_disp.h ****  */
 108:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:Middlewares/lvgl/src/core/lv_disp.h **** 
 110:Middlewares/lvgl/src/core/lv_disp.h **** /**
 111:Middlewares/lvgl/src/core/lv_disp.h ****  * Opacity of the background
 112:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 113:Middlewares/lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
ARM GAS  /tmp/ccWwa8pC.s 			page 18


 114:Middlewares/lvgl/src/core/lv_disp.h ****  */
 115:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:Middlewares/lvgl/src/core/lv_disp.h **** 
 117:Middlewares/lvgl/src/core/lv_disp.h **** /**
 118:Middlewares/lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 119:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:Middlewares/lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:Middlewares/lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 122:Middlewares/lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 123:Middlewares/lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:Middlewares/lvgl/src/core/lv_disp.h ****  */
 125:Middlewares/lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:Middlewares/lvgl/src/core/lv_disp.h **** 
 127:Middlewares/lvgl/src/core/lv_disp.h **** /**
 128:Middlewares/lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:Middlewares/lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:Middlewares/lvgl/src/core/lv_disp.h ****  */
 132:Middlewares/lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:Middlewares/lvgl/src/core/lv_disp.h **** 
 134:Middlewares/lvgl/src/core/lv_disp.h **** /**
 135:Middlewares/lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:Middlewares/lvgl/src/core/lv_disp.h ****  */
 138:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:Middlewares/lvgl/src/core/lv_disp.h **** 
 140:Middlewares/lvgl/src/core/lv_disp.h **** /**
 141:Middlewares/lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:Middlewares/lvgl/src/core/lv_disp.h ****  */
 144:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:Middlewares/lvgl/src/core/lv_disp.h **** 
 146:Middlewares/lvgl/src/core/lv_disp.h **** /**
 147:Middlewares/lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:Middlewares/lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 150:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:Middlewares/lvgl/src/core/lv_disp.h ****  */
 152:Middlewares/lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:Middlewares/lvgl/src/core/lv_disp.h **** 
 154:Middlewares/lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 155:Middlewares/lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 156:Middlewares/lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 157:Middlewares/lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 158:Middlewares/lvgl/src/core/lv_disp.h **** 
 159:Middlewares/lvgl/src/core/lv_disp.h **** /**
 160:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 161:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 162:Middlewares/lvgl/src/core/lv_disp.h ****  */
 163:Middlewares/lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 500              		.loc 3 163 26 view .LVU107
 501              	.LBB33:
 164:Middlewares/lvgl/src/core/lv_disp.h **** {
 165:Middlewares/lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 502              		.loc 3 165 5 view .LVU108
 503              		.loc 3 165 12 is_stmt 0 view .LVU109
 504 0002 FFF7FEFF 		bl	lv_disp_get_default
ARM GAS  /tmp/ccWwa8pC.s 			page 19


 505              	.LVL38:
 506 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 507              	.LVL39:
 508              	.LBE33:
 509              	.LBE32:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 510              		.loc 1 8 14 view .LVU110
 511 000a FFF7FEFF 		bl	lv_label_create
 512              	.LVL40:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 513              		.loc 1 8 12 view .LVU111
 514 000e 0F4C     		ldr	r4, .L43
 515 0010 2060     		str	r0, [r4]
   9:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
 516              		.loc 1 9 5 is_stmt 1 view .LVU112
 517 0012 0021     		movs	r1, #0
 518 0014 FFF7FEFF 		bl	lv_label_set_long_mode
 519              	.LVL41:
  10:Core/Src/lvgl_app.c ****     
 520              		.loc 1 10 5 view .LVU113
 521 0018 0121     		movs	r1, #1
 522 001a 2068     		ldr	r0, [r4]
 523 001c FFF7FEFF 		bl	lv_label_set_recolor
 524              	.LVL42:
  12:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
 525              		.loc 1 12 5 view .LVU114
 526 0020 0B49     		ldr	r1, .L43+4
 527 0022 2068     		ldr	r0, [r4]
 528 0024 FFF7FEFF 		bl	lv_label_set_text
 529              	.LVL43:
  13:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
 530              		.loc 1 13 5 view .LVU115
 531 0028 9621     		movs	r1, #150
 532 002a 2068     		ldr	r0, [r4]
 533 002c FFF7FEFF 		bl	lv_obj_set_width
 534              	.LVL44:
  14:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
 535              		.loc 1 14 5 view .LVU116
 536 0030 0022     		movs	r2, #0
 537 0032 0221     		movs	r1, #2
 538 0034 2068     		ldr	r0, [r4]
 539 0036 FFF7FEFF 		bl	lv_obj_set_style_text_align
 540              	.LVL45:
  15:Core/Src/lvgl_app.c **** 
 541              		.loc 1 15 5 view .LVU117
 542 003a 6FF02703 		mvn	r3, #39
 543 003e 0022     		movs	r2, #0
 544 0040 0921     		movs	r1, #9
 545 0042 2068     		ldr	r0, [r4]
 546 0044 FFF7FEFF 		bl	lv_obj_align
 547              	.LVL46:
  23:Core/Src/lvgl_app.c **** 
 548              		.loc 1 23 1 is_stmt 0 view .LVU118
 549 0048 10BD     		pop	{r4, pc}
 550              	.L44:
 551 004a 00BF     		.align	2
 552              	.L43:
ARM GAS  /tmp/ccWwa8pC.s 			page 20


 553 004c 00000000 		.word	.LANCHOR7
 554 0050 00000000 		.word	.LC3
 555              		.cfi_endproc
 556              	.LFE187:
 558              		.section	.text.wave_chart_init,"ax",%progbits
 559              		.align	1
 560              		.global	wave_chart_init
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv4-sp-d16
 566              	wave_chart_init:
 567              	.LFB190:
  42:Core/Src/lvgl_app.c ****     /*Create a chart*/
 568              		.loc 1 42 1 is_stmt 1 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 573              	.LCFI10:
 574              		.cfi_def_cfa_offset 20
 575              		.cfi_offset 4, -20
 576              		.cfi_offset 5, -16
 577              		.cfi_offset 6, -12
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 85B0     		sub	sp, sp, #20
 581              	.LCFI11:
 582              		.cfi_def_cfa_offset 40
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
 583              		.loc 1 44 5 view .LVU120
 584              	.LBB46:
 585              	.LBI46:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 586              		.loc 3 163 26 view .LVU121
 587              	.LBB47:
 588              		.loc 3 165 5 view .LVU122
 589              		.loc 3 165 12 is_stmt 0 view .LVU123
 590 0004 FFF7FEFF 		bl	lv_disp_get_default
 591              	.LVL47:
 592 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 593              	.LVL48:
 594              	.LBE47:
 595              	.LBE46:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
 596              		.loc 1 44 18 view .LVU124
 597 000c FFF7FEFF 		bl	lv_chart_create
 598              	.LVL49:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
 599              		.loc 1 44 16 view .LVU125
 600 0010 494C     		ldr	r4, .L47
 601 0012 2060     		str	r0, [r4]
  45:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
 602              		.loc 1 45 5 is_stmt 1 view .LVU126
 603 0014 4FF4A572 		mov	r2, #330
 604 0018 4FF4BE71 		mov	r1, #380
 605 001c FFF7FEFF 		bl	lv_obj_set_size
ARM GAS  /tmp/ccWwa8pC.s 			page 21


 606              	.LVL50:
  46:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 3300);
 607              		.loc 1 46 5 view .LVU127
 608 0020 0023     		movs	r3, #0
 609 0022 3222     		movs	r2, #50
 610 0024 0121     		movs	r1, #1
 611 0026 2068     		ldr	r0, [r4]
 612 0028 FFF7FEFF 		bl	lv_obj_align
 613              	.LVL51:
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 380);
 614              		.loc 1 47 5 view .LVU128
 615 002c 40F6E443 		movw	r3, #3300
 616 0030 0022     		movs	r2, #0
 617 0032 1146     		mov	r1, r2
 618 0034 2068     		ldr	r0, [r4]
 619 0036 FFF7FEFF 		bl	lv_chart_set_range
 620              	.LVL52:
  48:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
 621              		.loc 1 48 5 view .LVU129
 622 003a 4FF4BE73 		mov	r3, #380
 623 003e 0022     		movs	r2, #0
 624 0040 0221     		movs	r1, #2
 625 0042 2068     		ldr	r0, [r4]
 626 0044 FFF7FEFF 		bl	lv_chart_set_range
 627              	.LVL53:
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
 628              		.loc 1 49 5 view .LVU130
 629 0048 1426     		movs	r6, #20
 630 004a 0396     		str	r6, [sp, #12]
 631 004c 0127     		movs	r7, #1
 632 004e 0297     		str	r7, [sp, #8]
 633 0050 0197     		str	r7, [sp, #4]
 634 0052 0525     		movs	r5, #5
 635 0054 0095     		str	r5, [sp]
 636 0056 2B46     		mov	r3, r5
 637 0058 2A46     		mov	r2, r5
 638 005a 0221     		movs	r1, #2
 639 005c 2068     		ldr	r0, [r4]
 640 005e FFF7FEFF 		bl	lv_chart_set_axis_tick
 641              	.LVL54:
  50:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
 642              		.loc 1 50 5 view .LVU131
 643 0062 3C23     		movs	r3, #60
 644 0064 0393     		str	r3, [sp, #12]
 645 0066 0297     		str	r7, [sp, #8]
 646 0068 0195     		str	r5, [sp, #4]
 647 006a 0623     		movs	r3, #6
 648 006c 0093     		str	r3, [sp]
 649 006e 2B46     		mov	r3, r5
 650 0070 0A22     		movs	r2, #10
 651 0072 0021     		movs	r1, #0
 652 0074 2068     		ldr	r0, [r4]
 653 0076 FFF7FEFF 		bl	lv_chart_set_axis_tick
 654              	.LVL55:
  52:Core/Src/lvgl_app.c **** 
 655              		.loc 1 52 5 view .LVU132
 656 007a 2568     		ldr	r5, [r4]
ARM GAS  /tmp/ccWwa8pC.s 			page 22


 657              	.LVL56:
 658              	.LBB48:
 659              	.LBI48:
 660              		.file 4 "Middlewares/lvgl/src/core/lv_obj_style.h"
   1:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:Middlewares/lvgl/src/core/lv_obj_style.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:Middlewares/lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  20:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  24:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:Middlewares/lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  30:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef enum {
  31:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:Middlewares/lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  39:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t selector :24;
  42:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_local :1;
  43:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans :1;
  44:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_t;
  45:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  46:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:Middlewares/lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:Middlewares/lvgl/src/core/lv_obj_style.h ****     void * user_data;
ARM GAS  /tmp/ccWwa8pC.s 			page 23


  54:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  55:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  57:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  58:Middlewares/lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  60:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  61:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  62:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  65:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  67:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  68:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  75:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  77:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  78:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  79:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  86:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  88:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  89:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  92:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:Middlewares/lvgl/src/core/lv_obj_style.h **** {
  94:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
  95:Middlewares/lvgl/src/core/lv_obj_style.h **** }
  96:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  97:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  98:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 102:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 104:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 105:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
ARM GAS  /tmp/ccWwa8pC.s 			page 24


 111:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 112:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 114:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 115:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:Middlewares/lvgl/src/core/lv_obj_style.h ****  * or any other style change happens.
 117:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 119:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 121:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 122:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:Middlewares/lvgl/src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 131:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 133:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 134:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 136:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part to which the property should be added
 137:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     a state to which the property should be added
 138:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property
 139:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 140:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 142:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t
 144:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 145:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 146:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 147:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 148:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part of the object which style property should be removed.
 149:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     the state from which the property should be removed.
 150:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 151:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 152:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 153:Middlewares/lvgl/src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 154:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 155:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 156:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to create a style tarnsition
 157:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 158:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part
 159:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prev_state
 160:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param new_state
 161:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param tr
 162:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 163:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 164:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 165:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 166:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 167:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
ARM GAS  /tmp/ccWwa8pC.s 			page 25


 168:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state1
 169:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state2
 170:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return
 171:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 172:Middlewares/lvgl/src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 173:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 174:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 175:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 176:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 177:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 178:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 179:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 180:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 181:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 182:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 183:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 184:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 185:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 186:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 187:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 188:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 189:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 190:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 191:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 192:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 193:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 194:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
 195:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 196:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 197:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 198:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 199:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 200:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 201:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 202:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 203:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 204:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 205:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 206:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 207:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 208:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 209:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 210:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 211:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 212:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 213:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_sel
 214:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_row(obj, value, selector);
 215:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_column(obj, value, selector);
 216:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 217:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 218:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_select
 661              		.loc 4 218 20 view .LVU133
 662              	.LBB49:
 219:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_width(obj, value, selector);
 663              		.loc 4 219 5 view .LVU134
 664 007c 4FF40032 		mov	r2, #131072
 665 0080 0021     		movs	r1, #0
ARM GAS  /tmp/ccWwa8pC.s 			page 26


 666 0082 2846     		mov	r0, r5
 667 0084 FFF7FEFF 		bl	lv_obj_set_style_width
 668              	.LVL57:
 220:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_height(obj, value, selector);
 669              		.loc 4 220 5 view .LVU135
 670 0088 4FF40032 		mov	r2, #131072
 671 008c 0021     		movs	r1, #0
 672 008e 2846     		mov	r0, r5
 673 0090 FFF7FEFF 		bl	lv_obj_set_style_height
 674              	.LVL58:
 675              		.loc 4 220 5 is_stmt 0 view .LVU136
 676              	.LBE49:
 677              	.LBE48:
  55:Core/Src/lvgl_app.c **** 
 678              		.loc 1 55 5 is_stmt 1 view .LVU137
  55:Core/Src/lvgl_app.c **** 
 679              		.loc 1 55 16 is_stmt 0 view .LVU138
 680 0094 2568     		ldr	r5, [r4]
 681 0096 0020     		movs	r0, #0
 682 0098 FFF7FEFF 		bl	lv_palette_main
 683              	.LVL59:
 684 009c 0146     		mov	r1, r0	@ movhi
 685 009e 0022     		movs	r2, #0
 686 00a0 2846     		mov	r0, r5
 687 00a2 FFF7FEFF 		bl	lv_chart_add_series
 688              	.LVL60:
  55:Core/Src/lvgl_app.c **** 
 689              		.loc 1 55 14 view .LVU139
 690 00a6 254B     		ldr	r3, .L47+4
 691 00a8 1860     		str	r0, [r3]
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 692              		.loc 1 62 5 is_stmt 1 view .LVU140
 693              	.LBB50:
 694              	.LBI50:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 695              		.loc 3 163 26 view .LVU141
 696              	.LBB51:
 697              		.loc 3 165 5 view .LVU142
 698              		.loc 3 165 12 is_stmt 0 view .LVU143
 699 00aa FFF7FEFF 		bl	lv_disp_get_default
 700              	.LVL61:
 701 00ae FFF7FEFF 		bl	lv_disp_get_scr_act
 702              	.LVL62:
 703              	.LBE51:
 704              	.LBE50:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 705              		.loc 1 62 21 view .LVU144
 706 00b2 FFF7FEFF 		bl	lv_slider_create
 707              	.LVL63:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 708              		.loc 1 62 19 view .LVU145
 709 00b6 224D     		ldr	r5, .L47+8
 710 00b8 2860     		str	r0, [r5]
  63:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 711              		.loc 1 63 5 is_stmt 1 view .LVU146
 712              	.LVL64:
 713              	.LBB52:
ARM GAS  /tmp/ccWwa8pC.s 			page 27


 714              	.LBI52:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 715              		.loc 2 97 20 view .LVU147
 716              	.LBB53:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 717              		.loc 2 99 5 view .LVU148
 718 00ba 4FF42062 		mov	r2, #2560
 719 00be 4FF48071 		mov	r1, #256
 720 00c2 FFF7FEFF 		bl	lv_bar_set_range
 721              	.LVL65:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 722              		.loc 2 99 5 is_stmt 0 view .LVU149
 723              	.LBE53:
 724              	.LBE52:
  64:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 380, 10);
 725              		.loc 1 64 5 is_stmt 1 view .LVU150
 726 00c6 0023     		movs	r3, #0
 727 00c8 1C22     		movs	r2, #28
 728 00ca 1E49     		ldr	r1, .L47+12
 729 00cc 2868     		ldr	r0, [r5]
 730 00ce FFF7FEFF 		bl	lv_obj_add_event_cb
 731              	.LVL66:
  65:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
 732              		.loc 1 65 5 view .LVU151
 733 00d2 0A22     		movs	r2, #10
 734 00d4 4FF4BE71 		mov	r1, #380
 735 00d8 2868     		ldr	r0, [r5]
 736 00da FFF7FEFF 		bl	lv_obj_set_size
 737              	.LVL67:
  66:Core/Src/lvgl_app.c **** 
 738              		.loc 1 66 5 view .LVU152
 739 00de 1E23     		movs	r3, #30
 740 00e0 0093     		str	r3, [sp]
 741 00e2 0023     		movs	r3, #0
 742 00e4 0E22     		movs	r2, #14
 743 00e6 2168     		ldr	r1, [r4]
 744 00e8 2868     		ldr	r0, [r5]
 745 00ea FFF7FEFF 		bl	lv_obj_align_to
 746              	.LVL68:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 747              		.loc 1 68 5 view .LVU153
 748              	.LBB54:
 749              	.LBI54:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 750              		.loc 3 163 26 view .LVU154
 751              	.LBB55:
 752              		.loc 3 165 5 view .LVU155
 753              		.loc 3 165 12 is_stmt 0 view .LVU156
 754 00ee FFF7FEFF 		bl	lv_disp_get_default
 755              	.LVL69:
 756 00f2 FFF7FEFF 		bl	lv_disp_get_scr_act
 757              	.LVL70:
 758              	.LBE55:
 759              	.LBE54:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 760              		.loc 1 68 21 view .LVU157
 761 00f6 FFF7FEFF 		bl	lv_slider_create
ARM GAS  /tmp/ccWwa8pC.s 			page 28


 762              	.LVL71:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 763              		.loc 1 68 19 view .LVU158
 764 00fa 134D     		ldr	r5, .L47+16
 765 00fc 2860     		str	r0, [r5]
  69:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 766              		.loc 1 69 5 is_stmt 1 view .LVU159
 767              	.LVL72:
 768              	.LBB56:
 769              	.LBI56:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 770              		.loc 2 97 20 view .LVU160
 771              	.LBB57:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 772              		.loc 2 99 5 view .LVU161
 773 00fe 4FF42062 		mov	r2, #2560
 774 0102 4FF48071 		mov	r1, #256
 775 0106 FFF7FEFF 		bl	lv_bar_set_range
 776              	.LVL73:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 777              		.loc 2 99 5 is_stmt 0 view .LVU162
 778              	.LBE57:
 779              	.LBE56:
  70:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 290);
 780              		.loc 1 70 5 is_stmt 1 view .LVU163
 781 010a 0023     		movs	r3, #0
 782 010c 1C22     		movs	r2, #28
 783 010e 0F49     		ldr	r1, .L47+20
 784 0110 2868     		ldr	r0, [r5]
 785 0112 FFF7FEFF 		bl	lv_obj_add_event_cb
 786              	.LVL74:
  71:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 20, 0);
 787              		.loc 1 71 5 view .LVU164
 788 0116 4FF49172 		mov	r2, #290
 789 011a 0A21     		movs	r1, #10
 790 011c 2868     		ldr	r0, [r5]
 791 011e FFF7FEFF 		bl	lv_obj_set_size
 792              	.LVL75:
  72:Core/Src/lvgl_app.c **** }
 793              		.loc 1 72 5 view .LVU165
 794 0122 0023     		movs	r3, #0
 795 0124 0093     		str	r3, [sp]
 796 0126 3346     		mov	r3, r6
 797 0128 3246     		mov	r2, r6
 798 012a 2168     		ldr	r1, [r4]
 799 012c 2868     		ldr	r0, [r5]
 800 012e FFF7FEFF 		bl	lv_obj_align_to
 801              	.LVL76:
  73:Core/Src/lvgl_app.c **** 
 802              		.loc 1 73 1 is_stmt 0 view .LVU166
 803 0132 05B0     		add	sp, sp, #20
 804              	.LCFI12:
 805              		.cfi_def_cfa_offset 20
 806              		@ sp needed
 807 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 808              	.L48:
 809 0136 00BF     		.align	2
ARM GAS  /tmp/ccWwa8pC.s 			page 29


 810              	.L47:
 811 0138 00000000 		.word	.LANCHOR0
 812 013c 00000000 		.word	.LANCHOR8
 813 0140 00000000 		.word	.LANCHOR3
 814 0144 00000000 		.word	slider_x_event_cb
 815 0148 00000000 		.word	.LANCHOR4
 816 014c 00000000 		.word	slider_y_event_cb
 817              		.cfi_endproc
 818              	.LFE190:
 820              		.section	.rodata.wave_btn.str1.4,"aMS",%progbits,1
 821              		.align	2
 822              	.LC4:
 823 0000 52455345 		.ascii	"RESET\000"
 823      5400
 824 0006 0000     		.align	2
 825              	.LC5:
 826 0008 52756E2F 		.ascii	"Run/Stop\000"
 826      53746F70 
 826      00
 827 0011 000000   		.align	2
 828              	.LC6:
 829 0014 4175746F 		.ascii	"Auto\000"
 829      00
 830              		.section	.text.wave_btn,"ax",%progbits
 831              		.align	1
 832              		.global	wave_btn
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu fpv4-sp-d16
 838              	wave_btn:
 839              	.LFB194:
 115:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 840              		.loc 1 115 1 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844 0000 10B5     		push	{r4, lr}
 845              	.LCFI13:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 4, -8
 848              		.cfi_offset 14, -4
 116:Core/Src/lvgl_app.c **** 
 849              		.loc 1 116 5 view .LVU168
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 850              		.loc 1 118 5 view .LVU169
 851              	.LBB70:
 852              	.LBI70:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 853              		.loc 3 163 26 view .LVU170
 854              	.LBB71:
 855              		.loc 3 165 5 view .LVU171
 856              		.loc 3 165 12 is_stmt 0 view .LVU172
 857 0002 FFF7FEFF 		bl	lv_disp_get_default
 858              	.LVL77:
 859 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 860              	.LVL78:
ARM GAS  /tmp/ccWwa8pC.s 			page 30


 861              	.LBE71:
 862              	.LBE70:
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 863              		.loc 1 118 23 view .LVU173
 864 000a FFF7FEFF 		bl	lv_btn_create
 865              	.LVL79:
 866 000e 0446     		mov	r4, r0
 867              	.LVL80:
 119:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_LEFT, 20, 400);
 868              		.loc 1 119 5 is_stmt 1 view .LVU174
 869 0010 0023     		movs	r3, #0
 870 0012 1A46     		mov	r2, r3
 871 0014 3449     		ldr	r1, .L51
 872 0016 FFF7FEFF 		bl	lv_obj_add_event_cb
 873              	.LVL81:
 120:Core/Src/lvgl_app.c **** 
 874              		.loc 1 120 5 view .LVU175
 875 001a 4FF4C873 		mov	r3, #400
 876 001e 1422     		movs	r2, #20
 877 0020 0121     		movs	r1, #1
 878 0022 2046     		mov	r0, r4
 879 0024 FFF7FEFF 		bl	lv_obj_align
 880              	.LVL82:
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 881              		.loc 1 122 5 view .LVU176
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 882              		.loc 1 122 13 is_stmt 0 view .LVU177
 883 0028 2046     		mov	r0, r4
 884 002a FFF7FEFF 		bl	lv_label_create
 885              	.LVL83:
 886 002e 0446     		mov	r4, r0
 887              	.LVL84:
 123:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 888              		.loc 1 123 5 is_stmt 1 view .LVU178
 889 0030 2E49     		ldr	r1, .L51+4
 890 0032 FFF7FEFF 		bl	lv_label_set_text
 891              	.LVL85:
 124:Core/Src/lvgl_app.c **** 
 892              		.loc 1 124 5 view .LVU179
 893              	.LBB72:
 894              	.LBI72:
 895              		.file 5 "Middlewares/lvgl/src/core/lv_obj_pos.h"
   1:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:Middlewares/lvgl/src/core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_pos.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_pos.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
ARM GAS  /tmp/ccWwa8pC.s 			page 31


  16:Middlewares/lvgl/src/core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  18:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  19:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      DEFINES
  20:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  21:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  22:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  23:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      TYPEDEFS
  24:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  25:Middlewares/lvgl/src/core/lv_obj_pos.h **** struct _lv_obj_t;
  26:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  27:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef struct {
  29:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:Middlewares/lvgl/src/core/lv_obj_pos.h ****     void * user_data;
  31:Middlewares/lvgl/src/core/lv_obj_pos.h **** }lv_layout_dsc_t;
  32:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  33:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  34:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  36:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  38:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  40:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  43:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  45:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  46:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the x coordinate of a object
  47:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  48:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  50:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  52:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  53:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the y coordinate of a object
  54:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  55:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  57:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  59:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  60:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the size of an object.
  61:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  62:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  63:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  64:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  65:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  70:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  72:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
ARM GAS  /tmp/ccWwa8pC.s 			page 32


  73:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Recalculate the size of the object
  74:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  75:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          true: the size has been changed
  76:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  77:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  79:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  80:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width of an object
  81:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  82:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  83:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  84:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  89:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  91:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  92:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height of an object
  93:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  94:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  95:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  96:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 101:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 103:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 104:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 106:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 108:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 110:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 111:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 113:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 115:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 117:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 118:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set a layout for an object
 119:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 120:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 122:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 124:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 125:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 129:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
ARM GAS  /tmp/ccWwa8pC.s 			page 33


 130:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 131:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 132:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Mark the object for layout update.
 133:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 135:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 137:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 138:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Update the layout of an object.
 139:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 144:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Regsiter a new layout
 145:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param cb        the layout update callback
 146:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          the ID of the new layout
 148:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 149:Middlewares/lvgl/src/core/lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 151:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 152:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object.
 153:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 156:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 158:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 159:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Equivalent to:
 161:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 168:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 170:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 171:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to an other object.
 172:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 179:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 181:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 182:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
ARM GAS  /tmp/ccWwa8pC.s 			page 34


 896              		.loc 5 186 20 view .LVU180
 897              	.LBB73:
 187:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 188:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 898              		.loc 5 188 5 view .LVU181
 899 0036 0023     		movs	r3, #0
 900 0038 1A46     		mov	r2, r3
 901 003a 0921     		movs	r1, #9
 902 003c 2046     		mov	r0, r4
 903 003e FFF7FEFF 		bl	lv_obj_align
 904              	.LVL86:
 905              		.loc 5 188 5 is_stmt 0 view .LVU182
 906              	.LBE73:
 907              	.LBE72:
 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 908              		.loc 1 126 5 is_stmt 1 view .LVU183
 909              	.LBB74:
 910              	.LBI74:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 911              		.loc 3 163 26 view .LVU184
 912              	.LBB75:
 913              		.loc 3 165 5 view .LVU185
 914              		.loc 3 165 12 is_stmt 0 view .LVU186
 915 0042 FFF7FEFF 		bl	lv_disp_get_default
 916              	.LVL87:
 917 0046 FFF7FEFF 		bl	lv_disp_get_scr_act
 918              	.LVL88:
 919              	.LBE75:
 920              	.LBE74:
 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 921              		.loc 1 126 23 view .LVU187
 922 004a FFF7FEFF 		bl	lv_btn_create
 923              	.LVL89:
 924 004e 0446     		mov	r4, r0
 925              	.LVL90:
 127:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_LEFT, 120, 400);
 926              		.loc 1 127 5 is_stmt 1 view .LVU188
 927 0050 0023     		movs	r3, #0
 928 0052 1A46     		mov	r2, r3
 929 0054 2649     		ldr	r1, .L51+8
 930 0056 FFF7FEFF 		bl	lv_obj_add_event_cb
 931              	.LVL91:
 128:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 932              		.loc 1 128 5 view .LVU189
 933 005a 4FF4C873 		mov	r3, #400
 934 005e 7822     		movs	r2, #120
 935 0060 0121     		movs	r1, #1
 936 0062 2046     		mov	r0, r4
 937 0064 FFF7FEFF 		bl	lv_obj_align
 938              	.LVL92:
 129:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 939              		.loc 1 129 5 view .LVU190
 940 0068 0821     		movs	r1, #8
 941 006a 2046     		mov	r0, r4
 942 006c FFF7FEFF 		bl	lv_obj_add_flag
 943              	.LVL93:
 130:Core/Src/lvgl_app.c **** 
ARM GAS  /tmp/ccWwa8pC.s 			page 35


 944              		.loc 1 130 5 view .LVU191
 945 0070 42F2D171 		movw	r1, #10193
 946 0074 2046     		mov	r0, r4
 947 0076 FFF7FEFF 		bl	lv_obj_set_height
 948              	.LVL94:
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 949              		.loc 1 132 5 view .LVU192
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 950              		.loc 1 132 13 is_stmt 0 view .LVU193
 951 007a 2046     		mov	r0, r4
 952 007c FFF7FEFF 		bl	lv_label_create
 953              	.LVL95:
 954 0080 0446     		mov	r4, r0
 955              	.LVL96:
 133:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 956              		.loc 1 133 5 is_stmt 1 view .LVU194
 957 0082 1C49     		ldr	r1, .L51+12
 958 0084 FFF7FEFF 		bl	lv_label_set_text
 959              	.LVL97:
 134:Core/Src/lvgl_app.c **** 
 960              		.loc 1 134 5 view .LVU195
 961              	.LBB76:
 962              	.LBI76:
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 963              		.loc 5 186 20 view .LVU196
 964              	.LBB77:
 965              		.loc 5 188 5 view .LVU197
 966 0088 0023     		movs	r3, #0
 967 008a 1A46     		mov	r2, r3
 968 008c 0921     		movs	r1, #9
 969 008e 2046     		mov	r0, r4
 970 0090 FFF7FEFF 		bl	lv_obj_align
 971              	.LVL98:
 972              		.loc 5 188 5 is_stmt 0 view .LVU198
 973              	.LBE77:
 974              	.LBE76:
 136:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn3, wave_auto_mode, LV_EVENT_ALL, NULL);
 975              		.loc 1 136 5 is_stmt 1 view .LVU199
 976              	.LBB78:
 977              	.LBI78:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 978              		.loc 3 163 26 view .LVU200
 979              	.LBB79:
 980              		.loc 3 165 5 view .LVU201
 981              		.loc 3 165 12 is_stmt 0 view .LVU202
 982 0094 FFF7FEFF 		bl	lv_disp_get_default
 983              	.LVL99:
 984 0098 FFF7FEFF 		bl	lv_disp_get_scr_act
 985              	.LVL100:
 986              	.LBE79:
 987              	.LBE78:
 136:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn3, wave_auto_mode, LV_EVENT_ALL, NULL);
 988              		.loc 1 136 23 view .LVU203
 989 009c FFF7FEFF 		bl	lv_btn_create
 990              	.LVL101:
 991 00a0 0446     		mov	r4, r0
 992              	.LVL102:
ARM GAS  /tmp/ccWwa8pC.s 			page 36


 137:Core/Src/lvgl_app.c ****     lv_obj_align(btn3, LV_ALIGN_TOP_LEFT, 250, 400);
 993              		.loc 1 137 5 is_stmt 1 view .LVU204
 994 00a2 0023     		movs	r3, #0
 995 00a4 1A46     		mov	r2, r3
 996 00a6 1449     		ldr	r1, .L51+16
 997 00a8 FFF7FEFF 		bl	lv_obj_add_event_cb
 998              	.LVL103:
 138:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn3, LV_OBJ_FLAG_CHECKABLE);
 999              		.loc 1 138 5 view .LVU205
 1000 00ac 4FF4C873 		mov	r3, #400
 1001 00b0 FA22     		movs	r2, #250
 1002 00b2 0121     		movs	r1, #1
 1003 00b4 2046     		mov	r0, r4
 1004 00b6 FFF7FEFF 		bl	lv_obj_align
 1005              	.LVL104:
 139:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn3, LV_SIZE_CONTENT);
 1006              		.loc 1 139 5 view .LVU206
 1007 00ba 0821     		movs	r1, #8
 1008 00bc 2046     		mov	r0, r4
 1009 00be FFF7FEFF 		bl	lv_obj_add_flag
 1010              	.LVL105:
 140:Core/Src/lvgl_app.c **** 
 1011              		.loc 1 140 5 view .LVU207
 1012 00c2 42F2D171 		movw	r1, #10193
 1013 00c6 2046     		mov	r0, r4
 1014 00c8 FFF7FEFF 		bl	lv_obj_set_height
 1015              	.LVL106:
 142:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Auto");
 1016              		.loc 1 142 5 view .LVU208
 142:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Auto");
 1017              		.loc 1 142 13 is_stmt 0 view .LVU209
 1018 00cc 2046     		mov	r0, r4
 1019 00ce FFF7FEFF 		bl	lv_label_create
 1020              	.LVL107:
 1021 00d2 0446     		mov	r4, r0
 1022              	.LVL108:
 143:Core/Src/lvgl_app.c ****     lv_obj_center(label); 
 1023              		.loc 1 143 5 is_stmt 1 view .LVU210
 1024 00d4 0949     		ldr	r1, .L51+20
 1025 00d6 FFF7FEFF 		bl	lv_label_set_text
 1026              	.LVL109:
 144:Core/Src/lvgl_app.c **** }
 1027              		.loc 1 144 5 view .LVU211
 1028              	.LBB80:
 1029              	.LBI80:
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 1030              		.loc 5 186 20 view .LVU212
 1031              	.LBB81:
 1032              		.loc 5 188 5 view .LVU213
 1033 00da 0023     		movs	r3, #0
 1034 00dc 1A46     		mov	r2, r3
 1035 00de 0921     		movs	r1, #9
 1036 00e0 2046     		mov	r0, r4
 1037 00e2 FFF7FEFF 		bl	lv_obj_align
 1038              	.LVL110:
 1039              		.loc 5 188 5 is_stmt 0 view .LVU214
 1040              	.LBE81:
ARM GAS  /tmp/ccWwa8pC.s 			page 37


 1041              	.LBE80:
 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 1042              		.loc 1 145 1 view .LVU215
 1043 00e6 10BD     		pop	{r4, pc}
 1044              	.LVL111:
 1045              	.L52:
 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 1046              		.loc 1 145 1 view .LVU216
 1047              		.align	2
 1048              	.L51:
 1049 00e8 00000000 		.word	wave_zoom_stop
 1050 00ec 00000000 		.word	.LC4
 1051 00f0 00000000 		.word	wave_draw_stop
 1052 00f4 08000000 		.word	.LC5
 1053 00f8 00000000 		.word	wave_auto_mode
 1054 00fc 14000000 		.word	.LC6
 1055              		.cfi_endproc
 1056              	.LFE194:
 1058              		.section	.rodata.distortion_list.str1.4,"aMS",%progbits,1
 1059              		.align	2
 1060              	.LC7:
 1061 0000 4E6F2064 		.ascii	"No distortion\012Top distortion\012Bottom distortio"
 1061      6973746F 
 1061      7274696F 
 1061      6E0A546F 
 1061      70206469 
 1062 002d 6E0A5477 		.ascii	"n\012Two-way distortion\012Crossover distortion\000"
 1062      6F2D7761 
 1062      79206469 
 1062      73746F72 
 1062      74696F6E 
 1063              		.section	.text.distortion_list,"ax",%progbits
 1064              		.align	1
 1065              		.global	distortion_list
 1066              		.syntax unified
 1067              		.thumb
 1068              		.thumb_func
 1069              		.fpu fpv4-sp-d16
 1071              	distortion_list:
 1072              	.LFB196:
 171:Core/Src/lvgl_app.c **** 
 172:Core/Src/lvgl_app.c **** void distortion_list(void)
 173:Core/Src/lvgl_app.c **** {
 1073              		.loc 1 173 1 is_stmt 1 view -0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 1077 0000 10B5     		push	{r4, lr}
 1078              	.LCFI14:
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 4, -8
 1081              		.cfi_offset 14, -4
 174:Core/Src/lvgl_app.c ****     /*Create a normal drop down list*/
 175:Core/Src/lvgl_app.c ****     lv_obj_t * dd = lv_dropdown_create(lv_scr_act());
 1082              		.loc 1 175 5 view .LVU218
 1083              	.LBB84:
 1084              	.LBI84:
ARM GAS  /tmp/ccWwa8pC.s 			page 38


 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 1085              		.loc 3 163 26 view .LVU219
 1086              	.LBB85:
 1087              		.loc 3 165 5 view .LVU220
 1088              		.loc 3 165 12 is_stmt 0 view .LVU221
 1089 0002 FFF7FEFF 		bl	lv_disp_get_default
 1090              	.LVL112:
 1091 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 1092              	.LVL113:
 1093              	.LBE85:
 1094              	.LBE84:
 1095              		.loc 1 175 21 view .LVU222
 1096 000a FFF7FEFF 		bl	lv_dropdown_create
 1097              	.LVL114:
 1098 000e 0446     		mov	r4, r0
 1099              	.LVL115:
 176:Core/Src/lvgl_app.c ****     lv_dropdown_set_options(dd, "No distortion\n"
 1100              		.loc 1 176 5 is_stmt 1 view .LVU223
 1101 0010 0A49     		ldr	r1, .L55
 1102 0012 FFF7FEFF 		bl	lv_dropdown_set_options
 1103              	.LVL116:
 177:Core/Src/lvgl_app.c ****                                 "Top distortion\n"
 178:Core/Src/lvgl_app.c ****                                 "Bottom distortion\n"
 179:Core/Src/lvgl_app.c ****                                 "Two-way distortion\n"
 180:Core/Src/lvgl_app.c ****                                 "Crossover distortion"
 181:Core/Src/lvgl_app.c ****                                 );
 182:Core/Src/lvgl_app.c ****     lv_obj_align(dd, LV_ALIGN_TOP_LEFT, 20, 460);\
 1104              		.loc 1 182 5 view .LVU224
 1105 0016 4FF4E673 		mov	r3, #460
 1106 001a 1422     		movs	r2, #20
 1107 001c 0121     		movs	r1, #1
 1108 001e 2046     		mov	r0, r4
 1109 0020 FFF7FEFF 		bl	lv_obj_align
 1110              	.LVL117:
 183:Core/Src/lvgl_app.c ****     lv_obj_set_width(dd,220);
 1111              		.loc 1 183 5 view .LVU225
 1112 0024 DC21     		movs	r1, #220
 1113 0026 2046     		mov	r0, r4
 1114 0028 FFF7FEFF 		bl	lv_obj_set_width
 1115              	.LVL118:
 184:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(dd, distortion_handler, LV_EVENT_ALL, NULL);
 1116              		.loc 1 184 5 view .LVU226
 1117 002c 0023     		movs	r3, #0
 1118 002e 1A46     		mov	r2, r3
 1119 0030 0349     		ldr	r1, .L55+4
 1120 0032 2046     		mov	r0, r4
 1121 0034 FFF7FEFF 		bl	lv_obj_add_event_cb
 1122              	.LVL119:
 185:Core/Src/lvgl_app.c **** }
 1123              		.loc 1 185 1 is_stmt 0 view .LVU227
 1124 0038 10BD     		pop	{r4, pc}
 1125              	.LVL120:
 1126              	.L56:
 1127              		.loc 1 185 1 view .LVU228
 1128 003a 00BF     		.align	2
 1129              	.L55:
 1130 003c 00000000 		.word	.LC7
ARM GAS  /tmp/ccWwa8pC.s 			page 39


 1131 0040 00000000 		.word	distortion_handler
 1132              		.cfi_endproc
 1133              	.LFE196:
 1135              		.global	distortion_mode
 1136              		.global	waveAutoFlg
 1137              		.global	waveStopFlg
 1138              		.global	wave_slider_y
 1139              		.global	wave_slider_x
 1140              		.global	wave_ser
 1141              		.global	wave_chart
 1142              		.global	label1
 1143              		.section	.rodata
 1144              		.align	2
 1145              		.set	.LANCHOR5,. + 0
 1146              	.LC0:
 1147 0000 4E6F2064 		.ascii	"No distortion\000"
 1147      6973746F 
 1147      7274696F 
 1147      6E00
 1148 000e 00000000 		.space	18
 1148      00000000 
 1148      00000000 
 1148      00000000 
 1148      0000
 1149 0020 546F7020 		.ascii	"Top distortion\000"
 1149      64697374 
 1149      6F727469 
 1149      6F6E00
 1150 002f 00000000 		.space	17
 1150      00000000 
 1150      00000000 
 1150      00000000 
 1150      00
 1151 0040 426F7474 		.ascii	"Bottom distortion\000"
 1151      6F6D2064 
 1151      6973746F 
 1151      7274696F 
 1151      6E00
 1152 0052 00000000 		.space	14
 1152      00000000 
 1152      00000000 
 1152      0000
 1153 0060 54776F2D 		.ascii	"Two-way distortion\000"
 1153      77617920 
 1153      64697374 
 1153      6F727469 
 1153      6F6E00
 1154 0073 00000000 		.space	13
 1154      00000000 
 1154      00000000 
 1154      00
 1155 0080 43726F73 		.ascii	"Crossover distortion\000"
 1155      736F7665 
 1155      72206469 
 1155      73746F72 
 1155      74696F6E 
 1156 0095 00000000 		.space	11
ARM GAS  /tmp/ccWwa8pC.s 			page 40


 1156      00000000 
 1156      000000
 1157              		.section	.bss.distortion_mode,"aw",%nobits
 1158              		.set	.LANCHOR6,. + 0
 1161              	distortion_mode:
 1162 0000 00       		.space	1
 1163              		.section	.bss.label1,"aw",%nobits
 1164              		.align	2
 1165              		.set	.LANCHOR7,. + 0
 1168              	label1:
 1169 0000 00000000 		.space	4
 1170              		.section	.bss.waveAutoFlg,"aw",%nobits
 1171              		.set	.LANCHOR1,. + 0
 1174              	waveAutoFlg:
 1175 0000 00       		.space	1
 1176              		.section	.bss.waveStopFlg,"aw",%nobits
 1177              		.set	.LANCHOR2,. + 0
 1180              	waveStopFlg:
 1181 0000 00       		.space	1
 1182              		.section	.bss.wave_chart,"aw",%nobits
 1183              		.align	2
 1184              		.set	.LANCHOR0,. + 0
 1187              	wave_chart:
 1188 0000 00000000 		.space	4
 1189              		.section	.bss.wave_ser,"aw",%nobits
 1190              		.align	2
 1191              		.set	.LANCHOR8,. + 0
 1194              	wave_ser:
 1195 0000 00000000 		.space	4
 1196              		.section	.bss.wave_slider_x,"aw",%nobits
 1197              		.align	2
 1198              		.set	.LANCHOR3,. + 0
 1201              	wave_slider_x:
 1202 0000 00000000 		.space	4
 1203              		.section	.bss.wave_slider_y,"aw",%nobits
 1204              		.align	2
 1205              		.set	.LANCHOR4,. + 0
 1208              	wave_slider_y:
 1209 0000 00000000 		.space	4
 1210              		.text
 1211              	.Letext0:
 1212              		.file 6 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1213              		.file 7 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1214              		.file 8 "Middlewares/lvgl/src/misc/lv_ll.h"
 1215              		.file 9 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 1216              		.file 10 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 1217              		.file 11 "Middlewares/lvgl/src/core/lv_obj.h"
 1218              		.file 12 "Middlewares/lvgl/src/core/lv_group.h"
 1219              		.file 13 "Middlewares/lvgl/src/core/../misc/lv_anim.h"
 1220              		.file 14 "Middlewares/lvgl/src/core/../misc/lv_txt.h"
 1221              		.file 15 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 1222              		.file 16 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 1223              		.file 17 "Middlewares/lvgl/src/core/lv_obj_class.h"
 1224              		.file 18 "Middlewares/lvgl/src/core/lv_event.h"
 1225              		.file 19 "Middlewares/lvgl/src/widgets/lv_label.h"
 1226              		.file 20 "Middlewares/lvgl/src/widgets/lv_bar.h"
 1227              		.file 21 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
ARM GAS  /tmp/ccWwa8pC.s 			page 41


 1228              		.file 22 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 1229              		.file 23 "Middlewares/lvgl/src/hal/lv_hal_disp.h"
 1230              		.file 24 "Middlewares/lvgl/src/widgets/lv_dropdown.h"
 1231              		.file 25 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/string.h"
 1232              		.file 26 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/stdio.h"
 1233              		.file 27 "Middlewares/lvgl/src/widgets/lv_btn.h"
 1234              		.file 28 "<built-in>"
 1235              		.file 29 "Middlewares/lvgl/src/core/lv_obj_style_gen.h"
ARM GAS  /tmp/ccWwa8pC.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lvgl_app.c
     /tmp/ccWwa8pC.s:18     .text.slider_y_event_cb:0000000000000000 $t
     /tmp/ccWwa8pC.s:25     .text.slider_y_event_cb:0000000000000000 slider_y_event_cb
     /tmp/ccWwa8pC.s:69     .text.slider_y_event_cb:0000000000000018 $d
     /tmp/ccWwa8pC.s:74     .text.slider_x_event_cb:0000000000000000 $t
     /tmp/ccWwa8pC.s:80     .text.slider_x_event_cb:0000000000000000 slider_x_event_cb
     /tmp/ccWwa8pC.s:122    .text.slider_x_event_cb:0000000000000018 $d
     /tmp/ccWwa8pC.s:127    .text.wave_auto_mode:0000000000000000 $t
     /tmp/ccWwa8pC.s:133    .text.wave_auto_mode:0000000000000000 wave_auto_mode
     /tmp/ccWwa8pC.s:182    .text.wave_auto_mode:0000000000000024 $d
     /tmp/ccWwa8pC.s:187    .text.wave_draw_stop:0000000000000000 $t
     /tmp/ccWwa8pC.s:193    .text.wave_draw_stop:0000000000000000 wave_draw_stop
     /tmp/ccWwa8pC.s:242    .text.wave_draw_stop:0000000000000024 $d
     /tmp/ccWwa8pC.s:247    .rodata.wave_zoom_stop.str1.4:0000000000000000 $d
     /tmp/ccWwa8pC.s:251    .text.wave_zoom_stop:0000000000000000 $t
     /tmp/ccWwa8pC.s:257    .text.wave_zoom_stop:0000000000000000 wave_zoom_stop
     /tmp/ccWwa8pC.s:336    .text.wave_zoom_stop:0000000000000044 $d
     /tmp/ccWwa8pC.s:344    .rodata.distortion_handler.str1.4:0000000000000000 $d
     /tmp/ccWwa8pC.s:348    .text.distortion_handler:0000000000000000 $t
     /tmp/ccWwa8pC.s:354    .text.distortion_handler:0000000000000000 distortion_handler
     /tmp/ccWwa8pC.s:467    .text.distortion_handler:000000000000005c $d
     /tmp/ccWwa8pC.s:474    .rodata.counter_label.str1.4:0000000000000000 $d
     /tmp/ccWwa8pC.s:478    .text.counter_label:0000000000000000 $t
     /tmp/ccWwa8pC.s:485    .text.counter_label:0000000000000000 counter_label
     /tmp/ccWwa8pC.s:553    .text.counter_label:000000000000004c $d
     /tmp/ccWwa8pC.s:559    .text.wave_chart_init:0000000000000000 $t
     /tmp/ccWwa8pC.s:566    .text.wave_chart_init:0000000000000000 wave_chart_init
     /tmp/ccWwa8pC.s:811    .text.wave_chart_init:0000000000000138 $d
     /tmp/ccWwa8pC.s:821    .rodata.wave_btn.str1.4:0000000000000000 $d
     /tmp/ccWwa8pC.s:831    .text.wave_btn:0000000000000000 $t
     /tmp/ccWwa8pC.s:838    .text.wave_btn:0000000000000000 wave_btn
     /tmp/ccWwa8pC.s:1049   .text.wave_btn:00000000000000e8 $d
     /tmp/ccWwa8pC.s:1059   .rodata.distortion_list.str1.4:0000000000000000 $d
     /tmp/ccWwa8pC.s:1064   .text.distortion_list:0000000000000000 $t
     /tmp/ccWwa8pC.s:1071   .text.distortion_list:0000000000000000 distortion_list
     /tmp/ccWwa8pC.s:1130   .text.distortion_list:000000000000003c $d
     /tmp/ccWwa8pC.s:1161   .bss.distortion_mode:0000000000000000 distortion_mode
     /tmp/ccWwa8pC.s:1174   .bss.waveAutoFlg:0000000000000000 waveAutoFlg
     /tmp/ccWwa8pC.s:1180   .bss.waveStopFlg:0000000000000000 waveStopFlg
     /tmp/ccWwa8pC.s:1208   .bss.wave_slider_y:0000000000000000 wave_slider_y
     /tmp/ccWwa8pC.s:1201   .bss.wave_slider_x:0000000000000000 wave_slider_x
     /tmp/ccWwa8pC.s:1194   .bss.wave_ser:0000000000000000 wave_ser
     /tmp/ccWwa8pC.s:1187   .bss.wave_chart:0000000000000000 wave_chart
     /tmp/ccWwa8pC.s:1168   .bss.label1:0000000000000000 label1
     /tmp/ccWwa8pC.s:1144   .rodata:0000000000000000 $d
     /tmp/ccWwa8pC.s:1162   .bss.distortion_mode:0000000000000000 $d
     /tmp/ccWwa8pC.s:1164   .bss.label1:0000000000000000 $d
     /tmp/ccWwa8pC.s:1175   .bss.waveAutoFlg:0000000000000000 $d
     /tmp/ccWwa8pC.s:1181   .bss.waveStopFlg:0000000000000000 $d
     /tmp/ccWwa8pC.s:1183   .bss.wave_chart:0000000000000000 $d
     /tmp/ccWwa8pC.s:1190   .bss.wave_ser:0000000000000000 $d
     /tmp/ccWwa8pC.s:1197   .bss.wave_slider_x:0000000000000000 $d
     /tmp/ccWwa8pC.s:1204   .bss.wave_slider_y:0000000000000000 $d

UNDEFINED SYMBOLS
lv_event_get_target
ARM GAS  /tmp/ccWwa8pC.s 			page 43


lv_bar_get_value
lv_chart_set_zoom_y
lv_chart_set_zoom_x
lv_event_get_code
puts
lv_bar_set_value
lv_dropdown_get_selected_str
memcpy
strstr
printf
lv_disp_get_default
lv_disp_get_scr_act
lv_label_create
lv_label_set_long_mode
lv_label_set_recolor
lv_label_set_text
lv_obj_set_width
lv_obj_set_style_text_align
lv_obj_align
lv_chart_create
lv_obj_set_size
lv_chart_set_range
lv_chart_set_axis_tick
lv_obj_set_style_width
lv_obj_set_style_height
lv_palette_main
lv_chart_add_series
lv_slider_create
lv_bar_set_range
lv_obj_add_event_cb
lv_obj_align_to
lv_btn_create
lv_obj_add_flag
lv_obj_set_height
lv_dropdown_create
lv_dropdown_set_options
