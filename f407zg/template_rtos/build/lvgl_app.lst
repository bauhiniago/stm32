ARM GAS  /tmp/ccQtaAHf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lvgl_app.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.slider_y_event_cb,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	slider_y_event_cb:
  26              	.LVL0:
  27              	.LFB189:
  28              		.file 1 "Core/Src/lvgl_app.c"
   1:Core/Src/lvgl_app.c **** #include "lvgl_app.h"
   2:Core/Src/lvgl_app.c **** #include <stdio.h>
   3:Core/Src/lvgl_app.c **** 
   4:Core/Src/lvgl_app.c **** 
   5:Core/Src/lvgl_app.c **** lv_obj_t * label1;
   6:Core/Src/lvgl_app.c **** void counter_label(void)
   7:Core/Src/lvgl_app.c **** {
   8:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
   9:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
  10:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
  11:Core/Src/lvgl_app.c ****     
  12:Core/Src/lvgl_app.c ****     lv_label_set_text(label1, "counter");
  13:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
  14:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
  15:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
  16:Core/Src/lvgl_app.c **** 
  17:Core/Src/lvgl_app.c **** 
  18:Core/Src/lvgl_app.c ****     // lv_obj_t * label2 = lv_label_create(lv_scr_act());
  19:Core/Src/lvgl_app.c ****     // lv_label_set_long_mode(label2, LV_LABEL_LONG_SCROLL_CIRCULAR);     /*Circular scroll*/
  20:Core/Src/lvgl_app.c ****     // lv_obj_set_width(label2, 150);
  21:Core/Src/lvgl_app.c ****     // lv_label_set_text(label2, "It is a circularly scrolling text.");
  22:Core/Src/lvgl_app.c ****     // lv_obj_align(label2, LV_ALIGN_CENTER, 0, 40);
  23:Core/Src/lvgl_app.c **** }
  24:Core/Src/lvgl_app.c **** 
  25:Core/Src/lvgl_app.c **** lv_obj_t * wave_chart;
  26:Core/Src/lvgl_app.c **** lv_chart_series_t * wave_ser ;
  27:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_x;
  28:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_y;
  29:Core/Src/lvgl_app.c **** static void slider_x_event_cb(lv_event_t * e)
  30:Core/Src/lvgl_app.c **** {
ARM GAS  /tmp/ccQtaAHf.s 			page 2


  31:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  32:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  33:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  34:Core/Src/lvgl_app.c **** }
  35:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
  36:Core/Src/lvgl_app.c **** {
  29              		.loc 1 36 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 36 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  37:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  39              		.loc 1 37 5 is_stmt 1 view .LVU2
  40              		.loc 1 37 22 is_stmt 0 view .LVU3
  41 0002 FFF7FEFF 		bl	lv_event_get_target
  42              	.LVL1:
  38:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  43              		.loc 1 38 5 is_stmt 1 view .LVU4
  44              	.LBB18:
  45              	.LBI18:
  46              		.file 2 "Middlewares/lvgl/src/widgets/lv_slider.h"
   1:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
   2:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:Middlewares/lvgl/src/widgets/lv_slider.h ****  *
   4:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
   5:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   6:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:Middlewares/lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   9:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  12:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  13:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  14:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  16:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  18:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  20:Middlewares/lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:Middlewares/lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  24:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  25:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  28:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  29:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  31:Middlewares/lvgl/src/widgets/lv_slider.h **** 
ARM GAS  /tmp/ccQtaAHf.s 			page 3


  32:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  33:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  35:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  36:Middlewares/lvgl/src/widgets/lv_slider.h **** enum {
  37:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:Middlewares/lvgl/src/widgets/lv_slider.h **** };
  41:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  43:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:Middlewares/lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:Middlewares/lvgl/src/widgets/lv_slider.h **** }lv_slider_t;
  51:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  52:Middlewares/lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  54:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  55:Middlewares/lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  56:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  57:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  58:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  59:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Create a slider objects
  60:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  61:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  62:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  63:Middlewares/lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  64:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  65:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
  66:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Setter functions
  67:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
  68:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  69:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  70:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  71:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  72:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  73:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  74:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  76:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  77:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  78:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  79:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  80:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  81:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  82:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  83:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  84:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  85:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  86:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  87:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  88:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
ARM GAS  /tmp/ccQtaAHf.s 			page 4


  89:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  90:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  91:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  92:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
  93:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
  94:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
  95:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
  96:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
  98:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  99:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 100:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 101:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 102:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 103:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 104:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 105:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 106:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 107:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 108:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 109:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 110:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 111:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 112:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
 113:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Getter functions
 114:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
 115:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 116:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 117:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 118:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 119:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 120:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  47              		.loc 2 121 23 view .LVU5
  48              	.LBB19:
 122:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 123:Middlewares/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
  49              		.loc 2 123 5 view .LVU6
  50              		.loc 2 123 12 is_stmt 0 view .LVU7
  51 0006 FFF7FEFF 		bl	lv_bar_get_value
  52              	.LVL2:
  53              		.loc 2 123 12 view .LVU8
  54              	.LBE19:
  55              	.LBE18:
  39:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_y(wave_chart, v);
  56              		.loc 1 39 5 is_stmt 1 view .LVU9
  57 000a 81B2     		uxth	r1, r0
  58 000c 024B     		ldr	r3, .L3
  59 000e 1868     		ldr	r0, [r3]
  60              	.LVL3:
  61              		.loc 1 39 5 is_stmt 0 view .LVU10
  62 0010 FFF7FEFF 		bl	lv_chart_set_zoom_y
  63              	.LVL4:
  40:Core/Src/lvgl_app.c **** }
  64              		.loc 1 40 1 view .LVU11
  65 0014 08BD     		pop	{r3, pc}
  66              	.L4:
ARM GAS  /tmp/ccQtaAHf.s 			page 5


  67 0016 00BF     		.align	2
  68              	.L3:
  69 0018 00000000 		.word	.LANCHOR0
  70              		.cfi_endproc
  71              	.LFE189:
  73              		.section	.text.slider_x_event_cb,"ax",%progbits
  74              		.align	1
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	slider_x_event_cb:
  81              	.LVL5:
  82              	.LFB188:
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  83              		.loc 1 30 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  87              		.loc 1 30 1 is_stmt 0 view .LVU13
  88 0000 08B5     		push	{r3, lr}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  93              		.loc 1 31 5 is_stmt 1 view .LVU14
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  94              		.loc 1 31 22 is_stmt 0 view .LVU15
  95 0002 FFF7FEFF 		bl	lv_event_get_target
  96              	.LVL6:
  32:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  97              		.loc 1 32 5 is_stmt 1 view .LVU16
  98              	.LBB20:
  99              	.LBI20:
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 100              		.loc 2 121 23 view .LVU17
 101              	.LBB21:
 102              		.loc 2 123 5 view .LVU18
 103              		.loc 2 123 12 is_stmt 0 view .LVU19
 104 0006 FFF7FEFF 		bl	lv_bar_get_value
 105              	.LVL7:
 106              		.loc 2 123 12 view .LVU20
 107              	.LBE21:
 108              	.LBE20:
  33:Core/Src/lvgl_app.c **** }
 109              		.loc 1 33 5 is_stmt 1 view .LVU21
 110 000a 81B2     		uxth	r1, r0
 111 000c 024B     		ldr	r3, .L7
 112 000e 1868     		ldr	r0, [r3]
 113              	.LVL8:
  33:Core/Src/lvgl_app.c **** }
 114              		.loc 1 33 5 is_stmt 0 view .LVU22
 115 0010 FFF7FEFF 		bl	lv_chart_set_zoom_x
 116              	.LVL9:
  34:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
ARM GAS  /tmp/ccQtaAHf.s 			page 6


 117              		.loc 1 34 1 view .LVU23
 118 0014 08BD     		pop	{r3, pc}
 119              	.L8:
 120 0016 00BF     		.align	2
 121              	.L7:
 122 0018 00000000 		.word	.LANCHOR0
 123              		.cfi_endproc
 124              	.LFE188:
 126              		.section	.text.wave_draw_stop,"ax",%progbits
 127              		.align	1
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	wave_draw_stop:
 134              	.LVL10:
 135              	.LFB191:
  41:Core/Src/lvgl_app.c **** void wave_chart_init(void)
  42:Core/Src/lvgl_app.c **** {
  43:Core/Src/lvgl_app.c ****     /*Create a chart*/
  44:Core/Src/lvgl_app.c ****     wave_chart = lv_chart_create(lv_scr_act());
  45:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
  46:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1000);
  48:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 512);
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
  50:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
  51:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
  52:Core/Src/lvgl_app.c ****     lv_obj_set_style_size(wave_chart, 0, LV_PART_INDICATOR);
  53:Core/Src/lvgl_app.c **** 
  54:Core/Src/lvgl_app.c **** 
  55:Core/Src/lvgl_app.c ****     wave_ser = lv_chart_add_series(wave_chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_AXIS_PRIMA
  56:Core/Src/lvgl_app.c **** 
  57:Core/Src/lvgl_app.c ****     // uint32_t pcnt = sizeof(ecg_sample) / sizeof(ecg_sample[0]);
  58:Core/Src/lvgl_app.c ****     // lv_chart_set_point_count(chart, pcnt);
  59:Core/Src/lvgl_app.c ****     // lv_chart_set_ext_y_array(chart, ser, (lv_coord_t *)ecg_sample);
  60:Core/Src/lvgl_app.c **** 
  61:Core/Src/lvgl_app.c ****     
  62:Core/Src/lvgl_app.c ****     wave_slider_x = lv_slider_create(lv_scr_act());
  63:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  64:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  65:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 480, 10);
  66:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
  67:Core/Src/lvgl_app.c **** 
  68:Core/Src/lvgl_app.c ****     wave_slider_y = lv_slider_create(lv_scr_act());
  69:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  70:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  71:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 400);
  72:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 10, 0);
  73:Core/Src/lvgl_app.c **** }
  74:Core/Src/lvgl_app.c **** 
  75:Core/Src/lvgl_app.c **** uint8_t waveStopFlg=0;
  76:Core/Src/lvgl_app.c **** uint8_t waveAutoFlg=0;
  77:Core/Src/lvgl_app.c **** static void wave_draw_stop(lv_event_t * e)
  78:Core/Src/lvgl_app.c **** {
 136              		.loc 1 78 1 is_stmt 1 view -0
 137              		.cfi_startproc
ARM GAS  /tmp/ccQtaAHf.s 			page 7


 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 78 1 is_stmt 0 view .LVU25
 141 0000 08B5     		push	{r3, lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 3, -8
 145              		.cfi_offset 14, -4
  79:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 146              		.loc 1 79 5 is_stmt 1 view .LVU26
 147              		.loc 1 79 28 is_stmt 0 view .LVU27
 148 0002 FFF7FEFF 		bl	lv_event_get_code
 149              	.LVL11:
  80:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED){
 150              		.loc 1 80 5 is_stmt 1 view .LVU28
 151              		.loc 1 80 7 is_stmt 0 view .LVU29
 152 0006 1C28     		cmp	r0, #28
 153 0008 00D0     		beq	.L13
 154              	.L9:
  81:Core/Src/lvgl_app.c ****         //printf("STOP/RUN\r\n");
  82:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
  83:Core/Src/lvgl_app.c ****             waveStopFlg=0;
  84:Core/Src/lvgl_app.c ****         }else{
  85:Core/Src/lvgl_app.c ****             waveStopFlg=1;
  86:Core/Src/lvgl_app.c ****         }
  87:Core/Src/lvgl_app.c ****     }
  88:Core/Src/lvgl_app.c **** }
 155              		.loc 1 88 1 view .LVU30
 156 000a 08BD     		pop	{r3, pc}
 157              	.L13:
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 158              		.loc 1 82 9 is_stmt 1 view .LVU31
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 159              		.loc 1 82 23 is_stmt 0 view .LVU32
 160 000c 054B     		ldr	r3, .L15
 161 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 162              		.loc 1 82 11 view .LVU33
 163 0010 012B     		cmp	r3, #1
 164 0012 03D0     		beq	.L14
  85:Core/Src/lvgl_app.c ****         }
 165              		.loc 1 85 13 is_stmt 1 view .LVU34
  85:Core/Src/lvgl_app.c ****         }
 166              		.loc 1 85 24 is_stmt 0 view .LVU35
 167 0014 034B     		ldr	r3, .L15
 168 0016 0122     		movs	r2, #1
 169 0018 1A70     		strb	r2, [r3]
 170              		.loc 1 88 1 view .LVU36
 171 001a F6E7     		b	.L9
 172              	.L14:
  83:Core/Src/lvgl_app.c ****         }else{
 173              		.loc 1 83 13 is_stmt 1 view .LVU37
  83:Core/Src/lvgl_app.c ****         }else{
 174              		.loc 1 83 24 is_stmt 0 view .LVU38
 175 001c 014B     		ldr	r3, .L15
 176 001e 0022     		movs	r2, #0
 177 0020 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccQtaAHf.s 			page 8


 178 0022 F2E7     		b	.L9
 179              	.L16:
 180              		.align	2
 181              	.L15:
 182 0024 00000000 		.word	.LANCHOR1
 183              		.cfi_endproc
 184              	.LFE191:
 186              		.section	.rodata.wave_zoom_stop.str1.4,"aMS",%progbits,1
 187              		.align	2
 188              	.LC1:
 189 0000 52455345 		.ascii	"RESET\015\000"
 189      540D00
 190              		.section	.text.wave_zoom_stop,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	wave_zoom_stop:
 198              	.LVL12:
 199              	.LFB192:
  89:Core/Src/lvgl_app.c **** 
  90:Core/Src/lvgl_app.c **** static void wave_zoom_stop(lv_event_t * e)
  91:Core/Src/lvgl_app.c **** {
 200              		.loc 1 91 1 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		.loc 1 91 1 is_stmt 0 view .LVU40
 205 0000 10B5     		push	{r4, lr}
 206              	.LCFI3:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
  92:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 210              		.loc 1 92 5 is_stmt 1 view .LVU41
 211              		.loc 1 92 28 is_stmt 0 view .LVU42
 212 0002 FFF7FEFF 		bl	lv_event_get_code
 213              	.LVL13:
  93:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED){
 214              		.loc 1 93 5 is_stmt 1 view .LVU43
 215              		.loc 1 93 7 is_stmt 0 view .LVU44
 216 0006 0728     		cmp	r0, #7
 217 0008 00D0     		beq	.L20
 218              	.LVL14:
 219              	.L17:
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_x, 0, LV_ANIM_ON);
  96:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
  98:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
  99:Core/Src/lvgl_app.c ****     }
 100:Core/Src/lvgl_app.c **** }
 220              		.loc 1 100 1 view .LVU45
 221 000a 10BD     		pop	{r4, pc}
 222              	.LVL15:
 223              	.L20:
ARM GAS  /tmp/ccQtaAHf.s 			page 9


  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 224              		.loc 1 94 9 is_stmt 1 view .LVU46
 225 000c 0D48     		ldr	r0, .L21
 226              	.LVL16:
  94:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 227              		.loc 1 94 9 is_stmt 0 view .LVU47
 228 000e FFF7FEFF 		bl	puts
 229              	.LVL17:
  95:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
 230              		.loc 1 95 9 is_stmt 1 view .LVU48
 231              	.LBB22:
 232              	.LBI22:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 233              		.loc 2 75 20 view .LVU49
 234              	.LBB23:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 235              		.loc 2 77 5 view .LVU50
 236 0012 0122     		movs	r2, #1
 237 0014 0021     		movs	r1, #0
 238 0016 0C4B     		ldr	r3, .L21+4
 239 0018 1868     		ldr	r0, [r3]
 240 001a FFF7FEFF 		bl	lv_bar_set_value
 241              	.LVL18:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 242              		.loc 2 77 5 is_stmt 0 view .LVU51
 243              	.LBE23:
 244              	.LBE22:
  96:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
 245              		.loc 1 96 9 is_stmt 1 view .LVU52
 246              	.LBB24:
 247              	.LBI24:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 248              		.loc 2 75 20 view .LVU53
 249              	.LBB25:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 250              		.loc 2 77 5 view .LVU54
 251 001e 0122     		movs	r2, #1
 252 0020 0021     		movs	r1, #0
 253 0022 0A4B     		ldr	r3, .L21+8
 254 0024 1868     		ldr	r0, [r3]
 255 0026 FFF7FEFF 		bl	lv_bar_set_value
 256              	.LVL19:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 257              		.loc 2 77 5 is_stmt 0 view .LVU55
 258              	.LBE25:
 259              	.LBE24:
  97:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
 260              		.loc 1 97 9 is_stmt 1 view .LVU56
 261 002a 094C     		ldr	r4, .L21+12
 262 002c 4FF48071 		mov	r1, #256
 263 0030 2068     		ldr	r0, [r4]
 264 0032 FFF7FEFF 		bl	lv_chart_set_zoom_x
 265              	.LVL20:
  98:Core/Src/lvgl_app.c ****     }
 266              		.loc 1 98 9 view .LVU57
 267 0036 4FF48071 		mov	r1, #256
 268 003a 2068     		ldr	r0, [r4]
ARM GAS  /tmp/ccQtaAHf.s 			page 10


 269 003c FFF7FEFF 		bl	lv_chart_set_zoom_y
 270              	.LVL21:
 271              		.loc 1 100 1 is_stmt 0 view .LVU58
 272 0040 E3E7     		b	.L17
 273              	.L22:
 274 0042 00BF     		.align	2
 275              	.L21:
 276 0044 00000000 		.word	.LC1
 277 0048 00000000 		.word	.LANCHOR2
 278 004c 00000000 		.word	.LANCHOR3
 279 0050 00000000 		.word	.LANCHOR0
 280              		.cfi_endproc
 281              	.LFE192:
 283              		.section	.rodata.distortion_handler.str1.4,"aMS",%progbits,1
 284              		.align	2
 285              	.LC2:
 286 0000 6D6F6465 		.ascii	"mode:%d\015\012\000"
 286      3A25640D 
 286      0A00
 287              		.section	.text.distortion_handler,"ax",%progbits
 288              		.align	1
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	distortion_handler:
 295              	.LVL22:
 296              	.LFB195:
 101:Core/Src/lvgl_app.c **** 
 102:Core/Src/lvgl_app.c **** static void wave_auto_mode(lv_event_t * e)
 103:Core/Src/lvgl_app.c **** {
 104:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 105:Core/Src/lvgl_app.c ****    if(code == LV_EVENT_VALUE_CHANGED){
 106:Core/Src/lvgl_app.c ****         if(waveAutoFlg==1){
 107:Core/Src/lvgl_app.c ****             waveAutoFlg=0;
 108:Core/Src/lvgl_app.c ****         }else{
 109:Core/Src/lvgl_app.c ****             waveAutoFlg=1;
 110:Core/Src/lvgl_app.c ****         }
 111:Core/Src/lvgl_app.c ****     }
 112:Core/Src/lvgl_app.c **** }
 113:Core/Src/lvgl_app.c **** 
 114:Core/Src/lvgl_app.c **** void wave_btn(void)
 115:Core/Src/lvgl_app.c **** {
 116:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 117:Core/Src/lvgl_app.c **** 
 118:Core/Src/lvgl_app.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
 119:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 120:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_RIGHT, -20, 20);
 121:Core/Src/lvgl_app.c **** 
 122:Core/Src/lvgl_app.c ****     label = lv_label_create(btn1);
 123:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 124:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 125:Core/Src/lvgl_app.c **** 
 126:Core/Src/lvgl_app.c ****     lv_obj_t * btn2 = lv_btn_create(lv_scr_act());
 127:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 128:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_RIGHT, -20, 80);
 129:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
ARM GAS  /tmp/ccQtaAHf.s 			page 11


 130:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 131:Core/Src/lvgl_app.c **** 
 132:Core/Src/lvgl_app.c ****     label = lv_label_create(btn2);
 133:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 134:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 135:Core/Src/lvgl_app.c **** 
 136:Core/Src/lvgl_app.c ****     // lv_obj_t * btn3 = lv_btn_create(lv_scr_act());
 137:Core/Src/lvgl_app.c ****     // lv_obj_add_event_cb(btn3, wave_auto_mode, LV_EVENT_ALL, NULL);
 138:Core/Src/lvgl_app.c ****     // lv_obj_align(btn3, LV_ALIGN_TOP_RIGHT, -20, 140);
 139:Core/Src/lvgl_app.c ****     // lv_obj_add_flag(btn3, LV_OBJ_FLAG_CHECKABLE);
 140:Core/Src/lvgl_app.c ****     // lv_obj_set_height(btn3, LV_SIZE_CONTENT);
 141:Core/Src/lvgl_app.c **** 
 142:Core/Src/lvgl_app.c ****     // label = lv_label_create(btn3);
 143:Core/Src/lvgl_app.c ****     // lv_label_set_text(label, "Auto");
 144:Core/Src/lvgl_app.c ****     // lv_obj_center(label); 
 145:Core/Src/lvgl_app.c **** }
 146:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 147:Core/Src/lvgl_app.c **** static void distortion_handler(lv_event_t * e)
 148:Core/Src/lvgl_app.c **** {
 297              		.loc 1 148 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 192
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		.loc 1 148 1 is_stmt 0 view .LVU60
 302 0000 30B5     		push	{r4, r5, lr}
 303              	.LCFI4:
 304              		.cfi_def_cfa_offset 12
 305              		.cfi_offset 4, -12
 306              		.cfi_offset 5, -8
 307              		.cfi_offset 14, -4
 308 0002 B1B0     		sub	sp, sp, #196
 309              	.LCFI5:
 310              		.cfi_def_cfa_offset 208
 311 0004 0546     		mov	r5, r0
 149:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 312              		.loc 1 149 5 is_stmt 1 view .LVU61
 313              		.loc 1 149 28 is_stmt 0 view .LVU62
 314 0006 FFF7FEFF 		bl	lv_event_get_code
 315              	.LVL23:
 316              		.loc 1 149 28 view .LVU63
 317 000a 0446     		mov	r4, r0
 318              	.LVL24:
 150:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
 319              		.loc 1 150 5 is_stmt 1 view .LVU64
 320              		.loc 1 150 22 is_stmt 0 view .LVU65
 321 000c 2846     		mov	r0, r5
 322 000e FFF7FEFF 		bl	lv_event_get_target
 323              	.LVL25:
 151:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED) {
 324              		.loc 1 151 5 is_stmt 1 view .LVU66
 325              		.loc 1 151 7 is_stmt 0 view .LVU67
 326 0012 1C2C     		cmp	r4, #28
 327 0014 01D0     		beq	.L29
 328              	.LVL26:
 329              	.L23:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 153:Core/Src/lvgl_app.c ****         lv_dropdown_get_selected_str(obj, buf, sizeof(buf));
ARM GAS  /tmp/ccQtaAHf.s 			page 12


 154:Core/Src/lvgl_app.c ****         char list[5][32]={
 155:Core/Src/lvgl_app.c ****             "No distortion",
 156:Core/Src/lvgl_app.c ****             "Top distortion",
 157:Core/Src/lvgl_app.c ****             "Bottom distortion",
 158:Core/Src/lvgl_app.c ****             "Two-way distortion",
 159:Core/Src/lvgl_app.c ****             "Crossover distortion",
 160:Core/Src/lvgl_app.c ****         };
 161:Core/Src/lvgl_app.c ****         for (uint8_t i = 0; i < 5; i++)
 162:Core/Src/lvgl_app.c ****         {
 163:Core/Src/lvgl_app.c ****             if(strstr(buf,list[i])){
 164:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 165:Core/Src/lvgl_app.c ****             }
 166:Core/Src/lvgl_app.c ****         
 167:Core/Src/lvgl_app.c ****         }
 168:Core/Src/lvgl_app.c ****         printf("mode:%d\r\n",distortion_mode);
 169:Core/Src/lvgl_app.c ****     }
 170:Core/Src/lvgl_app.c **** }
 330              		.loc 1 170 1 view .LVU68
 331 0016 31B0     		add	sp, sp, #196
 332              	.LCFI6:
 333              		.cfi_remember_state
 334              		.cfi_def_cfa_offset 12
 335              		@ sp needed
 336 0018 30BD     		pop	{r4, r5, pc}
 337              	.LVL27:
 338              	.L29:
 339              	.LCFI7:
 340              		.cfi_restore_state
 341              	.LBB26:
 152:Core/Src/lvgl_app.c ****         char buf[32];
 342              		.loc 1 152 9 is_stmt 1 view .LVU69
 153:Core/Src/lvgl_app.c ****         char list[5][32]={
 343              		.loc 1 153 9 view .LVU70
 344 001a 2022     		movs	r2, #32
 345 001c 6946     		mov	r1, sp
 346 001e FFF7FEFF 		bl	lv_dropdown_get_selected_str
 347              	.LVL28:
 154:Core/Src/lvgl_app.c ****             "No distortion",
 348              		.loc 1 154 9 view .LVU71
 154:Core/Src/lvgl_app.c ****             "No distortion",
 349              		.loc 1 154 14 is_stmt 0 view .LVU72
 350 0022 A022     		movs	r2, #160
 351 0024 0D49     		ldr	r1, .L31
 352 0026 08A8     		add	r0, sp, #32
 353 0028 FFF7FEFF 		bl	memcpy
 354              	.LVL29:
 161:Core/Src/lvgl_app.c ****         {
 355              		.loc 1 161 9 is_stmt 1 view .LVU73
 356              	.LBB27:
 161:Core/Src/lvgl_app.c ****         {
 357              		.loc 1 161 14 view .LVU74
 161:Core/Src/lvgl_app.c ****         {
 358              		.loc 1 161 22 is_stmt 0 view .LVU75
 359 002c 0024     		movs	r4, #0
 360              	.LVL30:
 161:Core/Src/lvgl_app.c ****         {
 361              		.loc 1 161 9 view .LVU76
ARM GAS  /tmp/ccQtaAHf.s 			page 13


 362 002e 01E0     		b	.L25
 363              	.LVL31:
 364              	.L26:
 161:Core/Src/lvgl_app.c ****         {
 365              		.loc 1 161 36 is_stmt 1 discriminator 2 view .LVU77
 161:Core/Src/lvgl_app.c ****         {
 366              		.loc 1 161 37 is_stmt 0 discriminator 2 view .LVU78
 367 0030 0134     		adds	r4, r4, #1
 368              	.LVL32:
 161:Core/Src/lvgl_app.c ****         {
 369              		.loc 1 161 37 discriminator 2 view .LVU79
 370 0032 E4B2     		uxtb	r4, r4
 371              	.LVL33:
 372              	.L25:
 161:Core/Src/lvgl_app.c ****         {
 373              		.loc 1 161 29 is_stmt 1 discriminator 1 view .LVU80
 161:Core/Src/lvgl_app.c ****         {
 374              		.loc 1 161 9 is_stmt 0 discriminator 1 view .LVU81
 375 0034 042C     		cmp	r4, #4
 376 0036 0AD8     		bhi	.L30
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 377              		.loc 1 163 13 is_stmt 1 view .LVU82
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 378              		.loc 1 163 16 is_stmt 0 view .LVU83
 379 0038 08AB     		add	r3, sp, #32
 380 003a 03EB4411 		add	r1, r3, r4, lsl #5
 381 003e 6846     		mov	r0, sp
 382 0040 FFF7FEFF 		bl	strstr
 383              	.LVL34:
 163:Core/Src/lvgl_app.c ****                 distortion_mode=i;
 384              		.loc 1 163 15 view .LVU84
 385 0044 0028     		cmp	r0, #0
 386 0046 F3D0     		beq	.L26
 164:Core/Src/lvgl_app.c ****             }
 387              		.loc 1 164 17 is_stmt 1 view .LVU85
 164:Core/Src/lvgl_app.c ****             }
 388              		.loc 1 164 32 is_stmt 0 view .LVU86
 389 0048 054B     		ldr	r3, .L31+4
 390 004a 1C70     		strb	r4, [r3]
 391 004c F0E7     		b	.L26
 392              	.L30:
 164:Core/Src/lvgl_app.c ****             }
 393              		.loc 1 164 32 view .LVU87
 394              	.LBE27:
 168:Core/Src/lvgl_app.c ****     }
 395              		.loc 1 168 9 is_stmt 1 view .LVU88
 396 004e 044B     		ldr	r3, .L31+4
 397 0050 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 398 0052 0448     		ldr	r0, .L31+8
 399 0054 FFF7FEFF 		bl	printf
 400              	.LVL35:
 401              	.LBE26:
 402              		.loc 1 170 1 is_stmt 0 view .LVU89
 403 0058 DDE7     		b	.L23
 404              	.L32:
 405 005a 00BF     		.align	2
 406              	.L31:
ARM GAS  /tmp/ccQtaAHf.s 			page 14


 407 005c 00000000 		.word	.LANCHOR4
 408 0060 00000000 		.word	.LANCHOR5
 409 0064 00000000 		.word	.LC2
 410              		.cfi_endproc
 411              	.LFE195:
 413              		.section	.rodata.counter_label.str1.4,"aMS",%progbits,1
 414              		.align	2
 415              	.LC3:
 416 0000 636F756E 		.ascii	"counter\000"
 416      74657200 
 417              		.section	.text.counter_label,"ax",%progbits
 418              		.align	1
 419              		.global	counter_label
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv4-sp-d16
 425              	counter_label:
 426              	.LFB187:
   7:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
 427              		.loc 1 7 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 10B5     		push	{r4, lr}
 432              	.LCFI8:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 436              		.loc 1 8 5 view .LVU91
 437              	.LBB30:
 438              	.LBI30:
 439              		.file 3 "Middlewares/lvgl/src/core/lv_disp.h"
   1:Middlewares/lvgl/src/core/lv_disp.h **** /**
   2:Middlewares/lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:Middlewares/lvgl/src/core/lv_disp.h ****  *
   4:Middlewares/lvgl/src/core/lv_disp.h ****  */
   5:Middlewares/lvgl/src/core/lv_disp.h **** 
   6:Middlewares/lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:Middlewares/lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:Middlewares/lvgl/src/core/lv_disp.h **** 
   9:Middlewares/lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_disp.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_disp.h **** #endif
  12:Middlewares/lvgl/src/core/lv_disp.h **** 
  13:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:Middlewares/lvgl/src/core/lv_disp.h **** 
  20:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_disp.h **** 
ARM GAS  /tmp/ccQtaAHf.s 			page 15


  24:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_disp.h **** 
  28:Middlewares/lvgl/src/core/lv_disp.h **** typedef enum {
  29:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:Middlewares/lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:Middlewares/lvgl/src/core/lv_disp.h **** 
  41:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  42:Middlewares/lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  44:Middlewares/lvgl/src/core/lv_disp.h **** 
  45:Middlewares/lvgl/src/core/lv_disp.h **** /**
  46:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  49:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:Middlewares/lvgl/src/core/lv_disp.h ****  */
  51:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:Middlewares/lvgl/src/core/lv_disp.h **** 
  53:Middlewares/lvgl/src/core/lv_disp.h **** /**
  54:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  57:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:Middlewares/lvgl/src/core/lv_disp.h ****  */
  59:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:Middlewares/lvgl/src/core/lv_disp.h **** 
  61:Middlewares/lvgl/src/core/lv_disp.h **** /**
  62:Middlewares/lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:Middlewares/lvgl/src/core/lv_disp.h ****  */
  65:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:Middlewares/lvgl/src/core/lv_disp.h **** 
  67:Middlewares/lvgl/src/core/lv_disp.h **** /**
  68:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:Middlewares/lvgl/src/core/lv_disp.h ****  */
  72:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:Middlewares/lvgl/src/core/lv_disp.h **** 
  74:Middlewares/lvgl/src/core/lv_disp.h **** /**
  75:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:Middlewares/lvgl/src/core/lv_disp.h ****  * layer)
  77:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:Middlewares/lvgl/src/core/lv_disp.h ****  */
  80:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
ARM GAS  /tmp/ccQtaAHf.s 			page 16


  81:Middlewares/lvgl/src/core/lv_disp.h **** 
  82:Middlewares/lvgl/src/core/lv_disp.h **** /**
  83:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  84:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  85:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:Middlewares/lvgl/src/core/lv_disp.h ****  */
  87:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:Middlewares/lvgl/src/core/lv_disp.h **** 
  89:Middlewares/lvgl/src/core/lv_disp.h **** /**
  90:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  91:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  92:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:Middlewares/lvgl/src/core/lv_disp.h ****  */
  94:Middlewares/lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:Middlewares/lvgl/src/core/lv_disp.h **** 
  96:Middlewares/lvgl/src/core/lv_disp.h **** /**
  97:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  98:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  99:Middlewares/lvgl/src/core/lv_disp.h ****  * @param color color of the background
 100:Middlewares/lvgl/src/core/lv_disp.h ****  */
 101:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:Middlewares/lvgl/src/core/lv_disp.h **** 
 103:Middlewares/lvgl/src/core/lv_disp.h **** /**
 104:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 105:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 106:Middlewares/lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:Middlewares/lvgl/src/core/lv_disp.h ****  */
 108:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:Middlewares/lvgl/src/core/lv_disp.h **** 
 110:Middlewares/lvgl/src/core/lv_disp.h **** /**
 111:Middlewares/lvgl/src/core/lv_disp.h ****  * Opacity of the background
 112:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 113:Middlewares/lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:Middlewares/lvgl/src/core/lv_disp.h ****  */
 115:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:Middlewares/lvgl/src/core/lv_disp.h **** 
 117:Middlewares/lvgl/src/core/lv_disp.h **** /**
 118:Middlewares/lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 119:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:Middlewares/lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:Middlewares/lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 122:Middlewares/lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 123:Middlewares/lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:Middlewares/lvgl/src/core/lv_disp.h ****  */
 125:Middlewares/lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:Middlewares/lvgl/src/core/lv_disp.h **** 
 127:Middlewares/lvgl/src/core/lv_disp.h **** /**
 128:Middlewares/lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:Middlewares/lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:Middlewares/lvgl/src/core/lv_disp.h ****  */
 132:Middlewares/lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:Middlewares/lvgl/src/core/lv_disp.h **** 
 134:Middlewares/lvgl/src/core/lv_disp.h **** /**
 135:Middlewares/lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:Middlewares/lvgl/src/core/lv_disp.h ****  */
ARM GAS  /tmp/ccQtaAHf.s 			page 17


 138:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:Middlewares/lvgl/src/core/lv_disp.h **** 
 140:Middlewares/lvgl/src/core/lv_disp.h **** /**
 141:Middlewares/lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:Middlewares/lvgl/src/core/lv_disp.h ****  */
 144:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:Middlewares/lvgl/src/core/lv_disp.h **** 
 146:Middlewares/lvgl/src/core/lv_disp.h **** /**
 147:Middlewares/lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:Middlewares/lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 150:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:Middlewares/lvgl/src/core/lv_disp.h ****  */
 152:Middlewares/lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:Middlewares/lvgl/src/core/lv_disp.h **** 
 154:Middlewares/lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 155:Middlewares/lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 156:Middlewares/lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 157:Middlewares/lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 158:Middlewares/lvgl/src/core/lv_disp.h **** 
 159:Middlewares/lvgl/src/core/lv_disp.h **** /**
 160:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 161:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 162:Middlewares/lvgl/src/core/lv_disp.h ****  */
 163:Middlewares/lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 440              		.loc 3 163 26 view .LVU92
 441              	.LBB31:
 164:Middlewares/lvgl/src/core/lv_disp.h **** {
 165:Middlewares/lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 442              		.loc 3 165 5 view .LVU93
 443              		.loc 3 165 12 is_stmt 0 view .LVU94
 444 0002 FFF7FEFF 		bl	lv_disp_get_default
 445              	.LVL36:
 446 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 447              	.LVL37:
 448              	.LBE31:
 449              	.LBE30:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 450              		.loc 1 8 14 view .LVU95
 451 000a FFF7FEFF 		bl	lv_label_create
 452              	.LVL38:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 453              		.loc 1 8 12 view .LVU96
 454 000e 0F4C     		ldr	r4, .L35
 455 0010 2060     		str	r0, [r4]
   9:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
 456              		.loc 1 9 5 is_stmt 1 view .LVU97
 457 0012 0021     		movs	r1, #0
 458 0014 FFF7FEFF 		bl	lv_label_set_long_mode
 459              	.LVL39:
  10:Core/Src/lvgl_app.c ****     
 460              		.loc 1 10 5 view .LVU98
 461 0018 0121     		movs	r1, #1
 462 001a 2068     		ldr	r0, [r4]
 463 001c FFF7FEFF 		bl	lv_label_set_recolor
 464              	.LVL40:
ARM GAS  /tmp/ccQtaAHf.s 			page 18


  12:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
 465              		.loc 1 12 5 view .LVU99
 466 0020 0B49     		ldr	r1, .L35+4
 467 0022 2068     		ldr	r0, [r4]
 468 0024 FFF7FEFF 		bl	lv_label_set_text
 469              	.LVL41:
  13:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
 470              		.loc 1 13 5 view .LVU100
 471 0028 9621     		movs	r1, #150
 472 002a 2068     		ldr	r0, [r4]
 473 002c FFF7FEFF 		bl	lv_obj_set_width
 474              	.LVL42:
  14:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
 475              		.loc 1 14 5 view .LVU101
 476 0030 0022     		movs	r2, #0
 477 0032 0221     		movs	r1, #2
 478 0034 2068     		ldr	r0, [r4]
 479 0036 FFF7FEFF 		bl	lv_obj_set_style_text_align
 480              	.LVL43:
  15:Core/Src/lvgl_app.c **** 
 481              		.loc 1 15 5 view .LVU102
 482 003a 6FF02703 		mvn	r3, #39
 483 003e 0022     		movs	r2, #0
 484 0040 0921     		movs	r1, #9
 485 0042 2068     		ldr	r0, [r4]
 486 0044 FFF7FEFF 		bl	lv_obj_align
 487              	.LVL44:
  23:Core/Src/lvgl_app.c **** 
 488              		.loc 1 23 1 is_stmt 0 view .LVU103
 489 0048 10BD     		pop	{r4, pc}
 490              	.L36:
 491 004a 00BF     		.align	2
 492              	.L35:
 493 004c 00000000 		.word	.LANCHOR6
 494 0050 00000000 		.word	.LC3
 495              		.cfi_endproc
 496              	.LFE187:
 498              		.section	.text.wave_chart_init,"ax",%progbits
 499              		.align	1
 500              		.global	wave_chart_init
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 504              		.fpu fpv4-sp-d16
 506              	wave_chart_init:
 507              	.LFB190:
  42:Core/Src/lvgl_app.c ****     /*Create a chart*/
 508              		.loc 1 42 1 is_stmt 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 513              	.LCFI9:
 514              		.cfi_def_cfa_offset 20
 515              		.cfi_offset 4, -20
 516              		.cfi_offset 5, -16
 517              		.cfi_offset 6, -12
ARM GAS  /tmp/ccQtaAHf.s 			page 19


 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 85B0     		sub	sp, sp, #20
 521              	.LCFI10:
 522              		.cfi_def_cfa_offset 40
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 523              		.loc 1 44 5 view .LVU105
 524              	.LBB44:
 525              	.LBI44:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 526              		.loc 3 163 26 view .LVU106
 527              	.LBB45:
 528              		.loc 3 165 5 view .LVU107
 529              		.loc 3 165 12 is_stmt 0 view .LVU108
 530 0004 FFF7FEFF 		bl	lv_disp_get_default
 531              	.LVL45:
 532 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 533              	.LVL46:
 534              	.LBE45:
 535              	.LBE44:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 536              		.loc 1 44 18 view .LVU109
 537 000c FFF7FEFF 		bl	lv_chart_create
 538              	.LVL47:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 500, 420);
 539              		.loc 1 44 16 view .LVU110
 540 0010 494C     		ldr	r4, .L39
 541 0012 2060     		str	r0, [r4]
  45:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
 542              		.loc 1 45 5 is_stmt 1 view .LVU111
 543 0014 4FF4D272 		mov	r2, #420
 544 0018 4FF4FA71 		mov	r1, #500
 545 001c FFF7FEFF 		bl	lv_obj_set_size
 546              	.LVL48:
  46:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1000);
 547              		.loc 1 46 5 view .LVU112
 548 0020 0023     		movs	r3, #0
 549 0022 3222     		movs	r2, #50
 550 0024 0121     		movs	r1, #1
 551 0026 2068     		ldr	r0, [r4]
 552 0028 FFF7FEFF 		bl	lv_obj_align
 553              	.LVL49:
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 512);
 554              		.loc 1 47 5 view .LVU113
 555 002c 4FF47A73 		mov	r3, #1000
 556 0030 0022     		movs	r2, #0
 557 0032 1146     		mov	r1, r2
 558 0034 2068     		ldr	r0, [r4]
 559 0036 FFF7FEFF 		bl	lv_chart_set_range
 560              	.LVL50:
  48:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
 561              		.loc 1 48 5 view .LVU114
 562 003a 4FF40073 		mov	r3, #512
 563 003e 0022     		movs	r2, #0
 564 0040 0221     		movs	r1, #2
 565 0042 2068     		ldr	r0, [r4]
 566 0044 FFF7FEFF 		bl	lv_chart_set_range
ARM GAS  /tmp/ccQtaAHf.s 			page 20


 567              	.LVL51:
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
 568              		.loc 1 49 5 view .LVU115
 569 0048 1427     		movs	r7, #20
 570 004a 0397     		str	r7, [sp, #12]
 571 004c 0126     		movs	r6, #1
 572 004e 0296     		str	r6, [sp, #8]
 573 0050 0196     		str	r6, [sp, #4]
 574 0052 0525     		movs	r5, #5
 575 0054 0095     		str	r5, [sp]
 576 0056 2B46     		mov	r3, r5
 577 0058 2A46     		mov	r2, r5
 578 005a 0221     		movs	r1, #2
 579 005c 2068     		ldr	r0, [r4]
 580 005e FFF7FEFF 		bl	lv_chart_set_axis_tick
 581              	.LVL52:
  50:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
 582              		.loc 1 50 5 view .LVU116
 583 0062 3C23     		movs	r3, #60
 584 0064 0393     		str	r3, [sp, #12]
 585 0066 0296     		str	r6, [sp, #8]
 586 0068 0195     		str	r5, [sp, #4]
 587 006a 0623     		movs	r3, #6
 588 006c 0093     		str	r3, [sp]
 589 006e 2B46     		mov	r3, r5
 590 0070 0A22     		movs	r2, #10
 591 0072 0021     		movs	r1, #0
 592 0074 2068     		ldr	r0, [r4]
 593 0076 FFF7FEFF 		bl	lv_chart_set_axis_tick
 594              	.LVL53:
  52:Core/Src/lvgl_app.c **** 
 595              		.loc 1 52 5 view .LVU117
 596 007a 2568     		ldr	r5, [r4]
 597              	.LVL54:
 598              	.LBB46:
 599              	.LBI46:
 600              		.file 4 "Middlewares/lvgl/src/core/lv_obj_style.h"
   1:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:Middlewares/lvgl/src/core/lv_obj_style.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:Middlewares/lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  20:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
ARM GAS  /tmp/ccQtaAHf.s 			page 21


  21:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  24:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:Middlewares/lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  30:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef enum {
  31:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:Middlewares/lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  39:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t selector :24;
  42:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_local :1;
  43:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans :1;
  44:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_t;
  45:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  46:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:Middlewares/lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:Middlewares/lvgl/src/core/lv_obj_style.h ****     void * user_data;
  54:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  55:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  57:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  58:Middlewares/lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  60:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  61:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  62:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  65:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  67:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  68:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  75:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  77:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
ARM GAS  /tmp/ccQtaAHf.s 			page 22


  78:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  79:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  86:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  88:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  89:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  92:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:Middlewares/lvgl/src/core/lv_obj_style.h **** {
  94:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
  95:Middlewares/lvgl/src/core/lv_obj_style.h **** }
  96:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  97:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  98:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 102:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 104:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 105:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
 111:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 112:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 114:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 115:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:Middlewares/lvgl/src/core/lv_obj_style.h ****  * or any other style change happens.
 117:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 119:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 121:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 122:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:Middlewares/lvgl/src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 131:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 133:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 134:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
ARM GAS  /tmp/ccQtaAHf.s 			page 23


 135:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 136:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part to which the property should be added
 137:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     a state to which the property should be added
 138:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property
 139:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 140:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 142:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t
 144:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 145:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 146:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 147:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 148:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part of the object which style property should be removed.
 149:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     the state from which the property should be removed.
 150:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 151:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 152:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 153:Middlewares/lvgl/src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 154:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 155:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 156:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to create a style tarnsition
 157:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 158:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part
 159:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prev_state
 160:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param new_state
 161:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param tr
 162:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 163:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 164:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 165:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 166:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 167:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 168:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state1
 169:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state2
 170:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return
 171:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 172:Middlewares/lvgl/src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 173:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 174:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 175:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 176:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 177:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 178:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 179:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 180:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 181:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 182:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 183:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 184:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 185:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 186:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 187:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 188:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 189:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 190:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 191:Middlewares/lvgl/src/core/lv_obj_style.h **** 
ARM GAS  /tmp/ccQtaAHf.s 			page 24


 192:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 193:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 194:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
 195:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 196:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 197:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 198:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 199:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 200:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 201:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 202:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 203:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 204:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 205:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 206:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 207:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 208:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 209:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 210:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 211:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 212:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 213:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_sel
 214:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_row(obj, value, selector);
 215:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_column(obj, value, selector);
 216:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 217:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 218:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_select
 601              		.loc 4 218 20 view .LVU118
 602              	.LBB47:
 219:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_width(obj, value, selector);
 603              		.loc 4 219 5 view .LVU119
 604 007c 4FF40032 		mov	r2, #131072
 605 0080 0021     		movs	r1, #0
 606 0082 2846     		mov	r0, r5
 607 0084 FFF7FEFF 		bl	lv_obj_set_style_width
 608              	.LVL55:
 220:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_height(obj, value, selector);
 609              		.loc 4 220 5 view .LVU120
 610 0088 4FF40032 		mov	r2, #131072
 611 008c 0021     		movs	r1, #0
 612 008e 2846     		mov	r0, r5
 613 0090 FFF7FEFF 		bl	lv_obj_set_style_height
 614              	.LVL56:
 615              		.loc 4 220 5 is_stmt 0 view .LVU121
 616              	.LBE47:
 617              	.LBE46:
  55:Core/Src/lvgl_app.c **** 
 618              		.loc 1 55 5 is_stmt 1 view .LVU122
  55:Core/Src/lvgl_app.c **** 
 619              		.loc 1 55 16 is_stmt 0 view .LVU123
 620 0094 2568     		ldr	r5, [r4]
 621 0096 0020     		movs	r0, #0
 622 0098 FFF7FEFF 		bl	lv_palette_main
 623              	.LVL57:
 624 009c 0146     		mov	r1, r0	@ movhi
 625 009e 0022     		movs	r2, #0
 626 00a0 2846     		mov	r0, r5
ARM GAS  /tmp/ccQtaAHf.s 			page 25


 627 00a2 FFF7FEFF 		bl	lv_chart_add_series
 628              	.LVL58:
  55:Core/Src/lvgl_app.c **** 
 629              		.loc 1 55 14 view .LVU124
 630 00a6 254B     		ldr	r3, .L39+4
 631 00a8 1860     		str	r0, [r3]
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 632              		.loc 1 62 5 is_stmt 1 view .LVU125
 633              	.LBB48:
 634              	.LBI48:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 635              		.loc 3 163 26 view .LVU126
 636              	.LBB49:
 637              		.loc 3 165 5 view .LVU127
 638              		.loc 3 165 12 is_stmt 0 view .LVU128
 639 00aa FFF7FEFF 		bl	lv_disp_get_default
 640              	.LVL59:
 641 00ae FFF7FEFF 		bl	lv_disp_get_scr_act
 642              	.LVL60:
 643              	.LBE49:
 644              	.LBE48:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 645              		.loc 1 62 21 view .LVU129
 646 00b2 FFF7FEFF 		bl	lv_slider_create
 647              	.LVL61:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 648              		.loc 1 62 19 view .LVU130
 649 00b6 224D     		ldr	r5, .L39+8
 650 00b8 2860     		str	r0, [r5]
  63:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 651              		.loc 1 63 5 is_stmt 1 view .LVU131
 652              	.LVL62:
 653              	.LBB50:
 654              	.LBI50:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 655              		.loc 2 97 20 view .LVU132
 656              	.LBB51:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 657              		.loc 2 99 5 view .LVU133
 658 00ba 4FF42062 		mov	r2, #2560
 659 00be 4FF48071 		mov	r1, #256
 660 00c2 FFF7FEFF 		bl	lv_bar_set_range
 661              	.LVL63:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 662              		.loc 2 99 5 is_stmt 0 view .LVU134
 663              	.LBE51:
 664              	.LBE50:
  64:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 480, 10);
 665              		.loc 1 64 5 is_stmt 1 view .LVU135
 666 00c6 0023     		movs	r3, #0
 667 00c8 1C22     		movs	r2, #28
 668 00ca 1E49     		ldr	r1, .L39+12
 669 00cc 2868     		ldr	r0, [r5]
 670 00ce FFF7FEFF 		bl	lv_obj_add_event_cb
 671              	.LVL64:
  65:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
 672              		.loc 1 65 5 view .LVU136
ARM GAS  /tmp/ccQtaAHf.s 			page 26


 673 00d2 0A22     		movs	r2, #10
 674 00d4 4FF4F071 		mov	r1, #480
 675 00d8 2868     		ldr	r0, [r5]
 676 00da FFF7FEFF 		bl	lv_obj_set_size
 677              	.LVL65:
  66:Core/Src/lvgl_app.c **** 
 678              		.loc 1 66 5 view .LVU137
 679 00de 1E23     		movs	r3, #30
 680 00e0 0093     		str	r3, [sp]
 681 00e2 0023     		movs	r3, #0
 682 00e4 0E22     		movs	r2, #14
 683 00e6 2168     		ldr	r1, [r4]
 684 00e8 2868     		ldr	r0, [r5]
 685 00ea FFF7FEFF 		bl	lv_obj_align_to
 686              	.LVL66:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 687              		.loc 1 68 5 view .LVU138
 688              	.LBB52:
 689              	.LBI52:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 690              		.loc 3 163 26 view .LVU139
 691              	.LBB53:
 692              		.loc 3 165 5 view .LVU140
 693              		.loc 3 165 12 is_stmt 0 view .LVU141
 694 00ee FFF7FEFF 		bl	lv_disp_get_default
 695              	.LVL67:
 696 00f2 FFF7FEFF 		bl	lv_disp_get_scr_act
 697              	.LVL68:
 698              	.LBE53:
 699              	.LBE52:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 700              		.loc 1 68 21 view .LVU142
 701 00f6 FFF7FEFF 		bl	lv_slider_create
 702              	.LVL69:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 703              		.loc 1 68 19 view .LVU143
 704 00fa 134D     		ldr	r5, .L39+16
 705 00fc 2860     		str	r0, [r5]
  69:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 706              		.loc 1 69 5 is_stmt 1 view .LVU144
 707              	.LVL70:
 708              	.LBB54:
 709              	.LBI54:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 710              		.loc 2 97 20 view .LVU145
 711              	.LBB55:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 712              		.loc 2 99 5 view .LVU146
 713 00fe 4FF42062 		mov	r2, #2560
 714 0102 4FF48071 		mov	r1, #256
 715 0106 FFF7FEFF 		bl	lv_bar_set_range
 716              	.LVL71:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 717              		.loc 2 99 5 is_stmt 0 view .LVU147
 718              	.LBE55:
 719              	.LBE54:
  70:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 400);
ARM GAS  /tmp/ccQtaAHf.s 			page 27


 720              		.loc 1 70 5 is_stmt 1 view .LVU148
 721 010a 0023     		movs	r3, #0
 722 010c 1C22     		movs	r2, #28
 723 010e 0F49     		ldr	r1, .L39+20
 724 0110 2868     		ldr	r0, [r5]
 725 0112 FFF7FEFF 		bl	lv_obj_add_event_cb
 726              	.LVL72:
  71:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 10, 0);
 727              		.loc 1 71 5 view .LVU149
 728 0116 4FF4C872 		mov	r2, #400
 729 011a 0A21     		movs	r1, #10
 730 011c 2868     		ldr	r0, [r5]
 731 011e FFF7FEFF 		bl	lv_obj_set_size
 732              	.LVL73:
  72:Core/Src/lvgl_app.c **** }
 733              		.loc 1 72 5 view .LVU150
 734 0122 0023     		movs	r3, #0
 735 0124 0093     		str	r3, [sp]
 736 0126 0A23     		movs	r3, #10
 737 0128 3A46     		mov	r2, r7
 738 012a 2168     		ldr	r1, [r4]
 739 012c 2868     		ldr	r0, [r5]
 740 012e FFF7FEFF 		bl	lv_obj_align_to
 741              	.LVL74:
  73:Core/Src/lvgl_app.c **** 
 742              		.loc 1 73 1 is_stmt 0 view .LVU151
 743 0132 05B0     		add	sp, sp, #20
 744              	.LCFI11:
 745              		.cfi_def_cfa_offset 20
 746              		@ sp needed
 747 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 748              	.L40:
 749 0136 00BF     		.align	2
 750              	.L39:
 751 0138 00000000 		.word	.LANCHOR0
 752 013c 00000000 		.word	.LANCHOR7
 753 0140 00000000 		.word	.LANCHOR2
 754 0144 00000000 		.word	slider_x_event_cb
 755 0148 00000000 		.word	.LANCHOR3
 756 014c 00000000 		.word	slider_y_event_cb
 757              		.cfi_endproc
 758              	.LFE190:
 760              		.section	.rodata.wave_btn.str1.4,"aMS",%progbits,1
 761              		.align	2
 762              	.LC4:
 763 0000 52455345 		.ascii	"RESET\000"
 763      5400
 764 0006 0000     		.align	2
 765              	.LC5:
 766 0008 52756E2F 		.ascii	"Run/Stop\000"
 766      53746F70 
 766      00
 767              		.section	.text.wave_btn,"ax",%progbits
 768              		.align	1
 769              		.global	wave_btn
 770              		.syntax unified
 771              		.thumb
ARM GAS  /tmp/ccQtaAHf.s 			page 28


 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	wave_btn:
 776              	.LFB194:
 115:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 777              		.loc 1 115 1 is_stmt 1 view -0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781 0000 10B5     		push	{r4, lr}
 782              	.LCFI12:
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 4, -8
 785              		.cfi_offset 14, -4
 116:Core/Src/lvgl_app.c **** 
 786              		.loc 1 116 5 view .LVU153
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 787              		.loc 1 118 5 view .LVU154
 788              	.LBB64:
 789              	.LBI64:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 790              		.loc 3 163 26 view .LVU155
 791              	.LBB65:
 792              		.loc 3 165 5 view .LVU156
 793              		.loc 3 165 12 is_stmt 0 view .LVU157
 794 0002 FFF7FEFF 		bl	lv_disp_get_default
 795              	.LVL75:
 796 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 797              	.LVL76:
 798              	.LBE65:
 799              	.LBE64:
 118:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 800              		.loc 1 118 23 view .LVU158
 801 000a FFF7FEFF 		bl	lv_btn_create
 802              	.LVL77:
 803 000e 0446     		mov	r4, r0
 804              	.LVL78:
 119:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_RIGHT, -20, 20);
 805              		.loc 1 119 5 is_stmt 1 view .LVU159
 806 0010 0023     		movs	r3, #0
 807 0012 1A46     		mov	r2, r3
 808 0014 2049     		ldr	r1, .L43
 809 0016 FFF7FEFF 		bl	lv_obj_add_event_cb
 810              	.LVL79:
 120:Core/Src/lvgl_app.c **** 
 811              		.loc 1 120 5 view .LVU160
 812 001a 1423     		movs	r3, #20
 813 001c 6FF01302 		mvn	r2, #19
 814 0020 0321     		movs	r1, #3
 815 0022 2046     		mov	r0, r4
 816 0024 FFF7FEFF 		bl	lv_obj_align
 817              	.LVL80:
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 818              		.loc 1 122 5 view .LVU161
 122:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 819              		.loc 1 122 13 is_stmt 0 view .LVU162
 820 0028 2046     		mov	r0, r4
ARM GAS  /tmp/ccQtaAHf.s 			page 29


 821 002a FFF7FEFF 		bl	lv_label_create
 822              	.LVL81:
 823 002e 0446     		mov	r4, r0
 824              	.LVL82:
 123:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 825              		.loc 1 123 5 is_stmt 1 view .LVU163
 826 0030 1A49     		ldr	r1, .L43+4
 827 0032 FFF7FEFF 		bl	lv_label_set_text
 828              	.LVL83:
 124:Core/Src/lvgl_app.c **** 
 829              		.loc 1 124 5 view .LVU164
 830              	.LBB66:
 831              	.LBI66:
 832              		.file 5 "Middlewares/lvgl/src/core/lv_obj_pos.h"
   1:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:Middlewares/lvgl/src/core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_pos.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_pos.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  18:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  19:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      DEFINES
  20:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  21:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  22:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  23:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      TYPEDEFS
  24:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  25:Middlewares/lvgl/src/core/lv_obj_pos.h **** struct _lv_obj_t;
  26:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  27:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef struct {
  29:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:Middlewares/lvgl/src/core/lv_obj_pos.h ****     void * user_data;
  31:Middlewares/lvgl/src/core/lv_obj_pos.h **** }lv_layout_dsc_t;
  32:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  33:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  34:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  36:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  38:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  40:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  43:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
ARM GAS  /tmp/ccQtaAHf.s 			page 30


  44:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  45:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  46:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the x coordinate of a object
  47:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  48:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  50:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  52:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  53:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the y coordinate of a object
  54:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  55:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  57:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  59:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  60:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the size of an object.
  61:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  62:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  63:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  64:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  65:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  70:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  72:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  73:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Recalculate the size of the object
  74:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  75:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          true: the size has been changed
  76:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  77:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  79:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  80:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width of an object
  81:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  82:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  83:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  84:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  89:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  91:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  92:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height of an object
  93:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  94:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  95:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  96:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
ARM GAS  /tmp/ccQtaAHf.s 			page 31


 101:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 103:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 104:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 106:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 108:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 110:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 111:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 113:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 115:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 117:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 118:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set a layout for an object
 119:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 120:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 122:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 124:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 125:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 129:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 131:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 132:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Mark the object for layout update.
 133:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 135:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 137:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 138:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Update the layout of an object.
 139:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 144:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Regsiter a new layout
 145:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param cb        the layout update callback
 146:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          the ID of the new layout
 148:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 149:Middlewares/lvgl/src/core/lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 151:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 152:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object.
 153:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 156:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
ARM GAS  /tmp/ccQtaAHf.s 			page 32


 158:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 159:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Equivalent to:
 161:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 168:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 170:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 171:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to an other object.
 172:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 179:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 181:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 182:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 833              		.loc 5 186 20 view .LVU165
 834              	.LBB67:
 187:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 188:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 835              		.loc 5 188 5 view .LVU166
 836 0036 0023     		movs	r3, #0
 837 0038 1A46     		mov	r2, r3
 838 003a 0921     		movs	r1, #9
 839 003c 2046     		mov	r0, r4
 840 003e FFF7FEFF 		bl	lv_obj_align
 841              	.LVL84:
 842              		.loc 5 188 5 is_stmt 0 view .LVU167
 843              	.LBE67:
 844              	.LBE66:
 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 845              		.loc 1 126 5 is_stmt 1 view .LVU168
 846              	.LBB68:
 847              	.LBI68:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 848              		.loc 3 163 26 view .LVU169
 849              	.LBB69:
 850              		.loc 3 165 5 view .LVU170
 851              		.loc 3 165 12 is_stmt 0 view .LVU171
 852 0042 FFF7FEFF 		bl	lv_disp_get_default
 853              	.LVL85:
 854 0046 FFF7FEFF 		bl	lv_disp_get_scr_act
 855              	.LVL86:
 856              	.LBE69:
ARM GAS  /tmp/ccQtaAHf.s 			page 33


 857              	.LBE68:
 126:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 858              		.loc 1 126 23 view .LVU172
 859 004a FFF7FEFF 		bl	lv_btn_create
 860              	.LVL87:
 861 004e 0446     		mov	r4, r0
 862              	.LVL88:
 127:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_RIGHT, -20, 80);
 863              		.loc 1 127 5 is_stmt 1 view .LVU173
 864 0050 0023     		movs	r3, #0
 865 0052 1A46     		mov	r2, r3
 866 0054 1249     		ldr	r1, .L43+8
 867 0056 FFF7FEFF 		bl	lv_obj_add_event_cb
 868              	.LVL89:
 128:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 869              		.loc 1 128 5 view .LVU174
 870 005a 5023     		movs	r3, #80
 871 005c 6FF01302 		mvn	r2, #19
 872 0060 0321     		movs	r1, #3
 873 0062 2046     		mov	r0, r4
 874 0064 FFF7FEFF 		bl	lv_obj_align
 875              	.LVL90:
 129:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 876              		.loc 1 129 5 view .LVU175
 877 0068 0821     		movs	r1, #8
 878 006a 2046     		mov	r0, r4
 879 006c FFF7FEFF 		bl	lv_obj_add_flag
 880              	.LVL91:
 130:Core/Src/lvgl_app.c **** 
 881              		.loc 1 130 5 view .LVU176
 882 0070 42F2D171 		movw	r1, #10193
 883 0074 2046     		mov	r0, r4
 884 0076 FFF7FEFF 		bl	lv_obj_set_height
 885              	.LVL92:
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 886              		.loc 1 132 5 view .LVU177
 132:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 887              		.loc 1 132 13 is_stmt 0 view .LVU178
 888 007a 2046     		mov	r0, r4
 889 007c FFF7FEFF 		bl	lv_label_create
 890              	.LVL93:
 891 0080 0446     		mov	r4, r0
 892              	.LVL94:
 133:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 893              		.loc 1 133 5 is_stmt 1 view .LVU179
 894 0082 0849     		ldr	r1, .L43+12
 895 0084 FFF7FEFF 		bl	lv_label_set_text
 896              	.LVL95:
 134:Core/Src/lvgl_app.c **** 
 897              		.loc 1 134 5 view .LVU180
 898              	.LBB70:
 899              	.LBI70:
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 900              		.loc 5 186 20 view .LVU181
 901              	.LBB71:
 902              		.loc 5 188 5 view .LVU182
 903 0088 0023     		movs	r3, #0
ARM GAS  /tmp/ccQtaAHf.s 			page 34


 904 008a 1A46     		mov	r2, r3
 905 008c 0921     		movs	r1, #9
 906 008e 2046     		mov	r0, r4
 907 0090 FFF7FEFF 		bl	lv_obj_align
 908              	.LVL96:
 909              		.loc 5 188 5 is_stmt 0 view .LVU183
 910              	.LBE71:
 911              	.LBE70:
 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 912              		.loc 1 145 1 view .LVU184
 913 0094 10BD     		pop	{r4, pc}
 914              	.LVL97:
 915              	.L44:
 145:Core/Src/lvgl_app.c **** uint8_t distortion_mode=0;
 916              		.loc 1 145 1 view .LVU185
 917 0096 00BF     		.align	2
 918              	.L43:
 919 0098 00000000 		.word	wave_zoom_stop
 920 009c 00000000 		.word	.LC4
 921 00a0 00000000 		.word	wave_draw_stop
 922 00a4 08000000 		.word	.LC5
 923              		.cfi_endproc
 924              	.LFE194:
 926              		.section	.rodata.distortion_list.str1.4,"aMS",%progbits,1
 927              		.align	2
 928              	.LC6:
 929 0000 4E6F2064 		.ascii	"No distortion\012Top distortion\012Bottom distortio"
 929      6973746F 
 929      7274696F 
 929      6E0A546F 
 929      70206469 
 930 002d 6E0A5477 		.ascii	"n\012Two-way distortion\012Crossover distortion\000"
 930      6F2D7761 
 930      79206469 
 930      73746F72 
 930      74696F6E 
 931              		.section	.text.distortion_list,"ax",%progbits
 932              		.align	1
 933              		.global	distortion_list
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	distortion_list:
 940              	.LFB196:
 171:Core/Src/lvgl_app.c **** 
 172:Core/Src/lvgl_app.c **** void distortion_list(void)
 173:Core/Src/lvgl_app.c **** {
 941              		.loc 1 173 1 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 10B5     		push	{r4, lr}
 946              	.LCFI13:
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 4, -8
 949              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQtaAHf.s 			page 35


 174:Core/Src/lvgl_app.c ****     /*Create a normal drop down list*/
 175:Core/Src/lvgl_app.c ****     lv_obj_t * dd = lv_dropdown_create(lv_scr_act());
 950              		.loc 1 175 5 view .LVU187
 951              	.LBB74:
 952              	.LBI74:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 953              		.loc 3 163 26 view .LVU188
 954              	.LBB75:
 955              		.loc 3 165 5 view .LVU189
 956              		.loc 3 165 12 is_stmt 0 view .LVU190
 957 0002 FFF7FEFF 		bl	lv_disp_get_default
 958              	.LVL98:
 959 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 960              	.LVL99:
 961              	.LBE75:
 962              	.LBE74:
 963              		.loc 1 175 21 view .LVU191
 964 000a FFF7FEFF 		bl	lv_dropdown_create
 965              	.LVL100:
 966 000e 0446     		mov	r4, r0
 967              	.LVL101:
 176:Core/Src/lvgl_app.c ****     lv_dropdown_set_options(dd, "No distortion\n"
 968              		.loc 1 176 5 is_stmt 1 view .LVU192
 969 0010 0A49     		ldr	r1, .L47
 970 0012 FFF7FEFF 		bl	lv_dropdown_set_options
 971              	.LVL102:
 177:Core/Src/lvgl_app.c ****                                 "Top distortion\n"
 178:Core/Src/lvgl_app.c ****                                 "Bottom distortion\n"
 179:Core/Src/lvgl_app.c ****                                 "Two-way distortion\n"
 180:Core/Src/lvgl_app.c ****                                 "Crossover distortion"
 181:Core/Src/lvgl_app.c ****                                 );
 182:Core/Src/lvgl_app.c ****     lv_obj_align(dd, LV_ALIGN_TOP_RIGHT, -20, 200);
 972              		.loc 1 182 5 view .LVU193
 973 0016 C823     		movs	r3, #200
 974 0018 6FF01302 		mvn	r2, #19
 975 001c 0321     		movs	r1, #3
 976 001e 2046     		mov	r0, r4
 977 0020 FFF7FEFF 		bl	lv_obj_align
 978              	.LVL103:
 183:Core/Src/lvgl_app.c ****     lv_obj_set_width(dd,190);
 979              		.loc 1 183 5 view .LVU194
 980 0024 BE21     		movs	r1, #190
 981 0026 2046     		mov	r0, r4
 982 0028 FFF7FEFF 		bl	lv_obj_set_width
 983              	.LVL104:
 184:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(dd, distortion_handler, LV_EVENT_ALL, NULL);
 984              		.loc 1 184 5 view .LVU195
 985 002c 0023     		movs	r3, #0
 986 002e 1A46     		mov	r2, r3
 987 0030 0349     		ldr	r1, .L47+4
 988 0032 2046     		mov	r0, r4
 989 0034 FFF7FEFF 		bl	lv_obj_add_event_cb
 990              	.LVL105:
 185:Core/Src/lvgl_app.c **** }
 991              		.loc 1 185 1 is_stmt 0 view .LVU196
 992 0038 10BD     		pop	{r4, pc}
 993              	.LVL106:
ARM GAS  /tmp/ccQtaAHf.s 			page 36


 994              	.L48:
 995              		.loc 1 185 1 view .LVU197
 996 003a 00BF     		.align	2
 997              	.L47:
 998 003c 00000000 		.word	.LC6
 999 0040 00000000 		.word	distortion_handler
 1000              		.cfi_endproc
 1001              	.LFE196:
 1003              		.section	.rodata.THD_label.str1.4,"aMS",%progbits,1
 1004              		.align	2
 1005              	.LC7:
 1006 0000 54484400 		.ascii	"THD\000"
 1007              		.section	.text.THD_label,"ax",%progbits
 1008              		.align	1
 1009              		.global	THD_label
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1013              		.fpu fpv4-sp-d16
 1015              	THD_label:
 1016              	.LFB197:
 186:Core/Src/lvgl_app.c **** 
 187:Core/Src/lvgl_app.c **** lv_obj_t * THD_text;
 188:Core/Src/lvgl_app.c **** void THD_label(void){
 1017              		.loc 1 188 21 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021 0000 10B5     		push	{r4, lr}
 1022              	.LCFI14:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 4, -8
 1025              		.cfi_offset 14, -4
 189:Core/Src/lvgl_app.c ****     THD_text = lv_label_create(lv_scr_act());
 1026              		.loc 1 189 5 view .LVU199
 1027              	.LBB78:
 1028              	.LBI78:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 1029              		.loc 3 163 26 view .LVU200
 1030              	.LBB79:
 1031              		.loc 3 165 5 view .LVU201
 1032              		.loc 3 165 12 is_stmt 0 view .LVU202
 1033 0002 FFF7FEFF 		bl	lv_disp_get_default
 1034              	.LVL107:
 1035 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 1036              	.LVL108:
 1037              	.LBE79:
 1038              	.LBE78:
 1039              		.loc 1 189 16 view .LVU203
 1040 000a FFF7FEFF 		bl	lv_label_create
 1041              	.LVL109:
 1042              		.loc 1 189 14 view .LVU204
 1043 000e 0B4C     		ldr	r4, .L51
 1044 0010 2060     		str	r0, [r4]
 190:Core/Src/lvgl_app.c ****     lv_label_set_text(THD_text, "THD");
 1045              		.loc 1 190 5 is_stmt 1 view .LVU205
 1046 0012 0B49     		ldr	r1, .L51+4
ARM GAS  /tmp/ccQtaAHf.s 			page 37


 1047 0014 FFF7FEFF 		bl	lv_label_set_text
 1048              	.LVL110:
 191:Core/Src/lvgl_app.c ****     lv_obj_set_width(THD_text, 150);  /*Set smaller width to make the lines wrap*/
 1049              		.loc 1 191 5 view .LVU206
 1050 0018 9621     		movs	r1, #150
 1051 001a 2068     		ldr	r0, [r4]
 1052 001c FFF7FEFF 		bl	lv_obj_set_width
 1053              	.LVL111:
 192:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(THD_text, LV_TEXT_ALIGN_CENTER, 0);
 1054              		.loc 1 192 5 view .LVU207
 1055 0020 0022     		movs	r2, #0
 1056 0022 0221     		movs	r1, #2
 1057 0024 2068     		ldr	r0, [r4]
 1058 0026 FFF7FEFF 		bl	lv_obj_set_style_text_align
 1059              	.LVL112:
 193:Core/Src/lvgl_app.c ****     lv_obj_align(THD_text, LV_ALIGN_TOP_RIGHT, -20, 140);
 1060              		.loc 1 193 5 view .LVU208
 1061 002a 8C23     		movs	r3, #140
 1062 002c 6FF01302 		mvn	r2, #19
 1063 0030 0321     		movs	r1, #3
 1064 0032 2068     		ldr	r0, [r4]
 1065 0034 FFF7FEFF 		bl	lv_obj_align
 1066              	.LVL113:
 194:Core/Src/lvgl_app.c **** }...
 1067              		.loc 1 194 1 is_stmt 0 view .LVU209
 1068 0038 10BD     		pop	{r4, pc}
 1069              	.L52:
 1070 003a 00BF     		.align	2
 1071              	.L51:
 1072 003c 00000000 		.word	.LANCHOR8
 1073 0040 00000000 		.word	.LC7
 1074              		.cfi_endproc
 1075              	.LFE197:
 1077              		.global	THD_text
 1078              		.global	distortion_mode
 1079              		.global	waveAutoFlg
 1080              		.global	waveStopFlg
 1081              		.global	wave_slider_y
 1082              		.global	wave_slider_x
 1083              		.global	wave_ser
 1084              		.global	wave_chart
 1085              		.global	label1
 1086              		.section	.rodata
 1087              		.align	2
 1088              		.set	.LANCHOR4,. + 0
 1089              	.LC0:
 1090 0000 4E6F2064 		.ascii	"No distortion\000"
 1090      6973746F 
 1090      7274696F 
 1090      6E00
 1091 000e 00000000 		.space	18
 1091      00000000 
 1091      00000000 
 1091      00000000 
 1091      0000
 1092 0020 546F7020 		.ascii	"Top distortion\000"
 1092      64697374 
ARM GAS  /tmp/ccQtaAHf.s 			page 38


 1092      6F727469 
 1092      6F6E00
 1093 002f 00000000 		.space	17
 1093      00000000 
 1093      00000000 
 1093      00000000 
 1093      00
 1094 0040 426F7474 		.ascii	"Bottom distortion\000"
 1094      6F6D2064 
 1094      6973746F 
 1094      7274696F 
 1094      6E00
 1095 0052 00000000 		.space	14
 1095      00000000 
 1095      00000000 
 1095      0000
 1096 0060 54776F2D 		.ascii	"Two-way distortion\000"
 1096      77617920 
 1096      64697374 
 1096      6F727469 
 1096      6F6E00
 1097 0073 00000000 		.space	13
 1097      00000000 
 1097      00000000 
 1097      00
 1098 0080 43726F73 		.ascii	"Crossover distortion\000"
 1098      736F7665 
 1098      72206469 
 1098      73746F72 
 1098      74696F6E 
 1099 0095 00000000 		.space	11
 1099      00000000 
 1099      000000
 1100              		.section	.bss.THD_text,"aw",%nobits
 1101              		.align	2
 1102              		.set	.LANCHOR8,. + 0
 1105              	THD_text:
 1106 0000 00000000 		.space	4
 1107              		.section	.bss.distortion_mode,"aw",%nobits
 1108              		.set	.LANCHOR5,. + 0
 1111              	distortion_mode:
 1112 0000 00       		.space	1
 1113              		.section	.bss.label1,"aw",%nobits
 1114              		.align	2
 1115              		.set	.LANCHOR6,. + 0
 1118              	label1:
 1119 0000 00000000 		.space	4
 1120              		.section	.bss.waveAutoFlg,"aw",%nobits
 1123              	waveAutoFlg:
 1124 0000 00       		.space	1
 1125              		.section	.bss.waveStopFlg,"aw",%nobits
 1126              		.set	.LANCHOR1,. + 0
 1129              	waveStopFlg:
 1130 0000 00       		.space	1
 1131              		.section	.bss.wave_chart,"aw",%nobits
 1132              		.align	2
 1133              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccQtaAHf.s 			page 39


 1136              	wave_chart:
 1137 0000 00000000 		.space	4
 1138              		.section	.bss.wave_ser,"aw",%nobits
 1139              		.align	2
 1140              		.set	.LANCHOR7,. + 0
 1143              	wave_ser:
 1144 0000 00000000 		.space	4
 1145              		.section	.bss.wave_slider_x,"aw",%nobits
 1146              		.align	2
 1147              		.set	.LANCHOR2,. + 0
 1150              	wave_slider_x:
 1151 0000 00000000 		.space	4
 1152              		.section	.bss.wave_slider_y,"aw",%nobits
 1153              		.align	2
 1154              		.set	.LANCHOR3,. + 0
 1157              	wave_slider_y:
 1158 0000 00000000 		.space	4
 1159              		.text
 1160              	.Letext0:
 1161              		.file 6 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1162              		.file 7 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1163              		.file 8 "Middlewares/lvgl/src/misc/lv_ll.h"
 1164              		.file 9 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 1165              		.file 10 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 1166              		.file 11 "Middlewares/lvgl/src/core/lv_obj.h"
 1167              		.file 12 "Middlewares/lvgl/src/core/lv_group.h"
 1168              		.file 13 "Middlewares/lvgl/src/core/../misc/lv_anim.h"
 1169              		.file 14 "Middlewares/lvgl/src/core/../misc/lv_txt.h"
 1170              		.file 15 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 1171              		.file 16 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 1172              		.file 17 "Middlewares/lvgl/src/core/lv_obj_class.h"
 1173              		.file 18 "Middlewares/lvgl/src/core/lv_event.h"
 1174              		.file 19 "Middlewares/lvgl/src/widgets/lv_label.h"
 1175              		.file 20 "Middlewares/lvgl/src/widgets/lv_bar.h"
 1176              		.file 21 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
 1177              		.file 22 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 1178              		.file 23 "Middlewares/lvgl/src/hal/lv_hal_disp.h"
 1179              		.file 24 "Middlewares/lvgl/src/core/lv_obj_style_gen.h"
 1180              		.file 25 "Middlewares/lvgl/src/widgets/lv_dropdown.h"
 1181              		.file 26 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/string.h"
 1182              		.file 27 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/stdio.h"
 1183              		.file 28 "Middlewares/lvgl/src/widgets/lv_btn.h"
 1184              		.file 29 "<built-in>"
ARM GAS  /tmp/ccQtaAHf.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lvgl_app.c
     /tmp/ccQtaAHf.s:18     .text.slider_y_event_cb:0000000000000000 $t
     /tmp/ccQtaAHf.s:25     .text.slider_y_event_cb:0000000000000000 slider_y_event_cb
     /tmp/ccQtaAHf.s:69     .text.slider_y_event_cb:0000000000000018 $d
     /tmp/ccQtaAHf.s:74     .text.slider_x_event_cb:0000000000000000 $t
     /tmp/ccQtaAHf.s:80     .text.slider_x_event_cb:0000000000000000 slider_x_event_cb
     /tmp/ccQtaAHf.s:122    .text.slider_x_event_cb:0000000000000018 $d
     /tmp/ccQtaAHf.s:127    .text.wave_draw_stop:0000000000000000 $t
     /tmp/ccQtaAHf.s:133    .text.wave_draw_stop:0000000000000000 wave_draw_stop
     /tmp/ccQtaAHf.s:182    .text.wave_draw_stop:0000000000000024 $d
     /tmp/ccQtaAHf.s:187    .rodata.wave_zoom_stop.str1.4:0000000000000000 $d
     /tmp/ccQtaAHf.s:191    .text.wave_zoom_stop:0000000000000000 $t
     /tmp/ccQtaAHf.s:197    .text.wave_zoom_stop:0000000000000000 wave_zoom_stop
     /tmp/ccQtaAHf.s:276    .text.wave_zoom_stop:0000000000000044 $d
     /tmp/ccQtaAHf.s:284    .rodata.distortion_handler.str1.4:0000000000000000 $d
     /tmp/ccQtaAHf.s:288    .text.distortion_handler:0000000000000000 $t
     /tmp/ccQtaAHf.s:294    .text.distortion_handler:0000000000000000 distortion_handler
     /tmp/ccQtaAHf.s:407    .text.distortion_handler:000000000000005c $d
     /tmp/ccQtaAHf.s:414    .rodata.counter_label.str1.4:0000000000000000 $d
     /tmp/ccQtaAHf.s:418    .text.counter_label:0000000000000000 $t
     /tmp/ccQtaAHf.s:425    .text.counter_label:0000000000000000 counter_label
     /tmp/ccQtaAHf.s:493    .text.counter_label:000000000000004c $d
     /tmp/ccQtaAHf.s:499    .text.wave_chart_init:0000000000000000 $t
     /tmp/ccQtaAHf.s:506    .text.wave_chart_init:0000000000000000 wave_chart_init
     /tmp/ccQtaAHf.s:751    .text.wave_chart_init:0000000000000138 $d
     /tmp/ccQtaAHf.s:761    .rodata.wave_btn.str1.4:0000000000000000 $d
     /tmp/ccQtaAHf.s:768    .text.wave_btn:0000000000000000 $t
     /tmp/ccQtaAHf.s:775    .text.wave_btn:0000000000000000 wave_btn
     /tmp/ccQtaAHf.s:919    .text.wave_btn:0000000000000098 $d
     /tmp/ccQtaAHf.s:927    .rodata.distortion_list.str1.4:0000000000000000 $d
     /tmp/ccQtaAHf.s:932    .text.distortion_list:0000000000000000 $t
     /tmp/ccQtaAHf.s:939    .text.distortion_list:0000000000000000 distortion_list
     /tmp/ccQtaAHf.s:998    .text.distortion_list:000000000000003c $d
     /tmp/ccQtaAHf.s:1004   .rodata.THD_label.str1.4:0000000000000000 $d
     /tmp/ccQtaAHf.s:1008   .text.THD_label:0000000000000000 $t
     /tmp/ccQtaAHf.s:1015   .text.THD_label:0000000000000000 THD_label
     /tmp/ccQtaAHf.s:1072   .text.THD_label:000000000000003c $d
     /tmp/ccQtaAHf.s:1105   .bss.THD_text:0000000000000000 THD_text
     /tmp/ccQtaAHf.s:1111   .bss.distortion_mode:0000000000000000 distortion_mode
     /tmp/ccQtaAHf.s:1123   .bss.waveAutoFlg:0000000000000000 waveAutoFlg
     /tmp/ccQtaAHf.s:1129   .bss.waveStopFlg:0000000000000000 waveStopFlg
     /tmp/ccQtaAHf.s:1157   .bss.wave_slider_y:0000000000000000 wave_slider_y
     /tmp/ccQtaAHf.s:1150   .bss.wave_slider_x:0000000000000000 wave_slider_x
     /tmp/ccQtaAHf.s:1143   .bss.wave_ser:0000000000000000 wave_ser
     /tmp/ccQtaAHf.s:1136   .bss.wave_chart:0000000000000000 wave_chart
     /tmp/ccQtaAHf.s:1118   .bss.label1:0000000000000000 label1
     /tmp/ccQtaAHf.s:1087   .rodata:0000000000000000 $d
     /tmp/ccQtaAHf.s:1101   .bss.THD_text:0000000000000000 $d
     /tmp/ccQtaAHf.s:1112   .bss.distortion_mode:0000000000000000 $d
     /tmp/ccQtaAHf.s:1114   .bss.label1:0000000000000000 $d
     /tmp/ccQtaAHf.s:1124   .bss.waveAutoFlg:0000000000000000 $d
     /tmp/ccQtaAHf.s:1130   .bss.waveStopFlg:0000000000000000 $d
     /tmp/ccQtaAHf.s:1132   .bss.wave_chart:0000000000000000 $d
     /tmp/ccQtaAHf.s:1139   .bss.wave_ser:0000000000000000 $d
     /tmp/ccQtaAHf.s:1146   .bss.wave_slider_x:0000000000000000 $d
     /tmp/ccQtaAHf.s:1153   .bss.wave_slider_y:0000000000000000 $d
ARM GAS  /tmp/ccQtaAHf.s 			page 41



UNDEFINED SYMBOLS
lv_event_get_target
lv_bar_get_value
lv_chart_set_zoom_y
lv_chart_set_zoom_x
lv_event_get_code
puts
lv_bar_set_value
lv_dropdown_get_selected_str
memcpy
strstr
printf
lv_disp_get_default
lv_disp_get_scr_act
lv_label_create
lv_label_set_long_mode
lv_label_set_recolor
lv_label_set_text
lv_obj_set_width
lv_obj_set_style_text_align
lv_obj_align
lv_chart_create
lv_obj_set_size
lv_chart_set_range
lv_chart_set_axis_tick
lv_obj_set_style_width
lv_obj_set_style_height
lv_palette_main
lv_chart_add_series
lv_slider_create
lv_bar_set_range
lv_obj_add_event_cb
lv_obj_align_to
lv_btn_create
lv_obj_add_flag
lv_obj_set_height
lv_dropdown_create
lv_dropdown_set_options
