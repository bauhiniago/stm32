ARM GAS  /tmp/ccN5Htkb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lvgl_app.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.slider_y_event_cb,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	slider_y_event_cb:
  26              	.LVL0:
  27              	.LFB189:
  28              		.file 1 "Core/Src/lvgl_app.c"
   1:Core/Src/lvgl_app.c **** #include "lvgl_app.h"
   2:Core/Src/lvgl_app.c **** #include <stdio.h>
   3:Core/Src/lvgl_app.c **** 
   4:Core/Src/lvgl_app.c **** 
   5:Core/Src/lvgl_app.c **** lv_obj_t * label1;
   6:Core/Src/lvgl_app.c **** void counter_label(void)
   7:Core/Src/lvgl_app.c **** {
   8:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
   9:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
  10:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
  11:Core/Src/lvgl_app.c ****     
  12:Core/Src/lvgl_app.c ****     lv_label_set_text(label1, "counter");
  13:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
  14:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
  15:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
  16:Core/Src/lvgl_app.c **** 
  17:Core/Src/lvgl_app.c **** 
  18:Core/Src/lvgl_app.c ****     // lv_obj_t * label2 = lv_label_create(lv_scr_act());
  19:Core/Src/lvgl_app.c ****     // lv_label_set_long_mode(label2, LV_LABEL_LONG_SCROLL_CIRCULAR);     /*Circular scroll*/
  20:Core/Src/lvgl_app.c ****     // lv_obj_set_width(label2, 150);
  21:Core/Src/lvgl_app.c ****     // lv_label_set_text(label2, "It is a circularly scrolling text.");
  22:Core/Src/lvgl_app.c ****     // lv_obj_align(label2, LV_ALIGN_CENTER, 0, 40);
  23:Core/Src/lvgl_app.c **** }
  24:Core/Src/lvgl_app.c **** 
  25:Core/Src/lvgl_app.c **** lv_obj_t * wave_chart;
  26:Core/Src/lvgl_app.c **** lv_chart_series_t * wave_ser ;
  27:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_x;
  28:Core/Src/lvgl_app.c **** lv_obj_t * wave_slider_y;
  29:Core/Src/lvgl_app.c **** static void slider_x_event_cb(lv_event_t * e)
  30:Core/Src/lvgl_app.c **** {
ARM GAS  /tmp/ccN5Htkb.s 			page 2


  31:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  32:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  33:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  34:Core/Src/lvgl_app.c **** }
  35:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
  36:Core/Src/lvgl_app.c **** {
  29              		.loc 1 36 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 36 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  37:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  39              		.loc 1 37 5 is_stmt 1 view .LVU2
  40              		.loc 1 37 22 is_stmt 0 view .LVU3
  41 0002 FFF7FEFF 		bl	lv_event_get_target
  42              	.LVL1:
  38:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  43              		.loc 1 38 5 is_stmt 1 view .LVU4
  44              	.LBB18:
  45              	.LBI18:
  46              		.file 2 "Middlewares/lvgl/src/widgets/lv_slider.h"
   1:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
   2:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:Middlewares/lvgl/src/widgets/lv_slider.h ****  *
   4:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
   5:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   6:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:Middlewares/lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   9:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  12:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  13:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  14:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  16:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  18:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  20:Middlewares/lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:Middlewares/lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  24:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  25:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  28:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  29:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  31:Middlewares/lvgl/src/widgets/lv_slider.h **** 
ARM GAS  /tmp/ccN5Htkb.s 			page 3


  32:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  33:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  35:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  36:Middlewares/lvgl/src/widgets/lv_slider.h **** enum {
  37:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:Middlewares/lvgl/src/widgets/lv_slider.h **** };
  41:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  43:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:Middlewares/lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:Middlewares/lvgl/src/widgets/lv_slider.h **** }lv_slider_t;
  51:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  52:Middlewares/lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  54:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  55:Middlewares/lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  56:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  57:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  58:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  59:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Create a slider objects
  60:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  61:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  62:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  63:Middlewares/lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  64:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  65:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
  66:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Setter functions
  67:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
  68:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  69:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  70:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  71:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  72:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  73:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  74:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  76:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  77:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  78:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  79:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  80:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  81:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  82:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  83:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  84:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  85:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  86:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  87:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  88:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
ARM GAS  /tmp/ccN5Htkb.s 			page 4


  89:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  90:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  91:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  92:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
  93:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
  94:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
  95:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
  96:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
  98:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  99:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 100:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 101:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 102:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 103:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 104:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 105:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 106:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 107:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 108:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 109:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 110:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 111:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 112:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
 113:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Getter functions
 114:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
 115:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 116:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 117:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 118:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 119:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 120:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  47              		.loc 2 121 23 view .LVU5
  48              	.LBB19:
 122:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 123:Middlewares/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
  49              		.loc 2 123 5 view .LVU6
  50              		.loc 2 123 12 is_stmt 0 view .LVU7
  51 0006 FFF7FEFF 		bl	lv_bar_get_value
  52              	.LVL2:
  53              		.loc 2 123 12 view .LVU8
  54              	.LBE19:
  55              	.LBE18:
  39:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_y(wave_chart, v);
  56              		.loc 1 39 5 is_stmt 1 view .LVU9
  57 000a 81B2     		uxth	r1, r0
  58 000c 024B     		ldr	r3, .L3
  59 000e 1868     		ldr	r0, [r3]
  60              	.LVL3:
  61              		.loc 1 39 5 is_stmt 0 view .LVU10
  62 0010 FFF7FEFF 		bl	lv_chart_set_zoom_y
  63              	.LVL4:
  40:Core/Src/lvgl_app.c **** }
  64              		.loc 1 40 1 view .LVU11
  65 0014 08BD     		pop	{r3, pc}
  66              	.L4:
ARM GAS  /tmp/ccN5Htkb.s 			page 5


  67 0016 00BF     		.align	2
  68              	.L3:
  69 0018 00000000 		.word	.LANCHOR0
  70              		.cfi_endproc
  71              	.LFE189:
  73              		.section	.text.slider_x_event_cb,"ax",%progbits
  74              		.align	1
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	slider_x_event_cb:
  81              	.LVL5:
  82              	.LFB188:
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  83              		.loc 1 30 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  30:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  87              		.loc 1 30 1 is_stmt 0 view .LVU13
  88 0000 08B5     		push	{r3, lr}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  93              		.loc 1 31 5 is_stmt 1 view .LVU14
  31:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  94              		.loc 1 31 22 is_stmt 0 view .LVU15
  95 0002 FFF7FEFF 		bl	lv_event_get_target
  96              	.LVL6:
  32:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  97              		.loc 1 32 5 is_stmt 1 view .LVU16
  98              	.LBB20:
  99              	.LBI20:
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 100              		.loc 2 121 23 view .LVU17
 101              	.LBB21:
 102              		.loc 2 123 5 view .LVU18
 103              		.loc 2 123 12 is_stmt 0 view .LVU19
 104 0006 FFF7FEFF 		bl	lv_bar_get_value
 105              	.LVL7:
 106              		.loc 2 123 12 view .LVU20
 107              	.LBE21:
 108              	.LBE20:
  33:Core/Src/lvgl_app.c **** }
 109              		.loc 1 33 5 is_stmt 1 view .LVU21
 110 000a 81B2     		uxth	r1, r0
 111 000c 024B     		ldr	r3, .L7
 112 000e 1868     		ldr	r0, [r3]
 113              	.LVL8:
  33:Core/Src/lvgl_app.c **** }
 114              		.loc 1 33 5 is_stmt 0 view .LVU22
 115 0010 FFF7FEFF 		bl	lv_chart_set_zoom_x
 116              	.LVL9:
  34:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
ARM GAS  /tmp/ccN5Htkb.s 			page 6


 117              		.loc 1 34 1 view .LVU23
 118 0014 08BD     		pop	{r3, pc}
 119              	.L8:
 120 0016 00BF     		.align	2
 121              	.L7:
 122 0018 00000000 		.word	.LANCHOR0
 123              		.cfi_endproc
 124              	.LFE188:
 126              		.section	.rodata.wave_draw_stop.str1.4,"aMS",%progbits,1
 127              		.align	2
 128              	.LC0:
 129 0000 53544F50 		.ascii	"STOP/RUN\015\000"
 129      2F52554E 
 129      0D00
 130              		.section	.text.wave_draw_stop,"ax",%progbits
 131              		.align	1
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	wave_draw_stop:
 138              	.LVL10:
 139              	.LFB191:
  41:Core/Src/lvgl_app.c **** void wave_chart_init(void)
  42:Core/Src/lvgl_app.c **** {
  43:Core/Src/lvgl_app.c ****     /*Create a chart*/
  44:Core/Src/lvgl_app.c ****     wave_chart = lv_chart_create(lv_scr_act());
  45:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
  46:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 3300);
  48:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 380);
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
  50:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
  51:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
  52:Core/Src/lvgl_app.c ****     lv_obj_set_style_size(wave_chart, 0, LV_PART_INDICATOR);
  53:Core/Src/lvgl_app.c **** 
  54:Core/Src/lvgl_app.c **** 
  55:Core/Src/lvgl_app.c ****     wave_ser = lv_chart_add_series(wave_chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_AXIS_PRIMA
  56:Core/Src/lvgl_app.c **** 
  57:Core/Src/lvgl_app.c ****     // uint32_t pcnt = sizeof(ecg_sample) / sizeof(ecg_sample[0]);
  58:Core/Src/lvgl_app.c ****     // lv_chart_set_point_count(chart, pcnt);
  59:Core/Src/lvgl_app.c ****     // lv_chart_set_ext_y_array(chart, ser, (lv_coord_t *)ecg_sample);
  60:Core/Src/lvgl_app.c **** 
  61:Core/Src/lvgl_app.c ****     
  62:Core/Src/lvgl_app.c ****     wave_slider_x = lv_slider_create(lv_scr_act());
  63:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  64:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  65:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 380, 10);
  66:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
  67:Core/Src/lvgl_app.c **** 
  68:Core/Src/lvgl_app.c ****     wave_slider_y = lv_slider_create(lv_scr_act());
  69:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  70:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  71:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 290);
  72:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 20, 0);
  73:Core/Src/lvgl_app.c **** }
  74:Core/Src/lvgl_app.c **** 
ARM GAS  /tmp/ccN5Htkb.s 			page 7


  75:Core/Src/lvgl_app.c **** uint8_t waveStopFlg=0;
  76:Core/Src/lvgl_app.c **** static void wave_draw_stop(lv_event_t * e)
  77:Core/Src/lvgl_app.c **** {
 140              		.loc 1 77 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 77 1 is_stmt 0 view .LVU25
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
  78:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 150              		.loc 1 78 5 is_stmt 1 view .LVU26
 151              		.loc 1 78 28 is_stmt 0 view .LVU27
 152 0002 FFF7FEFF 		bl	lv_event_get_code
 153              	.LVL11:
  79:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_VALUE_CHANGED){
 154              		.loc 1 79 5 is_stmt 1 view .LVU28
 155              		.loc 1 79 7 is_stmt 0 view .LVU29
 156 0006 1C28     		cmp	r0, #28
 157 0008 00D0     		beq	.L13
 158              	.LVL12:
 159              	.L9:
  80:Core/Src/lvgl_app.c ****         printf("STOP/RUN\r\n");
  81:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
  82:Core/Src/lvgl_app.c ****             waveStopFlg=0;
  83:Core/Src/lvgl_app.c ****         }else{
  84:Core/Src/lvgl_app.c ****             waveStopFlg=1;
  85:Core/Src/lvgl_app.c ****         }
  86:Core/Src/lvgl_app.c ****     }
  87:Core/Src/lvgl_app.c **** }
 160              		.loc 1 87 1 view .LVU30
 161 000a 08BD     		pop	{r3, pc}
 162              	.LVL13:
 163              	.L13:
  80:Core/Src/lvgl_app.c ****         printf("STOP/RUN\r\n");
 164              		.loc 1 80 9 is_stmt 1 view .LVU31
 165 000c 0748     		ldr	r0, .L15
 166              	.LVL14:
  80:Core/Src/lvgl_app.c ****         printf("STOP/RUN\r\n");
 167              		.loc 1 80 9 is_stmt 0 view .LVU32
 168 000e FFF7FEFF 		bl	puts
 169              	.LVL15:
  81:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 170              		.loc 1 81 9 is_stmt 1 view .LVU33
  81:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 171              		.loc 1 81 23 is_stmt 0 view .LVU34
 172 0012 074B     		ldr	r3, .L15+4
 173 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  81:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 174              		.loc 1 81 11 view .LVU35
 175 0016 012B     		cmp	r3, #1
 176 0018 03D0     		beq	.L14
  84:Core/Src/lvgl_app.c ****         }
 177              		.loc 1 84 13 is_stmt 1 view .LVU36
ARM GAS  /tmp/ccN5Htkb.s 			page 8


  84:Core/Src/lvgl_app.c ****         }
 178              		.loc 1 84 24 is_stmt 0 view .LVU37
 179 001a 054B     		ldr	r3, .L15+4
 180 001c 0122     		movs	r2, #1
 181 001e 1A70     		strb	r2, [r3]
 182              		.loc 1 87 1 view .LVU38
 183 0020 F3E7     		b	.L9
 184              	.L14:
  82:Core/Src/lvgl_app.c ****         }else{
 185              		.loc 1 82 13 is_stmt 1 view .LVU39
  82:Core/Src/lvgl_app.c ****         }else{
 186              		.loc 1 82 24 is_stmt 0 view .LVU40
 187 0022 034B     		ldr	r3, .L15+4
 188 0024 0022     		movs	r2, #0
 189 0026 1A70     		strb	r2, [r3]
 190 0028 EFE7     		b	.L9
 191              	.L16:
 192 002a 00BF     		.align	2
 193              	.L15:
 194 002c 00000000 		.word	.LC0
 195 0030 00000000 		.word	.LANCHOR1
 196              		.cfi_endproc
 197              	.LFE191:
 199              		.section	.rodata.wave_zoom_stop.str1.4,"aMS",%progbits,1
 200              		.align	2
 201              	.LC1:
 202 0000 52455345 		.ascii	"RESET\015\000"
 202      540D00
 203              		.section	.text.wave_zoom_stop,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	wave_zoom_stop:
 211              	.LVL16:
 212              	.LFB192:
  88:Core/Src/lvgl_app.c **** static void wave_zoom_stop(lv_event_t * e)
  89:Core/Src/lvgl_app.c **** {
 213              		.loc 1 89 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		.loc 1 89 1 is_stmt 0 view .LVU42
 218 0000 10B5     		push	{r4, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
  90:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 223              		.loc 1 90 5 is_stmt 1 view .LVU43
 224              		.loc 1 90 28 is_stmt 0 view .LVU44
 225 0002 FFF7FEFF 		bl	lv_event_get_code
 226              	.LVL17:
  91:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED){
 227              		.loc 1 91 5 is_stmt 1 view .LVU45
 228              		.loc 1 91 7 is_stmt 0 view .LVU46
ARM GAS  /tmp/ccN5Htkb.s 			page 9


 229 0006 0728     		cmp	r0, #7
 230 0008 00D0     		beq	.L20
 231              	.LVL18:
 232              	.L17:
  92:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
  93:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_x, 0, LV_ANIM_ON);
  94:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
  95:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
  96:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
  97:Core/Src/lvgl_app.c ****     }
  98:Core/Src/lvgl_app.c **** }
 233              		.loc 1 98 1 view .LVU47
 234 000a 10BD     		pop	{r4, pc}
 235              	.LVL19:
 236              	.L20:
  92:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 237              		.loc 1 92 9 is_stmt 1 view .LVU48
 238 000c 0D48     		ldr	r0, .L21
 239              	.LVL20:
  92:Core/Src/lvgl_app.c ****         printf("RESET\r\n");
 240              		.loc 1 92 9 is_stmt 0 view .LVU49
 241 000e FFF7FEFF 		bl	puts
 242              	.LVL21:
  93:Core/Src/lvgl_app.c ****         lv_slider_set_value(wave_slider_y, 0, LV_ANIM_ON);
 243              		.loc 1 93 9 is_stmt 1 view .LVU50
 244              	.LBB22:
 245              	.LBI22:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 246              		.loc 2 75 20 view .LVU51
 247              	.LBB23:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 248              		.loc 2 77 5 view .LVU52
 249 0012 0122     		movs	r2, #1
 250 0014 0021     		movs	r1, #0
 251 0016 0C4B     		ldr	r3, .L21+4
 252 0018 1868     		ldr	r0, [r3]
 253 001a FFF7FEFF 		bl	lv_bar_set_value
 254              	.LVL22:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 255              		.loc 2 77 5 is_stmt 0 view .LVU53
 256              	.LBE23:
 257              	.LBE22:
  94:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_x(wave_chart,  256);
 258              		.loc 1 94 9 is_stmt 1 view .LVU54
 259              	.LBB24:
 260              	.LBI24:
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 261              		.loc 2 75 20 view .LVU55
 262              	.LBB25:
  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 263              		.loc 2 77 5 view .LVU56
 264 001e 0122     		movs	r2, #1
 265 0020 0021     		movs	r1, #0
 266 0022 0A4B     		ldr	r3, .L21+8
 267 0024 1868     		ldr	r0, [r3]
 268 0026 FFF7FEFF 		bl	lv_bar_set_value
 269              	.LVL23:
ARM GAS  /tmp/ccN5Htkb.s 			page 10


  77:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 270              		.loc 2 77 5 is_stmt 0 view .LVU57
 271              	.LBE25:
 272              	.LBE24:
  95:Core/Src/lvgl_app.c ****         lv_chart_set_zoom_y(wave_chart, 256);
 273              		.loc 1 95 9 is_stmt 1 view .LVU58
 274 002a 094C     		ldr	r4, .L21+12
 275 002c 4FF48071 		mov	r1, #256
 276 0030 2068     		ldr	r0, [r4]
 277 0032 FFF7FEFF 		bl	lv_chart_set_zoom_x
 278              	.LVL24:
  96:Core/Src/lvgl_app.c ****     }
 279              		.loc 1 96 9 view .LVU59
 280 0036 4FF48071 		mov	r1, #256
 281 003a 2068     		ldr	r0, [r4]
 282 003c FFF7FEFF 		bl	lv_chart_set_zoom_y
 283              	.LVL25:
 284              		.loc 1 98 1 is_stmt 0 view .LVU60
 285 0040 E3E7     		b	.L17
 286              	.L22:
 287 0042 00BF     		.align	2
 288              	.L21:
 289 0044 00000000 		.word	.LC1
 290 0048 00000000 		.word	.LANCHOR2
 291 004c 00000000 		.word	.LANCHOR3
 292 0050 00000000 		.word	.LANCHOR0
 293              		.cfi_endproc
 294              	.LFE192:
 296              		.section	.rodata.counter_label.str1.4,"aMS",%progbits,1
 297              		.align	2
 298              	.LC2:
 299 0000 636F756E 		.ascii	"counter\000"
 299      74657200 
 300              		.section	.text.counter_label,"ax",%progbits
 301              		.align	1
 302              		.global	counter_label
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	counter_label:
 309              	.LFB187:
   7:Core/Src/lvgl_app.c ****     label1 = lv_label_create(lv_scr_act());
 310              		.loc 1 7 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 10B5     		push	{r4, lr}
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 4, -8
 318              		.cfi_offset 14, -4
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 319              		.loc 1 8 5 view .LVU62
 320              	.LBB28:
 321              	.LBI28:
 322              		.file 3 "Middlewares/lvgl/src/core/lv_disp.h"
ARM GAS  /tmp/ccN5Htkb.s 			page 11


   1:Middlewares/lvgl/src/core/lv_disp.h **** /**
   2:Middlewares/lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:Middlewares/lvgl/src/core/lv_disp.h ****  *
   4:Middlewares/lvgl/src/core/lv_disp.h ****  */
   5:Middlewares/lvgl/src/core/lv_disp.h **** 
   6:Middlewares/lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:Middlewares/lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:Middlewares/lvgl/src/core/lv_disp.h **** 
   9:Middlewares/lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_disp.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_disp.h **** #endif
  12:Middlewares/lvgl/src/core/lv_disp.h **** 
  13:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:Middlewares/lvgl/src/core/lv_disp.h **** 
  20:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_disp.h **** 
  24:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_disp.h **** 
  28:Middlewares/lvgl/src/core/lv_disp.h **** typedef enum {
  29:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:Middlewares/lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:Middlewares/lvgl/src/core/lv_disp.h **** 
  41:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  42:Middlewares/lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  44:Middlewares/lvgl/src/core/lv_disp.h **** 
  45:Middlewares/lvgl/src/core/lv_disp.h **** /**
  46:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  49:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:Middlewares/lvgl/src/core/lv_disp.h ****  */
  51:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:Middlewares/lvgl/src/core/lv_disp.h **** 
  53:Middlewares/lvgl/src/core/lv_disp.h **** /**
  54:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  57:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
ARM GAS  /tmp/ccN5Htkb.s 			page 12


  58:Middlewares/lvgl/src/core/lv_disp.h ****  */
  59:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:Middlewares/lvgl/src/core/lv_disp.h **** 
  61:Middlewares/lvgl/src/core/lv_disp.h **** /**
  62:Middlewares/lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:Middlewares/lvgl/src/core/lv_disp.h ****  */
  65:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:Middlewares/lvgl/src/core/lv_disp.h **** 
  67:Middlewares/lvgl/src/core/lv_disp.h **** /**
  68:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:Middlewares/lvgl/src/core/lv_disp.h ****  */
  72:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:Middlewares/lvgl/src/core/lv_disp.h **** 
  74:Middlewares/lvgl/src/core/lv_disp.h **** /**
  75:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:Middlewares/lvgl/src/core/lv_disp.h ****  * layer)
  77:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:Middlewares/lvgl/src/core/lv_disp.h ****  */
  80:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:Middlewares/lvgl/src/core/lv_disp.h **** 
  82:Middlewares/lvgl/src/core/lv_disp.h **** /**
  83:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  84:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  85:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:Middlewares/lvgl/src/core/lv_disp.h ****  */
  87:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:Middlewares/lvgl/src/core/lv_disp.h **** 
  89:Middlewares/lvgl/src/core/lv_disp.h **** /**
  90:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  91:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  92:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:Middlewares/lvgl/src/core/lv_disp.h ****  */
  94:Middlewares/lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:Middlewares/lvgl/src/core/lv_disp.h **** 
  96:Middlewares/lvgl/src/core/lv_disp.h **** /**
  97:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  98:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  99:Middlewares/lvgl/src/core/lv_disp.h ****  * @param color color of the background
 100:Middlewares/lvgl/src/core/lv_disp.h ****  */
 101:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:Middlewares/lvgl/src/core/lv_disp.h **** 
 103:Middlewares/lvgl/src/core/lv_disp.h **** /**
 104:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 105:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 106:Middlewares/lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:Middlewares/lvgl/src/core/lv_disp.h ****  */
 108:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 109:Middlewares/lvgl/src/core/lv_disp.h **** 
 110:Middlewares/lvgl/src/core/lv_disp.h **** /**
 111:Middlewares/lvgl/src/core/lv_disp.h ****  * Opacity of the background
 112:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 113:Middlewares/lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:Middlewares/lvgl/src/core/lv_disp.h ****  */
ARM GAS  /tmp/ccN5Htkb.s 			page 13


 115:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:Middlewares/lvgl/src/core/lv_disp.h **** 
 117:Middlewares/lvgl/src/core/lv_disp.h **** /**
 118:Middlewares/lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 119:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:Middlewares/lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:Middlewares/lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 122:Middlewares/lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 123:Middlewares/lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:Middlewares/lvgl/src/core/lv_disp.h ****  */
 125:Middlewares/lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:Middlewares/lvgl/src/core/lv_disp.h **** 
 127:Middlewares/lvgl/src/core/lv_disp.h **** /**
 128:Middlewares/lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:Middlewares/lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:Middlewares/lvgl/src/core/lv_disp.h ****  */
 132:Middlewares/lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:Middlewares/lvgl/src/core/lv_disp.h **** 
 134:Middlewares/lvgl/src/core/lv_disp.h **** /**
 135:Middlewares/lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:Middlewares/lvgl/src/core/lv_disp.h ****  */
 138:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:Middlewares/lvgl/src/core/lv_disp.h **** 
 140:Middlewares/lvgl/src/core/lv_disp.h **** /**
 141:Middlewares/lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:Middlewares/lvgl/src/core/lv_disp.h ****  */
 144:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:Middlewares/lvgl/src/core/lv_disp.h **** 
 146:Middlewares/lvgl/src/core/lv_disp.h **** /**
 147:Middlewares/lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:Middlewares/lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 150:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:Middlewares/lvgl/src/core/lv_disp.h ****  */
 152:Middlewares/lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:Middlewares/lvgl/src/core/lv_disp.h **** 
 154:Middlewares/lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 155:Middlewares/lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 156:Middlewares/lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 157:Middlewares/lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 158:Middlewares/lvgl/src/core/lv_disp.h **** 
 159:Middlewares/lvgl/src/core/lv_disp.h **** /**
 160:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 161:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 162:Middlewares/lvgl/src/core/lv_disp.h ****  */
 163:Middlewares/lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 323              		.loc 3 163 26 view .LVU63
 324              	.LBB29:
 164:Middlewares/lvgl/src/core/lv_disp.h **** {
 165:Middlewares/lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 325              		.loc 3 165 5 view .LVU64
 326              		.loc 3 165 12 is_stmt 0 view .LVU65
 327 0002 FFF7FEFF 		bl	lv_disp_get_default
 328              	.LVL26:
ARM GAS  /tmp/ccN5Htkb.s 			page 14


 329 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 330              	.LVL27:
 331              	.LBE29:
 332              	.LBE28:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 333              		.loc 1 8 14 view .LVU66
 334 000a FFF7FEFF 		bl	lv_label_create
 335              	.LVL28:
   8:Core/Src/lvgl_app.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
 336              		.loc 1 8 12 view .LVU67
 337 000e 0F4C     		ldr	r4, .L25
 338 0010 2060     		str	r0, [r4]
   9:Core/Src/lvgl_app.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
 339              		.loc 1 9 5 is_stmt 1 view .LVU68
 340 0012 0021     		movs	r1, #0
 341 0014 FFF7FEFF 		bl	lv_label_set_long_mode
 342              	.LVL29:
  10:Core/Src/lvgl_app.c ****     
 343              		.loc 1 10 5 view .LVU69
 344 0018 0121     		movs	r1, #1
 345 001a 2068     		ldr	r0, [r4]
 346 001c FFF7FEFF 		bl	lv_label_set_recolor
 347              	.LVL30:
  12:Core/Src/lvgl_app.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
 348              		.loc 1 12 5 view .LVU70
 349 0020 0B49     		ldr	r1, .L25+4
 350 0022 2068     		ldr	r0, [r4]
 351 0024 FFF7FEFF 		bl	lv_label_set_text
 352              	.LVL31:
  13:Core/Src/lvgl_app.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
 353              		.loc 1 13 5 view .LVU71
 354 0028 9621     		movs	r1, #150
 355 002a 2068     		ldr	r0, [r4]
 356 002c FFF7FEFF 		bl	lv_obj_set_width
 357              	.LVL32:
  14:Core/Src/lvgl_app.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
 358              		.loc 1 14 5 view .LVU72
 359 0030 0022     		movs	r2, #0
 360 0032 0221     		movs	r1, #2
 361 0034 2068     		ldr	r0, [r4]
 362 0036 FFF7FEFF 		bl	lv_obj_set_style_text_align
 363              	.LVL33:
  15:Core/Src/lvgl_app.c **** 
 364              		.loc 1 15 5 view .LVU73
 365 003a 6FF02703 		mvn	r3, #39
 366 003e 0022     		movs	r2, #0
 367 0040 0921     		movs	r1, #9
 368 0042 2068     		ldr	r0, [r4]
 369 0044 FFF7FEFF 		bl	lv_obj_align
 370              	.LVL34:
  23:Core/Src/lvgl_app.c **** 
 371              		.loc 1 23 1 is_stmt 0 view .LVU74
 372 0048 10BD     		pop	{r4, pc}
 373              	.L26:
 374 004a 00BF     		.align	2
 375              	.L25:
 376 004c 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccN5Htkb.s 			page 15


 377 0050 00000000 		.word	.LC2
 378              		.cfi_endproc
 379              	.LFE187:
 381              		.section	.text.wave_chart_init,"ax",%progbits
 382              		.align	1
 383              		.global	wave_chart_init
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	wave_chart_init:
 390              	.LFB190:
  42:Core/Src/lvgl_app.c ****     /*Create a chart*/
 391              		.loc 1 42 1 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 396              	.LCFI5:
 397              		.cfi_def_cfa_offset 20
 398              		.cfi_offset 4, -20
 399              		.cfi_offset 5, -16
 400              		.cfi_offset 6, -12
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 85B0     		sub	sp, sp, #20
 404              	.LCFI6:
 405              		.cfi_def_cfa_offset 40
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
 406              		.loc 1 44 5 view .LVU76
 407              	.LBB42:
 408              	.LBI42:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 409              		.loc 3 163 26 view .LVU77
 410              	.LBB43:
 411              		.loc 3 165 5 view .LVU78
 412              		.loc 3 165 12 is_stmt 0 view .LVU79
 413 0004 FFF7FEFF 		bl	lv_disp_get_default
 414              	.LVL35:
 415 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 416              	.LVL36:
 417              	.LBE43:
 418              	.LBE42:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
 419              		.loc 1 44 18 view .LVU80
 420 000c FFF7FEFF 		bl	lv_chart_create
 421              	.LVL37:
  44:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 380, 330);
 422              		.loc 1 44 16 view .LVU81
 423 0010 494C     		ldr	r4, .L29
 424 0012 2060     		str	r0, [r4]
  45:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
 425              		.loc 1 45 5 is_stmt 1 view .LVU82
 426 0014 4FF4A572 		mov	r2, #330
 427 0018 4FF4BE71 		mov	r1, #380
 428 001c FFF7FEFF 		bl	lv_obj_set_size
 429              	.LVL38:
ARM GAS  /tmp/ccN5Htkb.s 			page 16


  46:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 3300);
 430              		.loc 1 46 5 view .LVU83
 431 0020 0023     		movs	r3, #0
 432 0022 3222     		movs	r2, #50
 433 0024 0121     		movs	r1, #1
 434 0026 2068     		ldr	r0, [r4]
 435 0028 FFF7FEFF 		bl	lv_obj_align
 436              	.LVL39:
  47:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 380);
 437              		.loc 1 47 5 view .LVU84
 438 002c 40F6E443 		movw	r3, #3300
 439 0030 0022     		movs	r2, #0
 440 0032 1146     		mov	r1, r2
 441 0034 2068     		ldr	r0, [r4]
 442 0036 FFF7FEFF 		bl	lv_chart_set_range
 443              	.LVL40:
  48:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
 444              		.loc 1 48 5 view .LVU85
 445 003a 4FF4BE73 		mov	r3, #380
 446 003e 0022     		movs	r2, #0
 447 0040 0221     		movs	r1, #2
 448 0042 2068     		ldr	r0, [r4]
 449 0044 FFF7FEFF 		bl	lv_chart_set_range
 450              	.LVL41:
  49:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
 451              		.loc 1 49 5 view .LVU86
 452 0048 1426     		movs	r6, #20
 453 004a 0396     		str	r6, [sp, #12]
 454 004c 0127     		movs	r7, #1
 455 004e 0297     		str	r7, [sp, #8]
 456 0050 0197     		str	r7, [sp, #4]
 457 0052 0525     		movs	r5, #5
 458 0054 0095     		str	r5, [sp]
 459 0056 2B46     		mov	r3, r5
 460 0058 2A46     		mov	r2, r5
 461 005a 0221     		movs	r1, #2
 462 005c 2068     		ldr	r0, [r4]
 463 005e FFF7FEFF 		bl	lv_chart_set_axis_tick
 464              	.LVL42:
  50:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
 465              		.loc 1 50 5 view .LVU87
 466 0062 3C23     		movs	r3, #60
 467 0064 0393     		str	r3, [sp, #12]
 468 0066 0297     		str	r7, [sp, #8]
 469 0068 0195     		str	r5, [sp, #4]
 470 006a 0623     		movs	r3, #6
 471 006c 0093     		str	r3, [sp]
 472 006e 2B46     		mov	r3, r5
 473 0070 0A22     		movs	r2, #10
 474 0072 0021     		movs	r1, #0
 475 0074 2068     		ldr	r0, [r4]
 476 0076 FFF7FEFF 		bl	lv_chart_set_axis_tick
 477              	.LVL43:
  52:Core/Src/lvgl_app.c **** 
 478              		.loc 1 52 5 view .LVU88
 479 007a 2568     		ldr	r5, [r4]
 480              	.LVL44:
ARM GAS  /tmp/ccN5Htkb.s 			page 17


 481              	.LBB44:
 482              	.LBI44:
 483              		.file 4 "Middlewares/lvgl/src/core/lv_obj_style.h"
   1:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:Middlewares/lvgl/src/core/lv_obj_style.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:Middlewares/lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  20:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  24:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:Middlewares/lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  30:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef enum {
  31:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:Middlewares/lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  39:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t selector :24;
  42:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_local :1;
  43:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans :1;
  44:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_t;
  45:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  46:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:Middlewares/lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:Middlewares/lvgl/src/core/lv_obj_style.h ****     void * user_data;
  54:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
ARM GAS  /tmp/ccN5Htkb.s 			page 18


  55:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  57:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  58:Middlewares/lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  60:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  61:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  62:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  65:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  67:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  68:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  75:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  77:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  78:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  79:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  86:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  88:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  89:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  92:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:Middlewares/lvgl/src/core/lv_obj_style.h **** {
  94:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
  95:Middlewares/lvgl/src/core/lv_obj_style.h **** }
  96:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  97:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  98:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 102:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 104:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 105:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
 111:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
ARM GAS  /tmp/ccN5Htkb.s 			page 19


 112:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 114:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 115:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:Middlewares/lvgl/src/core/lv_obj_style.h ****  * or any other style change happens.
 117:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 119:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 121:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 122:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:Middlewares/lvgl/src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 131:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 133:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 134:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 136:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part to which the property should be added
 137:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     a state to which the property should be added
 138:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property
 139:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 140:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 142:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t
 144:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 145:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 146:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 147:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 148:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part of the object which style property should be removed.
 149:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     the state from which the property should be removed.
 150:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 151:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 152:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 153:Middlewares/lvgl/src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 154:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 155:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 156:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to create a style tarnsition
 157:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 158:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part
 159:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prev_state
 160:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param new_state
 161:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param tr
 162:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 163:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 164:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 165:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 166:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 167:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 168:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state1
ARM GAS  /tmp/ccN5Htkb.s 			page 20


 169:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state2
 170:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return
 171:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 172:Middlewares/lvgl/src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 173:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 174:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 175:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 176:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 177:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 178:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 179:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 180:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 181:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 182:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 183:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 184:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 185:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 186:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 187:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 188:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 189:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 190:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 191:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 192:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 193:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 194:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
 195:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 196:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 197:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 198:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 199:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 200:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 201:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 202:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 203:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 204:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 205:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 206:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 207:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 208:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 209:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 210:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 211:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 212:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 213:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_sel
 214:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_row(obj, value, selector);
 215:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_column(obj, value, selector);
 216:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 217:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 218:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_select
 484              		.loc 4 218 20 view .LVU89
 485              	.LBB45:
 219:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_width(obj, value, selector);
 486              		.loc 4 219 5 view .LVU90
 487 007c 4FF40032 		mov	r2, #131072
 488 0080 0021     		movs	r1, #0
 489 0082 2846     		mov	r0, r5
ARM GAS  /tmp/ccN5Htkb.s 			page 21


 490 0084 FFF7FEFF 		bl	lv_obj_set_style_width
 491              	.LVL45:
 220:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_height(obj, value, selector);
 492              		.loc 4 220 5 view .LVU91
 493 0088 4FF40032 		mov	r2, #131072
 494 008c 0021     		movs	r1, #0
 495 008e 2846     		mov	r0, r5
 496 0090 FFF7FEFF 		bl	lv_obj_set_style_height
 497              	.LVL46:
 498              		.loc 4 220 5 is_stmt 0 view .LVU92
 499              	.LBE45:
 500              	.LBE44:
  55:Core/Src/lvgl_app.c **** 
 501              		.loc 1 55 5 is_stmt 1 view .LVU93
  55:Core/Src/lvgl_app.c **** 
 502              		.loc 1 55 16 is_stmt 0 view .LVU94
 503 0094 2568     		ldr	r5, [r4]
 504 0096 0020     		movs	r0, #0
 505 0098 FFF7FEFF 		bl	lv_palette_main
 506              	.LVL47:
 507 009c 0146     		mov	r1, r0	@ movhi
 508 009e 0022     		movs	r2, #0
 509 00a0 2846     		mov	r0, r5
 510 00a2 FFF7FEFF 		bl	lv_chart_add_series
 511              	.LVL48:
  55:Core/Src/lvgl_app.c **** 
 512              		.loc 1 55 14 view .LVU95
 513 00a6 254B     		ldr	r3, .L29+4
 514 00a8 1860     		str	r0, [r3]
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 515              		.loc 1 62 5 is_stmt 1 view .LVU96
 516              	.LBB46:
 517              	.LBI46:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 518              		.loc 3 163 26 view .LVU97
 519              	.LBB47:
 520              		.loc 3 165 5 view .LVU98
 521              		.loc 3 165 12 is_stmt 0 view .LVU99
 522 00aa FFF7FEFF 		bl	lv_disp_get_default
 523              	.LVL49:
 524 00ae FFF7FEFF 		bl	lv_disp_get_scr_act
 525              	.LVL50:
 526              	.LBE47:
 527              	.LBE46:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 528              		.loc 1 62 21 view .LVU100
 529 00b2 FFF7FEFF 		bl	lv_slider_create
 530              	.LVL51:
  62:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_x, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 531              		.loc 1 62 19 view .LVU101
 532 00b6 224D     		ldr	r5, .L29+8
 533 00b8 2860     		str	r0, [r5]
  63:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_x, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 534              		.loc 1 63 5 is_stmt 1 view .LVU102
 535              	.LVL52:
 536              	.LBB48:
 537              	.LBI48:
ARM GAS  /tmp/ccN5Htkb.s 			page 22


  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 538              		.loc 2 97 20 view .LVU103
 539              	.LBB49:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 540              		.loc 2 99 5 view .LVU104
 541 00ba 4FF42062 		mov	r2, #2560
 542 00be 4FF48071 		mov	r1, #256
 543 00c2 FFF7FEFF 		bl	lv_bar_set_range
 544              	.LVL53:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 545              		.loc 2 99 5 is_stmt 0 view .LVU105
 546              	.LBE49:
 547              	.LBE48:
  64:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_x, 380, 10);
 548              		.loc 1 64 5 is_stmt 1 view .LVU106
 549 00c6 0023     		movs	r3, #0
 550 00c8 1C22     		movs	r2, #28
 551 00ca 1E49     		ldr	r1, .L29+12
 552 00cc 2868     		ldr	r0, [r5]
 553 00ce FFF7FEFF 		bl	lv_obj_add_event_cb
 554              	.LVL54:
  65:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_x, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
 555              		.loc 1 65 5 view .LVU107
 556 00d2 0A22     		movs	r2, #10
 557 00d4 4FF4BE71 		mov	r1, #380
 558 00d8 2868     		ldr	r0, [r5]
 559 00da FFF7FEFF 		bl	lv_obj_set_size
 560              	.LVL55:
  66:Core/Src/lvgl_app.c **** 
 561              		.loc 1 66 5 view .LVU108
 562 00de 1E23     		movs	r3, #30
 563 00e0 0093     		str	r3, [sp]
 564 00e2 0023     		movs	r3, #0
 565 00e4 0E22     		movs	r2, #14
 566 00e6 2168     		ldr	r1, [r4]
 567 00e8 2868     		ldr	r0, [r5]
 568 00ea FFF7FEFF 		bl	lv_obj_align_to
 569              	.LVL56:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 570              		.loc 1 68 5 view .LVU109
 571              	.LBB50:
 572              	.LBI50:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 573              		.loc 3 163 26 view .LVU110
 574              	.LBB51:
 575              		.loc 3 165 5 view .LVU111
 576              		.loc 3 165 12 is_stmt 0 view .LVU112
 577 00ee FFF7FEFF 		bl	lv_disp_get_default
 578              	.LVL57:
 579 00f2 FFF7FEFF 		bl	lv_disp_get_scr_act
 580              	.LVL58:
 581              	.LBE51:
 582              	.LBE50:
  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 583              		.loc 1 68 21 view .LVU113
 584 00f6 FFF7FEFF 		bl	lv_slider_create
 585              	.LVL59:
ARM GAS  /tmp/ccN5Htkb.s 			page 23


  68:Core/Src/lvgl_app.c ****     lv_slider_set_range(wave_slider_y, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 586              		.loc 1 68 19 view .LVU114
 587 00fa 134D     		ldr	r5, .L29+16
 588 00fc 2860     		str	r0, [r5]
  69:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(wave_slider_y, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 589              		.loc 1 69 5 is_stmt 1 view .LVU115
 590              	.LVL60:
 591              	.LBB52:
 592              	.LBI52:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 593              		.loc 2 97 20 view .LVU116
 594              	.LBB53:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 595              		.loc 2 99 5 view .LVU117
 596 00fe 4FF42062 		mov	r2, #2560
 597 0102 4FF48071 		mov	r1, #256
 598 0106 FFF7FEFF 		bl	lv_bar_set_range
 599              	.LVL61:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 600              		.loc 2 99 5 is_stmt 0 view .LVU118
 601              	.LBE53:
 602              	.LBE52:
  70:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_slider_y, 10, 290);
 603              		.loc 1 70 5 is_stmt 1 view .LVU119
 604 010a 0023     		movs	r3, #0
 605 010c 1C22     		movs	r2, #28
 606 010e 0F49     		ldr	r1, .L29+20
 607 0110 2868     		ldr	r0, [r5]
 608 0112 FFF7FEFF 		bl	lv_obj_add_event_cb
 609              	.LVL62:
  71:Core/Src/lvgl_app.c ****     lv_obj_align_to(wave_slider_y, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 20, 0);
 610              		.loc 1 71 5 view .LVU120
 611 0116 4FF49172 		mov	r2, #290
 612 011a 0A21     		movs	r1, #10
 613 011c 2868     		ldr	r0, [r5]
 614 011e FFF7FEFF 		bl	lv_obj_set_size
 615              	.LVL63:
  72:Core/Src/lvgl_app.c **** }
 616              		.loc 1 72 5 view .LVU121
 617 0122 0023     		movs	r3, #0
 618 0124 0093     		str	r3, [sp]
 619 0126 3346     		mov	r3, r6
 620 0128 3246     		mov	r2, r6
 621 012a 2168     		ldr	r1, [r4]
 622 012c 2868     		ldr	r0, [r5]
 623 012e FFF7FEFF 		bl	lv_obj_align_to
 624              	.LVL64:
  73:Core/Src/lvgl_app.c **** 
 625              		.loc 1 73 1 is_stmt 0 view .LVU122
 626 0132 05B0     		add	sp, sp, #20
 627              	.LCFI7:
 628              		.cfi_def_cfa_offset 20
 629              		@ sp needed
 630 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 631              	.L30:
 632 0136 00BF     		.align	2
 633              	.L29:
ARM GAS  /tmp/ccN5Htkb.s 			page 24


 634 0138 00000000 		.word	.LANCHOR0
 635 013c 00000000 		.word	.LANCHOR5
 636 0140 00000000 		.word	.LANCHOR2
 637 0144 00000000 		.word	slider_x_event_cb
 638 0148 00000000 		.word	.LANCHOR3
 639 014c 00000000 		.word	slider_y_event_cb
 640              		.cfi_endproc
 641              	.LFE190:
 643              		.section	.rodata.wave_btn.str1.4,"aMS",%progbits,1
 644              		.align	2
 645              	.LC3:
 646 0000 52455345 		.ascii	"RESET\000"
 646      5400
 647 0006 0000     		.align	2
 648              	.LC4:
 649 0008 52756E2F 		.ascii	"Run/Stop\000"
 649      53746F70 
 649      00
 650              		.section	.text.wave_btn,"ax",%progbits
 651              		.align	1
 652              		.global	wave_btn
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv4-sp-d16
 658              	wave_btn:
 659              	.LFB193:
  99:Core/Src/lvgl_app.c **** 
 100:Core/Src/lvgl_app.c **** void wave_btn(void)
 101:Core/Src/lvgl_app.c **** {
 660              		.loc 1 101 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664 0000 10B5     		push	{r4, lr}
 665              	.LCFI8:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 4, -8
 668              		.cfi_offset 14, -4
 102:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 669              		.loc 1 102 5 view .LVU124
 103:Core/Src/lvgl_app.c **** 
 104:Core/Src/lvgl_app.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
 670              		.loc 1 104 5 view .LVU125
 671              	.LBB62:
 672              	.LBI62:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 673              		.loc 3 163 26 view .LVU126
 674              	.LBB63:
 675              		.loc 3 165 5 view .LVU127
 676              		.loc 3 165 12 is_stmt 0 view .LVU128
 677 0002 FFF7FEFF 		bl	lv_disp_get_default
 678              	.LVL65:
 679 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 680              	.LVL66:
 681              	.LBE63:
 682              	.LBE62:
ARM GAS  /tmp/ccN5Htkb.s 			page 25


 683              		.loc 1 104 23 view .LVU129
 684 000a FFF7FEFF 		bl	lv_btn_create
 685              	.LVL67:
 686 000e 0446     		mov	r4, r0
 687              	.LVL68:
 105:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, wave_zoom_stop, LV_EVENT_ALL, NULL);
 688              		.loc 1 105 5 is_stmt 1 view .LVU130
 689 0010 0023     		movs	r3, #0
 690 0012 1A46     		mov	r2, r3
 691 0014 2049     		ldr	r1, .L33
 692 0016 FFF7FEFF 		bl	lv_obj_add_event_cb
 693              	.LVL69:
 106:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_TOP_LEFT, 20, 400);
 694              		.loc 1 106 5 view .LVU131
 695 001a 4FF4C873 		mov	r3, #400
 696 001e 1422     		movs	r2, #20
 697 0020 0121     		movs	r1, #1
 698 0022 2046     		mov	r0, r4
 699 0024 FFF7FEFF 		bl	lv_obj_align
 700              	.LVL70:
 107:Core/Src/lvgl_app.c **** 
 108:Core/Src/lvgl_app.c ****     label = lv_label_create(btn1);
 701              		.loc 1 108 5 view .LVU132
 702              		.loc 1 108 13 is_stmt 0 view .LVU133
 703 0028 2046     		mov	r0, r4
 704 002a FFF7FEFF 		bl	lv_label_create
 705              	.LVL71:
 706 002e 0446     		mov	r4, r0
 707              	.LVL72:
 109:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "RESET");
 708              		.loc 1 109 5 is_stmt 1 view .LVU134
 709 0030 1A49     		ldr	r1, .L33+4
 710 0032 FFF7FEFF 		bl	lv_label_set_text
 711              	.LVL73:
 110:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 712              		.loc 1 110 5 view .LVU135
 713              	.LBB64:
 714              	.LBI64:
 715              		.file 5 "Middlewares/lvgl/src/core/lv_obj_pos.h"
   1:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:Middlewares/lvgl/src/core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_pos.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_pos.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  18:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
ARM GAS  /tmp/ccN5Htkb.s 			page 26


  19:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      DEFINES
  20:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  21:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  22:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  23:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      TYPEDEFS
  24:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  25:Middlewares/lvgl/src/core/lv_obj_pos.h **** struct _lv_obj_t;
  26:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  27:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef struct {
  29:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:Middlewares/lvgl/src/core/lv_obj_pos.h ****     void * user_data;
  31:Middlewares/lvgl/src/core/lv_obj_pos.h **** }lv_layout_dsc_t;
  32:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  33:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  34:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  36:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  38:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  40:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  43:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  45:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  46:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the x coordinate of a object
  47:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  48:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  50:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  52:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  53:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the y coordinate of a object
  54:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  55:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  57:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  59:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  60:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the size of an object.
  61:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  62:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  63:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  64:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  65:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  70:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  72:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  73:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Recalculate the size of the object
  74:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  75:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          true: the size has been changed
ARM GAS  /tmp/ccN5Htkb.s 			page 27


  76:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  77:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  79:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  80:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width of an object
  81:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  82:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  83:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  84:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  89:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  91:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  92:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height of an object
  93:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  94:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  95:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  96:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 101:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 103:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 104:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 106:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 108:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 109:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 110:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 111:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 113:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 115:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 117:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 118:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set a layout for an object
 119:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 120:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 122:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 124:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 125:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 129:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 131:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 132:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Mark the object for layout update.
ARM GAS  /tmp/ccN5Htkb.s 			page 28


 133:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 135:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 137:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 138:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Update the layout of an object.
 139:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 144:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Regsiter a new layout
 145:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param cb        the layout update callback
 146:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          the ID of the new layout
 148:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 149:Middlewares/lvgl/src/core/lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 151:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 152:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object.
 153:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 156:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 158:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 159:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Equivalent to:
 161:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 166:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 168:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 170:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 171:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to an other object.
 172:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 179:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 181:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 182:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 716              		.loc 5 186 20 view .LVU136
 717              	.LBB65:
 187:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
ARM GAS  /tmp/ccN5Htkb.s 			page 29


 188:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 718              		.loc 5 188 5 view .LVU137
 719 0036 0023     		movs	r3, #0
 720 0038 1A46     		mov	r2, r3
 721 003a 0921     		movs	r1, #9
 722 003c 2046     		mov	r0, r4
 723 003e FFF7FEFF 		bl	lv_obj_align
 724              	.LVL74:
 725              		.loc 5 188 5 is_stmt 0 view .LVU138
 726              	.LBE65:
 727              	.LBE64:
 111:Core/Src/lvgl_app.c **** 
 112:Core/Src/lvgl_app.c ****     lv_obj_t * btn2 = lv_btn_create(lv_scr_act());
 728              		.loc 1 112 5 is_stmt 1 view .LVU139
 729              	.LBB66:
 730              	.LBI66:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 731              		.loc 3 163 26 view .LVU140
 732              	.LBB67:
 733              		.loc 3 165 5 view .LVU141
 734              		.loc 3 165 12 is_stmt 0 view .LVU142
 735 0042 FFF7FEFF 		bl	lv_disp_get_default
 736              	.LVL75:
 737 0046 FFF7FEFF 		bl	lv_disp_get_scr_act
 738              	.LVL76:
 739              	.LBE67:
 740              	.LBE66:
 741              		.loc 1 112 23 view .LVU143
 742 004a FFF7FEFF 		bl	lv_btn_create
 743              	.LVL77:
 744 004e 0446     		mov	r4, r0
 745              	.LVL78:
 113:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, wave_draw_stop, LV_EVENT_ALL, NULL);
 746              		.loc 1 113 5 is_stmt 1 view .LVU144
 747 0050 0023     		movs	r3, #0
 748 0052 1A46     		mov	r2, r3
 749 0054 1249     		ldr	r1, .L33+8
 750 0056 FFF7FEFF 		bl	lv_obj_add_event_cb
 751              	.LVL79:
 114:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_TOP_LEFT, 120, 400);
 752              		.loc 1 114 5 view .LVU145
 753 005a 4FF4C873 		mov	r3, #400
 754 005e 7822     		movs	r2, #120
 755 0060 0121     		movs	r1, #1
 756 0062 2046     		mov	r0, r4
 757 0064 FFF7FEFF 		bl	lv_obj_align
 758              	.LVL80:
 115:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 759              		.loc 1 115 5 view .LVU146
 760 0068 0821     		movs	r1, #8
 761 006a 2046     		mov	r0, r4
 762 006c FFF7FEFF 		bl	lv_obj_add_flag
 763              	.LVL81:
 116:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 764              		.loc 1 116 5 view .LVU147
 765 0070 42F2D171 		movw	r1, #10193
 766 0074 2046     		mov	r0, r4
ARM GAS  /tmp/ccN5Htkb.s 			page 30


 767 0076 FFF7FEFF 		bl	lv_obj_set_height
 768              	.LVL82:
 117:Core/Src/lvgl_app.c **** 
 118:Core/Src/lvgl_app.c ****     label = lv_label_create(btn2);
 769              		.loc 1 118 5 view .LVU148
 770              		.loc 1 118 13 is_stmt 0 view .LVU149
 771 007a 2046     		mov	r0, r4
 772 007c FFF7FEFF 		bl	lv_label_create
 773              	.LVL83:
 774 0080 0446     		mov	r4, r0
 775              	.LVL84:
 119:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 776              		.loc 1 119 5 is_stmt 1 view .LVU150
 777 0082 0849     		ldr	r1, .L33+12
 778 0084 FFF7FEFF 		bl	lv_label_set_text
 779              	.LVL85:
 120:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 780              		.loc 1 120 5 view .LVU151
 781              	.LBB68:
 782              	.LBI68:
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 783              		.loc 5 186 20 view .LVU152
 784              	.LBB69:
 785              		.loc 5 188 5 view .LVU153
 786 0088 0023     		movs	r3, #0
 787 008a 1A46     		mov	r2, r3
 788 008c 0921     		movs	r1, #9
 789 008e 2046     		mov	r0, r4
 790 0090 FFF7FEFF 		bl	lv_obj_align
 791              	.LVL86:
 792              		.loc 5 188 5 is_stmt 0 view .LVU154
 793              	.LBE69:
 794              	.LBE68:
 121:Core/Src/lvgl_app.c **** }
 795              		.loc 1 121 1 view .LVU155
 796 0094 10BD     		pop	{r4, pc}
 797              	.LVL87:
 798              	.L34:
 799              		.loc 1 121 1 view .LVU156
 800 0096 00BF     		.align	2
 801              	.L33:
 802 0098 00000000 		.word	wave_zoom_stop
 803 009c 00000000 		.word	.LC3
 804 00a0 00000000 		.word	wave_draw_stop
 805 00a4 08000000 		.word	.LC4
 806              		.cfi_endproc
 807              	.LFE193:
 809              		.global	waveStopFlg
 810              		.global	wave_slider_y
 811              		.global	wave_slider_x
 812              		.global	wave_ser
 813              		.global	wave_chart
 814              		.global	label1
 815              		.section	.bss.label1,"aw",%nobits
 816              		.align	2
 817              		.set	.LANCHOR4,. + 0
 820              	label1:
ARM GAS  /tmp/ccN5Htkb.s 			page 31


 821 0000 00000000 		.space	4
 822              		.section	.bss.waveStopFlg,"aw",%nobits
 823              		.set	.LANCHOR1,. + 0
 826              	waveStopFlg:
 827 0000 00       		.space	1
 828              		.section	.bss.wave_chart,"aw",%nobits
 829              		.align	2
 830              		.set	.LANCHOR0,. + 0
 833              	wave_chart:
 834 0000 00000000 		.space	4
 835              		.section	.bss.wave_ser,"aw",%nobits
 836              		.align	2
 837              		.set	.LANCHOR5,. + 0
 840              	wave_ser:
 841 0000 00000000 		.space	4
 842              		.section	.bss.wave_slider_x,"aw",%nobits
 843              		.align	2
 844              		.set	.LANCHOR2,. + 0
 847              	wave_slider_x:
 848 0000 00000000 		.space	4
 849              		.section	.bss.wave_slider_y,"aw",%nobits
 850              		.align	2
 851              		.set	.LANCHOR3,. + 0
 854              	wave_slider_y:
 855 0000 00000000 		.space	4
 856              		.text
 857              	.Letext0:
 858              		.file 6 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 859              		.file 7 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 860              		.file 8 "Middlewares/lvgl/src/misc/lv_ll.h"
 861              		.file 9 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 862              		.file 10 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 863              		.file 11 "Middlewares/lvgl/src/core/lv_obj.h"
 864              		.file 12 "Middlewares/lvgl/src/core/lv_group.h"
 865              		.file 13 "Middlewares/lvgl/src/core/../misc/lv_anim.h"
 866              		.file 14 "Middlewares/lvgl/src/core/../misc/lv_txt.h"
 867              		.file 15 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 868              		.file 16 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 869              		.file 17 "Middlewares/lvgl/src/core/lv_obj_class.h"
 870              		.file 18 "Middlewares/lvgl/src/core/lv_event.h"
 871              		.file 19 "Middlewares/lvgl/src/widgets/lv_label.h"
 872              		.file 20 "Middlewares/lvgl/src/widgets/lv_bar.h"
 873              		.file 21 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
 874              		.file 22 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 875              		.file 23 "Middlewares/lvgl/src/hal/lv_hal_disp.h"
 876              		.file 24 "Middlewares/lvgl/src/widgets/lv_btn.h"
 877              		.file 25 "Middlewares/lvgl/src/core/lv_obj_style_gen.h"
 878              		.file 26 "<built-in>"
ARM GAS  /tmp/ccN5Htkb.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lvgl_app.c
     /tmp/ccN5Htkb.s:18     .text.slider_y_event_cb:0000000000000000 $t
     /tmp/ccN5Htkb.s:25     .text.slider_y_event_cb:0000000000000000 slider_y_event_cb
     /tmp/ccN5Htkb.s:69     .text.slider_y_event_cb:0000000000000018 $d
     /tmp/ccN5Htkb.s:74     .text.slider_x_event_cb:0000000000000000 $t
     /tmp/ccN5Htkb.s:80     .text.slider_x_event_cb:0000000000000000 slider_x_event_cb
     /tmp/ccN5Htkb.s:122    .text.slider_x_event_cb:0000000000000018 $d
     /tmp/ccN5Htkb.s:127    .rodata.wave_draw_stop.str1.4:0000000000000000 $d
     /tmp/ccN5Htkb.s:131    .text.wave_draw_stop:0000000000000000 $t
     /tmp/ccN5Htkb.s:137    .text.wave_draw_stop:0000000000000000 wave_draw_stop
     /tmp/ccN5Htkb.s:194    .text.wave_draw_stop:000000000000002c $d
     /tmp/ccN5Htkb.s:200    .rodata.wave_zoom_stop.str1.4:0000000000000000 $d
     /tmp/ccN5Htkb.s:204    .text.wave_zoom_stop:0000000000000000 $t
     /tmp/ccN5Htkb.s:210    .text.wave_zoom_stop:0000000000000000 wave_zoom_stop
     /tmp/ccN5Htkb.s:289    .text.wave_zoom_stop:0000000000000044 $d
     /tmp/ccN5Htkb.s:297    .rodata.counter_label.str1.4:0000000000000000 $d
     /tmp/ccN5Htkb.s:301    .text.counter_label:0000000000000000 $t
     /tmp/ccN5Htkb.s:308    .text.counter_label:0000000000000000 counter_label
     /tmp/ccN5Htkb.s:376    .text.counter_label:000000000000004c $d
     /tmp/ccN5Htkb.s:382    .text.wave_chart_init:0000000000000000 $t
     /tmp/ccN5Htkb.s:389    .text.wave_chart_init:0000000000000000 wave_chart_init
     /tmp/ccN5Htkb.s:634    .text.wave_chart_init:0000000000000138 $d
     /tmp/ccN5Htkb.s:644    .rodata.wave_btn.str1.4:0000000000000000 $d
     /tmp/ccN5Htkb.s:651    .text.wave_btn:0000000000000000 $t
     /tmp/ccN5Htkb.s:658    .text.wave_btn:0000000000000000 wave_btn
     /tmp/ccN5Htkb.s:802    .text.wave_btn:0000000000000098 $d
     /tmp/ccN5Htkb.s:826    .bss.waveStopFlg:0000000000000000 waveStopFlg
     /tmp/ccN5Htkb.s:854    .bss.wave_slider_y:0000000000000000 wave_slider_y
     /tmp/ccN5Htkb.s:847    .bss.wave_slider_x:0000000000000000 wave_slider_x
     /tmp/ccN5Htkb.s:840    .bss.wave_ser:0000000000000000 wave_ser
     /tmp/ccN5Htkb.s:833    .bss.wave_chart:0000000000000000 wave_chart
     /tmp/ccN5Htkb.s:820    .bss.label1:0000000000000000 label1
     /tmp/ccN5Htkb.s:816    .bss.label1:0000000000000000 $d
     /tmp/ccN5Htkb.s:827    .bss.waveStopFlg:0000000000000000 $d
     /tmp/ccN5Htkb.s:829    .bss.wave_chart:0000000000000000 $d
     /tmp/ccN5Htkb.s:836    .bss.wave_ser:0000000000000000 $d
     /tmp/ccN5Htkb.s:843    .bss.wave_slider_x:0000000000000000 $d
     /tmp/ccN5Htkb.s:850    .bss.wave_slider_y:0000000000000000 $d

UNDEFINED SYMBOLS
lv_event_get_target
lv_bar_get_value
lv_chart_set_zoom_y
lv_chart_set_zoom_x
lv_event_get_code
puts
lv_bar_set_value
lv_disp_get_default
lv_disp_get_scr_act
lv_label_create
lv_label_set_long_mode
lv_label_set_recolor
lv_label_set_text
lv_obj_set_width
lv_obj_set_style_text_align
lv_obj_align
ARM GAS  /tmp/ccN5Htkb.s 			page 33


lv_chart_create
lv_obj_set_size
lv_chart_set_range
lv_chart_set_axis_tick
lv_obj_set_style_width
lv_obj_set_style_height
lv_palette_main
lv_chart_add_series
lv_slider_create
lv_bar_set_range
lv_obj_add_event_cb
lv_obj_align_to
lv_btn_create
lv_obj_add_flag
lv_obj_set_height
