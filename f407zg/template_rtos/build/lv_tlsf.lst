ARM GAS  /tmp/ccqbdhhV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lv_tlsf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.block_size,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	block_size:
  26              	.LVL0:
  27              	.LFB3:
  28              		.file 1 "Middlewares/lvgl/src/misc/lv_tlsf.c"
   1:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "../lv_conf_internal.h"
   2:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if LV_MEM_CUSTOM == 0
   3:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
   4:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <limits.h>
   5:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <stddef.h>
   6:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_tlsf.h"
   7:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_mem.h"
   8:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_log.h"
   9:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include "lv_assert.h"
  10:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define printf LV_LOG_ERROR
  11:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  12:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_MAX_POOL_SIZE LV_MEM_SIZE
  13:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  14:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined(_DEBUG)
  15:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _DEBUG 0
  16:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  17:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  18:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined(__cplusplus)
  19:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl inline
  20:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  21:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_decl static
  22:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  23:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  24:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  25:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Architecture-specific bit manipulation routines.
  26:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  27:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF achieves O(1) cost for malloc and free operations by limiting
  28:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the search for a free block to a free list of guaranteed size
  29:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** adequate to fulfill the request, combined with efficient free list
  30:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** queries using bitmasks and architecture-specific bit-manipulation
ARM GAS  /tmp/ccqbdhhV.s 			page 2


  31:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** routines.
  32:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  33:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Most modern processors provide instructions to count leading zeroes
  34:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** in a word, find the lowest and highest set bit, etc. These
  35:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** specific implementations will be used when available, falling back
  36:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** to a reasonably efficient generic implementation.
  37:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
  38:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** NOTE: TLSF spec relies on ffs/fls returning value 0..31.
  39:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** ffs/fls return 1-32 by default, returning 0 for error.
  40:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  41:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  42:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  43:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Detect whether or not we are building for a 32- or 64-bit (LP/LLP)
  44:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** architecture. There is no reliable portable method at compile-time.
  45:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  46:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) \
  47:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	|| defined (_WIN64) || defined (__LP64__) || defined (__LLP64__)
  48:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_64BIT
  49:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  50:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  51:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  52:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns one plus the index of the most significant 1-bit of n,
  53:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** or if n is zero, returns zero.
  54:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  55:Middlewares/lvgl/src/misc/lv_tlsf.c **** #ifdef TLSF_64BIT
  56:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) ((n) & 0xffffffff00000000ull ? 32 + TLSF_FLS32((size_t)(n) >> 32) : TLSF_FLS32(
  57:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  58:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS(n) TLSF_FLS32(n)
  59:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  60:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  61:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS32(n) ((n) & 0xffff0000 ? 16 + TLSF_FLS16((n) >> 16) : TLSF_FLS16(n))
  62:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS16(n) ((n) & 0xff00     ?  8 + TLSF_FLS8 ((n) >>  8) : TLSF_FLS8 (n))
  63:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS8(n)  ((n) & 0xf0       ?  4 + TLSF_FLS4 ((n) >>  4) : TLSF_FLS4 (n))
  64:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS4(n)  ((n) & 0xc        ?  2 + TLSF_FLS2 ((n) >>  2) : TLSF_FLS2 (n))
  65:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS2(n)  ((n) & 0x2        ?  1 + TLSF_FLS1 ((n) >>  1) : TLSF_FLS1 (n))
  66:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_FLS1(n)  ((n) & 0x1        ?  1 : 0)
  67:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  68:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  69:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Returns round up value of log2(n).
  70:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Note: it is used at compile time.
  71:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  72:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define TLSF_LOG2_CEIL(n) ((n) & (n - 1) ? TLSF_FLS(n) : TLSF_FLS(n) - 1)
  73:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  74:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
  75:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** gcc 3.4 and above have builtin support, specialized for architecture.
  76:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Some compilers masquerade as gcc; patchlevel test filters them out.
  77:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
  78:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)) \
  79:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	&& defined (__GNUC_PATCHLEVEL__)
  80:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  81:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (__SNC__)
  82:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SNC for Playstation 3. */
  83:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  84:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  85:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  86:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
  87:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __builtin_clz(reverse);
ARM GAS  /tmp/ccqbdhhV.s 			page 3


  88:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
  89:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  90:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  91:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
  92:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  93:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  97:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
  98:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
  99:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 100:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 105:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 106:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && (_MSC_VER >= 1400) && (defined (_M_IX86) || defined (_M_X64))
 107:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on x86/X64 architectures. */
 108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 109:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <intrin.h>
 110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 111:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanReverse)
 112:Middlewares/lvgl/src/misc/lv_tlsf.c **** #pragma intrinsic(_BitScanForward)
 113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 114:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 115:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 117:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanReverse(&index, word) ? index : -1;
 118:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 119:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 120:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 121:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned long index;
 123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return _BitScanForward(&index, word) ? index : -1;
 124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 126:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (_MSC_VER) && defined (_M_PPC)
 127:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Microsoft Visual C++ support on PowerPC architectures. */
 128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 129:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppcintrinsics.h>
 130:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 131:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 132:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 133:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(word);
 134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 137:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - _CountLeadingZeros(reverse);
 141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 142:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 143:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 144:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ARMCC_VERSION)
ARM GAS  /tmp/ccqbdhhV.s 			page 4


 145:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* RealView Compilation Tools for ARM */
 146:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 147:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 148:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __clz(reverse);
 151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 152:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 154:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 155:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __clz(word) : 0;
 157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 158:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 160:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (__ghs__)
 161:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Green Hills support for PowerPC */
 162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 163:Middlewares/lvgl/src/misc/lv_tlsf.c **** #include <ppc_ghs.h>
 164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 165:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 166:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = 32 - __CLZ32(reverse);
 169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 170:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 172:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 173:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __CLZ32(word) : 0;
 175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 176:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 178:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 179:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Fall back to generic implementation. */
 180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 181:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Implement ffs in terms of fls. */
 182:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_ffs(unsigned int word)
 183:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const unsigned int reverse = word & (~word + 1);
 185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(reverse) - 1;
 186:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 188:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls(unsigned int word)
 189:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return TLSF_FLS32(word) - 1;
 191:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 193:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 195:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Possibly 64-bit version of tlsf_fls. */
 196:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 197:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_decl int tlsf_fls_sizet(size_t size)
 198:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int high = (int)(size >> 32);
 200:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int bits = 0;
 201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (high)
ARM GAS  /tmp/ccqbdhhV.s 			page 5


 202:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = 32 + tlsf_fls(high);
 204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		bits = tlsf_fls((int)size & 0xffffffff);
 208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bits;
 211:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 212:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 213:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_fls_sizet tlsf_fls
 214:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 215:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 216:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_decl
 217:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 218:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Constants.
 220:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 221:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 222:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Public constants: may be modified. */
 223:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_public
 224:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 225:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* log2 of number of linear subdivisions of block sizes. Larger
 226:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** values require more memory in the control structure. Values of
 227:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** 4 or 5 are typical.
 228:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 229:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT_LOG2 = 5,
 230:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 231:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 232:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Private constants: do not modify. */
 233:Middlewares/lvgl/src/misc/lv_tlsf.c **** enum tlsf_private
 234:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 235:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
 236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 8 bytes. */
 237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 3,
 238:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* All allocation sizes and addresses are aligned to 4 bytes. */
 240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE_LOG2 = 2,
 241:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	ALIGN_SIZE = (1 << ALIGN_SIZE_LOG2),
 243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We support allocations of sizes up to (1 << FL_INDEX_MAX) bits.
 246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** However, because we linearly subdivide the second-level lists, and
 247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our minimum size granularity is 4 bytes, it doesn't make sense to
 248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** create first-level lists for sizes smaller than SL_INDEX_COUNT * 4,
 249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** or (1 << (SL_INDEX_COUNT_LOG2 + 2)) bytes, as there we will be
 250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trying to split size ranges into more slots than we have available.
 251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Instead, we calculate the minimum threshold size, and place all
 252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** blocks below that size into the 0th first-level list.
 253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 255:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_MAX_POOL_SIZE)
 256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = TLSF_LOG2_CEIL(TLSF_MAX_POOL_SIZE),
 257:Middlewares/lvgl/src/misc/lv_tlsf.c **** #elif defined (TLSF_64BIT)
 258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
ARM GAS  /tmp/ccqbdhhV.s 			page 6


 259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** TODO: We can increase this to support larger sizes, at the expense
 260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** of more overhead in the TLSF structure.
 261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 32,
 263:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
 264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_MAX = 30,
 265:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SL_INDEX_COUNT = (1 << SL_INDEX_COUNT_LOG2),
 267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_SHIFT = (SL_INDEX_COUNT_LOG2 + ALIGN_SIZE_LOG2),
 268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	FL_INDEX_COUNT = (FL_INDEX_MAX - FL_INDEX_SHIFT + 1),
 269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	SMALL_BLOCK_SIZE = (1 << FL_INDEX_SHIFT),
 271:Middlewares/lvgl/src/misc/lv_tlsf.c **** };
 272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 273:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 274:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Cast and min/max macros.
 275:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 277:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_cast(t, exp)	((t) (exp))
 278:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_min(a, b)		((a) < (b) ? (a) : (b))
 279:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_max(a, b)		((a) > (b) ? (a) : (b))
 280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 281:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 282:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Set assert macro, if it has not been provided by the user.
 283:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 284:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert LV_ASSERT
 285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 286:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if !defined (tlsf_assert)
 287:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_assert assert
 288:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
 289:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 290:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 291:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Static assertion mechanism.
 292:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 293:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 294:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue2(x, y) x ## y
 295:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define _tlsf_glue(x, y) _tlsf_glue2(x, y)
 296:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_static_assert(exp) \
 297:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	typedef char _tlsf_glue(static_assert, __LINE__) [(exp) ? 1 : -1]
 298:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 299:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This code has been tested on 32- and 64-bit (LP/LLP) architectures. */
 300:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(int) * CHAR_BIT == 32);
 301:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT >= 32);
 302:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(size_t) * CHAR_BIT <= 64);
 303:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 304:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* SL_INDEX_COUNT must be <= number of bits in sl_bitmap's storage type. */
 305:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(sizeof(unsigned int) * CHAR_BIT >= SL_INDEX_COUNT);
 306:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 307:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Ensure we've properly tuned our sizes. */
 308:Middlewares/lvgl/src/misc/lv_tlsf.c **** tlsf_static_assert(ALIGN_SIZE == SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 309:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 310:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 311:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Data structures and associated constants.
 312:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 313:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 314:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 315:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Block header structure.
ARM GAS  /tmp/ccqbdhhV.s 			page 7


 316:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
 317:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** There are several implementation subtleties involved:
 318:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is only valid if the previous block is free.
 319:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The prev_phys_block field is actually stored at the end of the
 320:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   previous block. It appears at the beginning of this structure only to
 321:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   simplify the implementation.
 322:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - The next_free / prev_free fields are only valid if the block is free.
 323:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 324:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct block_header_t
 325:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 326:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Points to the previous physical block. */
 327:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_phys_block;
 328:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 329:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* The size of this block, excluding the block header. */
 330:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size;
 331:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 332:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Next and previous free blocks. */
 333:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* next_free;
 334:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	struct block_header_t* prev_free;
 335:Middlewares/lvgl/src/misc/lv_tlsf.c **** } block_header_t;
 336:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 337:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 338:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Since block sizes are always at least a multiple of 4, the two least
 339:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** significant bits of the size field are used to store the block status:
 340:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 0: whether block is busy or free
 341:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - bit 1: whether previous block is busy or free
 342:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 343:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_free_bit = 1 << 0;
 344:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_prev_free_bit = 1 << 1;
 345:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 346:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 347:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The size of the block header exposed to used blocks is the size field.
 348:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The prev_phys_block field is stored *inside* the previous free block.
 349:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 350:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_header_overhead = sizeof(size_t);
 351:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 352:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* User data starts directly after the size field in a used block. */
 353:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_start_offset =
 354:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	offsetof(block_header_t, size) + sizeof(size_t);
 355:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 356:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 357:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** A free block must be large enough to store its header minus the size of
 358:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the prev_phys_block field, and no larger than the number of addressable
 359:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** bits for FL_INDEX.
 360:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 361:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_min = 
 362:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sizeof(block_header_t) - sizeof(block_header_t*);
 363:Middlewares/lvgl/src/misc/lv_tlsf.c **** static const size_t block_size_max = tlsf_cast(size_t, 1) << FL_INDEX_MAX;
 364:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 365:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 366:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* The TLSF control structure. */
 367:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct control_t
 368:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 369:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Empty lists point at this block to indicate they are free. */
 370:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t block_null;
 371:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 372:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Bitmaps for free lists. */
ARM GAS  /tmp/ccqbdhhV.s 			page 8


 373:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int fl_bitmap;
 374:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_bitmap[FL_INDEX_COUNT];
 375:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 376:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Head of free lists. */
 377:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* blocks[FL_INDEX_COUNT][SL_INDEX_COUNT];
 378:Middlewares/lvgl/src/misc/lv_tlsf.c **** } control_t;
 379:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 380:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* A type used for casting when doing pointer arithmetic. */
 381:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef ptrdiff_t tlsfptr_t;
 382:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 383:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 384:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** block_header_t member functions.
 385:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 386:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 387:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t block_size(const block_header_t* block)
 388:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  29              		.loc 1 388 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 389:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->size & ~(block_header_free_bit | block_header_prev_free_bit);
  34              		.loc 1 389 2 view .LVU1
  35              		.loc 1 389 14 is_stmt 0 view .LVU2
  36 0000 4068     		ldr	r0, [r0, #4]
  37              	.LVL1:
 390:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  38              		.loc 1 390 1 view .LVU3
  39 0002 20F00300 		bic	r0, r0, #3
  40 0006 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE3:
  44              		.section	.text.block_set_size,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	block_set_size:
  52              	.LVL2:
  53              	.LFB4:
 391:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 392:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_size(block_header_t* block, size_t size)
 393:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  54              		.loc 1 393 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 394:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t oldsize = block->size;
  59              		.loc 1 394 2 view .LVU5
  60              		.loc 1 394 15 is_stmt 0 view .LVU6
  61 0000 4368     		ldr	r3, [r0, #4]
  62              	.LVL3:
 395:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size = size | (oldsize & (block_header_free_bit | block_header_prev_free_bit));
  63              		.loc 1 395 2 is_stmt 1 view .LVU7
  64              		.loc 1 395 32 is_stmt 0 view .LVU8
ARM GAS  /tmp/ccqbdhhV.s 			page 9


  65 0002 03F00303 		and	r3, r3, #3
  66              	.LVL4:
  67              		.loc 1 395 21 view .LVU9
  68 0006 0B43     		orrs	r3, r3, r1
  69              		.loc 1 395 14 view .LVU10
  70 0008 4360     		str	r3, [r0, #4]
  71              	.LVL5:
 396:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
  72              		.loc 1 396 1 view .LVU11
  73 000a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE4:
  77              		.section	.text.block_is_last,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	block_is_last:
  85              	.LVL6:
  86              	.LFB5:
 397:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 398:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_last(const block_header_t* block)
 399:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
  87              		.loc 1 399 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		.loc 1 399 1 is_stmt 0 view .LVU13
  92 0000 08B5     		push	{r3, lr}
  93              	.LCFI0:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 3, -8
  96              		.cfi_offset 14, -4
 400:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) == 0;
  97              		.loc 1 400 2 is_stmt 1 view .LVU14
  98              		.loc 1 400 9 is_stmt 0 view .LVU15
  99 0002 FFF7FEFF 		bl	block_size
 100              	.LVL7:
 401:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 101              		.loc 1 401 1 view .LVU16
 102 0006 B0FA80F0 		clz	r0, r0
 103 000a 4009     		lsrs	r0, r0, #5
 104 000c 08BD     		pop	{r3, pc}
 105              		.cfi_endproc
 106              	.LFE5:
 108              		.section	.text.block_is_free,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	block_is_free:
 116              	.LVL8:
 117              	.LFB6:
 402:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 403:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_free(const block_header_t* block)
ARM GAS  /tmp/ccqbdhhV.s 			page 10


 404:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 118              		.loc 1 404 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 405:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_free_bit);
 123              		.loc 1 405 2 view .LVU18
 124              		.loc 1 405 9 is_stmt 0 view .LVU19
 125 0000 4068     		ldr	r0, [r0, #4]
 126              	.LVL9:
 406:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 127              		.loc 1 406 1 view .LVU20
 128 0002 00F00100 		and	r0, r0, #1
 129 0006 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE6:
 133              		.section	.text.block_set_free,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	block_set_free:
 141              	.LVL10:
 142              	.LFB7:
 407:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 408:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_free(block_header_t* block)
 409:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 143              		.loc 1 409 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 410:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_free_bit;
 148              		.loc 1 410 2 view .LVU22
 149              		.loc 1 410 14 is_stmt 0 view .LVU23
 150 0000 4368     		ldr	r3, [r0, #4]
 151 0002 43F00103 		orr	r3, r3, #1
 152 0006 4360     		str	r3, [r0, #4]
 411:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 153              		.loc 1 411 1 view .LVU24
 154 0008 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE7:
 158              		.section	.text.block_set_used,"ax",%progbits
 159              		.align	1
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	block_set_used:
 166              	.LVL11:
 167              	.LFB8:
 412:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 413:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_used(block_header_t* block)
 414:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccqbdhhV.s 			page 11


 168              		.loc 1 414 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 415:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_free_bit;
 173              		.loc 1 415 2 view .LVU26
 174              		.loc 1 415 14 is_stmt 0 view .LVU27
 175 0000 4368     		ldr	r3, [r0, #4]
 176 0002 23F00103 		bic	r3, r3, #1
 177 0006 4360     		str	r3, [r0, #4]
 416:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 178              		.loc 1 416 1 view .LVU28
 179 0008 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE8:
 183              		.section	.text.block_is_prev_free,"ax",%progbits
 184              		.align	1
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	block_is_prev_free:
 191              	.LVL12:
 192              	.LFB9:
 417:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 418:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_is_prev_free(const block_header_t* block)
 419:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 193              		.loc 1 419 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 420:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(int, block->size & block_header_prev_free_bit);
 198              		.loc 1 420 2 view .LVU30
 199              		.loc 1 420 9 is_stmt 0 view .LVU31
 200 0000 4068     		ldr	r0, [r0, #4]
 201              	.LVL13:
 421:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 202              		.loc 1 421 1 view .LVU32
 203 0002 00F00200 		and	r0, r0, #2
 204 0006 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE9:
 208              		.section	.text.block_set_prev_free,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	block_set_prev_free:
 216              	.LVL14:
 217              	.LFB10:
 422:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 423:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_free(block_header_t* block)
 424:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 218              		.loc 1 424 1 is_stmt 1 view -0
ARM GAS  /tmp/ccqbdhhV.s 			page 12


 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 425:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size |= block_header_prev_free_bit;
 223              		.loc 1 425 2 view .LVU34
 224              		.loc 1 425 14 is_stmt 0 view .LVU35
 225 0000 4368     		ldr	r3, [r0, #4]
 226 0002 43F00203 		orr	r3, r3, #2
 227 0006 4360     		str	r3, [r0, #4]
 426:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 228              		.loc 1 426 1 view .LVU36
 229 0008 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE10:
 233              		.section	.text.block_set_prev_used,"ax",%progbits
 234              		.align	1
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	block_set_prev_used:
 241              	.LVL15:
 242              	.LFB11:
 427:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 428:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_set_prev_used(block_header_t* block)
 429:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 243              		.loc 1 429 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 430:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->size &= ~block_header_prev_free_bit;
 248              		.loc 1 430 2 view .LVU38
 249              		.loc 1 430 14 is_stmt 0 view .LVU39
 250 0000 4368     		ldr	r3, [r0, #4]
 251 0002 23F00203 		bic	r3, r3, #2
 252 0006 4360     		str	r3, [r0, #4]
 431:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 253              		.loc 1 431 1 view .LVU40
 254 0008 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE11:
 258              		.section	.text.block_from_ptr,"ax",%progbits
 259              		.align	1
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu fpv4-sp-d16
 265              	block_from_ptr:
 266              	.LVL16:
 267              	.LFB12:
 432:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 433:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_from_ptr(const void* ptr)
 434:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 268              		.loc 1 434 1 is_stmt 1 view -0
 269              		.cfi_startproc
ARM GAS  /tmp/ccqbdhhV.s 			page 13


 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 435:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*,
 273              		.loc 1 435 2 view .LVU42
 436:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, ptr) - block_start_offset);
 437:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 274              		.loc 1 437 1 is_stmt 0 view .LVU43
 275 0000 0838     		subs	r0, r0, #8
 276              	.LVL17:
 277              		.loc 1 437 1 view .LVU44
 278 0002 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE12:
 282              		.section	.text.block_to_ptr,"ax",%progbits
 283              		.align	1
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	block_to_ptr:
 290              	.LVL18:
 291              	.LFB13:
 438:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 439:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_to_ptr(const block_header_t* block)
 440:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 292              		.loc 1 440 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 441:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*,
 297              		.loc 1 441 2 view .LVU46
 442:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_cast(unsigned char*, block) + block_start_offset);
 443:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 298              		.loc 1 443 1 is_stmt 0 view .LVU47
 299 0000 0830     		adds	r0, r0, #8
 300              	.LVL19:
 301              		.loc 1 443 1 view .LVU48
 302 0002 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE13:
 306              		.section	.text.offset_to_block,"ax",%progbits
 307              		.align	1
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	offset_to_block:
 314              	.LVL20:
 315              	.LFB14:
 444:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 445:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next block after block of given size. */
 446:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* offset_to_block(const void* ptr, size_t size)
 447:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 316              		.loc 1 447 1 is_stmt 1 view -0
 317              		.cfi_startproc
ARM GAS  /tmp/ccqbdhhV.s 			page 14


 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 448:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(block_header_t*, tlsf_cast(tlsfptr_t, ptr) + size);
 321              		.loc 1 448 2 view .LVU50
 449:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 322              		.loc 1 449 1 is_stmt 0 view .LVU51
 323 0000 0844     		add	r0, r0, r1
 324              	.LVL21:
 325              		.loc 1 449 1 view .LVU52
 326 0002 7047     		bx	lr
 327              		.cfi_endproc
 328              	.LFE14:
 330              		.section	.text.block_prev,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv4-sp-d16
 337              	block_prev:
 338              	.LVL22:
 339              	.LFB15:
 450:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 451:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of previous block. */
 452:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_prev(const block_header_t* block)
 453:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 340              		.loc 1 453 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		.loc 1 453 1 is_stmt 0 view .LVU54
 345 0000 10B5     		push	{r4, lr}
 346              	.LCFI1:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 350 0002 0446     		mov	r4, r0
 454:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_prev_free(block) && "previous block must be free");
 351              		.loc 1 454 2 is_stmt 1 view .LVU55
 352              		.loc 1 454 2 view .LVU56
 353 0004 FFF7FEFF 		bl	block_is_prev_free
 354              	.LVL23:
 355              		.loc 1 454 2 is_stmt 0 view .LVU57
 356 0008 00B9     		cbnz	r0, .L15
 357              	.L16:
 358              		.loc 1 454 2 is_stmt 1 discriminator 1 view .LVU58
 359              		.loc 1 454 2 discriminator 1 view .LVU59
 360              		.loc 1 454 2 discriminator 1 view .LVU60
 361              		.loc 1 454 2 discriminator 1 view .LVU61
 362 000a FEE7     		b	.L16
 363              	.L15:
 364              		.loc 1 454 2 discriminator 4 view .LVU62
 455:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block->prev_phys_block;
 365              		.loc 1 455 2 discriminator 4 view .LVU63
 456:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 366              		.loc 1 456 1 is_stmt 0 discriminator 4 view .LVU64
 367 000c 2068     		ldr	r0, [r4]
ARM GAS  /tmp/ccqbdhhV.s 			page 15


 368 000e 10BD     		pop	{r4, pc}
 369              		.loc 1 456 1 discriminator 4 view .LVU65
 370              		.cfi_endproc
 371              	.LFE15:
 373              		.section	.text.block_next,"ax",%progbits
 374              		.align	1
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	block_next:
 381              	.LVL24:
 382              	.LFB16:
 457:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 458:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Return location of next existing block. */
 459:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_next(const block_header_t* block)
 460:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 383              		.loc 1 460 1 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		.loc 1 460 1 is_stmt 0 view .LVU67
 388 0000 38B5     		push	{r3, r4, r5, lr}
 389              	.LCFI2:
 390              		.cfi_def_cfa_offset 16
 391              		.cfi_offset 3, -16
 392              		.cfi_offset 4, -12
 393              		.cfi_offset 5, -8
 394              		.cfi_offset 14, -4
 395 0002 0446     		mov	r4, r0
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 396              		.loc 1 461 2 is_stmt 1 view .LVU68
 397              		.loc 1 461 41 is_stmt 0 view .LVU69
 398 0004 FFF7FEFF 		bl	block_to_ptr
 399              	.LVL25:
 400              		.loc 1 461 41 view .LVU70
 401 0008 0546     		mov	r5, r0
 462:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_size(block) - block_header_overhead);
 402              		.loc 1 462 3 view .LVU71
 403 000a 2046     		mov	r0, r4
 404 000c FFF7FEFF 		bl	block_size
 405              	.LVL26:
 461:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = offset_to_block(block_to_ptr(block),
 406              		.loc 1 461 25 view .LVU72
 407 0010 011F     		subs	r1, r0, #4
 408 0012 2846     		mov	r0, r5
 409 0014 FFF7FEFF 		bl	offset_to_block
 410              	.LVL27:
 411 0018 0546     		mov	r5, r0
 412              	.LVL28:
 463:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(block));
 413              		.loc 1 463 2 is_stmt 1 view .LVU73
 414              		.loc 1 463 2 view .LVU74
 415 001a 2046     		mov	r0, r4
 416              	.LVL29:
 417              		.loc 1 463 2 is_stmt 0 view .LVU75
 418 001c FFF7FEFF 		bl	block_is_last
ARM GAS  /tmp/ccqbdhhV.s 			page 16


 419              	.LVL30:
 420 0020 00B1     		cbz	r0, .L18
 421              	.L20:
 422              		.loc 1 463 2 is_stmt 1 discriminator 1 view .LVU76
 423              		.loc 1 463 2 discriminator 1 view .LVU77
 424              		.loc 1 463 2 discriminator 1 view .LVU78
 425              		.loc 1 463 2 discriminator 1 view .LVU79
 426 0022 FEE7     		b	.L20
 427              	.L18:
 464:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 465:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 428              		.loc 1 465 1 is_stmt 0 view .LVU80
 429 0024 2846     		mov	r0, r5
 430 0026 38BD     		pop	{r3, r4, r5, pc}
 431              		.loc 1 465 1 view .LVU81
 432              		.cfi_endproc
 433              	.LFE16:
 435              		.section	.text.block_link_next,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	block_link_next:
 443              	.LVL31:
 444              	.LFB17:
 466:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 467:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Link a new block with its physical neighbor, return the neighbor. */
 468:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_link_next(block_header_t* block)
 469:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 445              		.loc 1 469 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		.loc 1 469 1 is_stmt 0 view .LVU83
 450 0000 10B5     		push	{r4, lr}
 451              	.LCFI3:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 4, -8
 454              		.cfi_offset 14, -4
 455 0002 0446     		mov	r4, r0
 470:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 456              		.loc 1 470 2 is_stmt 1 view .LVU84
 457              		.loc 1 470 25 is_stmt 0 view .LVU85
 458 0004 FFF7FEFF 		bl	block_next
 459              	.LVL32:
 471:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_phys_block = block;
 460              		.loc 1 471 2 is_stmt 1 view .LVU86
 461              		.loc 1 471 24 is_stmt 0 view .LVU87
 462 0008 0460     		str	r4, [r0]
 472:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return next;
 463              		.loc 1 472 2 is_stmt 1 view .LVU88
 473:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 464              		.loc 1 473 1 is_stmt 0 view .LVU89
 465 000a 10BD     		pop	{r4, pc}
 466              		.loc 1 473 1 view .LVU90
 467              		.cfi_endproc
ARM GAS  /tmp/ccqbdhhV.s 			page 17


 468              	.LFE17:
 470              		.section	.text.block_mark_as_free,"ax",%progbits
 471              		.align	1
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv4-sp-d16
 477              	block_mark_as_free:
 478              	.LVL33:
 479              	.LFB18:
 474:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 475:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_free(block_header_t* block)
 476:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 480              		.loc 1 476 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		.loc 1 476 1 is_stmt 0 view .LVU92
 485 0000 10B5     		push	{r4, lr}
 486              	.LCFI4:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 4, -8
 489              		.cfi_offset 14, -4
 490 0002 0446     		mov	r4, r0
 477:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Link the block to the next block, first. */
 478:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_link_next(block);
 491              		.loc 1 478 2 is_stmt 1 view .LVU93
 492              		.loc 1 478 25 is_stmt 0 view .LVU94
 493 0004 FFF7FEFF 		bl	block_link_next
 494              	.LVL34:
 479:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 495              		.loc 1 479 2 is_stmt 1 view .LVU95
 496 0008 FFF7FEFF 		bl	block_set_prev_free
 497              	.LVL35:
 480:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 498              		.loc 1 480 2 view .LVU96
 499 000c 2046     		mov	r0, r4
 500 000e FFF7FEFF 		bl	block_set_free
 501              	.LVL36:
 481:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 502              		.loc 1 481 1 is_stmt 0 view .LVU97
 503 0012 10BD     		pop	{r4, pc}
 504              		.loc 1 481 1 view .LVU98
 505              		.cfi_endproc
 506              	.LFE18:
 508              		.section	.text.block_mark_as_used,"ax",%progbits
 509              		.align	1
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
 515              	block_mark_as_used:
 516              	.LVL37:
 517              	.LFB19:
 482:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 483:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_mark_as_used(block_header_t* block)
 484:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccqbdhhV.s 			page 18


 518              		.loc 1 484 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		.loc 1 484 1 is_stmt 0 view .LVU100
 523 0000 10B5     		push	{r4, lr}
 524              	.LCFI5:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 4, -8
 527              		.cfi_offset 14, -4
 528 0002 0446     		mov	r4, r0
 485:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 529              		.loc 1 485 2 is_stmt 1 view .LVU101
 530              		.loc 1 485 25 is_stmt 0 view .LVU102
 531 0004 FFF7FEFF 		bl	block_next
 532              	.LVL38:
 486:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(next);
 533              		.loc 1 486 2 is_stmt 1 view .LVU103
 534 0008 FFF7FEFF 		bl	block_set_prev_used
 535              	.LVL39:
 487:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(block);
 536              		.loc 1 487 2 view .LVU104
 537 000c 2046     		mov	r0, r4
 538 000e FFF7FEFF 		bl	block_set_used
 539              	.LVL40:
 488:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 540              		.loc 1 488 1 is_stmt 0 view .LVU105
 541 0012 10BD     		pop	{r4, pc}
 542              		.loc 1 488 1 view .LVU106
 543              		.cfi_endproc
 544              	.LFE19:
 546              		.section	.text.align_up,"ax",%progbits
 547              		.align	1
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv4-sp-d16
 553              	align_up:
 554              	.LVL41:
 555              	.LFB20:
 489:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 490:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_up(size_t x, size_t align)
 491:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 556              		.loc 1 491 1 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 492:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 561              		.loc 1 492 2 view .LVU108
 562              		.loc 1 492 2 view .LVU109
 563 0000 4B1E     		subs	r3, r1, #1
 564 0002 0B42     		tst	r3, r1
 565 0004 00D0     		beq	.L29
 566              	.L30:
 567              		.loc 1 492 2 discriminator 1 view .LVU110
 568              		.loc 1 492 2 discriminator 1 view .LVU111
ARM GAS  /tmp/ccqbdhhV.s 			page 19


 569              		.loc 1 492 2 discriminator 1 view .LVU112
 570              		.loc 1 492 2 discriminator 1 view .LVU113
 571 0006 FEE7     		b	.L30
 572              	.L29:
 573              		.loc 1 492 2 discriminator 2 view .LVU114
 493:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return (x + (align - 1)) & ~(align - 1);
 574              		.loc 1 493 2 discriminator 2 view .LVU115
 575              		.loc 1 493 12 is_stmt 0 discriminator 2 view .LVU116
 576 0008 0844     		add	r0, r0, r1
 577              	.LVL42:
 578              		.loc 1 493 12 discriminator 2 view .LVU117
 579 000a 0138     		subs	r0, r0, #1
 580              		.loc 1 493 29 discriminator 2 view .LVU118
 581 000c 4942     		rsbs	r1, r1, #0
 582              	.LVL43:
 494:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 583              		.loc 1 494 1 discriminator 2 view .LVU119
 584 000e 0840     		ands	r0, r0, r1
 585 0010 7047     		bx	lr
 586              		.cfi_endproc
 587              	.LFE20:
 589              		.section	.text.align_down,"ax",%progbits
 590              		.align	1
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv4-sp-d16
 596              	align_down:
 597              	.LVL44:
 598              	.LFB21:
 495:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 496:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t align_down(size_t x, size_t align)
 497:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 599              		.loc 1 497 1 is_stmt 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 498:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 604              		.loc 1 498 2 view .LVU121
 605              		.loc 1 498 2 view .LVU122
 606 0000 4B1E     		subs	r3, r1, #1
 607 0002 0B42     		tst	r3, r1
 608 0004 00D0     		beq	.L32
 609              	.L33:
 610              		.loc 1 498 2 discriminator 1 view .LVU123
 611              		.loc 1 498 2 discriminator 1 view .LVU124
 612              		.loc 1 498 2 discriminator 1 view .LVU125
 613              		.loc 1 498 2 discriminator 1 view .LVU126
 614 0006 FEE7     		b	.L33
 615              	.L32:
 616              		.loc 1 498 2 discriminator 2 view .LVU127
 499:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return x - (x & (align - 1));
 617              		.loc 1 499 2 discriminator 2 view .LVU128
 618              		.loc 1 499 11 is_stmt 0 discriminator 2 view .LVU129
 619 0008 4942     		rsbs	r1, r1, #0
 620              	.LVL45:
ARM GAS  /tmp/ccqbdhhV.s 			page 20


 500:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 621              		.loc 1 500 1 discriminator 2 view .LVU130
 622 000a 0840     		ands	r0, r0, r1
 623              	.LVL46:
 624              		.loc 1 500 1 discriminator 2 view .LVU131
 625 000c 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE21:
 629              		.section	.text.align_ptr,"ax",%progbits
 630              		.align	1
 631              		.syntax unified
 632              		.thumb
 633              		.thumb_func
 634              		.fpu fpv4-sp-d16
 636              	align_ptr:
 637              	.LVL47:
 638              	.LFB22:
 501:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 502:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* align_ptr(const void* ptr, size_t align)
 503:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 639              		.loc 1 503 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 504:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const tlsfptr_t aligned =
 644              		.loc 1 504 2 view .LVU133
 505:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		(tlsf_cast(tlsfptr_t, ptr) + (align - 1)) & ~(align - 1);
 645              		.loc 1 505 30 is_stmt 0 view .LVU134
 646 0000 0844     		add	r0, r0, r1
 647              	.LVL48:
 648              		.loc 1 505 30 view .LVU135
 649 0002 0138     		subs	r0, r0, #1
 650              		.loc 1 505 47 view .LVU136
 651 0004 4B42     		rsbs	r3, r1, #0
 652              		.loc 1 505 45 view .LVU137
 653 0006 1840     		ands	r0, r0, r3
 654              	.LVL49:
 506:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
 655              		.loc 1 506 2 is_stmt 1 view .LVU138
 656              		.loc 1 506 2 view .LVU139
 657 0008 4B1E     		subs	r3, r1, #1
 658 000a 0B42     		tst	r3, r1
 659 000c 00D0     		beq	.L35
 660              	.L36:
 661              		.loc 1 506 2 discriminator 1 view .LVU140
 662              		.loc 1 506 2 discriminator 1 view .LVU141
 663              		.loc 1 506 2 discriminator 1 view .LVU142
 664              		.loc 1 506 2 discriminator 1 view .LVU143
 665 000e FEE7     		b	.L36
 666              	.L35:
 667              		.loc 1 506 2 discriminator 2 view .LVU144
 507:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(void*, aligned);
 668              		.loc 1 507 2 discriminator 2 view .LVU145
 508:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 669              		.loc 1 508 1 is_stmt 0 discriminator 2 view .LVU146
 670 0010 7047     		bx	lr
ARM GAS  /tmp/ccqbdhhV.s 			page 21


 671              		.cfi_endproc
 672              	.LFE22:
 674              		.section	.text.adjust_request_size,"ax",%progbits
 675              		.align	1
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu fpv4-sp-d16
 681              	adjust_request_size:
 682              	.LVL50:
 683              	.LFB23:
 509:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 510:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 511:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Adjust an allocation size to be aligned to word size, and no smaller
 512:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** than internal minimum.
 513:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 514:Middlewares/lvgl/src/misc/lv_tlsf.c **** static size_t adjust_request_size(size_t size, size_t align)
 515:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 684              		.loc 1 515 1 is_stmt 1 view -0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		.loc 1 515 1 is_stmt 0 view .LVU148
 689 0000 08B5     		push	{r3, lr}
 690              	.LCFI6:
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 3, -8
 693              		.cfi_offset 14, -4
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t adjust = 0;
 694              		.loc 1 516 2 is_stmt 1 view .LVU149
 695              	.LVL51:
 517:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 696              		.loc 1 517 2 view .LVU150
 697              		.loc 1 517 5 is_stmt 0 view .LVU151
 698 0002 00B9     		cbnz	r0, .L41
 699              	.LVL52:
 700              	.L38:
 518:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t aligned = align_up(size, align);
 520:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 521:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* aligned sized must not exceed block_size_max or we'll go out of bounds on sl_bitmap */
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (aligned < block_size_max) 
 523:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			adjust = tlsf_max(aligned, block_size_min);
 525:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 526:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 527:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return adjust;
 701              		.loc 1 527 2 is_stmt 1 view .LVU152
 528:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 702              		.loc 1 528 1 is_stmt 0 view .LVU153
 703 0004 08BD     		pop	{r3, pc}
 704              	.LVL53:
 705              	.L41:
 706              	.LBB2:
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 707              		.loc 1 519 3 is_stmt 1 view .LVU154
 519:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccqbdhhV.s 			page 22


 708              		.loc 1 519 26 is_stmt 0 view .LVU155
 709 0006 FFF7FEFF 		bl	align_up
 710              	.LVL54:
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 711              		.loc 1 522 3 is_stmt 1 view .LVU156
 522:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 712              		.loc 1 522 6 is_stmt 0 view .LVU157
 713 000a B0F5005F 		cmp	r0, #8192
 714 000e 03D2     		bcs	.L39
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 715              		.loc 1 524 4 is_stmt 1 view .LVU158
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 716              		.loc 1 524 11 is_stmt 0 view .LVU159
 717 0010 0C28     		cmp	r0, #12
 718 0012 38BF     		it	cc
 719 0014 0C20     		movcc	r0, #12
 720              	.LVL55:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 721              		.loc 1 524 11 view .LVU160
 722 0016 F5E7     		b	.L38
 723              	.LVL56:
 724              	.L39:
 524:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 725              		.loc 1 524 11 view .LVU161
 726              	.LBE2:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 727              		.loc 1 516 9 view .LVU162
 728 0018 0020     		movs	r0, #0
 729              	.LVL57:
 516:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 730              		.loc 1 516 9 view .LVU163
 731 001a F3E7     		b	.L38
 732              		.cfi_endproc
 733              	.LFE23:
 735              		.section	.text.remove_free_block,"ax",%progbits
 736              		.align	1
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu fpv4-sp-d16
 742              	remove_free_block:
 743              	.LVL58:
 744              	.LFB27:
 529:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 530:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 531:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF utility functions. In most cases, these are direct translations of
 532:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** the documentation found in the white paper.
 533:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 534:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 535:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_insert(size_t size, int* fli, int* sli)
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 539:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 540:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* Store small blocks in first list. */
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = 0;
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
ARM GAS  /tmp/ccqbdhhV.s 			page 23


 543:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 544:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
 545:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_fls_sizet(size);
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 549:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*fli = fl;
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 553:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 554:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* This version rounds up to the next block size (for allocations) */
 555:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void mapping_search(size_t size, int* fli, int* sli)
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 558:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t round = (1 << (tlsf_fls_sizet(size) - SL_INDEX_COUNT_LOG2)) - 1;
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 561:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(size, fli, sli);
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 564:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 565:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* search_suitable_block(control_t* control, int* fli, int* sli)
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 569:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 570:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 571:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** First, search for a block in the list associated with the given
 572:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** fl/sl index.
 573:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	unsigned int sl_map = control->sl_bitmap[fl] & (~0U << sl);
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 576:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 577:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* No block exists. Search in the next largest first-level list. */
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const unsigned int fl_map = control->fl_bitmap & (~0U << (fl + 1));
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 580:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 581:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* No free blocks available, memory has been exhausted. */
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			return 0;
 583:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 584:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl = tlsf_ffs(fl_map);
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 588:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sl_map && "internal error - second level bitmap is null");
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 592:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 593:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Return the first block in the free list. */
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return control->blocks[fl][sl];
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 596:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 597:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a free block from the free list.*/
 598:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void remove_free_block(control_t* control, block_header_t* block, int fl, int sl)
 599:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccqbdhhV.s 			page 24


 745              		.loc 1 599 1 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		.loc 1 599 1 is_stmt 0 view .LVU165
 750 0000 00B5     		push	{lr}
 751              	.LCFI7:
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 14, -4
 754 0002 8646     		mov	lr, r0
 755 0004 9446     		mov	ip, r2
 600:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* prev = block->prev_free;
 756              		.loc 1 600 2 is_stmt 1 view .LVU166
 757              		.loc 1 600 18 is_stmt 0 view .LVU167
 758 0006 CA68     		ldr	r2, [r1, #12]
 759              	.LVL59:
 601:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block->next_free;
 760              		.loc 1 601 2 is_stmt 1 view .LVU168
 761              		.loc 1 601 18 is_stmt 0 view .LVU169
 762 0008 8868     		ldr	r0, [r1, #8]
 763              	.LVL60:
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(prev && "prev_free field can not be null");
 764              		.loc 1 602 2 is_stmt 1 view .LVU170
 765              		.loc 1 602 2 view .LVU171
 766 000a 5AB1     		cbz	r2, .L44
 767              		.loc 1 602 2 discriminator 2 view .LVU172
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 768              		.loc 1 603 2 discriminator 2 view .LVU173
 769              		.loc 1 603 2 discriminator 2 view .LVU174
 770 000c 58B1     		cbz	r0, .L46
 771              		.loc 1 603 2 discriminator 2 view .LVU175
 604:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 772              		.loc 1 604 2 discriminator 2 view .LVU176
 773              		.loc 1 604 18 is_stmt 0 discriminator 2 view .LVU177
 774 000e C260     		str	r2, [r0, #12]
 605:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->next_free = next;
 775              		.loc 1 605 2 is_stmt 1 discriminator 2 view .LVU178
 776              		.loc 1 605 18 is_stmt 0 discriminator 2 view .LVU179
 777 0010 9060     		str	r0, [r2, #8]
 606:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 607:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* If this block is the head of the free list, set new head. */
 608:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (control->blocks[fl][sl] == block)
 778              		.loc 1 608 2 is_stmt 1 discriminator 2 view .LVU180
 779              		.loc 1 608 25 is_stmt 0 discriminator 2 view .LVU181
 780 0012 03EB4C12 		add	r2, r3, ip, lsl #5
 781              	.LVL61:
 782              		.loc 1 608 25 discriminator 2 view .LVU182
 783 0016 0C32     		adds	r2, r2, #12
 784 0018 5EF82220 		ldr	r2, [lr, r2, lsl #2]
 785              		.loc 1 608 5 discriminator 2 view .LVU183
 786 001c 8A42     		cmp	r2, r1
 787 001e 03D0     		beq	.L49
 788              	.LVL62:
 789              	.L42:
 609:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->blocks[fl][sl] = next;
 611:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccqbdhhV.s 			page 25


 612:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the new head is null, clear the bitmap. */
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (next == &control->block_null)
 614:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->sl_bitmap[fl] &= ~(1U << sl);
 616:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 617:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* If the second bitmap is now empty, clear the fl bitmap. */
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!control->sl_bitmap[fl])
 619:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				control->fl_bitmap &= ~(1U << fl);
 621:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 622:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 623:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 624:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 790              		.loc 1 624 1 view .LVU184
 791 0020 5DF804FB 		ldr	pc, [sp], #4
 792              	.LVL63:
 793              	.L44:
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 794              		.loc 1 602 2 is_stmt 1 discriminator 1 view .LVU185
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 795              		.loc 1 602 2 discriminator 1 view .LVU186
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 796              		.loc 1 602 2 discriminator 1 view .LVU187
 602:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next_free field can not be null");
 797              		.loc 1 602 2 discriminator 1 view .LVU188
 798 0024 FEE7     		b	.L44
 799              	.L46:
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 800              		.loc 1 603 2 discriminator 2 view .LVU189
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 801              		.loc 1 603 2 discriminator 2 view .LVU190
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 802              		.loc 1 603 2 discriminator 2 view .LVU191
 603:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next->prev_free = prev;
 803              		.loc 1 603 2 discriminator 2 view .LVU192
 804 0026 FEE7     		b	.L46
 805              	.LVL64:
 806              	.L49:
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 807              		.loc 1 610 3 view .LVU193
 610:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 808              		.loc 1 610 27 is_stmt 0 view .LVU194
 809 0028 03EB4C12 		add	r2, r3, ip, lsl #5
 810 002c 0C32     		adds	r2, r2, #12
 811 002e 4EF82200 		str	r0, [lr, r2, lsl #2]
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 812              		.loc 1 613 3 is_stmt 1 view .LVU195
 613:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 813              		.loc 1 613 6 is_stmt 0 view .LVU196
 814 0032 8645     		cmp	lr, r0
 815 0034 F4D1     		bne	.L42
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 816              		.loc 1 615 4 is_stmt 1 view .LVU197
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 817              		.loc 1 615 35 is_stmt 0 view .LVU198
 818 0036 0121     		movs	r1, #1
 819              	.LVL65:
ARM GAS  /tmp/ccqbdhhV.s 			page 26


 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 820              		.loc 1 615 35 view .LVU199
 821 0038 9940     		lsls	r1, r1, r3
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 822              		.loc 1 615 27 view .LVU200
 823 003a 0CF10402 		add	r2, ip, #4
 824 003e 0EEB8202 		add	r2, lr, r2, lsl #2
 825 0042 5368     		ldr	r3, [r2, #4]
 826              	.LVL66:
 615:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 827              		.loc 1 615 27 view .LVU201
 828 0044 23EA0103 		bic	r3, r3, r1
 829 0048 5360     		str	r3, [r2, #4]
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 830              		.loc 1 618 4 is_stmt 1 view .LVU202
 618:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 831              		.loc 1 618 7 is_stmt 0 view .LVU203
 832 004a 002B     		cmp	r3, #0
 833 004c E8D1     		bne	.L42
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 834              		.loc 1 620 5 is_stmt 1 view .LVU204
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 835              		.loc 1 620 32 is_stmt 0 view .LVU205
 836 004e 0123     		movs	r3, #1
 837 0050 03FA0CF2 		lsl	r2, r3, ip
 620:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 838              		.loc 1 620 24 view .LVU206
 839 0054 DEF81030 		ldr	r3, [lr, #16]
 840 0058 23EA0203 		bic	r3, r3, r2
 841 005c CEF81030 		str	r3, [lr, #16]
 842              		.loc 1 624 1 view .LVU207
 843 0060 DEE7     		b	.L42
 844              		.cfi_endproc
 845              	.LFE27:
 847              		.section	.text.insert_free_block,"ax",%progbits
 848              		.align	1
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu fpv4-sp-d16
 854              	insert_free_block:
 855              	.LVL67:
 856              	.LFB28:
 625:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 626:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a free block into the free block list. */
 627:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void insert_free_block(control_t* control, block_header_t* block, int fl, int sl)
 628:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 857              		.loc 1 628 1 is_stmt 1 view -0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              		.loc 1 628 1 is_stmt 0 view .LVU209
 862 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 863              	.LCFI8:
 864              		.cfi_def_cfa_offset 24
 865              		.cfi_offset 4, -24
 866              		.cfi_offset 5, -20
ARM GAS  /tmp/ccqbdhhV.s 			page 27


 867              		.cfi_offset 6, -16
 868              		.cfi_offset 7, -12
 869              		.cfi_offset 8, -8
 870              		.cfi_offset 14, -4
 871 0004 1F46     		mov	r7, r3
 629:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* current = control->blocks[fl][sl];
 872              		.loc 1 629 2 is_stmt 1 view .LVU210
 873              		.loc 1 629 18 is_stmt 0 view .LVU211
 874 0006 03EB4213 		add	r3, r3, r2, lsl #5
 875              	.LVL68:
 876              		.loc 1 629 18 view .LVU212
 877 000a 0C33     		adds	r3, r3, #12
 878 000c 50F82330 		ldr	r3, [r0, r3, lsl #2]
 879              	.LVL69:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(current && "free list cannot have a null entry");
 880              		.loc 1 630 2 is_stmt 1 view .LVU213
 881              		.loc 1 630 2 view .LVU214
 882 0010 83B1     		cbz	r3, .L52
 883 0012 0546     		mov	r5, r0
 884 0014 0C46     		mov	r4, r1
 885 0016 1646     		mov	r6, r2
 886              		.loc 1 630 2 discriminator 2 view .LVU215
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 887              		.loc 1 631 2 discriminator 2 view .LVU216
 888              		.loc 1 631 2 discriminator 2 view .LVU217
 889 0018 69B1     		cbz	r1, .L54
 890              		.loc 1 631 2 discriminator 2 view .LVU218
 632:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 891              		.loc 1 632 2 discriminator 2 view .LVU219
 892              		.loc 1 632 19 is_stmt 0 discriminator 2 view .LVU220
 893 001a 8B60     		str	r3, [r1, #8]
 633:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->prev_free = &control->block_null;
 894              		.loc 1 633 2 is_stmt 1 discriminator 2 view .LVU221
 895              		.loc 1 633 19 is_stmt 0 discriminator 2 view .LVU222
 896 001c C860     		str	r0, [r1, #12]
 634:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	current->prev_free = block;
 897              		.loc 1 634 2 is_stmt 1 discriminator 2 view .LVU223
 898              		.loc 1 634 21 is_stmt 0 discriminator 2 view .LVU224
 899 001e D960     		str	r1, [r3, #12]
 635:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 636:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
 900              		.loc 1 636 2 is_stmt 1 discriminator 2 view .LVU225
 901              		.loc 1 636 2 discriminator 2 view .LVU226
 902 0020 0846     		mov	r0, r1
 903              	.LVL70:
 904              		.loc 1 636 2 is_stmt 0 discriminator 2 view .LVU227
 905 0022 FFF7FEFF 		bl	block_to_ptr
 906              	.LVL71:
 907              		.loc 1 636 2 discriminator 2 view .LVU228
 908 0026 8046     		mov	r8, r0
 909 0028 0421     		movs	r1, #4
 910 002a FFF7FEFF 		bl	align_ptr
 911              	.LVL72:
 912 002e 8045     		cmp	r8, r0
 913 0030 02D0     		beq	.L55
 914              	.L56:
 915              		.loc 1 636 2 is_stmt 1 discriminator 3 view .LVU229
ARM GAS  /tmp/ccqbdhhV.s 			page 28


 916              		.loc 1 636 2 discriminator 3 view .LVU230
 917              		.loc 1 636 2 discriminator 3 view .LVU231
 918              		.loc 1 636 2 discriminator 3 view .LVU232
 919 0032 FEE7     		b	.L56
 920              	.LVL73:
 921              	.L52:
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 922              		.loc 1 630 2 discriminator 1 view .LVU233
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 923              		.loc 1 630 2 discriminator 1 view .LVU234
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 924              		.loc 1 630 2 discriminator 1 view .LVU235
 630:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block && "cannot insert a null entry into the free list");
 925              		.loc 1 630 2 discriminator 1 view .LVU236
 926 0034 FEE7     		b	.L52
 927              	.L54:
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 928              		.loc 1 631 2 discriminator 2 view .LVU237
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 929              		.loc 1 631 2 discriminator 2 view .LVU238
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 930              		.loc 1 631 2 discriminator 2 view .LVU239
 631:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block->next_free = current;
 931              		.loc 1 631 2 discriminator 2 view .LVU240
 932 0036 FEE7     		b	.L54
 933              	.LVL74:
 934              	.L55:
 935              		.loc 1 636 2 discriminator 2 view .LVU241
 637:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "block not aligned properly");
 638:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
 639:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Insert the new block at the head of the list, and mark the first-
 640:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** and second-level bitmaps appropriately.
 641:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
 642:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->blocks[fl][sl] = block;
 936              		.loc 1 642 2 discriminator 2 view .LVU242
 937              		.loc 1 642 26 is_stmt 0 discriminator 2 view .LVU243
 938 0038 07EB4613 		add	r3, r7, r6, lsl #5
 939 003c 0C33     		adds	r3, r3, #12
 940 003e 45F82340 		str	r4, [r5, r3, lsl #2]
 643:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap |= (1U << fl);
 941              		.loc 1 643 2 is_stmt 1 discriminator 2 view .LVU244
 942              		.loc 1 643 28 is_stmt 0 discriminator 2 view .LVU245
 943 0042 0123     		movs	r3, #1
 944 0044 03FA06F1 		lsl	r1, r3, r6
 945              		.loc 1 643 21 discriminator 2 view .LVU246
 946 0048 2A69     		ldr	r2, [r5, #16]
 947 004a 0A43     		orrs	r2, r2, r1
 948 004c 2A61     		str	r2, [r5, #16]
 644:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->sl_bitmap[fl] |= (1U << sl);
 949              		.loc 1 644 2 is_stmt 1 discriminator 2 view .LVU247
 950              		.loc 1 644 32 is_stmt 0 discriminator 2 view .LVU248
 951 004e BB40     		lsls	r3, r3, r7
 952              		.loc 1 644 25 discriminator 2 view .LVU249
 953 0050 0436     		adds	r6, r6, #4
 954              	.LVL75:
 955              		.loc 1 644 25 discriminator 2 view .LVU250
 956 0052 05EB8605 		add	r5, r5, r6, lsl #2
ARM GAS  /tmp/ccqbdhhV.s 			page 29


 957              	.LVL76:
 958              		.loc 1 644 25 discriminator 2 view .LVU251
 959 0056 6A68     		ldr	r2, [r5, #4]
 960 0058 1343     		orrs	r3, r3, r2
 961 005a 6B60     		str	r3, [r5, #4]
 645:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 962              		.loc 1 645 1 discriminator 2 view .LVU252
 963 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 964              		.loc 1 645 1 discriminator 2 view .LVU253
 965              		.cfi_endproc
 966              	.LFE28:
 968              		.section	.text.block_can_split,"ax",%progbits
 969              		.align	1
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 973              		.fpu fpv4-sp-d16
 975              	block_can_split:
 976              	.LVL77:
 977              	.LFB31:
 646:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 647:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Remove a given block from the free list. */
 648:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_remove(control_t* control, block_header_t* block)
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 654:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 655:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Insert a given block into the free list. */
 656:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_insert(control_t* control, block_header_t* block)
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 662:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 663:Middlewares/lvgl/src/misc/lv_tlsf.c **** static int block_can_split(block_header_t* block, size_t size)
 664:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 978              		.loc 1 664 1 is_stmt 1 view -0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		.loc 1 664 1 is_stmt 0 view .LVU255
 983 0000 10B5     		push	{r4, lr}
 984              	.LCFI9:
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 0C46     		mov	r4, r1
 665:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size(block) >= sizeof(block_header_t) + size;
 989              		.loc 1 665 2 is_stmt 1 view .LVU256
 990              		.loc 1 665 9 is_stmt 0 view .LVU257
 991 0004 FFF7FEFF 		bl	block_size
 992              	.LVL78:
 993              		.loc 1 665 53 view .LVU258
 994 0008 1034     		adds	r4, r4, #16
ARM GAS  /tmp/ccqbdhhV.s 			page 30


 995              	.LVL79:
 666:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 996              		.loc 1 666 1 view .LVU259
 997 000a A042     		cmp	r0, r4
 998 000c 34BF     		ite	cc
 999 000e 0020     		movcc	r0, #0
 1000 0010 0120     		movcs	r0, #1
 1001 0012 10BD     		pop	{r4, pc}
 1002              		.loc 1 666 1 view .LVU260
 1003              		.cfi_endproc
 1004              	.LFE31:
 1006              		.section	.text.block_split,"ax",%progbits
 1007              		.align	1
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1011              		.fpu fpv4-sp-d16
 1013              	block_split:
 1014              	.LVL80:
 1015              	.LFB32:
 667:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 668:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Split a block into two, the second of which is free. */
 669:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_split(block_header_t* block, size_t size)
 670:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1016              		.loc 1 670 1 is_stmt 1 view -0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		.loc 1 670 1 is_stmt 0 view .LVU262
 1021 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1022              	.LCFI10:
 1023              		.cfi_def_cfa_offset 32
 1024              		.cfi_offset 3, -32
 1025              		.cfi_offset 4, -28
 1026              		.cfi_offset 5, -24
 1027              		.cfi_offset 6, -20
 1028              		.cfi_offset 7, -16
 1029              		.cfi_offset 8, -12
 1030              		.cfi_offset 9, -8
 1031              		.cfi_offset 14, -4
 1032 0004 0746     		mov	r7, r0
 1033 0006 0C46     		mov	r4, r1
 671:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Calculate the amount of space left in the remaining block. */
 672:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining =
 1034              		.loc 1 672 2 is_stmt 1 view .LVU263
 673:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(block_to_ptr(block), size - block_header_overhead);
 1035              		.loc 1 673 19 is_stmt 0 view .LVU264
 1036 0008 FFF7FEFF 		bl	block_to_ptr
 1037              	.LVL81:
 1038              		.loc 1 673 3 view .LVU265
 1039 000c 211F     		subs	r1, r4, #4
 1040 000e FFF7FEFF 		bl	offset_to_block
 1041              	.LVL82:
 1042 0012 0546     		mov	r5, r0
 1043              	.LVL83:
 674:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 675:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t remain_size = block_size(block) - (size + block_header_overhead);
ARM GAS  /tmp/ccqbdhhV.s 			page 31


 1044              		.loc 1 675 2 is_stmt 1 view .LVU266
 1045              		.loc 1 675 29 is_stmt 0 view .LVU267
 1046 0014 3846     		mov	r0, r7
 1047              	.LVL84:
 1048              		.loc 1 675 29 view .LVU268
 1049 0016 FFF7FEFF 		bl	block_size
 1050              	.LVL85:
 1051 001a 0646     		mov	r6, r0
 1052              		.loc 1 675 47 view .LVU269
 1053 001c 031B     		subs	r3, r0, r4
 1054              		.loc 1 675 15 view .LVU270
 1055 001e A3F10409 		sub	r9, r3, #4
 1056              	.LVL86:
 676:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 677:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
 1057              		.loc 1 677 2 is_stmt 1 view .LVU271
 1058              		.loc 1 677 2 view .LVU272
 1059 0022 2846     		mov	r0, r5
 1060 0024 FFF7FEFF 		bl	block_to_ptr
 1061              	.LVL87:
 1062 0028 8046     		mov	r8, r0
 1063 002a 0421     		movs	r1, #4
 1064 002c FFF7FEFF 		bl	align_ptr
 1065              	.LVL88:
 1066 0030 8045     		cmp	r8, r0
 1067 0032 00D0     		beq	.L61
 1068              	.L62:
 1069              		.loc 1 677 2 discriminator 1 view .LVU273
 1070              		.loc 1 677 2 discriminator 1 view .LVU274
 1071              		.loc 1 677 2 discriminator 1 view .LVU275
 1072              		.loc 1 677 2 discriminator 1 view .LVU276
 1073 0034 FEE7     		b	.L62
 1074              	.L61:
 1075              		.loc 1 677 2 discriminator 2 view .LVU277
 678:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		&& "remaining block not aligned properly");
 679:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 680:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
 1076              		.loc 1 680 2 discriminator 2 view .LVU278
 1077              		.loc 1 680 2 discriminator 2 view .LVU279
 1078 0036 04EB0903 		add	r3, r4, r9
 1079 003a 0433     		adds	r3, r3, #4
 1080 003c 9E42     		cmp	r6, r3
 1081 003e 00D0     		beq	.L63
 1082              	.L64:
 1083              		.loc 1 680 2 discriminator 2 view .LVU280
 1084              		.loc 1 680 2 discriminator 2 view .LVU281
 1085              		.loc 1 680 2 discriminator 2 view .LVU282
 1086              		.loc 1 680 2 discriminator 2 view .LVU283
 1087 0040 FEE7     		b	.L64
 1088              	.L63:
 1089              		.loc 1 680 2 discriminator 2 view .LVU284
 681:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(remaining, remain_size);
 1090              		.loc 1 681 2 discriminator 2 view .LVU285
 1091 0042 4946     		mov	r1, r9
 1092 0044 2846     		mov	r0, r5
 1093 0046 FFF7FEFF 		bl	block_set_size
 1094              	.LVL89:
ARM GAS  /tmp/ccqbdhhV.s 			page 32


 682:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
 1095              		.loc 1 682 2 discriminator 2 view .LVU286
 1096              		.loc 1 682 2 discriminator 2 view .LVU287
 1097 004a 2846     		mov	r0, r5
 1098 004c FFF7FEFF 		bl	block_size
 1099              	.LVL90:
 1100 0050 0B28     		cmp	r0, #11
 1101 0052 00D8     		bhi	.L65
 1102              	.L66:
 1103              		.loc 1 682 2 discriminator 3 view .LVU288
 1104              		.loc 1 682 2 discriminator 3 view .LVU289
 1105              		.loc 1 682 2 discriminator 3 view .LVU290
 1106              		.loc 1 682 2 discriminator 3 view .LVU291
 1107 0054 FEE7     		b	.L66
 1108              	.L65:
 1109              		.loc 1 682 2 discriminator 4 view .LVU292
 683:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 684:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, size);
 1110              		.loc 1 684 2 discriminator 4 view .LVU293
 1111 0056 2146     		mov	r1, r4
 1112 0058 3846     		mov	r0, r7
 1113 005a FFF7FEFF 		bl	block_set_size
 1114              	.LVL91:
 685:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_mark_as_free(remaining);
 1115              		.loc 1 685 2 discriminator 4 view .LVU294
 1116 005e 2846     		mov	r0, r5
 1117 0060 FFF7FEFF 		bl	block_mark_as_free
 1118              	.LVL92:
 686:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 687:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining;
 1119              		.loc 1 687 2 discriminator 4 view .LVU295
 688:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1120              		.loc 1 688 1 is_stmt 0 discriminator 4 view .LVU296
 1121 0064 2846     		mov	r0, r5
 1122 0066 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1123              		.loc 1 688 1 discriminator 4 view .LVU297
 1124              		.cfi_endproc
 1125              	.LFE32:
 1127              		.section	.text.block_absorb,"ax",%progbits
 1128              		.align	1
 1129              		.syntax unified
 1130              		.thumb
 1131              		.thumb_func
 1132              		.fpu fpv4-sp-d16
 1134              	block_absorb:
 1135              	.LVL93:
 1136              	.LFB33:
 689:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 690:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Absorb a free block's storage into an adjacent previous free block. */
 691:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_absorb(block_header_t* prev, block_header_t* block)
 692:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1137              		.loc 1 692 1 is_stmt 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141              		.loc 1 692 1 is_stmt 0 view .LVU299
 1142 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccqbdhhV.s 			page 33


 1143              	.LCFI11:
 1144              		.cfi_def_cfa_offset 16
 1145              		.cfi_offset 3, -16
 1146              		.cfi_offset 4, -12
 1147              		.cfi_offset 5, -8
 1148              		.cfi_offset 14, -4
 1149 0002 0446     		mov	r4, r0
 1150 0004 0D46     		mov	r5, r1
 693:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_last(prev) && "previous block can't be last");
 1151              		.loc 1 693 2 is_stmt 1 view .LVU300
 1152              		.loc 1 693 2 view .LVU301
 1153 0006 FFF7FEFF 		bl	block_is_last
 1154              	.LVL94:
 1155              		.loc 1 693 2 is_stmt 0 view .LVU302
 1156 000a 00B1     		cbz	r0, .L69
 1157              	.L70:
 1158              		.loc 1 693 2 is_stmt 1 discriminator 1 view .LVU303
 1159              		.loc 1 693 2 discriminator 1 view .LVU304
 1160              		.loc 1 693 2 discriminator 1 view .LVU305
 1161              		.loc 1 693 2 discriminator 1 view .LVU306
 1162 000c FEE7     		b	.L70
 1163              	.L69:
 1164              		.loc 1 693 2 discriminator 2 view .LVU307
 694:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Note: Leaves flags untouched. */
 695:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	prev->size += block_size(block) + block_header_overhead;
 1165              		.loc 1 695 2 discriminator 2 view .LVU308
 1166              		.loc 1 695 16 is_stmt 0 discriminator 2 view .LVU309
 1167 000e 2846     		mov	r0, r5
 1168 0010 FFF7FEFF 		bl	block_size
 1169              	.LVL95:
 1170              		.loc 1 695 34 discriminator 2 view .LVU310
 1171 0014 021D     		adds	r2, r0, #4
 1172              		.loc 1 695 13 discriminator 2 view .LVU311
 1173 0016 6368     		ldr	r3, [r4, #4]
 1174 0018 1344     		add	r3, r3, r2
 1175 001a 6360     		str	r3, [r4, #4]
 696:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_link_next(prev);
 1176              		.loc 1 696 2 is_stmt 1 discriminator 2 view .LVU312
 1177 001c 2046     		mov	r0, r4
 1178 001e FFF7FEFF 		bl	block_link_next
 1179              	.LVL96:
 697:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return prev;
 1180              		.loc 1 697 2 discriminator 2 view .LVU313
 698:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1181              		.loc 1 698 1 is_stmt 0 discriminator 2 view .LVU314
 1182 0022 2046     		mov	r0, r4
 1183 0024 38BD     		pop	{r3, r4, r5, pc}
 1184              		.loc 1 698 1 discriminator 2 view .LVU315
 1185              		.cfi_endproc
 1186              	.LFE33:
 1188              		.section	.text.control_constructor,"ax",%progbits
 1189              		.align	1
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1193              		.fpu fpv4-sp-d16
 1195              	control_constructor:
ARM GAS  /tmp/ccqbdhhV.s 			page 34


 1196              	.LVL97:
 1197              	.LFB41:
 699:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 700:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent previous free block. */
 701:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_prev(control_t* control, block_header_t* block)
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 704:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* prev = block_prev(block);
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 710:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 711:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 714:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 715:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Merge a just-freed block with an adjacent free block. */
 716:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_merge_next(control_t* control, block_header_t* block)
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 720:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_free(next))
 722:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_last(block) && "previous block can't be last");
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 726:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 727:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 730:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 731:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a block, return to pool. */
 732:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_free(control_t* control, block_header_t* block, size_t size)
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 736:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 741:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 743:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 744:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Trim any trailing block space off the end of a used block, return to pool. */
 745:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void block_trim_used(control_t* control, block_header_t* block, size_t size)
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 749:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 750:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If the next block is free, we must coalesce. */
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* remaining_block = block_split(block, size);
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 753:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccqbdhhV.s 			page 35


 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_merge_next(control, remaining_block);
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 756:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 758:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 759:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_trim_free_leading(control_t* control, block_header_t* block, size_t si
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 763:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 764:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* We want the 2nd block. */
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remaining_block = block_split(block, size - block_header_overhead);
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 767:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 770:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 771:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return remaining_block;
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 774:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 775:Middlewares/lvgl/src/misc/lv_tlsf.c **** static block_header_t* block_locate_free(control_t* control, size_t size)
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 779:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size)
 781:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		mapping_search(size, &fl, &sl);
 783:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 784:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
 785:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** mapping_search can futz with the size, so for excessively large sizes it can sometimes wind up
 786:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** with indices that are off the end of the block array.
 787:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** So, we protect against that here, since this is the only callsite of mapping_search.
 788:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** Note that we don't need to check sl, since it comes from a modulo operation that guarantees it
 789:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (fl < FL_INDEX_COUNT)
 791:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = search_suitable_block(control, &fl, &sl);
 793:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 794:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 795:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 797:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_size(block) >= size);
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 800:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 801:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block;
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 804:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 805:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void* block_prepare_used(control_t* control, block_header_t* block, size_t size)
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 809:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(size && "size must be non-zero");
ARM GAS  /tmp/ccqbdhhV.s 			page 36


 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 814:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 817:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 818:Middlewares/lvgl/src/misc/lv_tlsf.c **** /* Clear structure and point all empty lists at the null block. */
 819:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void control_constructor(control_t* control)
 820:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1198              		.loc 1 820 1 is_stmt 1 view -0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 821:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 1203              		.loc 1 821 2 view .LVU317
 822:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 823:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.next_free = &control->block_null;
 1204              		.loc 1 823 2 view .LVU318
 1205              		.loc 1 823 32 is_stmt 0 view .LVU319
 1206 0000 8060     		str	r0, [r0, #8]
 824:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->block_null.prev_free = &control->block_null;
 1207              		.loc 1 824 2 is_stmt 1 view .LVU320
 1208              		.loc 1 824 32 is_stmt 0 view .LVU321
 1209 0002 C060     		str	r0, [r0, #12]
 825:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 826:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control->fl_bitmap = 0;
 1210              		.loc 1 826 2 is_stmt 1 view .LVU322
 1211              		.loc 1 826 21 is_stmt 0 view .LVU323
 1212 0004 0021     		movs	r1, #0
 1213 0006 0161     		str	r1, [r0, #16]
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1214              		.loc 1 827 2 is_stmt 1 view .LVU324
 1215              	.LVL98:
 1216              		.loc 1 827 2 is_stmt 0 view .LVU325
 1217 0008 08E0     		b	.L73
 1218              	.LVL99:
 1219              	.L75:
 828:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control->sl_bitmap[i] = 0;
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 831:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 832:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			control->blocks[i][j] = &control->block_null;
 1220              		.loc 1 832 4 is_stmt 1 discriminator 3 view .LVU326
 1221              		.loc 1 832 26 is_stmt 0 discriminator 3 view .LVU327
 1222 000a 03EB4112 		add	r2, r3, r1, lsl #5
 1223 000e 0C32     		adds	r2, r2, #12
 1224 0010 40F82200 		str	r0, [r0, r2, lsl #2]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1225              		.loc 1 830 35 is_stmt 1 discriminator 3 view .LVU328
 1226 0014 0133     		adds	r3, r3, #1
 1227              	.LVL100:
 1228              	.L74:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1229              		.loc 1 830 15 discriminator 1 view .LVU329
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
ARM GAS  /tmp/ccqbdhhV.s 			page 37


 1230              		.loc 1 830 3 is_stmt 0 discriminator 1 view .LVU330
 1231 0016 1F2B     		cmp	r3, #31
 1232 0018 F7DD     		ble	.L75
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1233              		.loc 1 827 34 is_stmt 1 discriminator 2 view .LVU331
 1234 001a 0131     		adds	r1, r1, #1
 1235              	.LVL101:
 1236              	.L73:
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1237              		.loc 1 827 14 discriminator 1 view .LVU332
 827:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 1238              		.loc 1 827 2 is_stmt 0 discriminator 1 view .LVU333
 1239 001c 0629     		cmp	r1, #6
 1240 001e 05DC     		bgt	.L77
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1241              		.loc 1 829 3 is_stmt 1 view .LVU334
 829:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 1242              		.loc 1 829 25 is_stmt 0 view .LVU335
 1243 0020 0A1D     		adds	r2, r1, #4
 1244 0022 00EB8202 		add	r2, r0, r2, lsl #2
 1245 0026 0023     		movs	r3, #0
 1246 0028 5360     		str	r3, [r2, #4]
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1247              		.loc 1 830 3 is_stmt 1 view .LVU336
 1248              	.LVL102:
 830:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 1249              		.loc 1 830 3 is_stmt 0 view .LVU337
 1250 002a F4E7     		b	.L74
 1251              	.LVL103:
 1252              	.L77:
 833:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 834:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 835:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1253              		.loc 1 835 1 view .LVU338
 1254 002c 7047     		bx	lr
 1255              		.cfi_endproc
 1256              	.LFE41:
 1258              		.section	.text.integrity_walker,"ax",%progbits
 1259              		.align	1
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	integrity_walker:
 1266              	.LVL104:
 1267              	.LFB42:
 836:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 837:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 838:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Debugging utilities.
 839:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 840:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 841:Middlewares/lvgl/src/misc/lv_tlsf.c **** typedef struct integrity_t
 842:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 843:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int prev_status;
 844:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status;
 845:Middlewares/lvgl/src/misc/lv_tlsf.c **** } integrity_t;
 846:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccqbdhhV.s 			page 38


 847:Middlewares/lvgl/src/misc/lv_tlsf.c **** #define tlsf_insist(x) { tlsf_assert(x); if (!(x)) { status--; } }
 848:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 849:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void integrity_walker(void* ptr, size_t size, int used, void* user)
 850:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1268              		.loc 1 850 1 is_stmt 1 view -0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		.loc 1 850 1 is_stmt 0 view .LVU340
 1273 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1274              	.LCFI12:
 1275              		.cfi_def_cfa_offset 24
 1276              		.cfi_offset 4, -24
 1277              		.cfi_offset 5, -20
 1278              		.cfi_offset 6, -16
 1279              		.cfi_offset 7, -12
 1280              		.cfi_offset 8, -8
 1281              		.cfi_offset 14, -4
 1282 0004 0F46     		mov	r7, r1
 1283 0006 1D46     		mov	r5, r3
 851:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_from_ptr(ptr);
 1284              		.loc 1 851 2 is_stmt 1 view .LVU341
 1285              		.loc 1 851 26 is_stmt 0 view .LVU342
 1286 0008 FFF7FEFF 		bl	block_from_ptr
 1287              	.LVL105:
 1288              		.loc 1 851 26 view .LVU343
 1289 000c 0446     		mov	r4, r0
 1290              	.LVL106:
 852:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t* integ = tlsf_cast(integrity_t*, user);
 1291              		.loc 1 852 2 is_stmt 1 view .LVU344
 853:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_prev_status = block_is_prev_free(block) ? 1 : 0;
 1292              		.loc 1 853 2 view .LVU345
 1293              		.loc 1 853 31 is_stmt 0 view .LVU346
 1294 000e FFF7FEFF 		bl	block_is_prev_free
 1295              	.LVL107:
 1296              		.loc 1 853 61 view .LVU347
 1297 0012 061E     		subs	r6, r0, #0
 1298 0014 18BF     		it	ne
 1299 0016 0126     		movne	r6, #1
 1300              	.LVL108:
 854:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int this_status = block_is_free(block) ? 1 : 0;
 1301              		.loc 1 854 2 is_stmt 1 view .LVU348
 1302              		.loc 1 854 26 is_stmt 0 view .LVU349
 1303 0018 2046     		mov	r0, r4
 1304 001a FFF7FEFF 		bl	block_is_free
 1305              	.LVL109:
 1306              		.loc 1 854 51 view .LVU350
 1307 001e B0F10008 		subs	r8, r0, #0
 1308 0022 18BF     		it	ne
 1309 0024 4FF00108 		movne	r8, #1
 1310              	.LVL110:
 855:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t this_block_size = block_size(block);
 1311              		.loc 1 855 2 is_stmt 1 view .LVU351
 1312              		.loc 1 855 33 is_stmt 0 view .LVU352
 1313 0028 2046     		mov	r0, r4
 1314 002a FFF7FEFF 		bl	block_size
 1315              	.LVL111:
ARM GAS  /tmp/ccqbdhhV.s 			page 39


 856:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 857:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 1316              		.loc 1 857 2 is_stmt 1 view .LVU353
 858:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)used;
 1317              		.loc 1 858 2 view .LVU354
 859:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
 1318              		.loc 1 859 2 view .LVU355
 1319              		.loc 1 859 2 view .LVU356
 1320 002e 2B68     		ldr	r3, [r5]
 1321 0030 B342     		cmp	r3, r6
 1322 0032 00D0     		beq	.L79
 1323              	.L80:
 1324              		.loc 1 859 2 discriminator 1 view .LVU357
 1325              		.loc 1 859 2 discriminator 1 view .LVU358
 1326              		.loc 1 859 2 discriminator 1 view .LVU359
 1327              		.loc 1 859 2 discriminator 1 view .LVU360
 1328 0034 FEE7     		b	.L80
 1329              	.L79:
 1330              		.loc 1 859 2 discriminator 5 view .LVU361
 1331              		.loc 1 859 2 discriminator 5 view .LVU362
 1332              		.loc 1 859 80 discriminator 5 view .LVU363
 860:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_insist(size == this_block_size && "block size incorrect");
 1333              		.loc 1 860 2 discriminator 5 view .LVU364
 1334              		.loc 1 860 2 discriminator 5 view .LVU365
 1335 0036 B842     		cmp	r0, r7
 1336 0038 00D0     		beq	.L81
 1337              	.L82:
 1338              		.loc 1 860 2 discriminator 2 view .LVU366
 1339              		.loc 1 860 2 discriminator 2 view .LVU367
 1340              		.loc 1 860 2 discriminator 2 view .LVU368
 1341              		.loc 1 860 2 discriminator 2 view .LVU369
 1342 003a FEE7     		b	.L82
 1343              	.L81:
 1344              		.loc 1 860 2 discriminator 5 view .LVU370
 1345              		.loc 1 860 2 discriminator 5 view .LVU371
 1346              		.loc 1 860 64 discriminator 5 view .LVU372
 861:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 862:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->prev_status = this_status;
 1347              		.loc 1 862 2 discriminator 5 view .LVU373
 1348              		.loc 1 862 21 is_stmt 0 discriminator 5 view .LVU374
 1349 003c C5F80080 		str	r8, [r5]
 863:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integ->status += status;
 1350              		.loc 1 863 2 is_stmt 1 discriminator 5 view .LVU375
 864:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1351              		.loc 1 864 1 is_stmt 0 discriminator 5 view .LVU376
 1352 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1353              		.loc 1 864 1 discriminator 5 view .LVU377
 1354              		.cfi_endproc
 1355              	.LFE42:
 1357              		.section	.text.default_walker,"ax",%progbits
 1358              		.align	1
 1359              		.syntax unified
 1360              		.thumb
 1361              		.thumb_func
 1362              		.fpu fpv4-sp-d16
 1364              	default_walker:
 1365              	.LVL112:
ARM GAS  /tmp/ccqbdhhV.s 			page 40


 1366              	.LFB44:
 865:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 866:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check(lv_tlsf_t tlsf)
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 869:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 872:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 873:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the free lists and bitmaps are accurate. */
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	for (i = 0; i < FL_INDEX_COUNT; ++i)
 875:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		for (j = 0; j < SL_INDEX_COUNT; ++j)
 877:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int fl_map = control->fl_bitmap & (1U << i);
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 882:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 883:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that first- and second-level lists agree. */
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!fl_map)
 885:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!sl_map && "second-level map must be null");
 887:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 888:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (!sl_map)
 890:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block == &control->block_null && "block list must be null");
 892:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 893:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 894:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 895:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Check that there is at least one free block. */
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(sl_list && "no free blocks in second-level map");
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 898:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			while (block != &control->block_null)
 900:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				int fli, sli;
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 907:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				mapping_insert(block_size(block), &fli, &sli);
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 911:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 912:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 913:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 914:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return status;
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 917:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 918:Middlewares/lvgl/src/misc/lv_tlsf.c **** #undef tlsf_insist
 919:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 920:Middlewares/lvgl/src/misc/lv_tlsf.c **** static void default_walker(void* ptr, size_t size, int used, void* user)
ARM GAS  /tmp/ccqbdhhV.s 			page 41


 921:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 1367              		.loc 1 921 1 is_stmt 1 view -0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 1371              		@ link register save eliminated.
 922:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)user;
 1372              		.loc 1 922 2 view .LVU379
 923:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	printf("\t%p %s size: %x (%p)\n", ptr, used ? "used" : "free", (unsigned int)size, (void*)block_fr
 1373              		.loc 1 923 112 view .LVU380
 924:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1374              		.loc 1 924 1 is_stmt 0 view .LVU381
 1375 0000 7047     		bx	lr
 1376              		.cfi_endproc
 1377              	.LFE44:
 1379              		.section	.text.tlsf_fls,"ax",%progbits
 1380              		.align	1
 1381              		.syntax unified
 1382              		.thumb
 1383              		.thumb_func
 1384              		.fpu fpv4-sp-d16
 1386              	tlsf_fls:
 1387              	.LVL113:
 1388              	.LFB2:
 101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const int bit = word ? 32 - __builtin_clz(word) : 0;
 1389              		.loc 1 101 1 is_stmt 1 view -0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 0
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1394              		.loc 1 102 2 view .LVU383
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1395              		.loc 1 102 50 is_stmt 0 view .LVU384
 1396 0000 28B1     		cbz	r0, .L87
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1397              		.loc 1 102 30 discriminator 1 view .LVU385
 1398 0002 B0FA80F0 		clz	r0, r0
 1399              	.LVL114:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1400              		.loc 1 102 50 discriminator 1 view .LVU386
 1401 0006 C0F12000 		rsb	r0, r0, #32
 1402              	.L86:
 1403              	.LVL115:
 103:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1404              		.loc 1 103 2 is_stmt 1 discriminator 4 view .LVU387
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1405              		.loc 1 104 1 is_stmt 0 discriminator 4 view .LVU388
 1406 000a 0138     		subs	r0, r0, #1
 1407              	.LVL116:
 104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1408              		.loc 1 104 1 discriminator 4 view .LVU389
 1409 000c 7047     		bx	lr
 1410              	.LVL117:
 1411              	.L87:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1412              		.loc 1 102 50 view .LVU390
ARM GAS  /tmp/ccqbdhhV.s 			page 42


 1413 000e 0020     		movs	r0, #0
 1414              	.LVL118:
 102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return bit - 1;
 1415              		.loc 1 102 50 view .LVU391
 1416 0010 FBE7     		b	.L86
 1417              		.cfi_endproc
 1418              	.LFE2:
 1420              		.section	.text.mapping_insert,"ax",%progbits
 1421              		.align	1
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu fpv4-sp-d16
 1427              	mapping_insert:
 1428              	.LVL119:
 1429              	.LFB24:
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1430              		.loc 1 536 1 is_stmt 1 view -0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 536:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1434              		.loc 1 536 1 is_stmt 0 view .LVU393
 1435 0000 70B5     		push	{r4, r5, r6, lr}
 1436              	.LCFI13:
 1437              		.cfi_def_cfa_offset 16
 1438              		.cfi_offset 4, -16
 1439              		.cfi_offset 5, -12
 1440              		.cfi_offset 6, -8
 1441              		.cfi_offset 14, -4
 1442 0002 0446     		mov	r4, r0
 1443 0004 0D46     		mov	r5, r1
 1444 0006 1646     		mov	r6, r2
 537:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size < SMALL_BLOCK_SIZE)
 1445              		.loc 1 537 2 is_stmt 1 view .LVU394
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1446              		.loc 1 538 2 view .LVU395
 538:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1447              		.loc 1 538 5 is_stmt 0 view .LVU396
 1448 0008 7F28     		cmp	r0, #127
 1449 000a 08D8     		bhi	.L89
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
 1450              		.loc 1 541 3 is_stmt 1 view .LVU397
 1451              	.LVL120:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1452              		.loc 1 542 3 view .LVU398
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1453              		.loc 1 542 6 is_stmt 0 view .LVU399
 1454 000c 0028     		cmp	r0, #0
 1455 000e 04DB     		blt	.L93
 1456              	.LVL121:
 1457              	.L90:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1458              		.loc 1 542 6 view .LVU400
 1459 0010 8410     		asrs	r4, r0, #2
 1460              	.LVL122:
 541:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size) / (SMALL_BLOCK_SIZE / SL_INDEX_COUNT);
ARM GAS  /tmp/ccqbdhhV.s 			page 43


 1461              		.loc 1 541 6 view .LVU401
 1462 0012 0020     		movs	r0, #0
 1463              	.LVL123:
 1464              	.L91:
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1465              		.loc 1 550 2 is_stmt 1 view .LVU402
 550:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 1466              		.loc 1 550 7 is_stmt 0 view .LVU403
 1467 0014 2860     		str	r0, [r5]
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1468              		.loc 1 551 2 is_stmt 1 view .LVU404
 551:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1469              		.loc 1 551 7 is_stmt 0 view .LVU405
 1470 0016 3460     		str	r4, [r6]
 552:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1471              		.loc 1 552 1 view .LVU406
 1472 0018 70BD     		pop	{r4, r5, r6, pc}
 1473              	.LVL124:
 1474              	.L93:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1475              		.loc 1 542 6 view .LVU407
 1476 001a 0330     		adds	r0, r0, #3
 1477              	.LVL125:
 542:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1478              		.loc 1 542 6 view .LVU408
 1479 001c F8E7     		b	.L90
 1480              	.LVL126:
 1481              	.L89:
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1482              		.loc 1 546 3 is_stmt 1 view .LVU409
 546:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl = tlsf_cast(int, size >> (fl - SL_INDEX_COUNT_LOG2)) ^ (1 << SL_INDEX_COUNT_LOG2);
 1483              		.loc 1 546 8 is_stmt 0 view .LVU410
 1484 001e FFF7FEFF 		bl	tlsf_fls
 1485              	.LVL127:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1486              		.loc 1 547 3 is_stmt 1 view .LVU411
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1487              		.loc 1 547 8 is_stmt 0 view .LVU412
 1488 0022 431F     		subs	r3, r0, #5
 1489 0024 DC40     		lsrs	r4, r4, r3
 1490              	.LVL128:
 547:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		fl -= (FL_INDEX_SHIFT - 1);
 1491              		.loc 1 547 6 view .LVU413
 1492 0026 84F02004 		eor	r4, r4, #32
 1493              	.LVL129:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1494              		.loc 1 548 3 is_stmt 1 view .LVU414
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1495              		.loc 1 548 6 is_stmt 0 view .LVU415
 1496 002a 0638     		subs	r0, r0, #6
 1497              	.LVL130:
 548:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1498              		.loc 1 548 6 view .LVU416
 1499 002c F2E7     		b	.L91
 1500              		.cfi_endproc
 1501              	.LFE24:
 1503              		.section	.text.block_insert,"ax",%progbits
ARM GAS  /tmp/ccqbdhhV.s 			page 44


 1504              		.align	1
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu fpv4-sp-d16
 1510              	block_insert:
 1511              	.LVL131:
 1512              	.LFB30:
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1513              		.loc 1 657 1 is_stmt 1 view -0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 8
 1516              		@ frame_needed = 0, uses_anonymous_args = 0
 657:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1517              		.loc 1 657 1 is_stmt 0 view .LVU418
 1518 0000 30B5     		push	{r4, r5, lr}
 1519              	.LCFI14:
 1520              		.cfi_def_cfa_offset 12
 1521              		.cfi_offset 4, -12
 1522              		.cfi_offset 5, -8
 1523              		.cfi_offset 14, -4
 1524 0002 83B0     		sub	sp, sp, #12
 1525              	.LCFI15:
 1526              		.cfi_def_cfa_offset 24
 1527 0004 0546     		mov	r5, r0
 1528 0006 0C46     		mov	r4, r1
 658:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1529              		.loc 1 658 2 is_stmt 1 view .LVU419
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1530              		.loc 1 659 2 view .LVU420
 1531 0008 0846     		mov	r0, r1
 1532              	.LVL132:
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1533              		.loc 1 659 2 is_stmt 0 view .LVU421
 1534 000a FFF7FEFF 		bl	block_size
 1535              	.LVL133:
 659:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	insert_free_block(control, block, fl, sl);
 1536              		.loc 1 659 2 view .LVU422
 1537 000e 6A46     		mov	r2, sp
 1538 0010 01A9     		add	r1, sp, #4
 1539 0012 FFF7FEFF 		bl	mapping_insert
 1540              	.LVL134:
 660:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1541              		.loc 1 660 2 is_stmt 1 view .LVU423
 1542 0016 009B     		ldr	r3, [sp]
 1543 0018 019A     		ldr	r2, [sp, #4]
 1544 001a 2146     		mov	r1, r4
 1545 001c 2846     		mov	r0, r5
 1546 001e FFF7FEFF 		bl	insert_free_block
 1547              	.LVL135:
 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1548              		.loc 1 661 1 is_stmt 0 view .LVU424
 1549 0022 03B0     		add	sp, sp, #12
 1550              	.LCFI16:
 1551              		.cfi_def_cfa_offset 12
 1552              		@ sp needed
 1553 0024 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccqbdhhV.s 			page 45


 661:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1554              		.loc 1 661 1 view .LVU425
 1555              		.cfi_endproc
 1556              	.LFE30:
 1558              		.section	.text.block_trim_free,"ax",%progbits
 1559              		.align	1
 1560              		.syntax unified
 1561              		.thumb
 1562              		.thumb_func
 1563              		.fpu fpv4-sp-d16
 1565              	block_trim_free:
 1566              	.LVL136:
 1567              	.LFB36:
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1568              		.loc 1 733 1 is_stmt 1 view -0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 0
 1571              		@ frame_needed = 0, uses_anonymous_args = 0
 733:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block must be free");
 1572              		.loc 1 733 1 is_stmt 0 view .LVU427
 1573 0000 70B5     		push	{r4, r5, r6, lr}
 1574              	.LCFI17:
 1575              		.cfi_def_cfa_offset 16
 1576              		.cfi_offset 4, -16
 1577              		.cfi_offset 5, -12
 1578              		.cfi_offset 6, -8
 1579              		.cfi_offset 14, -4
 1580 0002 0646     		mov	r6, r0
 1581 0004 0C46     		mov	r4, r1
 1582 0006 1546     		mov	r5, r2
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1583              		.loc 1 734 2 is_stmt 1 view .LVU428
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1584              		.loc 1 734 2 view .LVU429
 1585 0008 0846     		mov	r0, r1
 1586              	.LVL137:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1587              		.loc 1 734 2 is_stmt 0 view .LVU430
 1588 000a FFF7FEFF 		bl	block_is_free
 1589              	.LVL138:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1590              		.loc 1 734 2 view .LVU431
 1591 000e 00B9     		cbnz	r0, .L97
 1592              	.L98:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1593              		.loc 1 734 2 is_stmt 1 discriminator 1 view .LVU432
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1594              		.loc 1 734 2 discriminator 1 view .LVU433
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1595              		.loc 1 734 2 discriminator 1 view .LVU434
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1596              		.loc 1 734 2 discriminator 1 view .LVU435
 1597 0010 FEE7     		b	.L98
 1598              	.L97:
 734:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1599              		.loc 1 734 2 discriminator 4 view .LVU436
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  /tmp/ccqbdhhV.s 			page 46


 1600              		.loc 1 735 2 discriminator 4 view .LVU437
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1601              		.loc 1 735 6 is_stmt 0 discriminator 4 view .LVU438
 1602 0012 2946     		mov	r1, r5
 1603 0014 2046     		mov	r0, r4
 1604 0016 FFF7FEFF 		bl	block_can_split
 1605              	.LVL139:
 735:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1606              		.loc 1 735 5 discriminator 4 view .LVU439
 1607 001a 00B9     		cbnz	r0, .L101
 1608              	.LVL140:
 1609              	.L96:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1610              		.loc 1 742 1 view .LVU440
 1611 001c 70BD     		pop	{r4, r5, r6, pc}
 1612              	.LVL141:
 1613              	.L101:
 1614              	.LBB3:
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1615              		.loc 1 737 3 is_stmt 1 view .LVU441
 737:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_link_next(block);
 1616              		.loc 1 737 37 is_stmt 0 view .LVU442
 1617 001e 2946     		mov	r1, r5
 1618 0020 2046     		mov	r0, r4
 1619 0022 FFF7FEFF 		bl	block_split
 1620              	.LVL142:
 1621 0026 0546     		mov	r5, r0
 1622              	.LVL143:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1623              		.loc 1 738 3 is_stmt 1 view .LVU443
 1624 0028 2046     		mov	r0, r4
 1625              	.LVL144:
 738:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1626              		.loc 1 738 3 is_stmt 0 view .LVU444
 1627 002a FFF7FEFF 		bl	block_link_next
 1628              	.LVL145:
 739:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 1629              		.loc 1 739 3 is_stmt 1 view .LVU445
 1630 002e 2846     		mov	r0, r5
 1631 0030 FFF7FEFF 		bl	block_set_prev_free
 1632              	.LVL146:
 740:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1633              		.loc 1 740 3 view .LVU446
 1634 0034 2946     		mov	r1, r5
 1635 0036 3046     		mov	r0, r6
 1636 0038 FFF7FEFF 		bl	block_insert
 1637              	.LVL147:
 1638              	.LBE3:
 742:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1639              		.loc 1 742 1 is_stmt 0 view .LVU447
 1640 003c EEE7     		b	.L96
 1641              		.cfi_endproc
 1642              	.LFE36:
 1644              		.section	.text.block_prepare_used,"ax",%progbits
 1645              		.align	1
 1646              		.syntax unified
 1647              		.thumb
ARM GAS  /tmp/ccqbdhhV.s 			page 47


 1648              		.thumb_func
 1649              		.fpu fpv4-sp-d16
 1651              	block_prepare_used:
 1652              	.LVL148:
 1653              	.LFB40:
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1654              		.loc 1 806 1 is_stmt 1 view -0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 806:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 1658              		.loc 1 806 1 is_stmt 0 view .LVU449
 1659 0000 10B5     		push	{r4, lr}
 1660              	.LCFI18:
 1661              		.cfi_def_cfa_offset 8
 1662              		.cfi_offset 4, -8
 1663              		.cfi_offset 14, -4
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1664              		.loc 1 807 2 is_stmt 1 view .LVU450
 1665              	.LVL149:
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1666              		.loc 1 808 2 view .LVU451
 808:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1667              		.loc 1 808 5 is_stmt 0 view .LVU452
 1668 0002 0C46     		mov	r4, r1
 1669 0004 51B1     		cbz	r1, .L106
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1670              		.loc 1 810 3 is_stmt 1 view .LVU453
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1671              		.loc 1 810 3 view .LVU454
 1672 0006 02B9     		cbnz	r2, .L104
 1673              	.L105:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1674              		.loc 1 810 3 discriminator 1 view .LVU455
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1675              		.loc 1 810 3 discriminator 1 view .LVU456
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1676              		.loc 1 810 3 discriminator 1 view .LVU457
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1677              		.loc 1 810 3 discriminator 1 view .LVU458
 1678 0008 FEE7     		b	.L105
 1679              	.L104:
 810:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_trim_free(control, block, size);
 1680              		.loc 1 810 3 discriminator 2 view .LVU459
 811:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_used(block);
 1681              		.loc 1 811 3 discriminator 2 view .LVU460
 1682 000a FFF7FEFF 		bl	block_trim_free
 1683              	.LVL150:
 812:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = block_to_ptr(block);
 1684              		.loc 1 812 3 discriminator 2 view .LVU461
 1685 000e 2046     		mov	r0, r4
 1686 0010 FFF7FEFF 		bl	block_mark_as_used
 1687              	.LVL151:
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1688              		.loc 1 813 3 discriminator 2 view .LVU462
 813:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1689              		.loc 1 813 7 is_stmt 0 discriminator 2 view .LVU463
ARM GAS  /tmp/ccqbdhhV.s 			page 48


 1690 0014 2046     		mov	r0, r4
 1691 0016 FFF7FEFF 		bl	block_to_ptr
 1692              	.LVL152:
 1693              	.L102:
 816:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1694              		.loc 1 816 1 view .LVU464
 1695 001a 10BD     		pop	{r4, pc}
 1696              	.LVL153:
 1697              	.L106:
 807:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 1698              		.loc 1 807 8 view .LVU465
 1699 001c 0846     		mov	r0, r1
 1700              	.LVL154:
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1701              		.loc 1 815 2 is_stmt 1 view .LVU466
 815:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1702              		.loc 1 815 9 is_stmt 0 view .LVU467
 1703 001e FCE7     		b	.L102
 1704              		.cfi_endproc
 1705              	.LFE40:
 1707              		.section	.text.block_trim_free_leading,"ax",%progbits
 1708              		.align	1
 1709              		.syntax unified
 1710              		.thumb
 1711              		.thumb_func
 1712              		.fpu fpv4-sp-d16
 1714              	block_trim_free_leading:
 1715              	.LVL155:
 1716              	.LFB38:
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1717              		.loc 1 760 1 is_stmt 1 view -0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 0
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 760:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* remaining_block = block;
 1721              		.loc 1 760 1 is_stmt 0 view .LVU469
 1722 0000 70B5     		push	{r4, r5, r6, lr}
 1723              	.LCFI19:
 1724              		.cfi_def_cfa_offset 16
 1725              		.cfi_offset 4, -16
 1726              		.cfi_offset 5, -12
 1727              		.cfi_offset 6, -8
 1728              		.cfi_offset 14, -4
 1729 0002 0646     		mov	r6, r0
 1730 0004 0C46     		mov	r4, r1
 1731 0006 1546     		mov	r5, r2
 761:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 1732              		.loc 1 761 2 is_stmt 1 view .LVU470
 1733              	.LVL156:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1734              		.loc 1 762 2 view .LVU471
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1735              		.loc 1 762 6 is_stmt 0 view .LVU472
 1736 0008 1146     		mov	r1, r2
 1737              	.LVL157:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1738              		.loc 1 762 6 view .LVU473
ARM GAS  /tmp/ccqbdhhV.s 			page 49


 1739 000a 2046     		mov	r0, r4
 1740              	.LVL158:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1741              		.loc 1 762 6 view .LVU474
 1742 000c FFF7FEFF 		bl	block_can_split
 1743              	.LVL159:
 762:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1744              		.loc 1 762 5 view .LVU475
 1745 0010 08B9     		cbnz	r0, .L111
 1746              	.LVL160:
 1747              	.L109:
 772:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1748              		.loc 1 772 2 is_stmt 1 view .LVU476
 773:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1749              		.loc 1 773 1 is_stmt 0 view .LVU477
 1750 0012 2046     		mov	r0, r4
 1751 0014 70BD     		pop	{r4, r5, r6, pc}
 1752              	.LVL161:
 1753              	.L111:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1754              		.loc 1 765 3 is_stmt 1 view .LVU478
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1755              		.loc 1 765 21 is_stmt 0 view .LVU479
 1756 0016 291F     		subs	r1, r5, #4
 1757 0018 2046     		mov	r0, r4
 1758 001a FFF7FEFF 		bl	block_split
 1759              	.LVL162:
 1760 001e 0546     		mov	r5, r0
 1761              	.LVL163:
 766:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1762              		.loc 1 766 3 is_stmt 1 view .LVU480
 1763 0020 FFF7FEFF 		bl	block_set_prev_free
 1764              	.LVL164:
 768:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 1765              		.loc 1 768 3 view .LVU481
 1766 0024 2046     		mov	r0, r4
 1767 0026 FFF7FEFF 		bl	block_link_next
 1768              	.LVL165:
 769:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1769              		.loc 1 769 3 view .LVU482
 1770 002a 2146     		mov	r1, r4
 1771 002c 3046     		mov	r0, r6
 1772 002e FFF7FEFF 		bl	block_insert
 1773              	.LVL166:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1774              		.loc 1 765 21 is_stmt 0 view .LVU483
 1775 0032 2C46     		mov	r4, r5
 1776              	.LVL167:
 765:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_free(remaining_block);
 1777              		.loc 1 765 21 view .LVU484
 1778 0034 EDE7     		b	.L109
 1779              		.cfi_endproc
 1780              	.LFE38:
 1782              		.section	.text.block_remove,"ax",%progbits
 1783              		.align	1
 1784              		.syntax unified
 1785              		.thumb
ARM GAS  /tmp/ccqbdhhV.s 			page 50


 1786              		.thumb_func
 1787              		.fpu fpv4-sp-d16
 1789              	block_remove:
 1790              	.LVL168:
 1791              	.LFB29:
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1792              		.loc 1 649 1 is_stmt 1 view -0
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 8
 1795              		@ frame_needed = 0, uses_anonymous_args = 0
 649:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl, sl;
 1796              		.loc 1 649 1 is_stmt 0 view .LVU486
 1797 0000 30B5     		push	{r4, r5, lr}
 1798              	.LCFI20:
 1799              		.cfi_def_cfa_offset 12
 1800              		.cfi_offset 4, -12
 1801              		.cfi_offset 5, -8
 1802              		.cfi_offset 14, -4
 1803 0002 83B0     		sub	sp, sp, #12
 1804              	.LCFI21:
 1805              		.cfi_def_cfa_offset 24
 1806 0004 0546     		mov	r5, r0
 1807 0006 0C46     		mov	r4, r1
 650:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 1808              		.loc 1 650 2 is_stmt 1 view .LVU487
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1809              		.loc 1 651 2 view .LVU488
 1810 0008 0846     		mov	r0, r1
 1811              	.LVL169:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1812              		.loc 1 651 2 is_stmt 0 view .LVU489
 1813 000a FFF7FEFF 		bl	block_size
 1814              	.LVL170:
 651:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 1815              		.loc 1 651 2 view .LVU490
 1816 000e 6A46     		mov	r2, sp
 1817 0010 01A9     		add	r1, sp, #4
 1818 0012 FFF7FEFF 		bl	mapping_insert
 1819              	.LVL171:
 652:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1820              		.loc 1 652 2 is_stmt 1 view .LVU491
 1821 0016 009B     		ldr	r3, [sp]
 1822 0018 019A     		ldr	r2, [sp, #4]
 1823 001a 2146     		mov	r1, r4
 1824 001c 2846     		mov	r0, r5
 1825 001e FFF7FEFF 		bl	remove_free_block
 1826              	.LVL172:
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1827              		.loc 1 653 1 is_stmt 0 view .LVU492
 1828 0022 03B0     		add	sp, sp, #12
 1829              	.LCFI22:
 1830              		.cfi_def_cfa_offset 12
 1831              		@ sp needed
 1832 0024 30BD     		pop	{r4, r5, pc}
 653:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1833              		.loc 1 653 1 view .LVU493
 1834              		.cfi_endproc
ARM GAS  /tmp/ccqbdhhV.s 			page 51


 1835              	.LFE29:
 1837              		.section	.text.block_merge_prev,"ax",%progbits
 1838              		.align	1
 1839              		.syntax unified
 1840              		.thumb
 1841              		.thumb_func
 1842              		.fpu fpv4-sp-d16
 1844              	block_merge_prev:
 1845              	.LVL173:
 1846              	.LFB34:
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1847              		.loc 1 702 1 is_stmt 1 view -0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 702:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_is_prev_free(block))
 1851              		.loc 1 702 1 is_stmt 0 view .LVU495
 1852 0000 70B5     		push	{r4, r5, r6, lr}
 1853              	.LCFI23:
 1854              		.cfi_def_cfa_offset 16
 1855              		.cfi_offset 4, -16
 1856              		.cfi_offset 5, -12
 1857              		.cfi_offset 6, -8
 1858              		.cfi_offset 14, -4
 1859 0002 0546     		mov	r5, r0
 1860 0004 0C46     		mov	r4, r1
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1861              		.loc 1 703 2 is_stmt 1 view .LVU496
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1862              		.loc 1 703 6 is_stmt 0 view .LVU497
 1863 0006 0846     		mov	r0, r1
 1864              	.LVL174:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1865              		.loc 1 703 6 view .LVU498
 1866 0008 FFF7FEFF 		bl	block_is_prev_free
 1867              	.LVL175:
 703:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1868              		.loc 1 703 5 view .LVU499
 1869 000c 08B9     		cbnz	r0, .L121
 1870              	.L115:
 712:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 1871              		.loc 1 712 2 is_stmt 1 view .LVU500
 713:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1872              		.loc 1 713 1 is_stmt 0 view .LVU501
 1873 000e 2046     		mov	r0, r4
 1874 0010 70BD     		pop	{r4, r5, r6, pc}
 1875              	.LVL176:
 1876              	.L121:
 1877              	.LBB4:
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1878              		.loc 1 705 3 is_stmt 1 view .LVU502
 705:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(prev && "prev physical block can't be null");
 1879              		.loc 1 705 26 is_stmt 0 view .LVU503
 1880 0012 2046     		mov	r0, r4
 1881 0014 FFF7FEFF 		bl	block_prev
 1882              	.LVL177:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
ARM GAS  /tmp/ccqbdhhV.s 			page 52


 1883              		.loc 1 706 3 is_stmt 1 view .LVU504
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1884              		.loc 1 706 3 view .LVU505
 1885 0018 0646     		mov	r6, r0
 1886 001a 18B1     		cbz	r0, .L117
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1887              		.loc 1 706 3 discriminator 2 view .LVU506
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1888              		.loc 1 707 3 discriminator 2 view .LVU507
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1889              		.loc 1 707 3 discriminator 2 view .LVU508
 1890 001c FFF7FEFF 		bl	block_is_free
 1891              	.LVL178:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1892              		.loc 1 707 3 is_stmt 0 discriminator 2 view .LVU509
 1893 0020 08B9     		cbnz	r0, .L118
 1894              	.L119:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1895              		.loc 1 707 3 is_stmt 1 discriminator 2 view .LVU510
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1896              		.loc 1 707 3 discriminator 2 view .LVU511
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1897              		.loc 1 707 3 discriminator 2 view .LVU512
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1898              		.loc 1 707 3 discriminator 2 view .LVU513
 1899 0022 FEE7     		b	.L119
 1900              	.LVL179:
 1901              	.L117:
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1902              		.loc 1 706 3 discriminator 1 view .LVU514
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1903              		.loc 1 706 3 discriminator 1 view .LVU515
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1904              		.loc 1 706 3 discriminator 1 view .LVU516
 706:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
 1905              		.loc 1 706 3 discriminator 1 view .LVU517
 1906 0024 FEE7     		b	.L117
 1907              	.LVL180:
 1908              	.L118:
 707:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, prev);
 1909              		.loc 1 707 3 discriminator 4 view .LVU518
 708:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(prev, block);
 1910              		.loc 1 708 3 discriminator 4 view .LVU519
 1911 0026 3146     		mov	r1, r6
 1912 0028 2846     		mov	r0, r5
 1913 002a FFF7FEFF 		bl	block_remove
 1914              	.LVL181:
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1915              		.loc 1 709 3 discriminator 4 view .LVU520
 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1916              		.loc 1 709 11 is_stmt 0 discriminator 4 view .LVU521
 1917 002e 2146     		mov	r1, r4
 1918 0030 3046     		mov	r0, r6
 1919 0032 FFF7FEFF 		bl	block_absorb
 1920              	.LVL182:
 1921 0036 0446     		mov	r4, r0
 1922              	.LVL183:
ARM GAS  /tmp/ccqbdhhV.s 			page 53


 709:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1923              		.loc 1 709 11 discriminator 4 view .LVU522
 1924 0038 E9E7     		b	.L115
 1925              	.LBE4:
 1926              		.cfi_endproc
 1927              	.LFE34:
 1929              		.section	.text.block_merge_next,"ax",%progbits
 1930              		.align	1
 1931              		.syntax unified
 1932              		.thumb
 1933              		.thumb_func
 1934              		.fpu fpv4-sp-d16
 1936              	block_merge_next:
 1937              	.LVL184:
 1938              	.LFB35:
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1939              		.loc 1 717 1 is_stmt 1 view -0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 0
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 717:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next = block_next(block);
 1943              		.loc 1 717 1 is_stmt 0 view .LVU524
 1944 0000 70B5     		push	{r4, r5, r6, lr}
 1945              	.LCFI24:
 1946              		.cfi_def_cfa_offset 16
 1947              		.cfi_offset 4, -16
 1948              		.cfi_offset 5, -12
 1949              		.cfi_offset 6, -8
 1950              		.cfi_offset 14, -4
 1951 0002 0546     		mov	r5, r0
 1952 0004 0C46     		mov	r4, r1
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1953              		.loc 1 718 2 is_stmt 1 view .LVU525
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1954              		.loc 1 718 25 is_stmt 0 view .LVU526
 1955 0006 0846     		mov	r0, r1
 1956              	.LVL185:
 718:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(next && "next physical block can't be null");
 1957              		.loc 1 718 25 view .LVU527
 1958 0008 FFF7FEFF 		bl	block_next
 1959              	.LVL186:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1960              		.loc 1 719 2 is_stmt 1 view .LVU528
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1961              		.loc 1 719 2 view .LVU529
 1962 000c 40B1     		cbz	r0, .L124
 1963 000e 0646     		mov	r6, r0
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1964              		.loc 1 719 2 discriminator 2 view .LVU530
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1965              		.loc 1 721 2 discriminator 2 view .LVU531
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1966              		.loc 1 721 6 is_stmt 0 discriminator 2 view .LVU532
 1967 0010 FFF7FEFF 		bl	block_is_free
 1968              	.LVL187:
 721:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 1969              		.loc 1 721 5 discriminator 2 view .LVU533
ARM GAS  /tmp/ccqbdhhV.s 			page 54


 1970 0014 70B1     		cbz	r0, .L125
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1971              		.loc 1 723 3 is_stmt 1 view .LVU534
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1972              		.loc 1 723 3 view .LVU535
 1973 0016 2046     		mov	r0, r4
 1974 0018 FFF7FEFF 		bl	block_is_last
 1975              	.LVL188:
 1976 001c 08B1     		cbz	r0, .L126
 1977              	.L127:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1978              		.loc 1 723 3 discriminator 2 view .LVU536
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1979              		.loc 1 723 3 discriminator 2 view .LVU537
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1980              		.loc 1 723 3 discriminator 2 view .LVU538
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1981              		.loc 1 723 3 discriminator 2 view .LVU539
 1982 001e FEE7     		b	.L127
 1983              	.LVL189:
 1984              	.L124:
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1985              		.loc 1 719 2 discriminator 1 view .LVU540
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1986              		.loc 1 719 2 discriminator 1 view .LVU541
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1987              		.loc 1 719 2 discriminator 1 view .LVU542
 719:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 1988              		.loc 1 719 2 discriminator 1 view .LVU543
 1989 0020 FEE7     		b	.L124
 1990              	.LVL190:
 1991              	.L126:
 723:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_remove(control, next);
 1992              		.loc 1 723 3 discriminator 2 view .LVU544
 724:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_absorb(block, next);
 1993              		.loc 1 724 3 discriminator 2 view .LVU545
 1994 0022 3146     		mov	r1, r6
 1995 0024 2846     		mov	r0, r5
 1996 0026 FFF7FEFF 		bl	block_remove
 1997              	.LVL191:
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1998              		.loc 1 725 3 discriminator 2 view .LVU546
 725:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 1999              		.loc 1 725 11 is_stmt 0 discriminator 2 view .LVU547
 2000 002a 3146     		mov	r1, r6
 2001 002c 2046     		mov	r0, r4
 2002 002e FFF7FEFF 		bl	block_absorb
 2003              	.LVL192:
 2004 0032 0446     		mov	r4, r0
 2005              	.LVL193:
 2006              	.L125:
 728:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2007              		.loc 1 728 2 is_stmt 1 view .LVU548
 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2008              		.loc 1 729 1 is_stmt 0 view .LVU549
 2009 0034 2046     		mov	r0, r4
 2010 0036 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccqbdhhV.s 			page 55


 729:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2011              		.loc 1 729 1 view .LVU550
 2012              		.cfi_endproc
 2013              	.LFE35:
 2015              		.section	.text.block_trim_used,"ax",%progbits
 2016              		.align	1
 2017              		.syntax unified
 2018              		.thumb
 2019              		.thumb_func
 2020              		.fpu fpv4-sp-d16
 2022              	block_trim_used:
 2023              	.LVL194:
 2024              	.LFB37:
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 2025              		.loc 1 746 1 is_stmt 1 view -0
 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 746:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block) && "block must be used");
 2029              		.loc 1 746 1 is_stmt 0 view .LVU552
 2030 0000 70B5     		push	{r4, r5, r6, lr}
 2031              	.LCFI25:
 2032              		.cfi_def_cfa_offset 16
 2033              		.cfi_offset 4, -16
 2034              		.cfi_offset 5, -12
 2035              		.cfi_offset 6, -8
 2036              		.cfi_offset 14, -4
 2037 0002 0646     		mov	r6, r0
 2038 0004 0C46     		mov	r4, r1
 2039 0006 1546     		mov	r5, r2
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2040              		.loc 1 747 2 is_stmt 1 view .LVU553
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2041              		.loc 1 747 2 view .LVU554
 2042 0008 0846     		mov	r0, r1
 2043              	.LVL195:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2044              		.loc 1 747 2 is_stmt 0 view .LVU555
 2045 000a FFF7FEFF 		bl	block_is_free
 2046              	.LVL196:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2047              		.loc 1 747 2 view .LVU556
 2048 000e 00B1     		cbz	r0, .L130
 2049              	.L131:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2050              		.loc 1 747 2 is_stmt 1 discriminator 1 view .LVU557
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2051              		.loc 1 747 2 discriminator 1 view .LVU558
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2052              		.loc 1 747 2 discriminator 1 view .LVU559
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2053              		.loc 1 747 2 discriminator 1 view .LVU560
 2054 0010 FEE7     		b	.L131
 2055              	.L130:
 747:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block_can_split(block, size))
 2056              		.loc 1 747 2 discriminator 2 view .LVU561
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  /tmp/ccqbdhhV.s 			page 56


 2057              		.loc 1 748 2 discriminator 2 view .LVU562
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2058              		.loc 1 748 6 is_stmt 0 discriminator 2 view .LVU563
 2059 0012 2946     		mov	r1, r5
 2060 0014 2046     		mov	r0, r4
 2061 0016 FFF7FEFF 		bl	block_can_split
 2062              	.LVL197:
 748:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2063              		.loc 1 748 5 discriminator 2 view .LVU564
 2064 001a 00B9     		cbnz	r0, .L134
 2065              	.LVL198:
 2066              	.L129:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2067              		.loc 1 757 1 view .LVU565
 2068 001c 70BD     		pop	{r4, r5, r6, pc}
 2069              	.LVL199:
 2070              	.L134:
 2071              	.LBB5:
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2072              		.loc 1 751 3 is_stmt 1 view .LVU566
 751:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_set_prev_used(remaining_block);
 2073              		.loc 1 751 37 is_stmt 0 view .LVU567
 2074 001e 2946     		mov	r1, r5
 2075 0020 2046     		mov	r0, r4
 2076 0022 FFF7FEFF 		bl	block_split
 2077              	.LVL200:
 2078 0026 0446     		mov	r4, r0
 2079              	.LVL201:
 752:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2080              		.loc 1 752 3 is_stmt 1 view .LVU568
 2081 0028 FFF7FEFF 		bl	block_set_prev_used
 2082              	.LVL202:
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2083              		.loc 1 754 3 view .LVU569
 754:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, remaining_block);
 2084              		.loc 1 754 21 is_stmt 0 view .LVU570
 2085 002c 2146     		mov	r1, r4
 2086 002e 3046     		mov	r0, r6
 2087 0030 FFF7FEFF 		bl	block_merge_next
 2088              	.LVL203:
 2089 0034 0146     		mov	r1, r0
 2090              	.LVL204:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2091              		.loc 1 755 3 is_stmt 1 view .LVU571
 2092 0036 3046     		mov	r0, r6
 2093              	.LVL205:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2094              		.loc 1 755 3 is_stmt 0 view .LVU572
 2095 0038 FFF7FEFF 		bl	block_insert
 2096              	.LVL206:
 755:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2097              		.loc 1 755 3 view .LVU573
 2098              	.LBE5:
 757:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2099              		.loc 1 757 1 view .LVU574
 2100 003c EEE7     		b	.L129
 2101              		.cfi_endproc
ARM GAS  /tmp/ccqbdhhV.s 			page 57


 2102              	.LFE37:
 2104              		.section	.text.mapping_search,"ax",%progbits
 2105              		.align	1
 2106              		.syntax unified
 2107              		.thumb
 2108              		.thumb_func
 2109              		.fpu fpv4-sp-d16
 2111              	mapping_search:
 2112              	.LVL207:
 2113              	.LFB25:
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2114              		.loc 1 556 1 is_stmt 1 view -0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 0
 2117              		@ frame_needed = 0, uses_anonymous_args = 0
 556:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (size >= SMALL_BLOCK_SIZE)
 2118              		.loc 1 556 1 is_stmt 0 view .LVU576
 2119 0000 70B5     		push	{r4, r5, r6, lr}
 2120              	.LCFI26:
 2121              		.cfi_def_cfa_offset 16
 2122              		.cfi_offset 4, -16
 2123              		.cfi_offset 5, -12
 2124              		.cfi_offset 6, -8
 2125              		.cfi_offset 14, -4
 2126 0002 0446     		mov	r4, r0
 2127 0004 0D46     		mov	r5, r1
 2128 0006 1646     		mov	r6, r2
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2129              		.loc 1 557 2 is_stmt 1 view .LVU577
 557:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2130              		.loc 1 557 5 is_stmt 0 view .LVU578
 2131 0008 7F28     		cmp	r0, #127
 2132 000a 06D9     		bls	.L136
 2133              	.LBB6:
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2134              		.loc 1 559 3 is_stmt 1 view .LVU579
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2135              		.loc 1 559 31 is_stmt 0 view .LVU580
 2136 000c FFF7FEFF 		bl	tlsf_fls
 2137              	.LVL208:
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2138              		.loc 1 559 52 view .LVU581
 2139 0010 431F     		subs	r3, r0, #5
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2140              		.loc 1 559 27 view .LVU582
 2141 0012 0120     		movs	r0, #1
 2142 0014 9840     		lsls	r0, r0, r3
 559:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size += round;
 2143              		.loc 1 559 76 view .LVU583
 2144 0016 0138     		subs	r0, r0, #1
 2145              	.LVL209:
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2146              		.loc 1 560 3 is_stmt 1 view .LVU584
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2147              		.loc 1 560 8 is_stmt 0 view .LVU585
 2148 0018 0444     		add	r4, r4, r0
 2149              	.LVL210:
ARM GAS  /tmp/ccqbdhhV.s 			page 58


 2150              	.L136:
 560:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2151              		.loc 1 560 8 view .LVU586
 2152              	.LBE6:
 562:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2153              		.loc 1 562 2 is_stmt 1 view .LVU587
 2154 001a 3246     		mov	r2, r6
 2155 001c 2946     		mov	r1, r5
 2156 001e 2046     		mov	r0, r4
 2157 0020 FFF7FEFF 		bl	mapping_insert
 2158              	.LVL211:
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2159              		.loc 1 563 1 is_stmt 0 view .LVU588
 2160 0024 70BD     		pop	{r4, r5, r6, pc}
 563:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2161              		.loc 1 563 1 view .LVU589
 2162              		.cfi_endproc
 2163              	.LFE25:
 2165              		.section	.text.tlsf_ffs,"ax",%progbits
 2166              		.align	1
 2167              		.syntax unified
 2168              		.thumb
 2169              		.thumb_func
 2170              		.fpu fpv4-sp-d16
 2172              	tlsf_ffs:
 2173              	.LVL212:
 2174              	.LFB1:
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2175              		.loc 1 94 1 is_stmt 1 view -0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 0
 2178              		@ frame_needed = 0, uses_anonymous_args = 0
 2179              		@ link register save eliminated.
  94:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return __builtin_ffs(word) - 1;
 2180              		.loc 1 94 1 is_stmt 0 view .LVU591
 2181 0000 0346     		mov	r3, r0
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2182              		.loc 1 95 2 is_stmt 1 view .LVU592
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2183              		.loc 1 95 9 is_stmt 0 view .LVU593
 2184 0002 90FAA0F0 		rbit	r0, r0
 2185              	.LVL213:
  95:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2186              		.loc 1 95 9 view .LVU594
 2187 0006 B0FA80F0 		clz	r0, r0
 2188 000a 0BB9     		cbnz	r3, .L139
 2189 000c 4FF0FF30 		mov	r0, #-1
 2190              	.L139:
  96:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2191              		.loc 1 96 1 view .LVU595
 2192 0010 7047     		bx	lr
 2193              		.cfi_endproc
 2194              	.LFE1:
 2196              		.section	.text.search_suitable_block,"ax",%progbits
 2197              		.align	1
 2198              		.syntax unified
 2199              		.thumb
ARM GAS  /tmp/ccqbdhhV.s 			page 59


 2200              		.thumb_func
 2201              		.fpu fpv4-sp-d16
 2203              	search_suitable_block:
 2204              	.LVL214:
 2205              	.LFB26:
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2206              		.loc 1 566 1 is_stmt 1 view -0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 0
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 566:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = *fli;
 2210              		.loc 1 566 1 is_stmt 0 view .LVU597
 2211 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2212              	.LCFI27:
 2213              		.cfi_def_cfa_offset 24
 2214              		.cfi_offset 3, -24
 2215              		.cfi_offset 4, -20
 2216              		.cfi_offset 5, -16
 2217              		.cfi_offset 6, -12
 2218              		.cfi_offset 7, -8
 2219              		.cfi_offset 14, -4
 2220 0002 0546     		mov	r5, r0
 2221 0004 1646     		mov	r6, r2
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2222              		.loc 1 567 2 is_stmt 1 view .LVU598
 567:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int sl = *sli;
 2223              		.loc 1 567 6 is_stmt 0 view .LVU599
 2224 0006 0C68     		ldr	r4, [r1]
 2225              	.LVL215:
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2226              		.loc 1 568 2 is_stmt 1 view .LVU600
 568:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2227              		.loc 1 568 6 is_stmt 0 view .LVU601
 2228 0008 1268     		ldr	r2, [r2]
 2229              	.LVL216:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2230              		.loc 1 574 2 is_stmt 1 view .LVU602
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2231              		.loc 1 574 42 is_stmt 0 view .LVU603
 2232 000a 231D     		adds	r3, r4, #4
 2233 000c 00EB8303 		add	r3, r0, r3, lsl #2
 2234 0010 5B68     		ldr	r3, [r3, #4]
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2235              		.loc 1 574 54 view .LVU604
 2236 0012 4FF0FF30 		mov	r0, #-1
 2237              	.LVL217:
 574:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (!sl_map)
 2238              		.loc 1 574 54 view .LVU605
 2239 0016 9040     		lsls	r0, r0, r2
 2240              	.LVL218:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2241              		.loc 1 575 2 is_stmt 1 view .LVU606
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2242              		.loc 1 575 5 is_stmt 0 view .LVU607
 2243 0018 1840     		ands	r0, r3, r0
 2244              	.LVL219:
 575:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
ARM GAS  /tmp/ccqbdhhV.s 			page 60


 2245              		.loc 1 575 5 view .LVU608
 2246 001a 10D1     		bne	.L141
 2247 001c 0F46     		mov	r7, r1
 2248              	.LBB7:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2249              		.loc 1 578 3 is_stmt 1 view .LVU609
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2250              		.loc 1 578 38 is_stmt 0 view .LVU610
 2251 001e 2A69     		ldr	r2, [r5, #16]
 2252              	.LVL220:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2253              		.loc 1 578 64 view .LVU611
 2254 0020 0134     		adds	r4, r4, #1
 2255              	.LVL221:
 578:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (!fl_map)
 2256              		.loc 1 578 57 view .LVU612
 2257 0022 4FF0FF33 		mov	r3, #-1
 2258 0026 A340     		lsls	r3, r3, r4
 2259              	.LVL222:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2260              		.loc 1 579 3 is_stmt 1 view .LVU613
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2261              		.loc 1 579 6 is_stmt 0 view .LVU614
 2262 0028 12EA0300 		ands	r0, r2, r3
 2263              	.LVL223:
 579:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2264              		.loc 1 579 6 view .LVU615
 2265 002c 12D0     		beq	.L145
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2266              		.loc 1 585 3 is_stmt 1 view .LVU616
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2267              		.loc 1 585 8 is_stmt 0 view .LVU617
 2268 002e FFF7FEFF 		bl	tlsf_ffs
 2269              	.LVL224:
 585:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*fli = fl;
 2270              		.loc 1 585 8 view .LVU618
 2271 0032 0446     		mov	r4, r0
 2272              	.LVL225:
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2273              		.loc 1 586 3 is_stmt 1 view .LVU619
 586:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		sl_map = control->sl_bitmap[fl];
 2274              		.loc 1 586 8 is_stmt 0 view .LVU620
 2275 0034 3860     		str	r0, [r7]
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2276              		.loc 1 587 3 is_stmt 1 view .LVU621
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2277              		.loc 1 587 10 is_stmt 0 view .LVU622
 2278 0036 031D     		adds	r3, r0, #4
 2279 0038 05EB8303 		add	r3, r5, r3, lsl #2
 2280 003c 5868     		ldr	r0, [r3, #4]
 2281              	.LVL226:
 2282              	.L141:
 587:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2283              		.loc 1 587 10 view .LVU623
 2284              	.LBE7:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2285              		.loc 1 589 2 is_stmt 1 view .LVU624
ARM GAS  /tmp/ccqbdhhV.s 			page 61


 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2286              		.loc 1 589 2 view .LVU625
 2287 003e 00B9     		cbnz	r0, .L143
 2288              	.L144:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2289              		.loc 1 589 2 discriminator 1 view .LVU626
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2290              		.loc 1 589 2 discriminator 1 view .LVU627
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2291              		.loc 1 589 2 discriminator 1 view .LVU628
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2292              		.loc 1 589 2 discriminator 1 view .LVU629
 2293 0040 FEE7     		b	.L144
 2294              	.L143:
 589:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	sl = tlsf_ffs(sl_map);
 2295              		.loc 1 589 2 discriminator 2 view .LVU630
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2296              		.loc 1 590 2 discriminator 2 view .LVU631
 590:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*sli = sl;
 2297              		.loc 1 590 7 is_stmt 0 discriminator 2 view .LVU632
 2298 0042 FFF7FEFF 		bl	tlsf_ffs
 2299              	.LVL227:
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2300              		.loc 1 591 2 is_stmt 1 discriminator 2 view .LVU633
 591:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2301              		.loc 1 591 7 is_stmt 0 discriminator 2 view .LVU634
 2302 0046 3060     		str	r0, [r6]
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2303              		.loc 1 594 2 is_stmt 1 discriminator 2 view .LVU635
 594:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2304              		.loc 1 594 28 is_stmt 0 discriminator 2 view .LVU636
 2305 0048 00EB4413 		add	r3, r0, r4, lsl #5
 2306 004c 0C33     		adds	r3, r3, #12
 2307 004e 55F82300 		ldr	r0, [r5, r3, lsl #2]
 2308              	.LVL228:
 2309              	.L140:
 595:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2310              		.loc 1 595 1 view .LVU637
 2311 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2312              	.LVL229:
 2313              	.L145:
 2314              	.LBB8:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2315              		.loc 1 582 11 view .LVU638
 2316 0054 0020     		movs	r0, #0
 2317              	.LVL230:
 582:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2318              		.loc 1 582 11 view .LVU639
 2319 0056 FCE7     		b	.L140
 2320              	.LBE8:
 2321              		.cfi_endproc
 2322              	.LFE26:
 2324              		.section	.text.block_locate_free,"ax",%progbits
 2325              		.align	1
 2326              		.syntax unified
 2327              		.thumb
 2328              		.thumb_func
ARM GAS  /tmp/ccqbdhhV.s 			page 62


 2329              		.fpu fpv4-sp-d16
 2331              	block_locate_free:
 2332              	.LVL231:
 2333              	.LFB39:
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2334              		.loc 1 776 1 is_stmt 1 view -0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 8
 2337              		@ frame_needed = 0, uses_anonymous_args = 0
 776:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 2338              		.loc 1 776 1 is_stmt 0 view .LVU641
 2339 0000 70B5     		push	{r4, r5, r6, lr}
 2340              	.LCFI28:
 2341              		.cfi_def_cfa_offset 16
 2342              		.cfi_offset 4, -16
 2343              		.cfi_offset 5, -12
 2344              		.cfi_offset 6, -8
 2345              		.cfi_offset 14, -4
 2346 0002 82B0     		sub	sp, sp, #8
 2347              	.LCFI29:
 2348              		.cfi_def_cfa_offset 24
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2349              		.loc 1 777 2 is_stmt 1 view .LVU642
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2350              		.loc 1 777 6 is_stmt 0 view .LVU643
 2351 0004 0023     		movs	r3, #0
 2352 0006 0193     		str	r3, [sp, #4]
 777:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = 0;
 2353              		.loc 1 777 14 view .LVU644
 2354 0008 0093     		str	r3, [sp]
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2355              		.loc 1 778 2 is_stmt 1 view .LVU645
 2356              	.LVL232:
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2357              		.loc 1 780 2 view .LVU646
 780:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2358              		.loc 1 780 5 is_stmt 0 view .LVU647
 2359 000a E1B1     		cbz	r1, .L151
 2360 000c 0446     		mov	r4, r0
 2361 000e 0E46     		mov	r6, r1
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2362              		.loc 1 782 3 is_stmt 1 view .LVU648
 2363 0010 6A46     		mov	r2, sp
 2364 0012 01A9     		add	r1, sp, #4
 2365              	.LVL233:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2366              		.loc 1 782 3 is_stmt 0 view .LVU649
 2367 0014 3046     		mov	r0, r6
 2368              	.LVL234:
 782:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		
 2369              		.loc 1 782 3 view .LVU650
 2370 0016 FFF7FEFF 		bl	mapping_search
 2371              	.LVL235:
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2372              		.loc 1 790 3 is_stmt 1 view .LVU651
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2373              		.loc 1 790 10 is_stmt 0 view .LVU652
ARM GAS  /tmp/ccqbdhhV.s 			page 63


 2374 001a 019B     		ldr	r3, [sp, #4]
 790:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2375              		.loc 1 790 6 view .LVU653
 2376 001c 062B     		cmp	r3, #6
 2377 001e 16DC     		bgt	.L152
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2378              		.loc 1 792 4 is_stmt 1 view .LVU654
 792:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 2379              		.loc 1 792 12 is_stmt 0 view .LVU655
 2380 0020 6A46     		mov	r2, sp
 2381 0022 01A9     		add	r1, sp, #4
 2382 0024 2046     		mov	r0, r4
 2383 0026 FFF7FEFF 		bl	search_suitable_block
 2384              	.LVL236:
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2385              		.loc 1 796 2 is_stmt 1 view .LVU656
 796:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2386              		.loc 1 796 5 is_stmt 0 view .LVU657
 2387 002a 0546     		mov	r5, r0
 2388 002c 60B1     		cbz	r0, .L147
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2389              		.loc 1 798 3 is_stmt 1 view .LVU658
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2390              		.loc 1 798 3 view .LVU659
 2391 002e FFF7FEFF 		bl	block_size
 2392              	.LVL237:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2393              		.loc 1 798 3 is_stmt 0 view .LVU660
 2394 0032 B042     		cmp	r0, r6
 2395 0034 00D2     		bcs	.L149
 2396              	.L150:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2397              		.loc 1 798 3 is_stmt 1 discriminator 1 view .LVU661
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2398              		.loc 1 798 3 discriminator 1 view .LVU662
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2399              		.loc 1 798 3 discriminator 1 view .LVU663
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2400              		.loc 1 798 3 discriminator 1 view .LVU664
 2401 0036 FEE7     		b	.L150
 2402              	.L149:
 798:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		remove_free_block(control, block, fl, sl);
 2403              		.loc 1 798 3 discriminator 2 view .LVU665
 799:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 2404              		.loc 1 799 3 discriminator 2 view .LVU666
 2405 0038 009B     		ldr	r3, [sp]
 2406 003a 019A     		ldr	r2, [sp, #4]
 2407 003c 2946     		mov	r1, r5
 2408 003e 2046     		mov	r0, r4
 2409 0040 FFF7FEFF 		bl	remove_free_block
 2410              	.LVL238:
 2411 0044 00E0     		b	.L147
 2412              	.LVL239:
 2413              	.L151:
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2414              		.loc 1 778 18 is_stmt 0 view .LVU667
 2415 0046 0025     		movs	r5, #0
ARM GAS  /tmp/ccqbdhhV.s 			page 64


 2416              	.LVL240:
 2417              	.L147:
 803:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2418              		.loc 1 803 1 view .LVU668
 2419 0048 2846     		mov	r0, r5
 2420 004a 02B0     		add	sp, sp, #8
 2421              	.LCFI30:
 2422              		.cfi_remember_state
 2423              		.cfi_def_cfa_offset 16
 2424              		@ sp needed
 2425 004c 70BD     		pop	{r4, r5, r6, pc}
 2426              	.LVL241:
 2427              	.L152:
 2428              	.LCFI31:
 2429              		.cfi_restore_state
 778:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2430              		.loc 1 778 18 view .LVU669
 2431 004e 0025     		movs	r5, #0
 2432              	.LVL242:
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2433              		.loc 1 802 2 is_stmt 1 view .LVU670
 802:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2434              		.loc 1 802 9 is_stmt 0 view .LVU671
 2435 0050 FAE7     		b	.L147
 2436              		.cfi_endproc
 2437              	.LFE39:
 2439              		.section	.text.lv_tlsf_check,"ax",%progbits
 2440              		.align	1
 2441              		.global	lv_tlsf_check
 2442              		.syntax unified
 2443              		.thumb
 2444              		.thumb_func
 2445              		.fpu fpv4-sp-d16
 2447              	lv_tlsf_check:
 2448              	.LVL243:
 2449              	.LFB43:
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2450              		.loc 1 867 1 is_stmt 1 view -0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 8
 2453              		@ frame_needed = 0, uses_anonymous_args = 0
 867:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int i, j;
 2454              		.loc 1 867 1 is_stmt 0 view .LVU673
 2455 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2456              	.LCFI32:
 2457              		.cfi_def_cfa_offset 24
 2458              		.cfi_offset 4, -24
 2459              		.cfi_offset 5, -20
 2460              		.cfi_offset 6, -16
 2461              		.cfi_offset 7, -12
 2462              		.cfi_offset 8, -8
 2463              		.cfi_offset 14, -4
 2464 0004 82B0     		sub	sp, sp, #8
 2465              	.LCFI33:
 2466              		.cfi_def_cfa_offset 32
 2467 0006 0546     		mov	r5, r0
 868:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccqbdhhV.s 			page 65


 2468              		.loc 1 868 2 is_stmt 1 view .LVU674
 870:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int status = 0;
 2469              		.loc 1 870 2 view .LVU675
 2470              	.LVL244:
 871:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2471              		.loc 1 871 2 view .LVU676
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2472              		.loc 1 874 2 view .LVU677
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2473              		.loc 1 874 9 is_stmt 0 view .LVU678
 2474 0008 0026     		movs	r6, #0
 2475              	.LVL245:
 2476              	.L155:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2477              		.loc 1 874 14 is_stmt 1 discriminator 1 view .LVU679
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2478              		.loc 1 874 2 is_stmt 0 discriminator 1 view .LVU680
 2479 000a 062E     		cmp	r6, #6
 2480 000c 4FDC     		bgt	.L182
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2481              		.loc 1 876 10 view .LVU681
 2482 000e 0027     		movs	r7, #0
 2483              	.L179:
 2484              	.LVL246:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2485              		.loc 1 876 15 is_stmt 1 discriminator 1 view .LVU682
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2486              		.loc 1 876 3 is_stmt 0 discriminator 1 view .LVU683
 2487 0010 1F2F     		cmp	r7, #31
 2488 0012 4ADC     		bgt	.L183
 2489              	.LBB9:
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2490              		.loc 1 878 4 is_stmt 1 view .LVU684
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2491              		.loc 1 878 30 is_stmt 0 view .LVU685
 2492 0014 2A69     		ldr	r2, [r5, #16]
 878:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_list = control->sl_bitmap[i];
 2493              		.loc 1 878 48 view .LVU686
 2494 0016 0123     		movs	r3, #1
 2495 0018 03FA06FC 		lsl	ip, r3, r6
 2496              	.LVL247:
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2497              		.loc 1 879 4 is_stmt 1 view .LVU687
 879:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const int sl_map = sl_list & (1U << j);
 2498              		.loc 1 879 42 is_stmt 0 view .LVU688
 2499 001c 311D     		adds	r1, r6, #4
 2500 001e 05EB8101 		add	r1, r5, r1, lsl #2
 2501 0022 4868     		ldr	r0, [r1, #4]
 2502              	.LVL248:
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2503              		.loc 1 880 4 is_stmt 1 view .LVU689
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2504              		.loc 1 880 37 is_stmt 0 view .LVU690
 2505 0024 BB40     		lsls	r3, r3, r7
 880:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const block_header_t* block = control->blocks[i][j];
 2506              		.loc 1 880 31 view .LVU691
 2507 0026 0340     		ands	r3, r3, r0
ARM GAS  /tmp/ccqbdhhV.s 			page 66


 2508              	.LVL249:
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2509              		.loc 1 881 4 is_stmt 1 view .LVU692
 881:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2510              		.loc 1 881 26 is_stmt 0 view .LVU693
 2511 0028 07EB4611 		add	r1, r7, r6, lsl #5
 2512 002c 0C31     		adds	r1, r1, #12
 2513 002e 55F82140 		ldr	r4, [r5, r1, lsl #2]
 2514              	.LVL250:
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2515              		.loc 1 884 4 is_stmt 1 view .LVU694
 884:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2516              		.loc 1 884 7 is_stmt 0 view .LVU695
 2517 0032 12EA0C0F 		tst	r2, ip
 2518 0036 00D1     		bne	.L156
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2519              		.loc 1 886 5 is_stmt 1 view .LVU696
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2520              		.loc 1 886 5 view .LVU697
 2521 0038 1BB9     		cbnz	r3, .L157
 2522              	.L156:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2523              		.loc 1 886 60 discriminator 5 view .LVU698
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2524              		.loc 1 889 4 discriminator 5 view .LVU699
 889:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2525              		.loc 1 889 7 is_stmt 0 discriminator 5 view .LVU700
 2526 003a 1BB9     		cbnz	r3, .L158
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2527              		.loc 1 891 5 is_stmt 1 view .LVU701
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2528              		.loc 1 891 5 view .LVU702
 2529 003c A542     		cmp	r5, r4
 2530 003e 32D0     		beq	.L159
 2531              	.L160:
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2532              		.loc 1 891 5 discriminator 2 view .LVU703
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2533              		.loc 1 891 5 discriminator 2 view .LVU704
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2534              		.loc 1 891 5 discriminator 2 view .LVU705
 891:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				continue;
 2535              		.loc 1 891 5 discriminator 2 view .LVU706
 2536 0040 FEE7     		b	.L160
 2537              	.L157:
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2538              		.loc 1 886 5 discriminator 1 view .LVU707
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2539              		.loc 1 886 5 discriminator 1 view .LVU708
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2540              		.loc 1 886 5 discriminator 1 view .LVU709
 886:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2541              		.loc 1 886 5 discriminator 1 view .LVU710
 2542 0042 FEE7     		b	.L157
 2543              	.L158:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2544              		.loc 1 896 4 view .LVU711
ARM GAS  /tmp/ccqbdhhV.s 			page 67


 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2545              		.loc 1 896 4 view .LVU712
 2546 0044 38B3     		cbz	r0, .L162
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2547              		.loc 1 896 4 discriminator 5 view .LVU713
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2548              		.loc 1 896 4 discriminator 5 view .LVU714
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2549              		.loc 1 896 64 discriminator 5 view .LVU715
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2550              		.loc 1 897 4 discriminator 5 view .LVU716
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2551              		.loc 1 897 4 discriminator 5 view .LVU717
 2552 0046 A542     		cmp	r5, r4
 2553 0048 26D0     		beq	.L164
 2554              	.LVL251:
 2555              	.L163:
 899:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 2556              		.loc 1 899 10 view .LVU718
 2557 004a A542     		cmp	r5, r4
 2558 004c 2BD0     		beq	.L159
 2559              	.LBB10:
 901:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_free(block) && "block should be free");
 2560              		.loc 1 901 5 view .LVU719
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2561              		.loc 1 902 5 view .LVU720
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2562              		.loc 1 902 5 view .LVU721
 2563 004e 2046     		mov	r0, r4
 2564 0050 FFF7FEFF 		bl	block_is_free
 2565              	.LVL252:
 2566 0054 08B3     		cbz	r0, .L166
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2567              		.loc 1 902 5 discriminator 9 view .LVU722
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2568              		.loc 1 902 5 discriminator 9 view .LVU723
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2569              		.loc 1 902 64 discriminator 9 view .LVU724
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2570              		.loc 1 903 5 discriminator 9 view .LVU725
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2571              		.loc 1 903 5 discriminator 9 view .LVU726
 2572 0056 2046     		mov	r0, r4
 2573 0058 FFF7FEFF 		bl	block_is_prev_free
 2574              	.LVL253:
 2575 005c F0B9     		cbnz	r0, .L168
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2576              		.loc 1 903 5 discriminator 5 view .LVU727
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2577              		.loc 1 903 5 discriminator 5 view .LVU728
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2578              		.loc 1 903 78 discriminator 5 view .LVU729
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2579              		.loc 1 904 5 discriminator 5 view .LVU730
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2580              		.loc 1 904 5 discriminator 5 view .LVU731
 2581 005e 2046     		mov	r0, r4
ARM GAS  /tmp/ccqbdhhV.s 			page 68


 2582 0060 FFF7FEFF 		bl	block_next
 2583              	.LVL254:
 2584 0064 8046     		mov	r8, r0
 2585 0066 FFF7FEFF 		bl	block_is_free
 2586              	.LVL255:
 2587 006a C0B9     		cbnz	r0, .L170
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2588              		.loc 1 904 5 discriminator 5 view .LVU732
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2589              		.loc 1 904 5 discriminator 5 view .LVU733
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2590              		.loc 1 904 85 discriminator 5 view .LVU734
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2591              		.loc 1 905 5 discriminator 5 view .LVU735
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2592              		.loc 1 905 5 discriminator 5 view .LVU736
 2593 006c 4046     		mov	r0, r8
 2594 006e FFF7FEFF 		bl	block_is_prev_free
 2595              	.LVL256:
 2596 0072 A8B1     		cbz	r0, .L172
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2597              		.loc 1 905 5 discriminator 9 view .LVU737
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2598              		.loc 1 905 5 discriminator 9 view .LVU738
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2599              		.loc 1 905 81 discriminator 9 view .LVU739
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2600              		.loc 1 906 5 discriminator 9 view .LVU740
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2601              		.loc 1 906 5 discriminator 9 view .LVU741
 2602 0074 2046     		mov	r0, r4
 2603 0076 FFF7FEFF 		bl	block_size
 2604              	.LVL257:
 2605 007a 0B28     		cmp	r0, #11
 2606 007c 11D9     		bls	.L174
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2607              		.loc 1 906 5 discriminator 9 view .LVU742
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2608              		.loc 1 906 5 discriminator 9 view .LVU743
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2609              		.loc 1 906 81 discriminator 9 view .LVU744
 908:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
 2610              		.loc 1 908 5 discriminator 9 view .LVU745
 2611 007e 01AA     		add	r2, sp, #4
 2612 0080 6946     		mov	r1, sp
 2613 0082 FFF7FEFF 		bl	mapping_insert
 2614              	.LVL258:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2615              		.loc 1 909 5 discriminator 9 view .LVU746
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2616              		.loc 1 909 5 discriminator 9 view .LVU747
 2617 0086 009B     		ldr	r3, [sp]
 2618 0088 B342     		cmp	r3, r6
 2619 008a 0BD1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2620              		.loc 1 909 5 is_stmt 0 discriminator 2 view .LVU748
 2621 008c 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccqbdhhV.s 			page 69


 2622 008e BB42     		cmp	r3, r7
 2623 0090 08D1     		bne	.L175
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2624              		.loc 1 909 5 is_stmt 1 discriminator 9 view .LVU749
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2625              		.loc 1 909 5 discriminator 9 view .LVU750
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2626              		.loc 1 909 76 discriminator 9 view .LVU751
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2627              		.loc 1 910 5 discriminator 9 view .LVU752
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2628              		.loc 1 910 11 is_stmt 0 discriminator 9 view .LVU753
 2629 0092 A468     		ldr	r4, [r4, #8]
 2630              	.LVL259:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2631              		.loc 1 910 11 discriminator 9 view .LVU754
 2632 0094 D9E7     		b	.L163
 2633              	.LVL260:
 2634              	.L162:
 910:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 2635              		.loc 1 910 11 discriminator 9 view .LVU755
 2636              	.LBE10:
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2637              		.loc 1 896 4 is_stmt 1 discriminator 3 view .LVU756
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2638              		.loc 1 896 4 discriminator 3 view .LVU757
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2639              		.loc 1 896 4 discriminator 3 view .LVU758
 896:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_insist(block != &control->block_null && "block should not be null");
 2640              		.loc 1 896 4 discriminator 3 view .LVU759
 2641 0096 FEE7     		b	.L162
 2642              	.L164:
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2643              		.loc 1 897 4 discriminator 4 view .LVU760
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2644              		.loc 1 897 4 discriminator 4 view .LVU761
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2645              		.loc 1 897 4 discriminator 4 view .LVU762
 897:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2646              		.loc 1 897 4 discriminator 4 view .LVU763
 2647 0098 FEE7     		b	.L164
 2648              	.LVL261:
 2649              	.L166:
 2650              	.LBB11:
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2651              		.loc 1 902 5 discriminator 5 view .LVU764
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2652              		.loc 1 902 5 discriminator 5 view .LVU765
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2653              		.loc 1 902 5 discriminator 5 view .LVU766
 902:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
 2654              		.loc 1 902 5 discriminator 5 view .LVU767
 2655 009a FEE7     		b	.L166
 2656              	.L168:
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2657              		.loc 1 903 5 discriminator 6 view .LVU768
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
ARM GAS  /tmp/ccqbdhhV.s 			page 70


 2658              		.loc 1 903 5 discriminator 6 view .LVU769
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2659              		.loc 1 903 5 discriminator 6 view .LVU770
 903:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
 2660              		.loc 1 903 5 discriminator 6 view .LVU771
 2661 009c FEE7     		b	.L168
 2662              	.L170:
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2663              		.loc 1 904 5 discriminator 7 view .LVU772
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2664              		.loc 1 904 5 discriminator 7 view .LVU773
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2665              		.loc 1 904 5 discriminator 7 view .LVU774
 904:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
 2666              		.loc 1 904 5 discriminator 7 view .LVU775
 2667 009e FEE7     		b	.L170
 2668              	.L172:
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2669              		.loc 1 905 5 discriminator 8 view .LVU776
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2670              		.loc 1 905 5 discriminator 8 view .LVU777
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2671              		.loc 1 905 5 discriminator 8 view .LVU778
 905:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
 2672              		.loc 1 905 5 discriminator 8 view .LVU779
 2673 00a0 FEE7     		b	.L172
 2674              	.L174:
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2675              		.loc 1 906 5 discriminator 9 view .LVU780
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2676              		.loc 1 906 5 discriminator 9 view .LVU781
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2677              		.loc 1 906 5 discriminator 9 view .LVU782
 906:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2678              		.loc 1 906 5 discriminator 9 view .LVU783
 2679 00a2 FEE7     		b	.L174
 2680              	.L175:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2681              		.loc 1 909 5 discriminator 10 view .LVU784
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2682              		.loc 1 909 5 discriminator 10 view .LVU785
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2683              		.loc 1 909 5 discriminator 10 view .LVU786
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2684              		.loc 1 909 5 discriminator 10 view .LVU787
 2685 00a4 FEE7     		b	.L175
 2686              	.L159:
 909:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block = block->next_free;
 2687              		.loc 1 909 5 is_stmt 0 discriminator 10 view .LVU788
 2688              	.LBE11:
 2689              	.LBE9:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2690              		.loc 1 876 35 is_stmt 1 discriminator 2 view .LVU789
 2691 00a6 0137     		adds	r7, r7, #1
 2692              	.LVL262:
 876:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 2693              		.loc 1 876 35 is_stmt 0 discriminator 2 view .LVU790
ARM GAS  /tmp/ccqbdhhV.s 			page 71


 2694 00a8 B2E7     		b	.L179
 2695              	.LVL263:
 2696              	.L183:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2697              		.loc 1 874 34 is_stmt 1 discriminator 2 view .LVU791
 2698 00aa 0136     		adds	r6, r6, #1
 2699              	.LVL264:
 874:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2700              		.loc 1 874 34 is_stmt 0 discriminator 2 view .LVU792
 2701 00ac ADE7     		b	.L155
 2702              	.LVL265:
 2703              	.L182:
 915:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2704              		.loc 1 915 2 is_stmt 1 view .LVU793
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2705              		.loc 1 916 1 is_stmt 0 view .LVU794
 2706 00ae 0020     		movs	r0, #0
 2707 00b0 02B0     		add	sp, sp, #8
 2708              	.LCFI34:
 2709              		.cfi_def_cfa_offset 24
 2710              		@ sp needed
 2711 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 916:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 2712              		.loc 1 916 1 view .LVU795
 2713              		.cfi_endproc
 2714              	.LFE43:
 2716              		.section	.text.lv_tlsf_walk_pool,"ax",%progbits
 2717              		.align	1
 2718              		.global	lv_tlsf_walk_pool
 2719              		.syntax unified
 2720              		.thumb
 2721              		.thumb_func
 2722              		.fpu fpv4-sp-d16
 2724              	lv_tlsf_walk_pool:
 2725              	.LVL266:
 2726              	.LFB45:
 925:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 926:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_walk_pool(lv_pool_t pool, lv_tlsf_walker walker, void* user)
 927:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2727              		.loc 1 927 1 is_stmt 1 view -0
 2728              		.cfi_startproc
 2729              		@ args = 0, pretend = 0, frame = 0
 2730              		@ frame_needed = 0, uses_anonymous_args = 0
 2731              		.loc 1 927 1 is_stmt 0 view .LVU797
 2732 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2733              	.LCFI35:
 2734              		.cfi_def_cfa_offset 24
 2735              		.cfi_offset 4, -24
 2736              		.cfi_offset 5, -20
 2737              		.cfi_offset 6, -16
 2738              		.cfi_offset 7, -12
 2739              		.cfi_offset 8, -8
 2740              		.cfi_offset 14, -4
 2741 0004 1746     		mov	r7, r2
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walker pool_walker = walker ? walker : default_walker;
 2742              		.loc 1 928 2 is_stmt 1 view .LVU798
 2743              		.loc 1 928 47 is_stmt 0 view .LVU799
ARM GAS  /tmp/ccqbdhhV.s 			page 72


 2744 0006 8846     		mov	r8, r1
 2745 0008 29B1     		cbz	r1, .L191
 2746              	.L185:
 2747              	.LVL267:
 929:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2748              		.loc 1 929 2 is_stmt 1 discriminator 4 view .LVU800
 930:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		offset_to_block(pool, -(int)block_header_overhead);
 2749              		.loc 1 930 3 is_stmt 0 discriminator 4 view .LVU801
 2750 000a 6FF00301 		mvn	r1, #3
 2751              	.LVL268:
 2752              		.loc 1 930 3 discriminator 4 view .LVU802
 2753 000e FFF7FEFF 		bl	offset_to_block
 2754              	.LVL269:
 2755              		.loc 1 930 3 discriminator 4 view .LVU803
 2756 0012 0446     		mov	r4, r0
 2757              	.LVL270:
 931:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	while (block && !block_is_last(block))
 2758              		.loc 1 932 2 is_stmt 1 discriminator 4 view .LVU804
 2759              		.loc 1 932 8 is_stmt 0 discriminator 4 view .LVU805
 2760 0014 18E0     		b	.L186
 2761              	.LVL271:
 2762              	.L191:
 928:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block =
 2763              		.loc 1 928 47 view .LVU806
 2764 0016 DFF84080 		ldr	r8, .L192
 2765 001a F6E7     		b	.L185
 2766              	.LVL272:
 2767              	.L188:
 933:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		pool_walker(
 2768              		.loc 1 934 3 is_stmt 1 view .LVU807
 2769 001c 2046     		mov	r0, r4
 2770 001e FFF7FEFF 		bl	block_to_ptr
 2771              	.LVL273:
 2772 0022 0546     		mov	r5, r0
 2773 0024 2046     		mov	r0, r4
 2774 0026 FFF7FEFF 		bl	block_size
 2775              	.LVL274:
 2776 002a 0646     		mov	r6, r0
 935:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 936:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_size(block),
 937:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			!block_is_free(block),
 2777              		.loc 1 937 5 is_stmt 0 view .LVU808
 2778 002c 2046     		mov	r0, r4
 2779 002e FFF7FEFF 		bl	block_is_free
 2780              	.LVL275:
 934:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_to_ptr(block),
 2781              		.loc 1 934 3 view .LVU809
 2782 0032 3B46     		mov	r3, r7
 2783 0034 B0FA80F2 		clz	r2, r0
 2784 0038 5209     		lsrs	r2, r2, #5
 2785 003a 3146     		mov	r1, r6
 2786 003c 2846     		mov	r0, r5
 2787 003e C047     		blx	r8
 2788              	.LVL276:
 938:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			user);
ARM GAS  /tmp/ccqbdhhV.s 			page 73


 939:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_next(block);
 2789              		.loc 1 939 3 is_stmt 1 view .LVU810
 2790              		.loc 1 939 11 is_stmt 0 view .LVU811
 2791 0040 2046     		mov	r0, r4
 2792 0042 FFF7FEFF 		bl	block_next
 2793              	.LVL277:
 2794 0046 0446     		mov	r4, r0
 2795              	.LVL278:
 2796              	.L186:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2797              		.loc 1 932 8 is_stmt 1 view .LVU812
 2798 0048 24B1     		cbz	r4, .L184
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2799              		.loc 1 932 19 is_stmt 0 discriminator 1 view .LVU813
 2800 004a 2046     		mov	r0, r4
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2801              		.loc 1 932 19 discriminator 1 view .LVU814
 2802 004c FFF7FEFF 		bl	block_is_last
 2803              	.LVL279:
 932:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 2804              		.loc 1 932 15 discriminator 1 view .LVU815
 2805 0050 0028     		cmp	r0, #0
 2806 0052 E3D0     		beq	.L188
 2807              	.L184:
 940:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 941:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2808              		.loc 1 941 1 view .LVU816
 2809 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2810              	.LVL280:
 2811              	.L193:
 2812              		.loc 1 941 1 view .LVU817
 2813              		.align	2
 2814              	.L192:
 2815 0058 00000000 		.word	default_walker
 2816              		.cfi_endproc
 2817              	.LFE45:
 2819              		.section	.text.lv_tlsf_block_size,"ax",%progbits
 2820              		.align	1
 2821              		.global	lv_tlsf_block_size
 2822              		.syntax unified
 2823              		.thumb
 2824              		.thumb_func
 2825              		.fpu fpv4-sp-d16
 2827              	lv_tlsf_block_size:
 2828              	.LVL281:
 2829              	.LFB46:
 942:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 943:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size(void* ptr)
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2830              		.loc 1 944 1 is_stmt 1 view -0
 2831              		.cfi_startproc
 2832              		@ args = 0, pretend = 0, frame = 0
 2833              		@ frame_needed = 0, uses_anonymous_args = 0
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2834              		.loc 1 945 2 view .LVU819
 946:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2835              		.loc 1 946 2 view .LVU820
ARM GAS  /tmp/ccqbdhhV.s 			page 74


 2836              		.loc 1 946 5 is_stmt 0 view .LVU821
 2837 0000 28B1     		cbz	r0, .L196
 944:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	size_t size = 0;
 2838              		.loc 1 944 1 view .LVU822
 2839 0002 08B5     		push	{r3, lr}
 2840              	.LCFI36:
 2841              		.cfi_def_cfa_offset 8
 2842              		.cfi_offset 3, -8
 2843              		.cfi_offset 14, -4
 2844              	.LBB12:
 947:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
 948:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const block_header_t* block = block_from_ptr(ptr);
 2845              		.loc 1 948 3 is_stmt 1 view .LVU823
 2846              		.loc 1 948 33 is_stmt 0 view .LVU824
 2847 0004 FFF7FEFF 		bl	block_from_ptr
 2848              	.LVL282:
 949:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size = block_size(block);
 2849              		.loc 1 949 3 is_stmt 1 view .LVU825
 2850              		.loc 1 949 10 is_stmt 0 view .LVU826
 2851 0008 FFF7FEFF 		bl	block_size
 2852              	.LVL283:
 2853              		.loc 1 949 10 view .LVU827
 2854              	.LBE12:
 950:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return size;
 952:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2855              		.loc 1 952 1 view .LVU828
 2856 000c 08BD     		pop	{r3, pc}
 2857              	.LVL284:
 2858              	.L196:
 2859              	.LCFI37:
 2860              		.cfi_def_cfa_offset 0
 2861              		.cfi_restore 3
 2862              		.cfi_restore 14
 945:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 2863              		.loc 1 945 9 view .LVU829
 2864 000e 0020     		movs	r0, #0
 2865              	.LVL285:
 951:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2866              		.loc 1 951 2 is_stmt 1 view .LVU830
 2867              		.loc 1 952 1 is_stmt 0 view .LVU831
 2868 0010 7047     		bx	lr
 2869              		.cfi_endproc
 2870              	.LFE46:
 2872              		.section	.text.lv_tlsf_check_pool,"ax",%progbits
 2873              		.align	1
 2874              		.global	lv_tlsf_check_pool
 2875              		.syntax unified
 2876              		.thumb
 2877              		.thumb_func
 2878              		.fpu fpv4-sp-d16
 2880              	lv_tlsf_check_pool:
 2881              	.LVL286:
 2882              	.LFB47:
 953:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 954:Middlewares/lvgl/src/misc/lv_tlsf.c **** int lv_tlsf_check_pool(lv_pool_t pool)
 955:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
ARM GAS  /tmp/ccqbdhhV.s 			page 75


 2883              		.loc 1 955 1 is_stmt 1 view -0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 8
 2886              		@ frame_needed = 0, uses_anonymous_args = 0
 2887              		.loc 1 955 1 is_stmt 0 view .LVU833
 2888 0000 00B5     		push	{lr}
 2889              	.LCFI38:
 2890              		.cfi_def_cfa_offset 4
 2891              		.cfi_offset 14, -4
 2892 0002 83B0     		sub	sp, sp, #12
 2893              	.LCFI39:
 2894              		.cfi_def_cfa_offset 16
 956:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Check that the blocks are physically correct. */
 957:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	integrity_t integ = { 0, 0 };
 2895              		.loc 1 957 2 is_stmt 1 view .LVU834
 2896              		.loc 1 957 14 is_stmt 0 view .LVU835
 2897 0004 0023     		movs	r3, #0
 2898 0006 0093     		str	r3, [sp]
 2899 0008 0193     		str	r3, [sp, #4]
 958:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_walk_pool(pool, integrity_walker, &integ);
 2900              		.loc 1 958 2 is_stmt 1 view .LVU836
 2901 000a 6A46     		mov	r2, sp
 2902 000c 0349     		ldr	r1, .L203
 2903 000e FFF7FEFF 		bl	lv_tlsf_walk_pool
 2904              	.LVL287:
 959:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 960:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return integ.status;
 2905              		.loc 1 960 2 view .LVU837
 961:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2906              		.loc 1 961 1 is_stmt 0 view .LVU838
 2907 0012 0198     		ldr	r0, [sp, #4]
 2908 0014 03B0     		add	sp, sp, #12
 2909              	.LCFI40:
 2910              		.cfi_def_cfa_offset 4
 2911              		@ sp needed
 2912 0016 5DF804FB 		ldr	pc, [sp], #4
 2913              	.L204:
 2914 001a 00BF     		.align	2
 2915              	.L203:
 2916 001c 00000000 		.word	integrity_walker
 2917              		.cfi_endproc
 2918              	.LFE47:
 2920              		.section	.text.lv_tlsf_size,"ax",%progbits
 2921              		.align	1
 2922              		.global	lv_tlsf_size
 2923              		.syntax unified
 2924              		.thumb
 2925              		.thumb_func
 2926              		.fpu fpv4-sp-d16
 2928              	lv_tlsf_size:
 2929              	.LFB48:
 962:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 963:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 964:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Size of the TLSF structures in a given memory block passed to
 965:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_create, equal to the size of a control_t
 966:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 967:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_size(void)
ARM GAS  /tmp/ccqbdhhV.s 			page 76


 968:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2930              		.loc 1 968 1 is_stmt 1 view -0
 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 0
 2933              		@ frame_needed = 0, uses_anonymous_args = 0
 2934              		@ link register save eliminated.
 969:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return sizeof(control_t);
 2935              		.loc 1 969 2 view .LVU840
 970:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2936              		.loc 1 970 1 is_stmt 0 view .LVU841
 2937 0000 4FF46C70 		mov	r0, #944
 2938 0004 7047     		bx	lr
 2939              		.cfi_endproc
 2940              	.LFE48:
 2942              		.section	.text.lv_tlsf_align_size,"ax",%progbits
 2943              		.align	1
 2944              		.global	lv_tlsf_align_size
 2945              		.syntax unified
 2946              		.thumb
 2947              		.thumb_func
 2948              		.fpu fpv4-sp-d16
 2950              	lv_tlsf_align_size:
 2951              	.LFB49:
 971:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 972:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_align_size(void)
 973:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2952              		.loc 1 973 1 is_stmt 1 view -0
 2953              		.cfi_startproc
 2954              		@ args = 0, pretend = 0, frame = 0
 2955              		@ frame_needed = 0, uses_anonymous_args = 0
 2956              		@ link register save eliminated.
 974:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return ALIGN_SIZE;
 2957              		.loc 1 974 2 view .LVU843
 975:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2958              		.loc 1 975 1 is_stmt 0 view .LVU844
 2959 0000 0420     		movs	r0, #4
 2960 0002 7047     		bx	lr
 2961              		.cfi_endproc
 2962              	.LFE49:
 2964              		.section	.text.lv_tlsf_block_size_min,"ax",%progbits
 2965              		.align	1
 2966              		.global	lv_tlsf_block_size_min
 2967              		.syntax unified
 2968              		.thumb
 2969              		.thumb_func
 2970              		.fpu fpv4-sp-d16
 2972              	lv_tlsf_block_size_min:
 2973              	.LFB50:
 976:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 977:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_min(void)
 978:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2974              		.loc 1 978 1 is_stmt 1 view -0
 2975              		.cfi_startproc
 2976              		@ args = 0, pretend = 0, frame = 0
 2977              		@ frame_needed = 0, uses_anonymous_args = 0
 2978              		@ link register save eliminated.
 979:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_min;
ARM GAS  /tmp/ccqbdhhV.s 			page 77


 2979              		.loc 1 979 2 view .LVU846
 980:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 2980              		.loc 1 980 1 is_stmt 0 view .LVU847
 2981 0000 0C20     		movs	r0, #12
 2982 0002 7047     		bx	lr
 2983              		.cfi_endproc
 2984              	.LFE50:
 2986              		.section	.text.lv_tlsf_block_size_max,"ax",%progbits
 2987              		.align	1
 2988              		.global	lv_tlsf_block_size_max
 2989              		.syntax unified
 2990              		.thumb
 2991              		.thumb_func
 2992              		.fpu fpv4-sp-d16
 2994              	lv_tlsf_block_size_max:
 2995              	.LFB51:
 981:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 982:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_block_size_max(void)
 983:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 2996              		.loc 1 983 1 is_stmt 1 view -0
 2997              		.cfi_startproc
 2998              		@ args = 0, pretend = 0, frame = 0
 2999              		@ frame_needed = 0, uses_anonymous_args = 0
 3000              		@ link register save eliminated.
 984:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_size_max;
 3001              		.loc 1 984 2 view .LVU849
 985:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3002              		.loc 1 985 1 is_stmt 0 view .LVU850
 3003 0000 4FF40050 		mov	r0, #8192
 3004 0004 7047     		bx	lr
 3005              		.cfi_endproc
 3006              	.LFE51:
 3008              		.section	.text.lv_tlsf_pool_overhead,"ax",%progbits
 3009              		.align	1
 3010              		.global	lv_tlsf_pool_overhead
 3011              		.syntax unified
 3012              		.thumb
 3013              		.thumb_func
 3014              		.fpu fpv4-sp-d16
 3016              	lv_tlsf_pool_overhead:
 3017              	.LFB52:
 986:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 987:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
 988:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** Overhead of the TLSF structures in a given memory block passed to
 989:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** lv_tlsf_add_pool, equal to the overhead of a free block and the
 990:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** sentinel block.
 991:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
 992:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_pool_overhead(void)
 993:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3018              		.loc 1 993 1 is_stmt 1 view -0
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 0
 3021              		@ frame_needed = 0, uses_anonymous_args = 0
 3022              		@ link register save eliminated.
 994:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return 2 * block_header_overhead;
 3023              		.loc 1 994 2 view .LVU852
 995:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
ARM GAS  /tmp/ccqbdhhV.s 			page 78


 3024              		.loc 1 995 1 is_stmt 0 view .LVU853
 3025 0000 0820     		movs	r0, #8
 3026 0002 7047     		bx	lr
 3027              		.cfi_endproc
 3028              	.LFE52:
 3030              		.section	.text.lv_tlsf_alloc_overhead,"ax",%progbits
 3031              		.align	1
 3032              		.global	lv_tlsf_alloc_overhead
 3033              		.syntax unified
 3034              		.thumb
 3035              		.thumb_func
 3036              		.fpu fpv4-sp-d16
 3038              	lv_tlsf_alloc_overhead:
 3039              	.LFB53:
 996:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 997:Middlewares/lvgl/src/misc/lv_tlsf.c **** size_t lv_tlsf_alloc_overhead(void)
 998:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3040              		.loc 1 998 1 is_stmt 1 view -0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 0, uses_anonymous_args = 0
 3044              		@ link register save eliminated.
 999:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_header_overhead;
 3045              		.loc 1 999 2 view .LVU855
1000:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3046              		.loc 1 1000 1 is_stmt 0 view .LVU856
 3047 0000 0420     		movs	r0, #4
 3048 0002 7047     		bx	lr
 3049              		.cfi_endproc
 3050              	.LFE53:
 3052              		.section	.text.lv_tlsf_add_pool,"ax",%progbits
 3053              		.align	1
 3054              		.global	lv_tlsf_add_pool
 3055              		.syntax unified
 3056              		.thumb
 3057              		.thumb_func
 3058              		.fpu fpv4-sp-d16
 3060              	lv_tlsf_add_pool:
 3061              	.LVL288:
 3062              	.LFB54:
1001:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1002:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_add_pool(lv_tlsf_t tlsf, void* mem, size_t bytes)
1003:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3063              		.loc 1 1003 1 is_stmt 1 view -0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
 3067              		.loc 1 1003 1 is_stmt 0 view .LVU858
 3068 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3069              	.LCFI41:
 3070              		.cfi_def_cfa_offset 24
 3071              		.cfi_offset 3, -24
 3072              		.cfi_offset 4, -20
 3073              		.cfi_offset 5, -16
 3074              		.cfi_offset 6, -12
 3075              		.cfi_offset 7, -8
 3076              		.cfi_offset 14, -4
ARM GAS  /tmp/ccqbdhhV.s 			page 79


 3077 0002 0746     		mov	r7, r0
 3078 0004 0C46     		mov	r4, r1
 3079 0006 1546     		mov	r5, r2
1004:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block;
 3080              		.loc 1 1004 2 is_stmt 1 view .LVU859
1005:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* next;
 3081              		.loc 1 1005 2 view .LVU860
1006:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1007:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_overhead = lv_tlsf_pool_overhead();
 3082              		.loc 1 1007 2 view .LVU861
 3083              		.loc 1 1007 31 is_stmt 0 view .LVU862
 3084 0008 FFF7FEFF 		bl	lv_tlsf_pool_overhead
 3085              	.LVL289:
1008:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t pool_bytes = align_down(bytes - pool_overhead, ALIGN_SIZE);
 3086              		.loc 1 1008 2 is_stmt 1 view .LVU863
 3087              		.loc 1 1008 28 is_stmt 0 view .LVU864
 3088 000c 0421     		movs	r1, #4
 3089 000e 281A     		subs	r0, r5, r0
 3090              	.LVL290:
 3091              		.loc 1 1008 28 view .LVU865
 3092 0010 FFF7FEFF 		bl	align_down
 3093              	.LVL291:
1009:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1010:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((ptrdiff_t)mem % ALIGN_SIZE) != 0)
 3094              		.loc 1 1010 2 is_stmt 1 view .LVU866
 3095              		.loc 1 1010 5 is_stmt 0 view .LVU867
 3096 0014 14F0030F 		tst	r4, #3
 3097 0018 28D1     		bne	.L213
 3098 001a 0546     		mov	r5, r0
 3099              	.LVL292:
1011:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1012:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory must be aligned by %u bytes.\n",
1013:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1015:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1016:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1017:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (pool_bytes < block_size_min || pool_bytes > block_size_max)
 3100              		.loc 1 1017 2 is_stmt 1 view .LVU868
 3101              		.loc 1 1017 34 is_stmt 0 view .LVU869
 3102 001c A0F10C02 		sub	r2, r0, #12
 3103              		.loc 1 1017 5 view .LVU870
 3104 0020 41F6F473 		movw	r3, #8180
 3105 0024 9A42     		cmp	r2, r3
 3106 0026 23D8     		bhi	.L214
1018:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1019:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1020:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between 0x%x and 0x%x00 bytes.\n", 
1021:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1022:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)((pool_overhead + block_size_max) / 256));
1023:Middlewares/lvgl/src/misc/lv_tlsf.c **** #else
1024:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_add_pool: Memory size must be between %u and %u bytes.\n", 
1025:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_min),
1026:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)(pool_overhead + block_size_max));
1027:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1029:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1030:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
ARM GAS  /tmp/ccqbdhhV.s 			page 80


1031:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1032:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** Create the main free block. Offset the start of the block slightly
1033:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** so that the prev_phys_block field falls outside of the pool -
1034:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** it will never be used.
1035:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1036:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block = offset_to_block(mem, -(tlsfptr_t)block_header_overhead);
 3107              		.loc 1 1036 2 is_stmt 1 view .LVU871
 3108              		.loc 1 1036 10 is_stmt 0 view .LVU872
 3109 0028 6FF00301 		mvn	r1, #3
 3110 002c 2046     		mov	r0, r4
 3111              	.LVL293:
 3112              		.loc 1 1036 10 view .LVU873
 3113 002e FFF7FEFF 		bl	offset_to_block
 3114              	.LVL294:
 3115 0032 0646     		mov	r6, r0
 3116              	.LVL295:
1037:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(block, pool_bytes);
 3117              		.loc 1 1037 2 is_stmt 1 view .LVU874
 3118 0034 2946     		mov	r1, r5
 3119 0036 FFF7FEFF 		bl	block_set_size
 3120              	.LVL296:
1038:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_free(block);
 3121              		.loc 1 1038 2 view .LVU875
 3122 003a 3046     		mov	r0, r6
 3123 003c FFF7FEFF 		bl	block_set_free
 3124              	.LVL297:
1039:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_used(block);
 3125              		.loc 1 1039 2 view .LVU876
 3126 0040 3046     		mov	r0, r6
 3127 0042 FFF7FEFF 		bl	block_set_prev_used
 3128              	.LVL298:
1040:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_insert(tlsf_cast(control_t*, tlsf), block);
 3129              		.loc 1 1040 2 view .LVU877
 3130 0046 3146     		mov	r1, r6
 3131 0048 3846     		mov	r0, r7
 3132 004a FFF7FEFF 		bl	block_insert
 3133              	.LVL299:
1041:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1042:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Split the block to create a zero-size sentinel block. */
1043:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	next = block_link_next(block);
 3134              		.loc 1 1043 2 view .LVU878
 3135              		.loc 1 1043 9 is_stmt 0 view .LVU879
 3136 004e 3046     		mov	r0, r6
 3137 0050 FFF7FEFF 		bl	block_link_next
 3138              	.LVL300:
 3139 0054 0546     		mov	r5, r0
 3140              	.LVL301:
1044:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_size(next, 0);
 3141              		.loc 1 1044 2 is_stmt 1 view .LVU880
 3142 0056 0021     		movs	r1, #0
 3143 0058 FFF7FEFF 		bl	block_set_size
 3144              	.LVL302:
1045:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_used(next);
 3145              		.loc 1 1045 2 view .LVU881
 3146 005c 2846     		mov	r0, r5
 3147 005e FFF7FEFF 		bl	block_set_used
 3148              	.LVL303:
ARM GAS  /tmp/ccqbdhhV.s 			page 81


1046:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_set_prev_free(next);
 3149              		.loc 1 1046 2 view .LVU882
 3150 0062 2846     		mov	r0, r5
 3151 0064 FFF7FEFF 		bl	block_set_prev_free
 3152              	.LVL304:
1047:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1048:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return mem;
 3153              		.loc 1 1048 2 view .LVU883
 3154              		.loc 1 1048 9 is_stmt 0 view .LVU884
 3155 0068 2046     		mov	r0, r4
 3156              	.LVL305:
 3157              	.L211:
1049:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3158              		.loc 1 1049 1 view .LVU885
 3159 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3160              	.LVL306:
 3161              	.L213:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3162              		.loc 1 1014 10 view .LVU886
 3163 006c 0020     		movs	r0, #0
 3164              	.LVL307:
1014:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3165              		.loc 1 1014 10 view .LVU887
 3166 006e FCE7     		b	.L211
 3167              	.LVL308:
 3168              	.L214:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3169              		.loc 1 1028 10 view .LVU888
 3170 0070 0020     		movs	r0, #0
 3171              	.LVL309:
1028:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3172              		.loc 1 1028 10 view .LVU889
 3173 0072 FAE7     		b	.L211
 3174              		.cfi_endproc
 3175              	.LFE54:
 3177              		.section	.text.lv_tlsf_remove_pool,"ax",%progbits
 3178              		.align	1
 3179              		.global	lv_tlsf_remove_pool
 3180              		.syntax unified
 3181              		.thumb
 3182              		.thumb_func
 3183              		.fpu fpv4-sp-d16
 3185              	lv_tlsf_remove_pool:
 3186              	.LVL310:
 3187              	.LFB55:
1050:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1051:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_remove_pool(lv_tlsf_t tlsf, lv_pool_t pool)
1052:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3188              		.loc 1 1052 1 is_stmt 1 view -0
 3189              		.cfi_startproc
 3190              		@ args = 0, pretend = 0, frame = 8
 3191              		@ frame_needed = 0, uses_anonymous_args = 0
 3192              		.loc 1 1052 1 is_stmt 0 view .LVU891
 3193 0000 70B5     		push	{r4, r5, r6, lr}
 3194              	.LCFI42:
 3195              		.cfi_def_cfa_offset 16
 3196              		.cfi_offset 4, -16
ARM GAS  /tmp/ccqbdhhV.s 			page 82


 3197              		.cfi_offset 5, -12
 3198              		.cfi_offset 6, -8
 3199              		.cfi_offset 14, -4
 3200 0002 82B0     		sub	sp, sp, #8
 3201              	.LCFI43:
 3202              		.cfi_def_cfa_offset 24
 3203 0004 0546     		mov	r5, r0
 3204 0006 0846     		mov	r0, r1
 3205              	.LVL311:
1053:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3206              		.loc 1 1053 2 is_stmt 1 view .LVU892
1054:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = offset_to_block(pool, -(int)block_header_overhead);
 3207              		.loc 1 1054 2 view .LVU893
 3208              		.loc 1 1054 26 is_stmt 0 view .LVU894
 3209 0008 6FF00301 		mvn	r1, #3
 3210              	.LVL312:
 3211              		.loc 1 1054 26 view .LVU895
 3212 000c FFF7FEFF 		bl	offset_to_block
 3213              	.LVL313:
 3214              		.loc 1 1054 26 view .LVU896
 3215 0010 0446     		mov	r4, r0
 3216              	.LVL314:
1055:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1056:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int fl = 0, sl = 0;
 3217              		.loc 1 1056 2 is_stmt 1 view .LVU897
 3218              		.loc 1 1056 6 is_stmt 0 view .LVU898
 3219 0012 0023     		movs	r3, #0
 3220 0014 0193     		str	r3, [sp, #4]
 3221              		.loc 1 1056 14 view .LVU899
 3222 0016 0093     		str	r3, [sp]
1057:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1058:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_is_free(block) && "block should be free");
 3223              		.loc 1 1058 2 is_stmt 1 view .LVU900
 3224              		.loc 1 1058 2 view .LVU901
 3225 0018 FFF7FEFF 		bl	block_is_free
 3226              	.LVL315:
 3227              		.loc 1 1058 2 is_stmt 0 view .LVU902
 3228 001c 00B9     		cbnz	r0, .L217
 3229              	.L218:
 3230              		.loc 1 1058 2 is_stmt 1 discriminator 1 view .LVU903
 3231              		.loc 1 1058 2 discriminator 1 view .LVU904
 3232              		.loc 1 1058 2 discriminator 1 view .LVU905
 3233              		.loc 1 1058 2 discriminator 1 view .LVU906
 3234 001e FEE7     		b	.L218
 3235              	.L217:
 3236              		.loc 1 1058 2 discriminator 4 view .LVU907
1059:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
 3237              		.loc 1 1059 2 discriminator 4 view .LVU908
 3238              		.loc 1 1059 2 discriminator 4 view .LVU909
 3239 0020 2046     		mov	r0, r4
 3240 0022 FFF7FEFF 		bl	block_next
 3241              	.LVL316:
 3242 0026 0646     		mov	r6, r0
 3243 0028 FFF7FEFF 		bl	block_is_free
 3244              	.LVL317:
 3245 002c 00B1     		cbz	r0, .L219
 3246              	.L220:
ARM GAS  /tmp/ccqbdhhV.s 			page 83


 3247              		.loc 1 1059 2 discriminator 2 view .LVU910
 3248              		.loc 1 1059 2 discriminator 2 view .LVU911
 3249              		.loc 1 1059 2 discriminator 2 view .LVU912
 3250              		.loc 1 1059 2 discriminator 2 view .LVU913
 3251 002e FEE7     		b	.L220
 3252              	.L219:
 3253              		.loc 1 1059 2 discriminator 2 view .LVU914
1060:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
 3254              		.loc 1 1060 2 discriminator 2 view .LVU915
 3255              		.loc 1 1060 2 discriminator 2 view .LVU916
 3256 0030 3046     		mov	r0, r6
 3257 0032 FFF7FEFF 		bl	block_size
 3258              	.LVL318:
 3259 0036 00B1     		cbz	r0, .L221
 3260              	.L222:
 3261              		.loc 1 1060 2 discriminator 3 view .LVU917
 3262              		.loc 1 1060 2 discriminator 3 view .LVU918
 3263              		.loc 1 1060 2 discriminator 3 view .LVU919
 3264              		.loc 1 1060 2 discriminator 3 view .LVU920
 3265 0038 FEE7     		b	.L222
 3266              	.L221:
 3267              		.loc 1 1060 2 discriminator 2 view .LVU921
1061:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1062:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	mapping_insert(block_size(block), &fl, &sl);
 3268              		.loc 1 1062 2 discriminator 2 view .LVU922
 3269 003a 2046     		mov	r0, r4
 3270 003c FFF7FEFF 		bl	block_size
 3271              	.LVL319:
 3272 0040 6A46     		mov	r2, sp
 3273 0042 01A9     		add	r1, sp, #4
 3274 0044 FFF7FEFF 		bl	mapping_insert
 3275              	.LVL320:
1063:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	remove_free_block(control, block, fl, sl);
 3276              		.loc 1 1063 2 discriminator 2 view .LVU923
 3277 0048 009B     		ldr	r3, [sp]
 3278 004a 019A     		ldr	r2, [sp, #4]
 3279 004c 2146     		mov	r1, r4
 3280 004e 2846     		mov	r0, r5
 3281 0050 FFF7FEFF 		bl	remove_free_block
 3282              	.LVL321:
1064:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3283              		.loc 1 1064 1 is_stmt 0 discriminator 2 view .LVU924
 3284 0054 02B0     		add	sp, sp, #8
 3285              	.LCFI44:
 3286              		.cfi_def_cfa_offset 16
 3287              		@ sp needed
 3288 0056 70BD     		pop	{r4, r5, r6, pc}
 3289              		.loc 1 1064 1 discriminator 2 view .LVU925
 3290              		.cfi_endproc
 3291              	.LFE55:
 3293              		.section	.text.lv_tlsf_create,"ax",%progbits
 3294              		.align	1
 3295              		.global	lv_tlsf_create
 3296              		.syntax unified
 3297              		.thumb
 3298              		.thumb_func
 3299              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccqbdhhV.s 			page 84


 3301              	lv_tlsf_create:
 3302              	.LVL322:
 3303              	.LFB56:
1065:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1066:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1067:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** TLSF main interface.
1068:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1069:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1070:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1071:Middlewares/lvgl/src/misc/lv_tlsf.c **** int test_ffs_fls()
1072:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
1073:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Verify ffs/fls work properly. */
1074:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	int rv = 0;
1075:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0) == -1) ? 0 : 0x1;
1076:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0) == -1) ? 0 : 0x2;
1077:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(1) == 0) ? 0 : 0x4;
1078:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(1) == 0) ? 0 : 0x8;
1079:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80000000) == 31) ? 0 : 0x10;
1080:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_ffs(0x80008000) == 15) ? 0 : 0x20;
1081:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x80000008) == 31) ? 0 : 0x40;
1082:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls(0x7FFFFFFF) == 30) ? 0 : 0x80;
1083:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1084:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if defined (TLSF_64BIT)
1085:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x80000000) == 31) ? 0 : 0x100;
1086:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0x100000000) == 32) ? 0 : 0x200;
1087:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	rv += (tlsf_fls_sizet(0xffffffffffffffff) == 63) ? 0 : 0x400;
1088:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1089:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1090:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (rv)
1091:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1092:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("test_ffs_fls: %x ffs/fls tests failed.\n", rv);
1093:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1094:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return rv;
1095:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
1096:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1097:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1098:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create(void* mem)
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3304              		.loc 1 1099 1 is_stmt 1 view -0
 3305              		.cfi_startproc
 3306              		@ args = 0, pretend = 0, frame = 0
 3307              		@ frame_needed = 0, uses_anonymous_args = 0
1100:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
1101:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (test_ffs_fls())
1102:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1103:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1104:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1105:Middlewares/lvgl/src/misc/lv_tlsf.c **** #endif
1106:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1107:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (((tlsfptr_t)mem % ALIGN_SIZE) != 0)
 3308              		.loc 1 1107 2 view .LVU927
 3309              		.loc 1 1107 5 is_stmt 0 view .LVU928
 3310 0000 10F0030F 		tst	r0, #3
 3311 0004 05D1     		bne	.L226
1099:Middlewares/lvgl/src/misc/lv_tlsf.c **** #if _DEBUG
 3312              		.loc 1 1099 1 view .LVU929
 3313 0006 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccqbdhhV.s 			page 85


 3314              	.LCFI45:
 3315              		.cfi_def_cfa_offset 8
 3316              		.cfi_offset 4, -8
 3317              		.cfi_offset 14, -4
 3318 0008 0446     		mov	r4, r0
1108:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1109:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		printf("lv_tlsf_create: Memory must be aligned to %u bytes.\n",
1110:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			(unsigned int)ALIGN_SIZE);
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		return 0;
1112:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1113:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1114:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_constructor(tlsf_cast(control_t*, mem));
 3319              		.loc 1 1114 2 is_stmt 1 view .LVU930
 3320 000a FFF7FEFF 		bl	control_constructor
 3321              	.LVL323:
1115:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1116:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_tlsf_t, mem);
 3322              		.loc 1 1116 2 view .LVU931
 3323              		.loc 1 1116 9 is_stmt 0 view .LVU932
 3324 000e 2046     		mov	r0, r4
1117:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3325              		.loc 1 1117 1 view .LVU933
 3326 0010 10BD     		pop	{r4, pc}
 3327              	.LVL324:
 3328              	.L226:
 3329              	.LCFI46:
 3330              		.cfi_def_cfa_offset 0
 3331              		.cfi_restore 4
 3332              		.cfi_restore 14
1111:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3333              		.loc 1 1111 10 view .LVU934
 3334 0012 0020     		movs	r0, #0
 3335              	.LVL325:
 3336              		.loc 1 1117 1 view .LVU935
 3337 0014 7047     		bx	lr
 3338              		.cfi_endproc
 3339              	.LFE56:
 3341              		.section	.text.lv_tlsf_create_with_pool,"ax",%progbits
 3342              		.align	1
 3343              		.global	lv_tlsf_create_with_pool
 3344              		.syntax unified
 3345              		.thumb
 3346              		.thumb_func
 3347              		.fpu fpv4-sp-d16
 3349              	lv_tlsf_create_with_pool:
 3350              	.LVL326:
 3351              	.LFB57:
1118:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1119:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_tlsf_t lv_tlsf_create_with_pool(void* mem, size_t bytes)
1120:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3352              		.loc 1 1120 1 is_stmt 1 view -0
 3353              		.cfi_startproc
 3354              		@ args = 0, pretend = 0, frame = 0
 3355              		@ frame_needed = 0, uses_anonymous_args = 0
 3356              		.loc 1 1120 1 is_stmt 0 view .LVU937
 3357 0000 70B5     		push	{r4, r5, r6, lr}
 3358              	.LCFI47:
ARM GAS  /tmp/ccqbdhhV.s 			page 86


 3359              		.cfi_def_cfa_offset 16
 3360              		.cfi_offset 4, -16
 3361              		.cfi_offset 5, -12
 3362              		.cfi_offset 6, -8
 3363              		.cfi_offset 14, -4
 3364 0002 0546     		mov	r5, r0
 3365 0004 0E46     		mov	r6, r1
1121:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_t tlsf = lv_tlsf_create(mem);
 3366              		.loc 1 1121 2 is_stmt 1 view .LVU938
 3367              		.loc 1 1121 19 is_stmt 0 view .LVU939
 3368 0006 FFF7FEFF 		bl	lv_tlsf_create
 3369              	.LVL327:
 3370              		.loc 1 1121 19 view .LVU940
 3371 000a 0446     		mov	r4, r0
 3372              	.LVL328:
1122:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	lv_tlsf_add_pool(tlsf, (char*)mem + lv_tlsf_size(), bytes - lv_tlsf_size());
 3373              		.loc 1 1122 2 is_stmt 1 view .LVU941
 3374              		.loc 1 1122 38 is_stmt 0 view .LVU942
 3375 000c FFF7FEFF 		bl	lv_tlsf_size
 3376              	.LVL329:
 3377              		.loc 1 1122 2 view .LVU943
 3378 0010 321A     		subs	r2, r6, r0
 3379 0012 2918     		adds	r1, r5, r0
 3380 0014 2046     		mov	r0, r4
 3381 0016 FFF7FEFF 		bl	lv_tlsf_add_pool
 3382              	.LVL330:
1123:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf;
 3383              		.loc 1 1123 2 is_stmt 1 view .LVU944
1124:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3384              		.loc 1 1124 1 is_stmt 0 view .LVU945
 3385 001a 2046     		mov	r0, r4
 3386 001c 70BD     		pop	{r4, r5, r6, pc}
 3387              		.loc 1 1124 1 view .LVU946
 3388              		.cfi_endproc
 3389              	.LFE57:
 3391              		.section	.text.lv_tlsf_destroy,"ax",%progbits
 3392              		.align	1
 3393              		.global	lv_tlsf_destroy
 3394              		.syntax unified
 3395              		.thumb
 3396              		.thumb_func
 3397              		.fpu fpv4-sp-d16
 3399              	lv_tlsf_destroy:
 3400              	.LVL331:
 3401              	.LFB58:
1125:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1126:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_destroy(lv_tlsf_t tlsf)
1127:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3402              		.loc 1 1127 1 is_stmt 1 view -0
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 0
 3405              		@ frame_needed = 0, uses_anonymous_args = 0
 3406              		@ link register save eliminated.
1128:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Nothing to do. */
1129:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	(void)tlsf;
 3407              		.loc 1 1129 2 view .LVU948
1130:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
ARM GAS  /tmp/ccqbdhhV.s 			page 87


 3408              		.loc 1 1130 1 is_stmt 0 view .LVU949
 3409 0000 7047     		bx	lr
 3410              		.cfi_endproc
 3411              	.LFE58:
 3413              		.section	.text.lv_tlsf_get_pool,"ax",%progbits
 3414              		.align	1
 3415              		.global	lv_tlsf_get_pool
 3416              		.syntax unified
 3417              		.thumb
 3418              		.thumb_func
 3419              		.fpu fpv4-sp-d16
 3421              	lv_tlsf_get_pool:
 3422              	.LVL332:
 3423              	.LFB59:
1131:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1132:Middlewares/lvgl/src/misc/lv_tlsf.c **** lv_pool_t lv_tlsf_get_pool(lv_tlsf_t tlsf)
1133:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3424              		.loc 1 1133 1 is_stmt 1 view -0
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 0
 3427              		@ frame_needed = 0, uses_anonymous_args = 0
 3428              		.loc 1 1133 1 is_stmt 0 view .LVU951
 3429 0000 10B5     		push	{r4, lr}
 3430              	.LCFI48:
 3431              		.cfi_def_cfa_offset 8
 3432              		.cfi_offset 4, -8
 3433              		.cfi_offset 14, -4
 3434 0002 0446     		mov	r4, r0
1134:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return tlsf_cast(lv_pool_t, (char*)tlsf + lv_tlsf_size());
 3435              		.loc 1 1134 2 is_stmt 1 view .LVU952
 3436              		.loc 1 1134 9 is_stmt 0 view .LVU953
 3437 0004 FFF7FEFF 		bl	lv_tlsf_size
 3438              	.LVL333:
1135:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3439              		.loc 1 1135 1 view .LVU954
 3440 0008 2044     		add	r0, r0, r4
 3441 000a 10BD     		pop	{r4, pc}
 3442              		.loc 1 1135 1 view .LVU955
 3443              		.cfi_endproc
 3444              	.LFE59:
 3446              		.section	.text.lv_tlsf_malloc,"ax",%progbits
 3447              		.align	1
 3448              		.global	lv_tlsf_malloc
 3449              		.syntax unified
 3450              		.thumb
 3451              		.thumb_func
 3452              		.fpu fpv4-sp-d16
 3454              	lv_tlsf_malloc:
 3455              	.LVL334:
 3456              	.LFB60:
1136:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1137:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
1138:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3457              		.loc 1 1138 1 is_stmt 1 view -0
 3458              		.cfi_startproc
 3459              		@ args = 0, pretend = 0, frame = 0
 3460              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccqbdhhV.s 			page 88


 3461              		.loc 1 1138 1 is_stmt 0 view .LVU957
 3462 0000 38B5     		push	{r3, r4, r5, lr}
 3463              	.LCFI49:
 3464              		.cfi_def_cfa_offset 16
 3465              		.cfi_offset 3, -16
 3466              		.cfi_offset 4, -12
 3467              		.cfi_offset 5, -8
 3468              		.cfi_offset 14, -4
 3469 0002 0446     		mov	r4, r0
 3470 0004 0846     		mov	r0, r1
 3471              	.LVL335:
1139:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3472              		.loc 1 1139 2 is_stmt 1 view .LVU958
1140:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3473              		.loc 1 1140 2 view .LVU959
 3474              		.loc 1 1140 24 is_stmt 0 view .LVU960
 3475 0006 0421     		movs	r1, #4
 3476              	.LVL336:
 3477              		.loc 1 1140 24 view .LVU961
 3478 0008 FFF7FEFF 		bl	adjust_request_size
 3479              	.LVL337:
 3480              		.loc 1 1140 24 view .LVU962
 3481 000c 0546     		mov	r5, r0
 3482              	.LVL338:
1141:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, adjust);
 3483              		.loc 1 1141 2 is_stmt 1 view .LVU963
 3484              		.loc 1 1141 26 is_stmt 0 view .LVU964
 3485 000e 0146     		mov	r1, r0
 3486 0010 2046     		mov	r0, r4
 3487              	.LVL339:
 3488              		.loc 1 1141 26 view .LVU965
 3489 0012 FFF7FEFF 		bl	block_locate_free
 3490              	.LVL340:
 3491              		.loc 1 1141 26 view .LVU966
 3492 0016 0146     		mov	r1, r0
 3493              	.LVL341:
1142:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3494              		.loc 1 1142 2 is_stmt 1 view .LVU967
 3495              		.loc 1 1142 9 is_stmt 0 view .LVU968
 3496 0018 2A46     		mov	r2, r5
 3497 001a 2046     		mov	r0, r4
 3498              	.LVL342:
 3499              		.loc 1 1142 9 view .LVU969
 3500 001c FFF7FEFF 		bl	block_prepare_used
 3501              	.LVL343:
1143:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3502              		.loc 1 1143 1 view .LVU970
 3503 0020 38BD     		pop	{r3, r4, r5, pc}
 3504              		.loc 1 1143 1 view .LVU971
 3505              		.cfi_endproc
 3506              	.LFE60:
 3508              		.section	.text.lv_tlsf_memalign,"ax",%progbits
 3509              		.align	1
 3510              		.global	lv_tlsf_memalign
 3511              		.syntax unified
 3512              		.thumb
 3513              		.thumb_func
ARM GAS  /tmp/ccqbdhhV.s 			page 89


 3514              		.fpu fpv4-sp-d16
 3516              	lv_tlsf_memalign:
 3517              	.LVL344:
 3518              	.LFB61:
1144:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1145:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
1146:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3519              		.loc 1 1146 1 is_stmt 1 view -0
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 0
 3522              		@ frame_needed = 0, uses_anonymous_args = 0
 3523              		.loc 1 1146 1 is_stmt 0 view .LVU973
 3524 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3525              	.LCFI50:
 3526              		.cfi_def_cfa_offset 24
 3527              		.cfi_offset 4, -24
 3528              		.cfi_offset 5, -20
 3529              		.cfi_offset 6, -16
 3530              		.cfi_offset 7, -12
 3531              		.cfi_offset 8, -8
 3532              		.cfi_offset 14, -4
 3533 0004 0646     		mov	r6, r0
 3534 0006 0C46     		mov	r4, r1
1147:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3535              		.loc 1 1147 2 is_stmt 1 view .LVU974
 3536              	.LVL345:
1148:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3537              		.loc 1 1148 2 view .LVU975
 3538              		.loc 1 1148 24 is_stmt 0 view .LVU976
 3539 0008 0421     		movs	r1, #4
 3540              	.LVL346:
 3541              		.loc 1 1148 24 view .LVU977
 3542 000a 1046     		mov	r0, r2
 3543              	.LVL347:
 3544              		.loc 1 1148 24 view .LVU978
 3545 000c FFF7FEFF 		bl	adjust_request_size
 3546              	.LVL348:
 3547              		.loc 1 1148 24 view .LVU979
 3548 0010 0546     		mov	r5, r0
 3549              	.LVL349:
1149:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1150:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1151:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** We must allocate an additional minimum block size bytes so that if
1152:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** our free block will leave an alignment gap which is smaller, we can
1153:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** trim a leading free block and release it back to the pool. We must
1154:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** do this because the previous physical block is in use, therefore
1155:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the prev_phys_block field is not valid, and we can't simply adjust
1156:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** the size of that block.
1157:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1158:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t gap_minimum = sizeof(block_header_t);
 3550              		.loc 1 1158 2 is_stmt 1 view .LVU980
1159:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t size_with_gap = adjust_request_size(adjust + align + gap_minimum, align);
 3551              		.loc 1 1159 2 view .LVU981
 3552              		.loc 1 1159 58 is_stmt 0 view .LVU982
 3553 0012 2044     		add	r0, r0, r4
 3554              	.LVL350:
 3555              		.loc 1 1159 31 view .LVU983
ARM GAS  /tmp/ccqbdhhV.s 			page 90


 3556 0014 2146     		mov	r1, r4
 3557 0016 1030     		adds	r0, r0, #16
 3558 0018 FFF7FEFF 		bl	adjust_request_size
 3559              	.LVL351:
1160:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1161:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/*
1162:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If alignment is less than or equals base alignment, we're done.
1163:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	** If we requested 0 bytes, return null, as lv_tlsf_malloc(0) does.
1164:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	*/
1165:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	const size_t aligned_size = (adjust && align > ALIGN_SIZE) ? size_with_gap : adjust;
 3560              		.loc 1 1165 2 is_stmt 1 view .LVU984
 3561              		.loc 1 1165 77 is_stmt 0 view .LVU985
 3562 001c 25B1     		cbz	r5, .L244
 3563 001e 0146     		mov	r1, r0
 3564              		.loc 1 1165 38 discriminator 1 view .LVU986
 3565 0020 042C     		cmp	r4, #4
 3566 0022 02D8     		bhi	.L239
 3567              		.loc 1 1165 77 view .LVU987
 3568 0024 2946     		mov	r1, r5
 3569 0026 00E0     		b	.L239
 3570              	.L244:
 3571              		.loc 1 1165 77 view .LVU988
 3572 0028 2946     		mov	r1, r5
 3573              	.L239:
 3574              	.LVL352:
1166:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1167:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	block_header_t* block = block_locate_free(control, aligned_size);
 3575              		.loc 1 1167 2 is_stmt 1 discriminator 6 view .LVU989
 3576              		.loc 1 1167 26 is_stmt 0 discriminator 6 view .LVU990
 3577 002a 3046     		mov	r0, r6
 3578              	.LVL353:
 3579              		.loc 1 1167 26 discriminator 6 view .LVU991
 3580 002c FFF7FEFF 		bl	block_locate_free
 3581              	.LVL354:
1168:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1169:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* This can't be a static assert. */
1170:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
 3582              		.loc 1 1170 2 is_stmt 1 discriminator 6 view .LVU992
 3583              		.loc 1 1170 2 discriminator 6 view .LVU993
 3584              		.loc 1 1170 2 discriminator 6 view .LVU994
1171:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1172:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (block)
 3585              		.loc 1 1172 2 discriminator 6 view .LVU995
 3586              		.loc 1 1172 5 is_stmt 0 discriminator 6 view .LVU996
 3587 0030 0746     		mov	r7, r0
 3588 0032 F8B1     		cbz	r0, .L240
 3589              	.LBB13:
1173:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1174:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* ptr = block_to_ptr(block);
 3590              		.loc 1 1174 3 is_stmt 1 view .LVU997
 3591              		.loc 1 1174 15 is_stmt 0 view .LVU998
 3592 0034 FFF7FEFF 		bl	block_to_ptr
 3593              	.LVL355:
 3594              		.loc 1 1174 15 view .LVU999
 3595 0038 8046     		mov	r8, r0
 3596              	.LVL356:
1175:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		void* aligned = align_ptr(ptr, align);
ARM GAS  /tmp/ccqbdhhV.s 			page 91


 3597              		.loc 1 1175 3 is_stmt 1 view .LVU1000
 3598              		.loc 1 1175 19 is_stmt 0 view .LVU1001
 3599 003a 2146     		mov	r1, r4
 3600 003c FFF7FEFF 		bl	align_ptr
 3601              	.LVL357:
1176:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		size_t gap = tlsf_cast(size_t,
 3602              		.loc 1 1176 3 is_stmt 1 view .LVU1002
 3603              		.loc 1 1176 16 is_stmt 0 view .LVU1003
 3604 0040 A0EB0802 		sub	r2, r0, r8
 3605              	.LVL358:
1177:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1178:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1179:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/* If gap size is too small, offset to next aligned boundary. */
1180:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap && gap < gap_minimum)
 3606              		.loc 1 1180 3 is_stmt 1 view .LVU1004
 3607              		.loc 1 1180 11 is_stmt 0 view .LVU1005
 3608 0044 531E     		subs	r3, r2, #1
 3609              		.loc 1 1180 6 view .LVU1006
 3610 0046 0E2B     		cmp	r3, #14
 3611 0048 03D9     		bls	.L246
 3612              	.L241:
1181:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t gap_remain = gap_minimum - gap;
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
1185:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
1186:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			aligned = align_ptr(next_aligned, align);
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
1189:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
1190:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1191:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1192:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (gap)
 3613              		.loc 1 1192 3 is_stmt 1 view .LVU1007
 3614              		.loc 1 1192 6 is_stmt 0 view .LVU1008
 3615 004a 9AB1     		cbz	r2, .L240
1193:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1194:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			tlsf_assert(gap >= gap_minimum && "gap size too small");
 3616              		.loc 1 1194 4 is_stmt 1 view .LVU1009
 3617              		.loc 1 1194 4 view .LVU1010
 3618 004c 0F2A     		cmp	r2, #15
 3619 004e 0CD8     		bhi	.L242
 3620              	.L243:
 3621              		.loc 1 1194 4 discriminator 2 view .LVU1011
 3622              		.loc 1 1194 4 discriminator 2 view .LVU1012
 3623              		.loc 1 1194 4 discriminator 2 view .LVU1013
 3624              		.loc 1 1194 4 discriminator 2 view .LVU1014
 3625 0050 FEE7     		b	.L243
 3626              	.L246:
 3627              	.LBB14:
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3628              		.loc 1 1182 4 view .LVU1015
1182:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const size_t offset = tlsf_max(gap_remain, align);
 3629              		.loc 1 1182 17 is_stmt 0 view .LVU1016
 3630 0052 C2F11002 		rsb	r2, r2, #16
 3631              	.LVL359:
1183:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			const void* next_aligned = tlsf_cast(void*,
ARM GAS  /tmp/ccqbdhhV.s 			page 92


 3632              		.loc 1 1183 4 is_stmt 1 view .LVU1017
1184:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) + offset);
 3633              		.loc 1 1184 4 view .LVU1018
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3634              		.loc 1 1187 4 view .LVU1019
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3635              		.loc 1 1187 14 is_stmt 0 view .LVU1020
 3636 0056 2146     		mov	r1, r4
 3637 0058 9442     		cmp	r4, r2
 3638 005a 2CBF     		ite	cs
 3639 005c 0019     		addcs	r0, r0, r4
 3640 005e 8018     		addcc	r0, r0, r2
 3641              	.LVL360:
1187:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			gap = tlsf_cast(size_t,
 3642              		.loc 1 1187 14 view .LVU1021
 3643 0060 FFF7FEFF 		bl	align_ptr
 3644              	.LVL361:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3645              		.loc 1 1188 4 is_stmt 1 view .LVU1022
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3646              		.loc 1 1188 10 is_stmt 0 view .LVU1023
 3647 0064 A0EB0802 		sub	r2, r0, r8
 3648              	.LVL362:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3649              		.loc 1 1188 10 view .LVU1024
 3650 0068 EFE7     		b	.L241
 3651              	.L242:
1188:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				tlsf_cast(tlsfptr_t, aligned) - tlsf_cast(tlsfptr_t, ptr));
 3652              		.loc 1 1188 10 view .LVU1025
 3653              	.LBE14:
 3654              		.loc 1 1194 4 is_stmt 1 discriminator 2 view .LVU1026
1195:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block = block_trim_free_leading(control, block, gap);
 3655              		.loc 1 1195 4 discriminator 2 view .LVU1027
 3656              		.loc 1 1195 12 is_stmt 0 discriminator 2 view .LVU1028
 3657 006a 3946     		mov	r1, r7
 3658 006c 3046     		mov	r0, r6
 3659              	.LVL363:
 3660              		.loc 1 1195 12 discriminator 2 view .LVU1029
 3661 006e FFF7FEFF 		bl	block_trim_free_leading
 3662              	.LVL364:
 3663              		.loc 1 1195 12 discriminator 2 view .LVU1030
 3664 0072 0746     		mov	r7, r0
 3665              	.LVL365:
 3666              	.L240:
 3667              		.loc 1 1195 12 discriminator 2 view .LVU1031
 3668              	.LBE13:
1196:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1197:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1198:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1199:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return block_prepare_used(control, block, adjust);
 3669              		.loc 1 1199 2 is_stmt 1 view .LVU1032
 3670              		.loc 1 1199 9 is_stmt 0 view .LVU1033
 3671 0074 2A46     		mov	r2, r5
 3672 0076 3946     		mov	r1, r7
 3673 0078 3046     		mov	r0, r6
 3674 007a FFF7FEFF 		bl	block_prepare_used
 3675              	.LVL366:
ARM GAS  /tmp/ccqbdhhV.s 			page 93


1200:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3676              		.loc 1 1200 1 view .LVU1034
 3677 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3678              		.loc 1 1200 1 view .LVU1035
 3679              		.cfi_endproc
 3680              	.LFE61:
 3682              		.section	.text.lv_tlsf_free,"ax",%progbits
 3683              		.align	1
 3684              		.global	lv_tlsf_free
 3685              		.syntax unified
 3686              		.thumb
 3687              		.thumb_func
 3688              		.fpu fpv4-sp-d16
 3690              	lv_tlsf_free:
 3691              	.LVL367:
 3692              	.LFB62:
1201:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1202:Middlewares/lvgl/src/misc/lv_tlsf.c **** void lv_tlsf_free(lv_tlsf_t tlsf, void* ptr)
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3693              		.loc 1 1203 1 is_stmt 1 view -0
 3694              		.cfi_startproc
 3695              		@ args = 0, pretend = 0, frame = 0
 3696              		@ frame_needed = 0, uses_anonymous_args = 0
1204:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
1205:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr)
 3697              		.loc 1 1205 2 view .LVU1037
 3698              		.loc 1 1205 5 is_stmt 0 view .LVU1038
 3699 0000 C9B1     		cbz	r1, .L252
1203:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Don't attempt to free a NULL pointer. */
 3700              		.loc 1 1203 1 view .LVU1039
 3701 0002 38B5     		push	{r3, r4, r5, lr}
 3702              	.LCFI51:
 3703              		.cfi_def_cfa_offset 16
 3704              		.cfi_offset 3, -16
 3705              		.cfi_offset 4, -12
 3706              		.cfi_offset 5, -8
 3707              		.cfi_offset 14, -4
 3708 0004 0446     		mov	r4, r0
 3709 0006 0846     		mov	r0, r1
 3710              	.LVL368:
 3711              	.LBB15:
1206:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1207:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		control_t* control = tlsf_cast(control_t*, tlsf);
 3712              		.loc 1 1207 3 is_stmt 1 view .LVU1040
1208:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3713              		.loc 1 1208 3 view .LVU1041
 3714              		.loc 1 1208 27 is_stmt 0 view .LVU1042
 3715 0008 FFF7FEFF 		bl	block_from_ptr
 3716              	.LVL369:
 3717              		.loc 1 1208 27 view .LVU1043
 3718 000c 0546     		mov	r5, r0
 3719              	.LVL370:
1209:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3720              		.loc 1 1209 3 is_stmt 1 view .LVU1044
 3721              		.loc 1 1209 3 view .LVU1045
 3722 000e FFF7FEFF 		bl	block_is_free
 3723              	.LVL371:
ARM GAS  /tmp/ccqbdhhV.s 			page 94


 3724              		.loc 1 1209 3 is_stmt 0 view .LVU1046
 3725 0012 00B1     		cbz	r0, .L249
 3726              	.L250:
 3727              		.loc 1 1209 3 is_stmt 1 discriminator 1 view .LVU1047
 3728              		.loc 1 1209 3 discriminator 1 view .LVU1048
 3729              		.loc 1 1209 3 discriminator 1 view .LVU1049
 3730              		.loc 1 1209 3 discriminator 1 view .LVU1050
 3731 0014 FEE7     		b	.L250
 3732              	.L249:
 3733              		.loc 1 1209 3 discriminator 2 view .LVU1051
1210:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_mark_as_free(block);
 3734              		.loc 1 1210 3 discriminator 2 view .LVU1052
 3735 0016 2846     		mov	r0, r5
 3736 0018 FFF7FEFF 		bl	block_mark_as_free
 3737              	.LVL372:
1211:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_prev(control, block);
 3738              		.loc 1 1211 3 discriminator 2 view .LVU1053
 3739              		.loc 1 1211 11 is_stmt 0 discriminator 2 view .LVU1054
 3740 001c 2946     		mov	r1, r5
 3741 001e 2046     		mov	r0, r4
 3742 0020 FFF7FEFF 		bl	block_merge_prev
 3743              	.LVL373:
 3744 0024 0146     		mov	r1, r0
 3745              	.LVL374:
1212:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block = block_merge_next(control, block);
 3746              		.loc 1 1212 3 is_stmt 1 discriminator 2 view .LVU1055
 3747              		.loc 1 1212 11 is_stmt 0 discriminator 2 view .LVU1056
 3748 0026 2046     		mov	r0, r4
 3749              	.LVL375:
 3750              		.loc 1 1212 11 discriminator 2 view .LVU1057
 3751 0028 FFF7FEFF 		bl	block_merge_next
 3752              	.LVL376:
 3753              		.loc 1 1212 11 discriminator 2 view .LVU1058
 3754 002c 0146     		mov	r1, r0
 3755              	.LVL377:
1213:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_insert(control, block);
 3756              		.loc 1 1213 3 is_stmt 1 discriminator 2 view .LVU1059
 3757 002e 2046     		mov	r0, r4
 3758              	.LVL378:
 3759              		.loc 1 1213 3 is_stmt 0 discriminator 2 view .LVU1060
 3760 0030 FFF7FEFF 		bl	block_insert
 3761              	.LVL379:
 3762              		.loc 1 1213 3 discriminator 2 view .LVU1061
 3763              	.LBE15:
1214:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1215:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3764              		.loc 1 1215 1 discriminator 2 view .LVU1062
 3765 0034 38BD     		pop	{r3, r4, r5, pc}
 3766              	.LVL380:
 3767              	.L252:
 3768              	.LCFI52:
 3769              		.cfi_def_cfa_offset 0
 3770              		.cfi_restore 3
 3771              		.cfi_restore 4
 3772              		.cfi_restore 5
 3773              		.cfi_restore 14
 3774              		.loc 1 1215 1 discriminator 2 view .LVU1063
ARM GAS  /tmp/ccqbdhhV.s 			page 95


 3775 0036 7047     		bx	lr
 3776              		.cfi_endproc
 3777              	.LFE62:
 3779              		.section	.text.lv_tlsf_realloc,"ax",%progbits
 3780              		.align	1
 3781              		.global	lv_tlsf_realloc
 3782              		.syntax unified
 3783              		.thumb
 3784              		.thumb_func
 3785              		.fpu fpv4-sp-d16
 3787              	lv_tlsf_realloc:
 3788              	.LVL381:
 3789              	.LFB63:
1216:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1217:Middlewares/lvgl/src/misc/lv_tlsf.c **** /*
1218:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** The TLSF block information provides us with enough information to
1219:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** provide a reasonably intelligent implementation of realloc, growing or
1220:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** shrinking the currently allocated block as required.
1221:Middlewares/lvgl/src/misc/lv_tlsf.c **** **
1222:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** This routine handles the somewhat esoteric edge cases of realloc:
1223:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a non-zero size with a null pointer will behave like malloc
1224:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a zero size with a non-null pointer will behave like free
1225:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - a request that cannot be satisfied will leave the original buffer
1226:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   untouched
1227:Middlewares/lvgl/src/misc/lv_tlsf.c **** ** - an extended buffer size will leave the newly-allocated area with
1228:Middlewares/lvgl/src/misc/lv_tlsf.c **** **   contents undefined
1229:Middlewares/lvgl/src/misc/lv_tlsf.c **** */
1230:Middlewares/lvgl/src/misc/lv_tlsf.c **** void* lv_tlsf_realloc(lv_tlsf_t tlsf, void* ptr, size_t size)
1231:Middlewares/lvgl/src/misc/lv_tlsf.c **** {
 3790              		.loc 1 1231 1 is_stmt 1 view -0
 3791              		.cfi_startproc
 3792              		@ args = 0, pretend = 0, frame = 0
 3793              		@ frame_needed = 0, uses_anonymous_args = 0
 3794              		.loc 1 1231 1 is_stmt 0 view .LVU1065
 3795 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3796              	.LCFI53:
 3797              		.cfi_def_cfa_offset 40
 3798              		.cfi_offset 3, -40
 3799              		.cfi_offset 4, -36
 3800              		.cfi_offset 5, -32
 3801              		.cfi_offset 6, -28
 3802              		.cfi_offset 7, -24
 3803              		.cfi_offset 8, -20
 3804              		.cfi_offset 9, -16
 3805              		.cfi_offset 10, -12
 3806              		.cfi_offset 11, -8
 3807              		.cfi_offset 14, -4
 3808 0004 0546     		mov	r5, r0
 3809 0006 1446     		mov	r4, r2
1232:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	control_t* control = tlsf_cast(control_t*, tlsf);
 3810              		.loc 1 1232 2 is_stmt 1 view .LVU1066
 3811              	.LVL382:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	void* p = 0;
 3812              		.loc 1 1233 2 view .LVU1067
1234:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1235:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Zero-size requests are treated as free. */
1236:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	if (ptr && size == 0)
ARM GAS  /tmp/ccqbdhhV.s 			page 96


 3813              		.loc 1 1236 2 view .LVU1068
 3814              		.loc 1 1236 5 is_stmt 0 view .LVU1069
 3815 0008 8946     		mov	r9, r1
 3816 000a 01B1     		cbz	r1, .L256
 3817              		.loc 1 1236 10 discriminator 1 view .LVU1070
 3818 000c F2B1     		cbz	r2, .L265
 3819              	.L256:
1237:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		lv_tlsf_free(tlsf, ptr);
1239:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1240:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	/* Requests with NULL pointers are treated as malloc. */
1241:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else if (!ptr)
 3820              		.loc 1 1241 7 is_stmt 1 view .LVU1071
 3821              		.loc 1 1241 10 is_stmt 0 view .LVU1072
 3822 000e B9F1000F 		cmp	r9, #0
 3823 0012 1FD0     		beq	.L266
 3824              	.LBB16:
1242:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		p = lv_tlsf_malloc(tlsf, size);
1244:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1245:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	else
1246:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	{
1247:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* block = block_from_ptr(ptr);
 3825              		.loc 1 1247 3 is_stmt 1 view .LVU1073
 3826              		.loc 1 1247 27 is_stmt 0 view .LVU1074
 3827 0014 4846     		mov	r0, r9
 3828              	.LVL383:
 3829              		.loc 1 1247 27 view .LVU1075
 3830 0016 FFF7FEFF 		bl	block_from_ptr
 3831              	.LVL384:
 3832              		.loc 1 1247 27 view .LVU1076
 3833 001a 0646     		mov	r6, r0
 3834              	.LVL385:
1248:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		block_header_t* next = block_next(block);
 3835              		.loc 1 1248 3 is_stmt 1 view .LVU1077
 3836              		.loc 1 1248 26 is_stmt 0 view .LVU1078
 3837 001c FFF7FEFF 		bl	block_next
 3838              	.LVL386:
 3839              		.loc 1 1248 26 view .LVU1079
 3840 0020 8246     		mov	r10, r0
 3841              	.LVL387:
1249:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1250:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t cursize = block_size(block);
 3842              		.loc 1 1250 3 is_stmt 1 view .LVU1080
 3843              		.loc 1 1250 26 is_stmt 0 view .LVU1081
 3844 0022 3046     		mov	r0, r6
 3845              	.LVL388:
 3846              		.loc 1 1250 26 view .LVU1082
 3847 0024 FFF7FEFF 		bl	block_size
 3848              	.LVL389:
 3849 0028 8046     		mov	r8, r0
 3850              	.LVL390:
1251:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t combined = cursize + block_size(next) + block_header_overhead;
 3851              		.loc 1 1251 3 is_stmt 1 view .LVU1083
 3852              		.loc 1 1251 37 is_stmt 0 view .LVU1084
 3853 002a 5046     		mov	r0, r10
 3854              	.LVL391:
ARM GAS  /tmp/ccqbdhhV.s 			page 97


 3855              		.loc 1 1251 37 view .LVU1085
 3856 002c FFF7FEFF 		bl	block_size
 3857              	.LVL392:
 3858              		.loc 1 1251 35 view .LVU1086
 3859 0030 00EB0803 		add	r3, r0, r8
 3860              		.loc 1 1251 16 view .LVU1087
 3861 0034 03F1040B 		add	fp, r3, #4
 3862              	.LVL393:
1252:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		const size_t adjust = adjust_request_size(size, ALIGN_SIZE);
 3863              		.loc 1 1252 3 is_stmt 1 view .LVU1088
 3864              		.loc 1 1252 25 is_stmt 0 view .LVU1089
 3865 0038 0421     		movs	r1, #4
 3866 003a 2046     		mov	r0, r4
 3867 003c FFF7FEFF 		bl	adjust_request_size
 3868              	.LVL394:
 3869 0040 0746     		mov	r7, r0
 3870              	.LVL395:
1253:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		tlsf_assert(!block_is_free(block) && "block already marked as free");
 3871              		.loc 1 1254 3 is_stmt 1 view .LVU1090
 3872              		.loc 1 1254 3 view .LVU1091
 3873 0042 3046     		mov	r0, r6
 3874              	.LVL396:
 3875              		.loc 1 1254 3 is_stmt 0 view .LVU1092
 3876 0044 FFF7FEFF 		bl	block_is_free
 3877              	.LVL397:
 3878 0048 60B1     		cbz	r0, .L259
 3879              	.L260:
 3880              		.loc 1 1254 3 is_stmt 1 discriminator 1 view .LVU1093
 3881              		.loc 1 1254 3 discriminator 1 view .LVU1094
 3882              		.loc 1 1254 3 discriminator 1 view .LVU1095
 3883              		.loc 1 1254 3 discriminator 1 view .LVU1096
 3884 004a FEE7     		b	.L260
 3885              	.LVL398:
 3886              	.L265:
 3887              		.loc 1 1254 3 is_stmt 0 discriminator 1 view .LVU1097
 3888              	.LBE16:
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3889              		.loc 1 1238 3 is_stmt 1 view .LVU1098
 3890 004c FFF7FEFF 		bl	lv_tlsf_free
 3891              	.LVL399:
1233:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3892              		.loc 1 1233 8 is_stmt 0 view .LVU1099
 3893 0050 0026     		movs	r6, #0
1238:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3894              		.loc 1 1238 3 view .LVU1100
 3895 0052 04E0     		b	.L255
 3896              	.LVL400:
 3897              	.L266:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3898              		.loc 1 1243 3 is_stmt 1 view .LVU1101
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3899              		.loc 1 1243 7 is_stmt 0 view .LVU1102
 3900 0054 2146     		mov	r1, r4
 3901              	.LVL401:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3902              		.loc 1 1243 7 view .LVU1103
ARM GAS  /tmp/ccqbdhhV.s 			page 98


 3903 0056 2846     		mov	r0, r5
 3904              	.LVL402:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3905              		.loc 1 1243 7 view .LVU1104
 3906 0058 FFF7FEFF 		bl	lv_tlsf_malloc
 3907              	.LVL403:
1243:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
 3908              		.loc 1 1243 7 view .LVU1105
 3909 005c 0646     		mov	r6, r0
 3910              	.LVL404:
 3911              	.L255:
1255:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1256:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		/*
1257:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** If the next block is used, or when combined with the current
1258:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		** block, does not offer enough space, we must reallocate and copy.
1259:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		*/
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		if (adjust > cursize && (!block_is_free(next) || adjust > combined))
1261:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = lv_tlsf_malloc(tlsf, size);
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
1264:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				const size_t minsize = tlsf_min(cursize, size);
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
1268:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1269:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1270:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		else
1271:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
1272:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Do we need to expand to the next block? */
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (adjust > cursize)
1274:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_merge_next(control, block);
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
1277:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
1278:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1279:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			/* Trim the resulting block and return the original pointer. */
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			block_trim_used(control, block, adjust);
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
1282:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
1283:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	}
1284:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** 	return p;
1286:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3912              		.loc 1 1286 1 view .LVU1106
 3913 005e 3046     		mov	r0, r6
 3914 0060 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3915              	.LVL405:
 3916              	.L259:
 3917              	.LBB18:
1254:Middlewares/lvgl/src/misc/lv_tlsf.c **** 
 3918              		.loc 1 1254 3 is_stmt 1 discriminator 2 view .LVU1107
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3919              		.loc 1 1260 3 discriminator 2 view .LVU1108
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3920              		.loc 1 1260 6 is_stmt 0 discriminator 2 view .LVU1109
 3921 0064 B845     		cmp	r8, r7
 3922 0066 18D2     		bcs	.L261
ARM GAS  /tmp/ccqbdhhV.s 			page 99


1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3923              		.loc 1 1260 29 discriminator 1 view .LVU1110
 3924 0068 5046     		mov	r0, r10
 3925 006a FFF7FEFF 		bl	block_is_free
 3926              	.LVL406:
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3927              		.loc 1 1260 24 discriminator 1 view .LVU1111
 3928 006e 08B1     		cbz	r0, .L262
1260:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		{
 3929              		.loc 1 1260 49 discriminator 2 view .LVU1112
 3930 0070 BB45     		cmp	fp, r7
 3931 0072 12D2     		bcs	.L261
 3932              	.L262:
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3933              		.loc 1 1262 4 is_stmt 1 view .LVU1113
1262:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			if (p)
 3934              		.loc 1 1262 8 is_stmt 0 view .LVU1114
 3935 0074 2146     		mov	r1, r4
 3936 0076 2846     		mov	r0, r5
 3937 0078 FFF7FEFF 		bl	lv_tlsf_malloc
 3938              	.LVL407:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3939              		.loc 1 1263 4 is_stmt 1 view .LVU1115
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3940              		.loc 1 1263 7 is_stmt 0 view .LVU1116
 3941 007c 0646     		mov	r6, r0
 3942              	.LVL408:
1263:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3943              		.loc 1 1263 7 view .LVU1117
 3944 007e 0028     		cmp	r0, #0
 3945 0080 EDD0     		beq	.L255
 3946              	.LBB17:
1265:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_memcpy(p, ptr, minsize);
 3947              		.loc 1 1265 5 is_stmt 1 view .LVU1118
 3948              	.LVL409:
1266:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				lv_tlsf_free(tlsf, ptr);
 3949              		.loc 1 1266 5 view .LVU1119
 3950 0082 2246     		mov	r2, r4
 3951 0084 4445     		cmp	r4, r8
 3952 0086 28BF     		it	cs
 3953 0088 4246     		movcs	r2, r8
 3954 008a 4946     		mov	r1, r9
 3955 008c FFF7FEFF 		bl	lv_memcpy
 3956              	.LVL410:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3957              		.loc 1 1267 5 view .LVU1120
 3958 0090 4946     		mov	r1, r9
 3959 0092 2846     		mov	r0, r5
 3960 0094 FFF7FEFF 		bl	lv_tlsf_free
 3961              	.LVL411:
 3962 0098 E1E7     		b	.L255
 3963              	.LVL412:
 3964              	.L261:
1267:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3965              		.loc 1 1267 5 is_stmt 0 view .LVU1121
 3966              	.LBE17:
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
ARM GAS  /tmp/ccqbdhhV.s 			page 100


 3967              		.loc 1 1273 4 is_stmt 1 view .LVU1122
1273:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			{
 3968              		.loc 1 1273 7 is_stmt 0 view .LVU1123
 3969 009a B845     		cmp	r8, r7
 3970 009c 06D3     		bcc	.L267
 3971              	.L263:
1280:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			p = ptr;
 3972              		.loc 1 1280 4 is_stmt 1 view .LVU1124
 3973 009e 3A46     		mov	r2, r7
 3974 00a0 3146     		mov	r1, r6
 3975 00a2 2846     		mov	r0, r5
 3976 00a4 FFF7FEFF 		bl	block_trim_used
 3977              	.LVL413:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3978              		.loc 1 1281 4 view .LVU1125
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3979              		.loc 1 1281 6 is_stmt 0 view .LVU1126
 3980 00a8 4E46     		mov	r6, r9
 3981              	.LVL414:
1281:Middlewares/lvgl/src/misc/lv_tlsf.c **** 		}
 3982              		.loc 1 1281 6 view .LVU1127
 3983              	.LBE18:
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3984              		.loc 1 1285 2 is_stmt 1 view .LVU1128
1285:Middlewares/lvgl/src/misc/lv_tlsf.c **** }
 3985              		.loc 1 1285 9 is_stmt 0 view .LVU1129
 3986 00aa D8E7     		b	.L255
 3987              	.LVL415:
 3988              	.L267:
 3989              	.LBB19:
1275:Middlewares/lvgl/src/misc/lv_tlsf.c **** 				block_mark_as_used(block);
 3990              		.loc 1 1275 5 is_stmt 1 view .LVU1130
 3991 00ac 3146     		mov	r1, r6
 3992 00ae 2846     		mov	r0, r5
 3993 00b0 FFF7FEFF 		bl	block_merge_next
 3994              	.LVL416:
1276:Middlewares/lvgl/src/misc/lv_tlsf.c **** 			}
 3995              		.loc 1 1276 5 view .LVU1131
 3996 00b4 3046     		mov	r0, r6
 3997 00b6 FFF7FEFF 		bl	block_mark_as_used
 3998              	.LVL417:
 3999 00ba F0E7     		b	.L263
 4000              	.LBE19:
 4001              		.cfi_endproc
 4002              	.LFE63:
 4004              		.text
 4005              	.Letext0:
 4006              		.file 2 "/home/akinya/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.2.1/include/stddef.h"
 4007              		.file 3 "Middlewares/lvgl/src/misc/lv_tlsf.h"
 4008              		.file 4 "Middlewares/lvgl/src/misc/lv_mem.h"
ARM GAS  /tmp/ccqbdhhV.s 			page 101


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lv_tlsf.c
     /tmp/ccqbdhhV.s:18     .text.block_size:0000000000000000 $t
     /tmp/ccqbdhhV.s:25     .text.block_size:0000000000000000 block_size
     /tmp/ccqbdhhV.s:45     .text.block_set_size:0000000000000000 $t
     /tmp/ccqbdhhV.s:51     .text.block_set_size:0000000000000000 block_set_size
     /tmp/ccqbdhhV.s:78     .text.block_is_last:0000000000000000 $t
     /tmp/ccqbdhhV.s:84     .text.block_is_last:0000000000000000 block_is_last
     /tmp/ccqbdhhV.s:109    .text.block_is_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:115    .text.block_is_free:0000000000000000 block_is_free
     /tmp/ccqbdhhV.s:134    .text.block_set_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:140    .text.block_set_free:0000000000000000 block_set_free
     /tmp/ccqbdhhV.s:159    .text.block_set_used:0000000000000000 $t
     /tmp/ccqbdhhV.s:165    .text.block_set_used:0000000000000000 block_set_used
     /tmp/ccqbdhhV.s:184    .text.block_is_prev_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:190    .text.block_is_prev_free:0000000000000000 block_is_prev_free
     /tmp/ccqbdhhV.s:209    .text.block_set_prev_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:215    .text.block_set_prev_free:0000000000000000 block_set_prev_free
     /tmp/ccqbdhhV.s:234    .text.block_set_prev_used:0000000000000000 $t
     /tmp/ccqbdhhV.s:240    .text.block_set_prev_used:0000000000000000 block_set_prev_used
     /tmp/ccqbdhhV.s:259    .text.block_from_ptr:0000000000000000 $t
     /tmp/ccqbdhhV.s:265    .text.block_from_ptr:0000000000000000 block_from_ptr
     /tmp/ccqbdhhV.s:283    .text.block_to_ptr:0000000000000000 $t
     /tmp/ccqbdhhV.s:289    .text.block_to_ptr:0000000000000000 block_to_ptr
     /tmp/ccqbdhhV.s:307    .text.offset_to_block:0000000000000000 $t
     /tmp/ccqbdhhV.s:313    .text.offset_to_block:0000000000000000 offset_to_block
     /tmp/ccqbdhhV.s:331    .text.block_prev:0000000000000000 $t
     /tmp/ccqbdhhV.s:337    .text.block_prev:0000000000000000 block_prev
     /tmp/ccqbdhhV.s:374    .text.block_next:0000000000000000 $t
     /tmp/ccqbdhhV.s:380    .text.block_next:0000000000000000 block_next
     /tmp/ccqbdhhV.s:436    .text.block_link_next:0000000000000000 $t
     /tmp/ccqbdhhV.s:442    .text.block_link_next:0000000000000000 block_link_next
     /tmp/ccqbdhhV.s:471    .text.block_mark_as_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:477    .text.block_mark_as_free:0000000000000000 block_mark_as_free
     /tmp/ccqbdhhV.s:509    .text.block_mark_as_used:0000000000000000 $t
     /tmp/ccqbdhhV.s:515    .text.block_mark_as_used:0000000000000000 block_mark_as_used
     /tmp/ccqbdhhV.s:547    .text.align_up:0000000000000000 $t
     /tmp/ccqbdhhV.s:553    .text.align_up:0000000000000000 align_up
     /tmp/ccqbdhhV.s:590    .text.align_down:0000000000000000 $t
     /tmp/ccqbdhhV.s:596    .text.align_down:0000000000000000 align_down
     /tmp/ccqbdhhV.s:630    .text.align_ptr:0000000000000000 $t
     /tmp/ccqbdhhV.s:636    .text.align_ptr:0000000000000000 align_ptr
     /tmp/ccqbdhhV.s:675    .text.adjust_request_size:0000000000000000 $t
     /tmp/ccqbdhhV.s:681    .text.adjust_request_size:0000000000000000 adjust_request_size
     /tmp/ccqbdhhV.s:736    .text.remove_free_block:0000000000000000 $t
     /tmp/ccqbdhhV.s:742    .text.remove_free_block:0000000000000000 remove_free_block
     /tmp/ccqbdhhV.s:848    .text.insert_free_block:0000000000000000 $t
     /tmp/ccqbdhhV.s:854    .text.insert_free_block:0000000000000000 insert_free_block
     /tmp/ccqbdhhV.s:969    .text.block_can_split:0000000000000000 $t
     /tmp/ccqbdhhV.s:975    .text.block_can_split:0000000000000000 block_can_split
     /tmp/ccqbdhhV.s:1007   .text.block_split:0000000000000000 $t
     /tmp/ccqbdhhV.s:1013   .text.block_split:0000000000000000 block_split
     /tmp/ccqbdhhV.s:1128   .text.block_absorb:0000000000000000 $t
     /tmp/ccqbdhhV.s:1134   .text.block_absorb:0000000000000000 block_absorb
     /tmp/ccqbdhhV.s:1189   .text.control_constructor:0000000000000000 $t
     /tmp/ccqbdhhV.s:1195   .text.control_constructor:0000000000000000 control_constructor
     /tmp/ccqbdhhV.s:1259   .text.integrity_walker:0000000000000000 $t
ARM GAS  /tmp/ccqbdhhV.s 			page 102


     /tmp/ccqbdhhV.s:1265   .text.integrity_walker:0000000000000000 integrity_walker
     /tmp/ccqbdhhV.s:1358   .text.default_walker:0000000000000000 $t
     /tmp/ccqbdhhV.s:1364   .text.default_walker:0000000000000000 default_walker
     /tmp/ccqbdhhV.s:1380   .text.tlsf_fls:0000000000000000 $t
     /tmp/ccqbdhhV.s:1386   .text.tlsf_fls:0000000000000000 tlsf_fls
     /tmp/ccqbdhhV.s:1421   .text.mapping_insert:0000000000000000 $t
     /tmp/ccqbdhhV.s:1427   .text.mapping_insert:0000000000000000 mapping_insert
     /tmp/ccqbdhhV.s:1504   .text.block_insert:0000000000000000 $t
     /tmp/ccqbdhhV.s:1510   .text.block_insert:0000000000000000 block_insert
     /tmp/ccqbdhhV.s:1559   .text.block_trim_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:1565   .text.block_trim_free:0000000000000000 block_trim_free
     /tmp/ccqbdhhV.s:1645   .text.block_prepare_used:0000000000000000 $t
     /tmp/ccqbdhhV.s:1651   .text.block_prepare_used:0000000000000000 block_prepare_used
     /tmp/ccqbdhhV.s:1708   .text.block_trim_free_leading:0000000000000000 $t
     /tmp/ccqbdhhV.s:1714   .text.block_trim_free_leading:0000000000000000 block_trim_free_leading
     /tmp/ccqbdhhV.s:1783   .text.block_remove:0000000000000000 $t
     /tmp/ccqbdhhV.s:1789   .text.block_remove:0000000000000000 block_remove
     /tmp/ccqbdhhV.s:1838   .text.block_merge_prev:0000000000000000 $t
     /tmp/ccqbdhhV.s:1844   .text.block_merge_prev:0000000000000000 block_merge_prev
     /tmp/ccqbdhhV.s:1930   .text.block_merge_next:0000000000000000 $t
     /tmp/ccqbdhhV.s:1936   .text.block_merge_next:0000000000000000 block_merge_next
     /tmp/ccqbdhhV.s:2016   .text.block_trim_used:0000000000000000 $t
     /tmp/ccqbdhhV.s:2022   .text.block_trim_used:0000000000000000 block_trim_used
     /tmp/ccqbdhhV.s:2105   .text.mapping_search:0000000000000000 $t
     /tmp/ccqbdhhV.s:2111   .text.mapping_search:0000000000000000 mapping_search
     /tmp/ccqbdhhV.s:2166   .text.tlsf_ffs:0000000000000000 $t
     /tmp/ccqbdhhV.s:2172   .text.tlsf_ffs:0000000000000000 tlsf_ffs
     /tmp/ccqbdhhV.s:2197   .text.search_suitable_block:0000000000000000 $t
     /tmp/ccqbdhhV.s:2203   .text.search_suitable_block:0000000000000000 search_suitable_block
     /tmp/ccqbdhhV.s:2325   .text.block_locate_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:2331   .text.block_locate_free:0000000000000000 block_locate_free
     /tmp/ccqbdhhV.s:2440   .text.lv_tlsf_check:0000000000000000 $t
     /tmp/ccqbdhhV.s:2447   .text.lv_tlsf_check:0000000000000000 lv_tlsf_check
     /tmp/ccqbdhhV.s:2717   .text.lv_tlsf_walk_pool:0000000000000000 $t
     /tmp/ccqbdhhV.s:2724   .text.lv_tlsf_walk_pool:0000000000000000 lv_tlsf_walk_pool
     /tmp/ccqbdhhV.s:2815   .text.lv_tlsf_walk_pool:0000000000000058 $d
     /tmp/ccqbdhhV.s:2820   .text.lv_tlsf_block_size:0000000000000000 $t
     /tmp/ccqbdhhV.s:2827   .text.lv_tlsf_block_size:0000000000000000 lv_tlsf_block_size
     /tmp/ccqbdhhV.s:2873   .text.lv_tlsf_check_pool:0000000000000000 $t
     /tmp/ccqbdhhV.s:2880   .text.lv_tlsf_check_pool:0000000000000000 lv_tlsf_check_pool
     /tmp/ccqbdhhV.s:2916   .text.lv_tlsf_check_pool:000000000000001c $d
     /tmp/ccqbdhhV.s:2921   .text.lv_tlsf_size:0000000000000000 $t
     /tmp/ccqbdhhV.s:2928   .text.lv_tlsf_size:0000000000000000 lv_tlsf_size
     /tmp/ccqbdhhV.s:2943   .text.lv_tlsf_align_size:0000000000000000 $t
     /tmp/ccqbdhhV.s:2950   .text.lv_tlsf_align_size:0000000000000000 lv_tlsf_align_size
     /tmp/ccqbdhhV.s:2965   .text.lv_tlsf_block_size_min:0000000000000000 $t
     /tmp/ccqbdhhV.s:2972   .text.lv_tlsf_block_size_min:0000000000000000 lv_tlsf_block_size_min
     /tmp/ccqbdhhV.s:2987   .text.lv_tlsf_block_size_max:0000000000000000 $t
     /tmp/ccqbdhhV.s:2994   .text.lv_tlsf_block_size_max:0000000000000000 lv_tlsf_block_size_max
     /tmp/ccqbdhhV.s:3009   .text.lv_tlsf_pool_overhead:0000000000000000 $t
     /tmp/ccqbdhhV.s:3016   .text.lv_tlsf_pool_overhead:0000000000000000 lv_tlsf_pool_overhead
     /tmp/ccqbdhhV.s:3031   .text.lv_tlsf_alloc_overhead:0000000000000000 $t
     /tmp/ccqbdhhV.s:3038   .text.lv_tlsf_alloc_overhead:0000000000000000 lv_tlsf_alloc_overhead
     /tmp/ccqbdhhV.s:3053   .text.lv_tlsf_add_pool:0000000000000000 $t
     /tmp/ccqbdhhV.s:3060   .text.lv_tlsf_add_pool:0000000000000000 lv_tlsf_add_pool
     /tmp/ccqbdhhV.s:3178   .text.lv_tlsf_remove_pool:0000000000000000 $t
     /tmp/ccqbdhhV.s:3185   .text.lv_tlsf_remove_pool:0000000000000000 lv_tlsf_remove_pool
ARM GAS  /tmp/ccqbdhhV.s 			page 103


     /tmp/ccqbdhhV.s:3294   .text.lv_tlsf_create:0000000000000000 $t
     /tmp/ccqbdhhV.s:3301   .text.lv_tlsf_create:0000000000000000 lv_tlsf_create
     /tmp/ccqbdhhV.s:3342   .text.lv_tlsf_create_with_pool:0000000000000000 $t
     /tmp/ccqbdhhV.s:3349   .text.lv_tlsf_create_with_pool:0000000000000000 lv_tlsf_create_with_pool
     /tmp/ccqbdhhV.s:3392   .text.lv_tlsf_destroy:0000000000000000 $t
     /tmp/ccqbdhhV.s:3399   .text.lv_tlsf_destroy:0000000000000000 lv_tlsf_destroy
     /tmp/ccqbdhhV.s:3414   .text.lv_tlsf_get_pool:0000000000000000 $t
     /tmp/ccqbdhhV.s:3421   .text.lv_tlsf_get_pool:0000000000000000 lv_tlsf_get_pool
     /tmp/ccqbdhhV.s:3447   .text.lv_tlsf_malloc:0000000000000000 $t
     /tmp/ccqbdhhV.s:3454   .text.lv_tlsf_malloc:0000000000000000 lv_tlsf_malloc
     /tmp/ccqbdhhV.s:3509   .text.lv_tlsf_memalign:0000000000000000 $t
     /tmp/ccqbdhhV.s:3516   .text.lv_tlsf_memalign:0000000000000000 lv_tlsf_memalign
     /tmp/ccqbdhhV.s:3683   .text.lv_tlsf_free:0000000000000000 $t
     /tmp/ccqbdhhV.s:3690   .text.lv_tlsf_free:0000000000000000 lv_tlsf_free
     /tmp/ccqbdhhV.s:3780   .text.lv_tlsf_realloc:0000000000000000 $t
     /tmp/ccqbdhhV.s:3787   .text.lv_tlsf_realloc:0000000000000000 lv_tlsf_realloc

UNDEFINED SYMBOLS
lv_memcpy
