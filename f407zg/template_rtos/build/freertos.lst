ARM GAS  /tmp/ccVHBfEw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.align	2
  19              	.LC2:
  20 000c 6C76676C 		.ascii	"lvgl\000"
  20      00
  21 0011 000000   		.align	2
  22              	.LC4:
  23 0014 61646374 		.ascii	"adctask\000"
  23      61736B00 
  24              		.text
  25              	.Ltext0:
  26              		.cfi_sections	.debug_frame
  27              		.section	.text.StartDefaultTask,"ax",%progbits
  28              		.align	1
  29              		.global	StartDefaultTask
  30              		.arch armv7e-m
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  34              		.fpu fpv4-sp-d16
  36              	StartDefaultTask:
  37              	.LFB433:
  38              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****   *
ARM GAS  /tmp/ccVHBfEw.s 			page 2


  17:Core/Src/freertos.c ****   ******************************************************************************
  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include "adc.h"
  30:Core/Src/freertos.c **** #include "lvgl.h"
  31:Core/Src/freertos.c **** #include "lvgl_app.h"
  32:Core/Src/freertos.c **** #include <stdio.h>
  33:Core/Src/freertos.c **** #include <string.h>
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  48:Core/Src/freertos.c **** 
  49:Core/Src/freertos.c **** /* USER CODE END PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  53:Core/Src/freertos.c **** osThreadId BlinkTaskHandle;
  54:Core/Src/freertos.c **** osThreadId lvglTaskHandle;
  55:Core/Src/freertos.c **** osThreadId ADCTaskHandle;
  56:Core/Src/freertos.c **** extern uint8_t adc1CpltFlg;
  57:Core/Src/freertos.c **** extern lv_obj_t * wave_chart;
  58:Core/Src/freertos.c **** extern uint8_t waveStopFlg;
  59:Core/Src/freertos.c **** extern lv_chart_series_t * wave_ser;
  60:Core/Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  61:Core/Src/freertos.c **** extern uint16_t wave[wave_num];
  62:Core/Src/freertos.c **** extern uint16_t wave_auto_points[wave_num];
  63:Core/Src/freertos.c **** extern uint16_t AD1[AD_num];
  64:Core/Src/freertos.c **** extern uint8_t waveAutoFlg;
  65:Core/Src/freertos.c **** extern uint16_t wave_auto_num;
  66:Core/Src/freertos.c **** /* USER CODE END Variables */
  67:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  68:Core/Src/freertos.c **** 
  69:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  71:Core/Src/freertos.c **** void lvgl_init(void){
  72:Core/Src/freertos.c ****   /* lvgl init */
  73:Core/Src/freertos.c ****   lv_init();
ARM GAS  /tmp/ccVHBfEw.s 			page 3


  74:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
  75:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
  76:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c ****   wave_chart_init();
  79:Core/Src/freertos.c ****   wave_btn();
  80:Core/Src/freertos.c ****   distortion_list();
  81:Core/Src/freertos.c **** 
  82:Core/Src/freertos.c ****   for (;;)
  83:Core/Src/freertos.c ****   {
  84:Core/Src/freertos.c ****     osDelay(LVGL_TICK);
  85:Core/Src/freertos.c ****     lv_task_handler();
  86:Core/Src/freertos.c ****   }
  87:Core/Src/freertos.c **** }
  88:Core/Src/freertos.c **** void LED_Blinks(void){
  89:Core/Src/freertos.c ****   for(;;)
  90:Core/Src/freertos.c ****   {
  91:Core/Src/freertos.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
  92:Core/Src/freertos.c ****     //printf("hello world\r\n");
  93:Core/Src/freertos.c ****     osDelay(500);
  94:Core/Src/freertos.c ****   }
  95:Core/Src/freertos.c **** }
  96:Core/Src/freertos.c **** void ADC_Task(void){
  97:Core/Src/freertos.c ****   HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,AD_num);
  98:Core/Src/freertos.c ****   for (;;)
  99:Core/Src/freertos.c ****   {
 100:Core/Src/freertos.c ****     
 101:Core/Src/freertos.c ****     if (adc1CpltFlg==1)
 102:Core/Src/freertos.c ****     {
 103:Core/Src/freertos.c ****       osDelay(20);
 104:Core/Src/freertos.c ****       
 105:Core/Src/freertos.c ****       if(waveStopFlg==0){
 106:Core/Src/freertos.c ****         Wave_Data_Init();
 107:Core/Src/freertos.c ****         if(waveAutoFlg){
 108:Core/Src/freertos.c ****           Wave_Auto();
 109:Core/Src/freertos.c ****           lv_chart_set_point_count(wave_chart, wave_auto_num);
 110:Core/Src/freertos.c ****           lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave_auto_points); 
 111:Core/Src/freertos.c ****         }else{
 112:Core/Src/freertos.c ****           lv_chart_set_point_count(wave_chart, wave_num);
 113:Core/Src/freertos.c ****           lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave); 
 114:Core/Src/freertos.c ****         }
 115:Core/Src/freertos.c ****       }
 116:Core/Src/freertos.c ****       adc1CpltFlg=0;
 117:Core/Src/freertos.c ****       HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,AD_num);
 118:Core/Src/freertos.c ****     }
 119:Core/Src/freertos.c ****   }
 120:Core/Src/freertos.c **** }
 121:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 122:Core/Src/freertos.c **** 
 123:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
 128:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 129:Core/Src/freertos.c **** 
 130:Core/Src/freertos.c **** /* Hook prototypes */
ARM GAS  /tmp/ccVHBfEw.s 			page 4


 131:Core/Src/freertos.c **** void vApplicationTickHook(void);
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c **** /* USER CODE BEGIN 3 */
 134:Core/Src/freertos.c **** void vApplicationTickHook( void )
 135:Core/Src/freertos.c **** {
 136:Core/Src/freertos.c ****    /* This function will be called by each tick interrupt if
 137:Core/Src/freertos.c ****    configUSE_TICK_HOOK is set to 1 in FreeRTOSConfig.h. User code can be
 138:Core/Src/freertos.c ****    added here, but the tick hook is called from an interrupt context, so
 139:Core/Src/freertos.c ****    code must not attempt to block, and only the interrupt safe FreeRTOS API
 140:Core/Src/freertos.c ****    functions can be used (those that end in FromISR()). */
 141:Core/Src/freertos.c ****    lv_tick_inc(1);
 142:Core/Src/freertos.c **** }
 143:Core/Src/freertos.c **** /* USER CODE END 3 */
 144:Core/Src/freertos.c **** 
 145:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
 146:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
 147:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
 148:Core/Src/freertos.c **** 
 149:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 150:Core/Src/freertos.c **** {
 151:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 152:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 153:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 154:Core/Src/freertos.c ****   /* place for user code */
 155:Core/Src/freertos.c **** }
 156:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 157:Core/Src/freertos.c **** 
 158:Core/Src/freertos.c **** /**
 159:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 160:Core/Src/freertos.c ****   * @param  None
 161:Core/Src/freertos.c ****   * @retval None
 162:Core/Src/freertos.c ****   */
 163:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 164:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 165:Core/Src/freertos.c ****   
 166:Core/Src/freertos.c ****   /* USER CODE END Init */
 167:Core/Src/freertos.c **** 
 168:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 169:Core/Src/freertos.c ****   /* add mutexes, ... */
 170:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 171:Core/Src/freertos.c **** 
 172:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 173:Core/Src/freertos.c ****   /* add semaphores, ... */
 174:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 175:Core/Src/freertos.c **** 
 176:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 177:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 178:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 179:Core/Src/freertos.c **** 
 180:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 181:Core/Src/freertos.c ****   /* add queues, ... */
 182:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 183:Core/Src/freertos.c **** 
 184:Core/Src/freertos.c ****   /* Create the thread(s) */
 185:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 186:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 187:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
ARM GAS  /tmp/ccVHBfEw.s 			page 5


 188:Core/Src/freertos.c **** 
 189:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 190:Core/Src/freertos.c ****   /* add threads, ... */
 191:Core/Src/freertos.c ****   osThreadDef(lvgl, lvgl_init, osPriorityRealtime , 0, 512);
 192:Core/Src/freertos.c ****   lvglTaskHandle = osThreadCreate(osThread(lvgl), NULL);
 193:Core/Src/freertos.c ****   osThreadDef(adctask, ADC_Task, osPriorityNormal, 0, 1024);
 194:Core/Src/freertos.c ****   ADCTaskHandle = osThreadCreate(osThread(adctask), NULL);
 195:Core/Src/freertos.c ****   // osThreadDef(blink, LED_Blinks, osPriorityNormal, 0, 128);
 196:Core/Src/freertos.c ****   // BlinkTaskHandle = osThreadCreate(osThread(blink), NULL);
 197:Core/Src/freertos.c **** /*   osThreadDef(hello, Helloworld, osPriorityNormal, 0, 128);
 198:Core/Src/freertos.c ****   HelloTaskHandle = osThreadCreate(osThread(hello), NULL); */
 199:Core/Src/freertos.c **** 
 200:Core/Src/freertos.c **** 
 201:Core/Src/freertos.c ****   
 202:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 203:Core/Src/freertos.c **** 
 204:Core/Src/freertos.c **** }
 205:Core/Src/freertos.c **** 
 206:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 207:Core/Src/freertos.c **** /**
 208:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 209:Core/Src/freertos.c ****   * @param  argument: Not used
 210:Core/Src/freertos.c ****   * @retval None
 211:Core/Src/freertos.c ****   */
 212:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 213:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 214:Core/Src/freertos.c **** {
  39              		.loc 1 214 1 view -0
  40              		.cfi_startproc
  41              		@ Volatile: function does not return.
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 0, uses_anonymous_args = 0
  44              	.LVL0:
  45              		.loc 1 214 1 is_stmt 0 view .LVU1
  46 0000 08B5     		push	{r3, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 3, -8
  50              		.cfi_offset 14, -4
  51              	.LVL1:
  52              	.L2:
 215:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 216:Core/Src/freertos.c ****   /* Infinite loop */
 217:Core/Src/freertos.c ****   for(;;)
  53              		.loc 1 217 3 is_stmt 1 discriminator 1 view .LVU2
 218:Core/Src/freertos.c ****   {
 219:Core/Src/freertos.c ****     //printf("1\r\n");
 220:Core/Src/freertos.c ****     osDelay(1000);
  54              		.loc 1 220 5 discriminator 1 view .LVU3
  55 0002 4FF47A70 		mov	r0, #1000
  56 0006 FFF7FEFF 		bl	osDelay
  57              	.LVL2:
 217:Core/Src/freertos.c ****   {
  58              		.loc 1 217 8 discriminator 1 view .LVU4
  59 000a FAE7     		b	.L2
  60              		.cfi_endproc
  61              	.LFE433:
ARM GAS  /tmp/ccVHBfEw.s 			page 6


  63              		.section	.text.lvgl_init,"ax",%progbits
  64              		.align	1
  65              		.global	lvgl_init
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	lvgl_init:
  72              	.LFB427:
  71:Core/Src/freertos.c ****   /* lvgl init */
  73              		.loc 1 71 21 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 3, -8
  82              		.cfi_offset 14, -4
  73:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
  83              		.loc 1 73 3 view .LVU6
  84 0002 FFF7FEFF 		bl	lv_init
  85              	.LVL3:
  74:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
  86              		.loc 1 74 3 view .LVU7
  87 0006 FFF7FEFF 		bl	lv_port_disp_init
  88              	.LVL4:
  75:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
  89              		.loc 1 75 3 view .LVU8
  90 000a FFF7FEFF 		bl	lv_port_indev_init
  91              	.LVL5:
  78:Core/Src/freertos.c ****   wave_btn();
  92              		.loc 1 78 3 view .LVU9
  93 000e FFF7FEFF 		bl	wave_chart_init
  94              	.LVL6:
  79:Core/Src/freertos.c ****   distortion_list();
  95              		.loc 1 79 3 view .LVU10
  96 0012 FFF7FEFF 		bl	wave_btn
  97              	.LVL7:
  80:Core/Src/freertos.c **** 
  98              		.loc 1 80 3 view .LVU11
  99 0016 FFF7FEFF 		bl	distortion_list
 100              	.LVL8:
 101              	.L5:
  82:Core/Src/freertos.c ****   {
 102              		.loc 1 82 3 discriminator 1 view .LVU12
  84:Core/Src/freertos.c ****     lv_task_handler();
 103              		.loc 1 84 5 discriminator 1 view .LVU13
 104 001a 0520     		movs	r0, #5
 105 001c FFF7FEFF 		bl	osDelay
 106              	.LVL9:
  85:Core/Src/freertos.c ****   }
 107              		.loc 1 85 5 discriminator 1 view .LVU14
 108              	.LBB4:
 109              	.LBI4:
 110              		.file 2 "Middlewares/lvgl/src/lv_api_map.h"
ARM GAS  /tmp/ccVHBfEw.s 			page 7


   1:Middlewares/lvgl/src/lv_api_map.h **** /**
   2:Middlewares/lvgl/src/lv_api_map.h ****  * @file lv_api_map.h
   3:Middlewares/lvgl/src/lv_api_map.h ****  *
   4:Middlewares/lvgl/src/lv_api_map.h ****  */
   5:Middlewares/lvgl/src/lv_api_map.h **** 
   6:Middlewares/lvgl/src/lv_api_map.h **** #ifndef LV_API_MAP_H
   7:Middlewares/lvgl/src/lv_api_map.h **** #define LV_API_MAP_H
   8:Middlewares/lvgl/src/lv_api_map.h **** 
   9:Middlewares/lvgl/src/lv_api_map.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/lv_api_map.h **** extern "C" {
  11:Middlewares/lvgl/src/lv_api_map.h **** #endif
  12:Middlewares/lvgl/src/lv_api_map.h **** 
  13:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  14:Middlewares/lvgl/src/lv_api_map.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  16:Middlewares/lvgl/src/lv_api_map.h **** #include "../lvgl.h"
  17:Middlewares/lvgl/src/lv_api_map.h **** 
  18:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  19:Middlewares/lvgl/src/lv_api_map.h ****  *      DEFINES
  20:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  21:Middlewares/lvgl/src/lv_api_map.h **** 
  22:Middlewares/lvgl/src/lv_api_map.h **** #define LV_NO_TASK_READY        LV_NO_TIMER_READY
  23:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_REL      LV_INDEV_STATE_RELEASED
  24:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_PR       LV_INDEV_STATE_PRESSED
  25:Middlewares/lvgl/src/lv_api_map.h **** #define LV_OBJ_FLAG_SNAPABLE    LV_OBJ_FLAG_SNAPPABLE   /*Fixed typo*/
  26:Middlewares/lvgl/src/lv_api_map.h **** 
  27:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  28:Middlewares/lvgl/src/lv_api_map.h ****  *      TYPEDEFS
  29:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  30:Middlewares/lvgl/src/lv_api_map.h **** 
  31:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  32:Middlewares/lvgl/src/lv_api_map.h ****  * GLOBAL PROTOTYPES
  33:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  34:Middlewares/lvgl/src/lv_api_map.h **** 
  35:Middlewares/lvgl/src/lv_api_map.h **** static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)
 111              		.loc 2 35 51 discriminator 1 view .LVU15
 112              	.LBB5:
  36:Middlewares/lvgl/src/lv_api_map.h **** {
  37:Middlewares/lvgl/src/lv_api_map.h ****     return lv_timer_handler();
 113              		.loc 2 37 5 discriminator 1 view .LVU16
 114              		.loc 2 37 12 is_stmt 0 discriminator 1 view .LVU17
 115 0020 FFF7FEFF 		bl	lv_timer_handler
 116              	.LVL10:
 117 0024 F9E7     		b	.L5
 118              	.LBE5:
 119              	.LBE4:
 120              		.cfi_endproc
 121              	.LFE427:
 123              		.section	.text.ADC_Task,"ax",%progbits
 124              		.align	1
 125              		.global	ADC_Task
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	ADC_Task:
 132              	.LFB429:
ARM GAS  /tmp/ccVHBfEw.s 			page 8


  96:Core/Src/freertos.c ****   HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,AD_num);
 133              		.loc 1 96 20 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ Volatile: function does not return.
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 08B5     		push	{r3, lr}
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 3, -8
 142              		.cfi_offset 14, -4
  97:Core/Src/freertos.c ****   for (;;)
 143              		.loc 1 97 3 view .LVU19
 144 0002 41F27072 		movw	r2, #6000
 145 0006 1D49     		ldr	r1, .L14
 146 0008 1D48     		ldr	r0, .L14+4
 147 000a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 148              	.LVL11:
 149 000e 16E0     		b	.L8
 150              	.L13:
 151              	.LBB6:
 108:Core/Src/freertos.c ****           lv_chart_set_point_count(wave_chart, wave_auto_num);
 152              		.loc 1 108 11 view .LVU20
 153 0010 FFF7FEFF 		bl	Wave_Auto
 154              	.LVL12:
 109:Core/Src/freertos.c ****           lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave_auto_points); 
 155              		.loc 1 109 11 view .LVU21
 156 0014 1B4C     		ldr	r4, .L14+8
 157 0016 1C4B     		ldr	r3, .L14+12
 158 0018 1988     		ldrh	r1, [r3]
 159 001a 2068     		ldr	r0, [r4]
 160 001c FFF7FEFF 		bl	lv_chart_set_point_count
 161              	.LVL13:
 110:Core/Src/freertos.c ****         }else{
 162              		.loc 1 110 11 view .LVU22
 163 0020 1A4A     		ldr	r2, .L14+16
 164 0022 1B4B     		ldr	r3, .L14+20
 165 0024 1968     		ldr	r1, [r3]
 166 0026 2068     		ldr	r0, [r4]
 167 0028 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 168              	.LVL14:
 169              	.L9:
 170              	.LBE6:
 116:Core/Src/freertos.c ****       HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,AD_num);
 171              		.loc 1 116 7 view .LVU23
 116:Core/Src/freertos.c ****       HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,AD_num);
 172              		.loc 1 116 18 is_stmt 0 view .LVU24
 173 002c 194B     		ldr	r3, .L14+24
 174 002e 0022     		movs	r2, #0
 175 0030 1A70     		strb	r2, [r3]
 117:Core/Src/freertos.c ****     }
 176              		.loc 1 117 7 is_stmt 1 view .LVU25
 177 0032 41F27072 		movw	r2, #6000
 178 0036 1149     		ldr	r1, .L14
 179 0038 1148     		ldr	r0, .L14+4
 180 003a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 181              	.LVL15:
ARM GAS  /tmp/ccVHBfEw.s 			page 9


 182              	.L8:
  98:Core/Src/freertos.c ****   {
 183              		.loc 1 98 3 view .LVU26
 101:Core/Src/freertos.c ****     {
 184              		.loc 1 101 5 view .LVU27
 101:Core/Src/freertos.c ****     {
 185              		.loc 1 101 20 is_stmt 0 view .LVU28
 186 003e 154B     		ldr	r3, .L14+24
 187 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 101:Core/Src/freertos.c ****     {
 188              		.loc 1 101 8 view .LVU29
 189 0042 012B     		cmp	r3, #1
 190 0044 FBD1     		bne	.L8
 103:Core/Src/freertos.c ****       
 191              		.loc 1 103 7 is_stmt 1 view .LVU30
 192 0046 1420     		movs	r0, #20
 193 0048 FFF7FEFF 		bl	osDelay
 194              	.LVL16:
 105:Core/Src/freertos.c ****         Wave_Data_Init();
 195              		.loc 1 105 7 view .LVU31
 105:Core/Src/freertos.c ****         Wave_Data_Init();
 196              		.loc 1 105 21 is_stmt 0 view .LVU32
 197 004c 124B     		ldr	r3, .L14+28
 198 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 105:Core/Src/freertos.c ****         Wave_Data_Init();
 199              		.loc 1 105 9 view .LVU33
 200 0050 002B     		cmp	r3, #0
 201 0052 EBD1     		bne	.L9
 106:Core/Src/freertos.c ****         if(waveAutoFlg){
 202              		.loc 1 106 9 is_stmt 1 view .LVU34
 203 0054 FFF7FEFF 		bl	Wave_Data_Init
 204              	.LVL17:
 107:Core/Src/freertos.c ****           Wave_Auto();
 205              		.loc 1 107 9 view .LVU35
 107:Core/Src/freertos.c ****           Wave_Auto();
 206              		.loc 1 107 12 is_stmt 0 view .LVU36
 207 0058 104B     		ldr	r3, .L14+32
 208 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107:Core/Src/freertos.c ****           Wave_Auto();
 209              		.loc 1 107 11 view .LVU37
 210 005c 002B     		cmp	r3, #0
 211 005e D7D1     		bne	.L13
 112:Core/Src/freertos.c ****           lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave); 
 212              		.loc 1 112 11 is_stmt 1 view .LVU38
 213 0060 084C     		ldr	r4, .L14+8
 214 0062 4FF4FA61 		mov	r1, #2000
 215 0066 2068     		ldr	r0, [r4]
 216 0068 FFF7FEFF 		bl	lv_chart_set_point_count
 217              	.LVL18:
 113:Core/Src/freertos.c ****         }
 218              		.loc 1 113 11 view .LVU39
 219 006c 0C4A     		ldr	r2, .L14+36
 220 006e 084B     		ldr	r3, .L14+20
 221 0070 1968     		ldr	r1, [r3]
 222 0072 2068     		ldr	r0, [r4]
 223 0074 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 224              	.LVL19:
ARM GAS  /tmp/ccVHBfEw.s 			page 10


 225 0078 D8E7     		b	.L9
 226              	.L15:
 227 007a 00BF     		.align	2
 228              	.L14:
 229 007c 00000000 		.word	AD1
 230 0080 00000000 		.word	hadc1
 231 0084 00000000 		.word	wave_chart
 232 0088 00000000 		.word	wave_auto_num
 233 008c 00000000 		.word	wave_auto_points
 234 0090 00000000 		.word	wave_ser
 235 0094 00000000 		.word	adc1CpltFlg
 236 0098 00000000 		.word	waveStopFlg
 237 009c 00000000 		.word	waveAutoFlg
 238 00a0 00000000 		.word	wave
 239              		.cfi_endproc
 240              	.LFE429:
 242              		.section	.text.LED_Blinks,"ax",%progbits
 243              		.align	1
 244              		.global	LED_Blinks
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv4-sp-d16
 250              	LED_Blinks:
 251              	.LFB428:
  88:Core/Src/freertos.c ****   for(;;)
 252              		.loc 1 88 22 view -0
 253              		.cfi_startproc
 254              		@ Volatile: function does not return.
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 08B5     		push	{r3, lr}
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 3, -8
 261              		.cfi_offset 14, -4
 262              	.L17:
  89:Core/Src/freertos.c ****   {
 263              		.loc 1 89 3 discriminator 1 view .LVU41
  91:Core/Src/freertos.c ****     //printf("hello world\r\n");
 264              		.loc 1 91 5 discriminator 1 view .LVU42
 265 0002 4FF40071 		mov	r1, #512
 266 0006 0448     		ldr	r0, .L19
 267 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 268              	.LVL20:
  93:Core/Src/freertos.c ****   }
 269              		.loc 1 93 5 discriminator 1 view .LVU43
 270 000c 4FF4FA70 		mov	r0, #500
 271 0010 FFF7FEFF 		bl	osDelay
 272              	.LVL21:
  89:Core/Src/freertos.c ****   {
 273              		.loc 1 89 8 discriminator 1 view .LVU44
 274 0014 F5E7     		b	.L17
 275              	.L20:
 276 0016 00BF     		.align	2
 277              	.L19:
 278 0018 00140240 		.word	1073878016
ARM GAS  /tmp/ccVHBfEw.s 			page 11


 279              		.cfi_endproc
 280              	.LFE428:
 282              		.section	.text.vApplicationTickHook,"ax",%progbits
 283              		.align	1
 284              		.global	vApplicationTickHook
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	vApplicationTickHook:
 291              	.LFB430:
 135:Core/Src/freertos.c ****    /* This function will be called by each tick interrupt if
 292              		.loc 1 135 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI4:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 141:Core/Src/freertos.c **** }
 301              		.loc 1 141 4 view .LVU46
 302 0002 0120     		movs	r0, #1
 303 0004 FFF7FEFF 		bl	lv_tick_inc
 304              	.LVL22:
 142:Core/Src/freertos.c **** /* USER CODE END 3 */
 305              		.loc 1 142 1 is_stmt 0 view .LVU47
 306 0008 08BD     		pop	{r3, pc}
 307              		.cfi_endproc
 308              	.LFE430:
 310              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 311              		.align	1
 312              		.global	vApplicationGetIdleTaskMemory
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	vApplicationGetIdleTaskMemory:
 319              	.LVL23:
 320              	.LFB431:
 150:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 321              		.loc 1 150 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 151:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 326              		.loc 1 151 3 view .LVU49
 151:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 327              		.loc 1 151 25 is_stmt 0 view .LVU50
 328 0000 034B     		ldr	r3, .L24
 329 0002 0360     		str	r3, [r0]
 152:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 330              		.loc 1 152 3 is_stmt 1 view .LVU51
 152:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 331              		.loc 1 152 27 is_stmt 0 view .LVU52
ARM GAS  /tmp/ccVHBfEw.s 			page 12


 332 0004 034B     		ldr	r3, .L24+4
 333 0006 0B60     		str	r3, [r1]
 153:Core/Src/freertos.c ****   /* place for user code */
 334              		.loc 1 153 3 is_stmt 1 view .LVU53
 153:Core/Src/freertos.c ****   /* place for user code */
 335              		.loc 1 153 25 is_stmt 0 view .LVU54
 336 0008 8023     		movs	r3, #128
 337 000a 1360     		str	r3, [r2]
 155:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 338              		.loc 1 155 1 view .LVU55
 339 000c 7047     		bx	lr
 340              	.L25:
 341 000e 00BF     		.align	2
 342              	.L24:
 343 0010 00000000 		.word	.LANCHOR0
 344 0014 00000000 		.word	.LANCHOR1
 345              		.cfi_endproc
 346              	.LFE431:
 348              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 349              		.align	1
 350              		.global	MX_FREERTOS_Init
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	MX_FREERTOS_Init:
 357              	.LFB432:
 163:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 358              		.loc 1 163 29 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 88
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362 0000 10B5     		push	{r4, lr}
 363              	.LCFI5:
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 367 0002 96B0     		sub	sp, sp, #88
 368              	.LCFI6:
 369              		.cfi_def_cfa_offset 96
 186:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 370              		.loc 1 186 3 view .LVU57
 371 0004 1B4C     		ldr	r4, .L28
 372 0006 0DF13C0C 		add	ip, sp, #60
 373 000a A646     		mov	lr, r4
 374 000c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 375 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 376 0014 9EE80700 		ldm	lr, {r0, r1, r2}
 377 0018 8CE80700 		stm	ip, {r0, r1, r2}
 187:Core/Src/freertos.c **** 
 378              		.loc 1 187 3 view .LVU58
 187:Core/Src/freertos.c **** 
 379              		.loc 1 187 23 is_stmt 0 view .LVU59
 380 001c 0021     		movs	r1, #0
 381 001e 0FA8     		add	r0, sp, #60
 382 0020 FFF7FEFF 		bl	osThreadCreate
 383              	.LVL24:
ARM GAS  /tmp/ccVHBfEw.s 			page 13


 187:Core/Src/freertos.c **** 
 384              		.loc 1 187 21 view .LVU60
 385 0024 144B     		ldr	r3, .L28+4
 386 0026 1860     		str	r0, [r3]
 191:Core/Src/freertos.c ****   lvglTaskHandle = osThreadCreate(osThread(lvgl), NULL);
 387              		.loc 1 191 3 is_stmt 1 view .LVU61
 388 0028 0DF1200C 		add	ip, sp, #32
 389 002c 04F11C0E 		add	lr, r4, #28
 390 0030 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 391 0034 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 392 0038 9EE80700 		ldm	lr, {r0, r1, r2}
 393 003c 8CE80700 		stm	ip, {r0, r1, r2}
 192:Core/Src/freertos.c ****   osThreadDef(adctask, ADC_Task, osPriorityNormal, 0, 1024);
 394              		.loc 1 192 3 view .LVU62
 192:Core/Src/freertos.c ****   osThreadDef(adctask, ADC_Task, osPriorityNormal, 0, 1024);
 395              		.loc 1 192 20 is_stmt 0 view .LVU63
 396 0040 0021     		movs	r1, #0
 397 0042 08A8     		add	r0, sp, #32
 398 0044 FFF7FEFF 		bl	osThreadCreate
 399              	.LVL25:
 192:Core/Src/freertos.c ****   osThreadDef(adctask, ADC_Task, osPriorityNormal, 0, 1024);
 400              		.loc 1 192 18 view .LVU64
 401 0048 0C4B     		ldr	r3, .L28+8
 402 004a 1860     		str	r0, [r3]
 193:Core/Src/freertos.c ****   ADCTaskHandle = osThreadCreate(osThread(adctask), NULL);
 403              		.loc 1 193 3 is_stmt 1 view .LVU65
 404 004c 0DF1040E 		add	lr, sp, #4
 405 0050 04F1380C 		add	ip, r4, #56
 406 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 407 0058 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 408 005c 9CE80700 		ldm	ip, {r0, r1, r2}
 409 0060 8EE80700 		stm	lr, {r0, r1, r2}
 194:Core/Src/freertos.c ****   // osThreadDef(blink, LED_Blinks, osPriorityNormal, 0, 128);
 410              		.loc 1 194 3 view .LVU66
 194:Core/Src/freertos.c ****   // osThreadDef(blink, LED_Blinks, osPriorityNormal, 0, 128);
 411              		.loc 1 194 19 is_stmt 0 view .LVU67
 412 0064 0021     		movs	r1, #0
 413 0066 01A8     		add	r0, sp, #4
 414 0068 FFF7FEFF 		bl	osThreadCreate
 415              	.LVL26:
 194:Core/Src/freertos.c ****   // osThreadDef(blink, LED_Blinks, osPriorityNormal, 0, 128);
 416              		.loc 1 194 17 view .LVU68
 417 006c 044B     		ldr	r3, .L28+12
 418 006e 1860     		str	r0, [r3]
 204:Core/Src/freertos.c **** 
 419              		.loc 1 204 1 view .LVU69
 420 0070 16B0     		add	sp, sp, #88
 421              	.LCFI7:
 422              		.cfi_def_cfa_offset 8
 423              		@ sp needed
 424 0072 10BD     		pop	{r4, pc}
 425              	.L29:
 426              		.align	2
 427              	.L28:
 428 0074 00000000 		.word	.LANCHOR2
 429 0078 00000000 		.word	.LANCHOR3
 430 007c 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/ccVHBfEw.s 			page 14


 431 0080 00000000 		.word	.LANCHOR5
 432              		.cfi_endproc
 433              	.LFE432:
 435              		.global	defaultTaskHandle
 436              		.global	ADCTaskHandle
 437              		.global	lvglTaskHandle
 438              		.global	BlinkTaskHandle
 439              		.section	.rodata
 440              		.align	2
 441              		.set	.LANCHOR2,. + 0
 442              	.LC6:
 443 0000 00000000 		.word	.LC0
 444 0004 00000000 		.word	StartDefaultTask
 445 0008 0000     		.short	0
 446 000a 0000     		.space	2
 447 000c 00000000 		.word	0
 448 0010 80000000 		.word	128
 449 0014 00000000 		.word	0
 450 0018 00000000 		.word	0
 451              	.LC7:
 452 001c 0C000000 		.word	.LC2
 453 0020 00000000 		.word	lvgl_init
 454 0024 0300     		.short	3
 455 0026 0000     		.space	2
 456 0028 00000000 		.word	0
 457 002c 00020000 		.word	512
 458 0030 00000000 		.word	0
 459 0034 00000000 		.word	0
 460              	.LC8:
 461 0038 14000000 		.word	.LC4
 462 003c 00000000 		.word	ADC_Task
 463 0040 0000     		.short	0
 464 0042 0000     		.space	2
 465 0044 00000000 		.word	0
 466 0048 00040000 		.word	1024
 467 004c 00000000 		.word	0
 468 0050 00000000 		.word	0
 469              		.section	.bss.ADCTaskHandle,"aw",%nobits
 470              		.align	2
 471              		.set	.LANCHOR5,. + 0
 474              	ADCTaskHandle:
 475 0000 00000000 		.space	4
 476              		.section	.bss.BlinkTaskHandle,"aw",%nobits
 477              		.align	2
 480              	BlinkTaskHandle:
 481 0000 00000000 		.space	4
 482              		.section	.bss.defaultTaskHandle,"aw",%nobits
 483              		.align	2
 484              		.set	.LANCHOR3,. + 0
 487              	defaultTaskHandle:
 488 0000 00000000 		.space	4
 489              		.section	.bss.lvglTaskHandle,"aw",%nobits
 490              		.align	2
 491              		.set	.LANCHOR4,. + 0
 494              	lvglTaskHandle:
 495 0000 00000000 		.space	4
 496              		.section	.bss.xIdleStack,"aw",%nobits
ARM GAS  /tmp/ccVHBfEw.s 			page 15


 497              		.align	2
 498              		.set	.LANCHOR1,. + 0
 501              	xIdleStack:
 502 0000 00000000 		.space	512
 502      00000000 
 502      00000000 
 502      00000000 
 502      00000000 
 503              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 504              		.align	2
 505              		.set	.LANCHOR0,. + 0
 508              	xIdleTaskTCBBuffer:
 509 0000 00000000 		.space	84
 509      00000000 
 509      00000000 
 509      00000000 
 509      00000000 
 510              		.text
 511              	.Letext0:
 512              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 513              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 514              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 515              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 516              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 517              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 518              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 519              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 520              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 521              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 522              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 523              		.file 14 "Middlewares/lvgl/src/misc/lv_ll.h"
 524              		.file 15 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 525              		.file 16 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 526              		.file 17 "Middlewares/lvgl/src/core/lv_obj.h"
 527              		.file 18 "Middlewares/lvgl/src/core/lv_group.h"
 528              		.file 19 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 529              		.file 20 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 530              		.file 21 "Middlewares/lvgl/src/core/lv_obj_style.h"
 531              		.file 22 "Middlewares/lvgl/src/core/lv_obj_class.h"
 532              		.file 23 "Middlewares/lvgl/src/core/lv_event.h"
 533              		.file 24 "Middlewares/lvgl/src/widgets/lv_bar.h"
 534              		.file 25 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
 535              		.file 26 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 536              		.file 27 "Core/Inc/adc.h"
 537              		.file 28 "Middlewares/lvgl/src/hal/lv_hal_tick.h"
 538              		.file 29 "Core/Inc/main.h"
 539              		.file 30 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 540              		.file 31 "Middlewares/lvgl/src/misc/lv_timer.h"
 541              		.file 32 "Core/Inc/lvgl_app.h"
ARM GAS  /tmp/ccVHBfEw.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccVHBfEw.s:15     .rodata.str1.4:0000000000000000 $d
     /tmp/ccVHBfEw.s:28     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccVHBfEw.s:36     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccVHBfEw.s:64     .text.lvgl_init:0000000000000000 $t
     /tmp/ccVHBfEw.s:71     .text.lvgl_init:0000000000000000 lvgl_init
     /tmp/ccVHBfEw.s:124    .text.ADC_Task:0000000000000000 $t
     /tmp/ccVHBfEw.s:131    .text.ADC_Task:0000000000000000 ADC_Task
     /tmp/ccVHBfEw.s:229    .text.ADC_Task:000000000000007c $d
     /tmp/ccVHBfEw.s:243    .text.LED_Blinks:0000000000000000 $t
     /tmp/ccVHBfEw.s:250    .text.LED_Blinks:0000000000000000 LED_Blinks
     /tmp/ccVHBfEw.s:278    .text.LED_Blinks:0000000000000018 $d
     /tmp/ccVHBfEw.s:283    .text.vApplicationTickHook:0000000000000000 $t
     /tmp/ccVHBfEw.s:290    .text.vApplicationTickHook:0000000000000000 vApplicationTickHook
     /tmp/ccVHBfEw.s:311    .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccVHBfEw.s:318    .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccVHBfEw.s:343    .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccVHBfEw.s:349    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccVHBfEw.s:356    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccVHBfEw.s:428    .text.MX_FREERTOS_Init:0000000000000074 $d
     /tmp/ccVHBfEw.s:487    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccVHBfEw.s:474    .bss.ADCTaskHandle:0000000000000000 ADCTaskHandle
     /tmp/ccVHBfEw.s:494    .bss.lvglTaskHandle:0000000000000000 lvglTaskHandle
     /tmp/ccVHBfEw.s:480    .bss.BlinkTaskHandle:0000000000000000 BlinkTaskHandle
     /tmp/ccVHBfEw.s:440    .rodata:0000000000000000 $d
     /tmp/ccVHBfEw.s:470    .bss.ADCTaskHandle:0000000000000000 $d
     /tmp/ccVHBfEw.s:477    .bss.BlinkTaskHandle:0000000000000000 $d
     /tmp/ccVHBfEw.s:483    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccVHBfEw.s:490    .bss.lvglTaskHandle:0000000000000000 $d
     /tmp/ccVHBfEw.s:497    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccVHBfEw.s:501    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccVHBfEw.s:504    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccVHBfEw.s:508    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer

UNDEFINED SYMBOLS
osDelay
lv_init
lv_port_disp_init
lv_port_indev_init
wave_chart_init
wave_btn
distortion_list
lv_timer_handler
HAL_ADC_Start_DMA
Wave_Auto
lv_chart_set_point_count
lv_chart_set_ext_y_array
Wave_Data_Init
AD1
hadc1
wave_chart
wave_auto_num
wave_auto_points
wave_ser
adc1CpltFlg
waveStopFlg
ARM GAS  /tmp/ccVHBfEw.s 			page 17


waveAutoFlg
wave
HAL_GPIO_TogglePin
lv_tick_inc
osThreadCreate
