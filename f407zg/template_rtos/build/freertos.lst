ARM GAS  /tmp/ccdV8qDL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.align	2
  19              	.LC2:
  20 000c 626C696E 		.ascii	"blink\000"
  20      6B00
  21 0012 0000     		.align	2
  22              	.LC4:
  23 0014 6C76676C 		.ascii	"lvgl\000"
  23      00
  24 0019 000000   		.align	2
  25              	.LC6:
  26 001c 61646374 		.ascii	"adctask\000"
  26      61736B00 
  27              		.text
  28              	.Ltext0:
  29              		.cfi_sections	.debug_frame
  30              		.section	.text.StartDefaultTask,"ax",%progbits
  31              		.align	1
  32              		.global	StartDefaultTask
  33              		.arch armv7e-m
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  37              		.fpu fpv4-sp-d16
  39              	StartDefaultTask:
  40              	.LFB433:
  41              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
ARM GAS  /tmp/ccdV8qDL.s 			page 2


  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****   *
  17:Core/Src/freertos.c ****   ******************************************************************************
  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include "adc.h"
  30:Core/Src/freertos.c **** #include "lvgl.h"
  31:Core/Src/freertos.c **** #include "lvgl_app.h"
  32:Core/Src/freertos.c **** #include <stdio.h>
  33:Core/Src/freertos.c **** #include <string.h>
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  48:Core/Src/freertos.c **** #define LVGL_TICK 5
  49:Core/Src/freertos.c **** /* USER CODE END PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  53:Core/Src/freertos.c **** osThreadId BlinkTaskHandle;
  54:Core/Src/freertos.c **** osThreadId HelloTaskHandle;
  55:Core/Src/freertos.c **** osThreadId lvglTaskHandle;
  56:Core/Src/freertos.c **** osThreadId counterTaskHandle;
  57:Core/Src/freertos.c **** osThreadId ADCTaskHandle;
  58:Core/Src/freertos.c **** extern uint8_t adc1CpltFlg;
  59:Core/Src/freertos.c **** extern lv_obj_t * wave_chart;
  60:Core/Src/freertos.c **** extern uint8_t waveStopFlg;
  61:Core/Src/freertos.c **** extern lv_chart_series_t * wave_ser;
  62:Core/Src/freertos.c **** extern ADC_HandleTypeDef hadc1;
  63:Core/Src/freertos.c **** extern  uint16_t wave[wave_num];
  64:Core/Src/freertos.c **** extern uint16_t AD1[6000];
  65:Core/Src/freertos.c **** /* USER CODE END Variables */
  66:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  67:Core/Src/freertos.c **** 
  68:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
ARM GAS  /tmp/ccdV8qDL.s 			page 3


  70:Core/Src/freertos.c **** void lvgl_init(void){
  71:Core/Src/freertos.c ****   /* lvgl init */
  72:Core/Src/freertos.c ****   lv_init();
  73:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
  74:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
  75:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
  76:Core/Src/freertos.c ****   //lv_example_btn_1();
  77:Core/Src/freertos.c ****   //counter_label();
  78:Core/Src/freertos.c ****   wave_chart_init();
  79:Core/Src/freertos.c ****   wave_btn();
  80:Core/Src/freertos.c ****   uint32_t ticks=HAL_GetTick()+1;
  81:Core/Src/freertos.c ****   char text[5];
  82:Core/Src/freertos.c ****   uint32_t i=0;
  83:Core/Src/freertos.c ****   extern lv_obj_t * label1;
  84:Core/Src/freertos.c ****   for (;;)
  85:Core/Src/freertos.c ****   {
  86:Core/Src/freertos.c ****     lv_tick_inc(LVGL_TICK);
  87:Core/Src/freertos.c ****     lv_task_handler();
  88:Core/Src/freertos.c ****     osDelay(LVGL_TICK);
  89:Core/Src/freertos.c ****     // if((HAL_GetTick()-ticks)>100){
  90:Core/Src/freertos.c ****     //   ticks=HAL_GetTick();
  91:Core/Src/freertos.c ****     //   sprintf(text,"%ld",i);
  92:Core/Src/freertos.c ****     //   //printf("%s %d\r\n",text,i);
  93:Core/Src/freertos.c ****     //   lv_label_set_text(label1, text);
  94:Core/Src/freertos.c ****     //   i++;
  95:Core/Src/freertos.c ****     // }
  96:Core/Src/freertos.c ****     // if(adc1CpltFlg){
  97:Core/Src/freertos.c ****     //   //HAL_Delay(100);
  98:Core/Src/freertos.c ****     //   Wave_Data_Init();
  99:Core/Src/freertos.c ****     //   if(waveStopFlg==0){
 100:Core/Src/freertos.c ****     //     //printf("ADC DMA OK\r\n");
 101:Core/Src/freertos.c ****     //     lv_chart_set_point_count(wave_chart, 1200);
 102:Core/Src/freertos.c ****     //     lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave);
 103:Core/Src/freertos.c ****     //   }
 104:Core/Src/freertos.c ****     //   adc1CpltFlg=0;
 105:Core/Src/freertos.c ****     //   HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,6000);
 106:Core/Src/freertos.c ****     // }
 107:Core/Src/freertos.c ****     //printf("adc1CpltFlg %d\r\n",adc1CpltFlg);
 108:Core/Src/freertos.c **** 
 109:Core/Src/freertos.c ****   }
 110:Core/Src/freertos.c **** }
 111:Core/Src/freertos.c **** void LED_Blinks(void){
 112:Core/Src/freertos.c ****   for(;;)
 113:Core/Src/freertos.c ****   {
 114:Core/Src/freertos.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 115:Core/Src/freertos.c ****     //printf("hello world\r\n");
 116:Core/Src/freertos.c ****     osDelay(500);
 117:Core/Src/freertos.c ****   }
 118:Core/Src/freertos.c **** }
 119:Core/Src/freertos.c **** void Helloworld(void){
 120:Core/Src/freertos.c ****   for(;;)
 121:Core/Src/freertos.c ****   {
 122:Core/Src/freertos.c ****     
 123:Core/Src/freertos.c ****     printf("hello world\r\n");
 124:Core/Src/freertos.c ****     osDelay(500);
 125:Core/Src/freertos.c ****   }
 126:Core/Src/freertos.c **** }
ARM GAS  /tmp/ccdV8qDL.s 			page 4


 127:Core/Src/freertos.c **** void ADC_Task(void){
 128:Core/Src/freertos.c ****   HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,6000);
 129:Core/Src/freertos.c ****   for (;;)
 130:Core/Src/freertos.c ****   {
 131:Core/Src/freertos.c ****     
 132:Core/Src/freertos.c ****     if(adc1CpltFlg){
 133:Core/Src/freertos.c ****       osDelay(100);
 134:Core/Src/freertos.c ****       Wave_Data_Init();
 135:Core/Src/freertos.c ****       //printf("ADC DMA OK\r\n");
 136:Core/Src/freertos.c ****       if(waveStopFlg==0){
 137:Core/Src/freertos.c ****         lv_chart_set_point_count(wave_chart, wave_num);
 138:Core/Src/freertos.c ****         lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave); 
 139:Core/Src/freertos.c ****       }
 140:Core/Src/freertos.c ****       adc1CpltFlg=0;
 141:Core/Src/freertos.c ****       HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,6000);
 142:Core/Src/freertos.c ****     }
 143:Core/Src/freertos.c ****     
 144:Core/Src/freertos.c ****   }
 145:Core/Src/freertos.c ****   
 146:Core/Src/freertos.c **** }
 147:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 148:Core/Src/freertos.c **** 
 149:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
 150:Core/Src/freertos.c **** 
 151:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 152:Core/Src/freertos.c **** 
 153:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
 154:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 155:Core/Src/freertos.c **** 
 156:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
 157:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
 158:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
 159:Core/Src/freertos.c **** 
 160:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 161:Core/Src/freertos.c **** {
 162:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 163:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 164:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 165:Core/Src/freertos.c ****   /* place for user code */
 166:Core/Src/freertos.c **** }
 167:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 168:Core/Src/freertos.c **** 
 169:Core/Src/freertos.c **** /**
 170:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 171:Core/Src/freertos.c ****   * @param  None
 172:Core/Src/freertos.c ****   * @retval None
 173:Core/Src/freertos.c ****   */
 174:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 175:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 176:Core/Src/freertos.c ****   
 177:Core/Src/freertos.c ****   /* USER CODE END Init */
 178:Core/Src/freertos.c **** 
 179:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 180:Core/Src/freertos.c ****   /* add mutexes, ... */
 181:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 182:Core/Src/freertos.c **** 
 183:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
ARM GAS  /tmp/ccdV8qDL.s 			page 5


 184:Core/Src/freertos.c ****   /* add semaphores, ... */
 185:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 186:Core/Src/freertos.c **** 
 187:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 188:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 189:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 190:Core/Src/freertos.c **** 
 191:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 192:Core/Src/freertos.c ****   /* add queues, ... */
 193:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 194:Core/Src/freertos.c **** 
 195:Core/Src/freertos.c ****   /* Create the thread(s) */
 196:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 197:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 198:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 199:Core/Src/freertos.c **** 
 200:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 201:Core/Src/freertos.c ****   /* add threads, ... */
 202:Core/Src/freertos.c **** 
 203:Core/Src/freertos.c ****   osThreadDef(blink, LED_Blinks, osPriorityNormal, 0, 128);
 204:Core/Src/freertos.c ****   BlinkTaskHandle = osThreadCreate(osThread(blink), NULL);
 205:Core/Src/freertos.c **** /*   osThreadDef(hello, Helloworld, osPriorityNormal, 0, 128);
 206:Core/Src/freertos.c ****   HelloTaskHandle = osThreadCreate(osThread(hello), NULL); */
 207:Core/Src/freertos.c ****   osThreadDef(lvgl, lvgl_init, osPriorityRealtime , 0, 2048);
 208:Core/Src/freertos.c ****   lvglTaskHandle = osThreadCreate(osThread(lvgl), NULL);
 209:Core/Src/freertos.c **** 
 210:Core/Src/freertos.c ****   osThreadDef(adctask, ADC_Task, osPriorityNormal, 0, 1024);
 211:Core/Src/freertos.c ****   ADCTaskHandle = osThreadCreate(osThread(adctask), NULL);
 212:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 213:Core/Src/freertos.c **** 
 214:Core/Src/freertos.c **** }
 215:Core/Src/freertos.c **** 
 216:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 217:Core/Src/freertos.c **** /**
 218:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 219:Core/Src/freertos.c ****   * @param  argument: Not used
 220:Core/Src/freertos.c ****   * @retval None
 221:Core/Src/freertos.c ****   */
 222:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 223:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 224:Core/Src/freertos.c **** {
  42              		.loc 1 224 1 view -0
  43              		.cfi_startproc
  44              		@ Volatile: function does not return.
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 0, uses_anonymous_args = 0
  47              	.LVL0:
  48              		.loc 1 224 1 is_stmt 0 view .LVU1
  49 0000 08B5     		push	{r3, lr}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 3, -8
  53              		.cfi_offset 14, -4
  54              	.LVL1:
  55              	.L2:
 225:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 226:Core/Src/freertos.c ****   /* Infinite loop */
ARM GAS  /tmp/ccdV8qDL.s 			page 6


 227:Core/Src/freertos.c ****   for(;;)
  56              		.loc 1 227 3 is_stmt 1 discriminator 1 view .LVU2
 228:Core/Src/freertos.c ****   {
 229:Core/Src/freertos.c ****     osDelay(1);
  57              		.loc 1 229 5 discriminator 1 view .LVU3
  58 0002 0120     		movs	r0, #1
  59 0004 FFF7FEFF 		bl	osDelay
  60              	.LVL2:
 227:Core/Src/freertos.c ****   {
  61              		.loc 1 227 8 discriminator 1 view .LVU4
  62 0008 FBE7     		b	.L2
  63              		.cfi_endproc
  64              	.LFE433:
  66              		.section	.text.lvgl_init,"ax",%progbits
  67              		.align	1
  68              		.global	lvgl_init
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	lvgl_init:
  75              	.LFB427:
  70:Core/Src/freertos.c ****   /* lvgl init */
  76              		.loc 1 70 21 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 08B5     		push	{r3, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 3, -8
  84              		.cfi_offset 14, -4
  72:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
  85              		.loc 1 72 3 view .LVU6
  86 0002 FFF7FEFF 		bl	lv_init
  87              	.LVL3:
  73:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
  88              		.loc 1 73 3 view .LVU7
  89 0006 FFF7FEFF 		bl	lv_port_disp_init
  90              	.LVL4:
  74:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
  91              		.loc 1 74 3 view .LVU8
  92 000a FFF7FEFF 		bl	lv_port_indev_init
  93              	.LVL5:
  78:Core/Src/freertos.c ****   wave_btn();
  94              		.loc 1 78 3 view .LVU9
  95 000e FFF7FEFF 		bl	wave_chart_init
  96              	.LVL6:
  79:Core/Src/freertos.c ****   uint32_t ticks=HAL_GetTick()+1;
  97              		.loc 1 79 3 view .LVU10
  98 0012 FFF7FEFF 		bl	wave_btn
  99              	.LVL7:
  80:Core/Src/freertos.c ****   char text[5];
 100              		.loc 1 80 3 view .LVU11
  80:Core/Src/freertos.c ****   char text[5];
 101              		.loc 1 80 18 is_stmt 0 view .LVU12
 102 0016 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccdV8qDL.s 			page 7


 103              	.LVL8:
  81:Core/Src/freertos.c ****   uint32_t i=0;
 104              		.loc 1 81 3 is_stmt 1 view .LVU13
  82:Core/Src/freertos.c ****   extern lv_obj_t * label1;
 105              		.loc 1 82 3 view .LVU14
 106              	.L5:
  83:Core/Src/freertos.c ****   for (;;)
 107              		.loc 1 83 3 discriminator 1 view .LVU15
  84:Core/Src/freertos.c ****   {
 108              		.loc 1 84 3 discriminator 1 view .LVU16
  86:Core/Src/freertos.c ****     lv_task_handler();
 109              		.loc 1 86 5 discriminator 1 view .LVU17
 110 001a 0520     		movs	r0, #5
 111 001c FFF7FEFF 		bl	lv_tick_inc
 112              	.LVL9:
  87:Core/Src/freertos.c ****     osDelay(LVGL_TICK);
 113              		.loc 1 87 5 discriminator 1 view .LVU18
 114              	.LBB4:
 115              	.LBI4:
 116              		.file 2 "Middlewares/lvgl/src/lv_api_map.h"
   1:Middlewares/lvgl/src/lv_api_map.h **** /**
   2:Middlewares/lvgl/src/lv_api_map.h ****  * @file lv_api_map.h
   3:Middlewares/lvgl/src/lv_api_map.h ****  *
   4:Middlewares/lvgl/src/lv_api_map.h ****  */
   5:Middlewares/lvgl/src/lv_api_map.h **** 
   6:Middlewares/lvgl/src/lv_api_map.h **** #ifndef LV_API_MAP_H
   7:Middlewares/lvgl/src/lv_api_map.h **** #define LV_API_MAP_H
   8:Middlewares/lvgl/src/lv_api_map.h **** 
   9:Middlewares/lvgl/src/lv_api_map.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/lv_api_map.h **** extern "C" {
  11:Middlewares/lvgl/src/lv_api_map.h **** #endif
  12:Middlewares/lvgl/src/lv_api_map.h **** 
  13:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  14:Middlewares/lvgl/src/lv_api_map.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  16:Middlewares/lvgl/src/lv_api_map.h **** #include "../lvgl.h"
  17:Middlewares/lvgl/src/lv_api_map.h **** 
  18:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  19:Middlewares/lvgl/src/lv_api_map.h ****  *      DEFINES
  20:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  21:Middlewares/lvgl/src/lv_api_map.h **** 
  22:Middlewares/lvgl/src/lv_api_map.h **** #define LV_NO_TASK_READY        LV_NO_TIMER_READY
  23:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_REL      LV_INDEV_STATE_RELEASED
  24:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_PR       LV_INDEV_STATE_PRESSED
  25:Middlewares/lvgl/src/lv_api_map.h **** #define LV_OBJ_FLAG_SNAPABLE    LV_OBJ_FLAG_SNAPPABLE   /*Fixed typo*/
  26:Middlewares/lvgl/src/lv_api_map.h **** 
  27:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  28:Middlewares/lvgl/src/lv_api_map.h ****  *      TYPEDEFS
  29:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  30:Middlewares/lvgl/src/lv_api_map.h **** 
  31:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  32:Middlewares/lvgl/src/lv_api_map.h ****  * GLOBAL PROTOTYPES
  33:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  34:Middlewares/lvgl/src/lv_api_map.h **** 
  35:Middlewares/lvgl/src/lv_api_map.h **** static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)
 117              		.loc 2 35 51 discriminator 1 view .LVU19
 118              	.LBB5:
ARM GAS  /tmp/ccdV8qDL.s 			page 8


  36:Middlewares/lvgl/src/lv_api_map.h **** {
  37:Middlewares/lvgl/src/lv_api_map.h ****     return lv_timer_handler();
 119              		.loc 2 37 5 discriminator 1 view .LVU20
 120              		.loc 2 37 12 is_stmt 0 discriminator 1 view .LVU21
 121 0020 FFF7FEFF 		bl	lv_timer_handler
 122              	.LVL10:
 123              	.LBE5:
 124              	.LBE4:
  88:Core/Src/freertos.c ****     // if((HAL_GetTick()-ticks)>100){
 125              		.loc 1 88 5 is_stmt 1 discriminator 1 view .LVU22
 126 0024 0520     		movs	r0, #5
 127 0026 FFF7FEFF 		bl	osDelay
 128              	.LVL11:
  84:Core/Src/freertos.c ****   {
 129              		.loc 1 84 9 discriminator 1 view .LVU23
 130 002a F6E7     		b	.L5
 131              		.cfi_endproc
 132              	.LFE427:
 134              		.section	.text.LED_Blinks,"ax",%progbits
 135              		.align	1
 136              		.global	LED_Blinks
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	LED_Blinks:
 143              	.LFB428:
 111:Core/Src/freertos.c ****   for(;;)
 144              		.loc 1 111 22 view -0
 145              		.cfi_startproc
 146              		@ Volatile: function does not return.
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              	.LCFI2:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
 154              	.L8:
 112:Core/Src/freertos.c ****   {
 155              		.loc 1 112 3 discriminator 1 view .LVU25
 114:Core/Src/freertos.c ****     //printf("hello world\r\n");
 156              		.loc 1 114 5 discriminator 1 view .LVU26
 157 0002 4FF40071 		mov	r1, #512
 158 0006 0448     		ldr	r0, .L10
 159 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 160              	.LVL12:
 116:Core/Src/freertos.c ****   }
 161              		.loc 1 116 5 discriminator 1 view .LVU27
 162 000c 4FF4FA70 		mov	r0, #500
 163 0010 FFF7FEFF 		bl	osDelay
 164              	.LVL13:
 112:Core/Src/freertos.c ****   {
 165              		.loc 1 112 8 discriminator 1 view .LVU28
 166 0014 F5E7     		b	.L8
 167              	.L11:
 168 0016 00BF     		.align	2
ARM GAS  /tmp/ccdV8qDL.s 			page 9


 169              	.L10:
 170 0018 00140240 		.word	1073878016
 171              		.cfi_endproc
 172              	.LFE428:
 174              		.section	.text.ADC_Task,"ax",%progbits
 175              		.align	1
 176              		.global	ADC_Task
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	ADC_Task:
 183              	.LFB430:
 127:Core/Src/freertos.c ****   HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,6000);
 184              		.loc 1 127 20 view -0
 185              		.cfi_startproc
 186              		@ Volatile: function does not return.
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 128:Core/Src/freertos.c ****   for (;;)
 194              		.loc 1 128 3 view .LVU30
 195 0002 41F27072 		movw	r2, #6000
 196 0006 1449     		ldr	r1, .L17
 197 0008 1448     		ldr	r0, .L17+4
 198 000a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 199              	.LVL14:
 200 000e 08E0     		b	.L13
 201              	.L14:
 140:Core/Src/freertos.c ****       HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,6000);
 202              		.loc 1 140 7 view .LVU31
 140:Core/Src/freertos.c ****       HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,6000);
 203              		.loc 1 140 18 is_stmt 0 view .LVU32
 204 0010 134B     		ldr	r3, .L17+8
 205 0012 0022     		movs	r2, #0
 206 0014 1A70     		strb	r2, [r3]
 141:Core/Src/freertos.c ****     }
 207              		.loc 1 141 7 is_stmt 1 view .LVU33
 208 0016 41F27072 		movw	r2, #6000
 209 001a 0F49     		ldr	r1, .L17
 210 001c 0F48     		ldr	r0, .L17+4
 211 001e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 212              	.LVL15:
 213              	.L13:
 129:Core/Src/freertos.c ****   {
 214              		.loc 1 129 3 view .LVU34
 132:Core/Src/freertos.c ****       osDelay(100);
 215              		.loc 1 132 5 view .LVU35
 132:Core/Src/freertos.c ****       osDelay(100);
 216              		.loc 1 132 8 is_stmt 0 view .LVU36
 217 0022 0F4B     		ldr	r3, .L17+8
 218 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132:Core/Src/freertos.c ****       osDelay(100);
ARM GAS  /tmp/ccdV8qDL.s 			page 10


 219              		.loc 1 132 7 view .LVU37
 220 0026 002B     		cmp	r3, #0
 221 0028 FBD0     		beq	.L13
 133:Core/Src/freertos.c ****       Wave_Data_Init();
 222              		.loc 1 133 7 is_stmt 1 view .LVU38
 223 002a 6420     		movs	r0, #100
 224 002c FFF7FEFF 		bl	osDelay
 225              	.LVL16:
 134:Core/Src/freertos.c ****       //printf("ADC DMA OK\r\n");
 226              		.loc 1 134 7 view .LVU39
 227 0030 FFF7FEFF 		bl	Wave_Data_Init
 228              	.LVL17:
 136:Core/Src/freertos.c ****         lv_chart_set_point_count(wave_chart, wave_num);
 229              		.loc 1 136 7 view .LVU40
 136:Core/Src/freertos.c ****         lv_chart_set_point_count(wave_chart, wave_num);
 230              		.loc 1 136 21 is_stmt 0 view .LVU41
 231 0034 0B4B     		ldr	r3, .L17+12
 232 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 136:Core/Src/freertos.c ****         lv_chart_set_point_count(wave_chart, wave_num);
 233              		.loc 1 136 9 view .LVU42
 234 0038 002B     		cmp	r3, #0
 235 003a E9D1     		bne	.L14
 137:Core/Src/freertos.c ****         lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave); 
 236              		.loc 1 137 9 is_stmt 1 view .LVU43
 237 003c 0A4C     		ldr	r4, .L17+16
 238 003e 4FF4FA71 		mov	r1, #500
 239 0042 2068     		ldr	r0, [r4]
 240 0044 FFF7FEFF 		bl	lv_chart_set_point_count
 241              	.LVL18:
 138:Core/Src/freertos.c ****       }
 242              		.loc 1 138 9 view .LVU44
 243 0048 084A     		ldr	r2, .L17+20
 244 004a 094B     		ldr	r3, .L17+24
 245 004c 1968     		ldr	r1, [r3]
 246 004e 2068     		ldr	r0, [r4]
 247 0050 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 248              	.LVL19:
 249 0054 DCE7     		b	.L14
 250              	.L18:
 251 0056 00BF     		.align	2
 252              	.L17:
 253 0058 00000000 		.word	AD1
 254 005c 00000000 		.word	hadc1
 255 0060 00000000 		.word	adc1CpltFlg
 256 0064 00000000 		.word	waveStopFlg
 257 0068 00000000 		.word	wave_chart
 258 006c 00000000 		.word	wave
 259 0070 00000000 		.word	wave_ser
 260              		.cfi_endproc
 261              	.LFE430:
 263              		.section	.rodata.Helloworld.str1.4,"aMS",%progbits,1
 264              		.align	2
 265              	.LC8:
 266 0000 68656C6C 		.ascii	"hello world\015\000"
 266      6F20776F 
 266      726C640D 
 266      00
ARM GAS  /tmp/ccdV8qDL.s 			page 11


 267              		.section	.text.Helloworld,"ax",%progbits
 268              		.align	1
 269              		.global	Helloworld
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	Helloworld:
 276              	.LFB429:
 119:Core/Src/freertos.c ****   for(;;)
 277              		.loc 1 119 22 view -0
 278              		.cfi_startproc
 279              		@ Volatile: function does not return.
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 08B5     		push	{r3, lr}
 283              	.LCFI4:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 3, -8
 286              		.cfi_offset 14, -4
 287              	.L20:
 120:Core/Src/freertos.c ****   {
 288              		.loc 1 120 3 discriminator 1 view .LVU46
 123:Core/Src/freertos.c ****     osDelay(500);
 289              		.loc 1 123 5 discriminator 1 view .LVU47
 290 0002 0448     		ldr	r0, .L22
 291 0004 FFF7FEFF 		bl	puts
 292              	.LVL20:
 124:Core/Src/freertos.c ****   }
 293              		.loc 1 124 5 discriminator 1 view .LVU48
 294 0008 4FF4FA70 		mov	r0, #500
 295 000c FFF7FEFF 		bl	osDelay
 296              	.LVL21:
 120:Core/Src/freertos.c ****   {
 297              		.loc 1 120 8 discriminator 1 view .LVU49
 298 0010 F7E7     		b	.L20
 299              	.L23:
 300 0012 00BF     		.align	2
 301              	.L22:
 302 0014 00000000 		.word	.LC8
 303              		.cfi_endproc
 304              	.LFE429:
 306              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 307              		.align	1
 308              		.global	vApplicationGetIdleTaskMemory
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	vApplicationGetIdleTaskMemory:
 315              	.LVL22:
 316              	.LFB431:
 161:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 317              		.loc 1 161 1 view -0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccdV8qDL.s 			page 12


 321              		@ link register save eliminated.
 162:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 322              		.loc 1 162 3 view .LVU51
 162:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 323              		.loc 1 162 25 is_stmt 0 view .LVU52
 324 0000 034B     		ldr	r3, .L25
 325 0002 0360     		str	r3, [r0]
 163:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 326              		.loc 1 163 3 is_stmt 1 view .LVU53
 163:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 327              		.loc 1 163 27 is_stmt 0 view .LVU54
 328 0004 034B     		ldr	r3, .L25+4
 329 0006 0B60     		str	r3, [r1]
 164:Core/Src/freertos.c ****   /* place for user code */
 330              		.loc 1 164 3 is_stmt 1 view .LVU55
 164:Core/Src/freertos.c ****   /* place for user code */
 331              		.loc 1 164 25 is_stmt 0 view .LVU56
 332 0008 8023     		movs	r3, #128
 333 000a 1360     		str	r3, [r2]
 166:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 334              		.loc 1 166 1 view .LVU57
 335 000c 7047     		bx	lr
 336              	.L26:
 337 000e 00BF     		.align	2
 338              	.L25:
 339 0010 00000000 		.word	.LANCHOR0
 340 0014 00000000 		.word	.LANCHOR1
 341              		.cfi_endproc
 342              	.LFE431:
 344              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 345              		.align	1
 346              		.global	MX_FREERTOS_Init
 347              		.syntax unified
 348              		.thumb
 349              		.thumb_func
 350              		.fpu fpv4-sp-d16
 352              	MX_FREERTOS_Init:
 353              	.LFB432:
 174:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 354              		.loc 1 174 29 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 112
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 10B5     		push	{r4, lr}
 359              	.LCFI5:
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 4, -8
 362              		.cfi_offset 14, -4
 363 0002 9CB0     		sub	sp, sp, #112
 364              	.LCFI6:
 365              		.cfi_def_cfa_offset 120
 197:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 366              		.loc 1 197 3 view .LVU59
 367 0004 244C     		ldr	r4, .L29
 368 0006 0DF1540C 		add	ip, sp, #84
 369 000a A646     		mov	lr, r4
 370 000c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccdV8qDL.s 			page 13


 371 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 372 0014 9EE80700 		ldm	lr, {r0, r1, r2}
 373 0018 8CE80700 		stm	ip, {r0, r1, r2}
 198:Core/Src/freertos.c **** 
 374              		.loc 1 198 3 view .LVU60
 198:Core/Src/freertos.c **** 
 375              		.loc 1 198 23 is_stmt 0 view .LVU61
 376 001c 0021     		movs	r1, #0
 377 001e 15A8     		add	r0, sp, #84
 378 0020 FFF7FEFF 		bl	osThreadCreate
 379              	.LVL23:
 198:Core/Src/freertos.c **** 
 380              		.loc 1 198 21 view .LVU62
 381 0024 1D4B     		ldr	r3, .L29+4
 382 0026 1860     		str	r0, [r3]
 203:Core/Src/freertos.c ****   BlinkTaskHandle = osThreadCreate(osThread(blink), NULL);
 383              		.loc 1 203 3 is_stmt 1 view .LVU63
 384 0028 0DF1380C 		add	ip, sp, #56
 385 002c 04F11C0E 		add	lr, r4, #28
 386 0030 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 387 0034 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 388 0038 9EE80700 		ldm	lr, {r0, r1, r2}
 389 003c 8CE80700 		stm	ip, {r0, r1, r2}
 204:Core/Src/freertos.c **** /*   osThreadDef(hello, Helloworld, osPriorityNormal, 0, 128);
 390              		.loc 1 204 3 view .LVU64
 204:Core/Src/freertos.c **** /*   osThreadDef(hello, Helloworld, osPriorityNormal, 0, 128);
 391              		.loc 1 204 21 is_stmt 0 view .LVU65
 392 0040 0021     		movs	r1, #0
 393 0042 0EA8     		add	r0, sp, #56
 394 0044 FFF7FEFF 		bl	osThreadCreate
 395              	.LVL24:
 204:Core/Src/freertos.c **** /*   osThreadDef(hello, Helloworld, osPriorityNormal, 0, 128);
 396              		.loc 1 204 19 view .LVU66
 397 0048 154B     		ldr	r3, .L29+8
 398 004a 1860     		str	r0, [r3]
 207:Core/Src/freertos.c ****   lvglTaskHandle = osThreadCreate(osThread(lvgl), NULL);
 399              		.loc 1 207 3 is_stmt 1 view .LVU67
 400 004c 0DF11C0C 		add	ip, sp, #28
 401 0050 04F1380E 		add	lr, r4, #56
 402 0054 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 403 0058 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 404 005c 9EE80700 		ldm	lr, {r0, r1, r2}
 405 0060 8CE80700 		stm	ip, {r0, r1, r2}
 208:Core/Src/freertos.c **** 
 406              		.loc 1 208 3 view .LVU68
 208:Core/Src/freertos.c **** 
 407              		.loc 1 208 20 is_stmt 0 view .LVU69
 408 0064 0021     		movs	r1, #0
 409 0066 07A8     		add	r0, sp, #28
 410 0068 FFF7FEFF 		bl	osThreadCreate
 411              	.LVL25:
 208:Core/Src/freertos.c **** 
 412              		.loc 1 208 18 view .LVU70
 413 006c 0D4B     		ldr	r3, .L29+12
 414 006e 1860     		str	r0, [r3]
 210:Core/Src/freertos.c ****   ADCTaskHandle = osThreadCreate(osThread(adctask), NULL);
 415              		.loc 1 210 3 is_stmt 1 view .LVU71
ARM GAS  /tmp/ccdV8qDL.s 			page 14


 416 0070 EE46     		mov	lr, sp
 417 0072 04F1540C 		add	ip, r4, #84
 418 0076 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 419 007a AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 420 007e 9CE80700 		ldm	ip, {r0, r1, r2}
 421 0082 8EE80700 		stm	lr, {r0, r1, r2}
 211:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 422              		.loc 1 211 3 view .LVU72
 211:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 423              		.loc 1 211 19 is_stmt 0 view .LVU73
 424 0086 0021     		movs	r1, #0
 425 0088 6846     		mov	r0, sp
 426 008a FFF7FEFF 		bl	osThreadCreate
 427              	.LVL26:
 211:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 428              		.loc 1 211 17 view .LVU74
 429 008e 064B     		ldr	r3, .L29+16
 430 0090 1860     		str	r0, [r3]
 214:Core/Src/freertos.c **** 
 431              		.loc 1 214 1 view .LVU75
 432 0092 1CB0     		add	sp, sp, #112
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 8
 435              		@ sp needed
 436 0094 10BD     		pop	{r4, pc}
 437              	.L30:
 438 0096 00BF     		.align	2
 439              	.L29:
 440 0098 00000000 		.word	.LANCHOR2
 441 009c 00000000 		.word	.LANCHOR3
 442 00a0 00000000 		.word	.LANCHOR4
 443 00a4 00000000 		.word	.LANCHOR5
 444 00a8 00000000 		.word	.LANCHOR6
 445              		.cfi_endproc
 446              	.LFE432:
 448              		.global	defaultTaskHandle
 449              		.global	ADCTaskHandle
 450              		.global	counterTaskHandle
 451              		.global	lvglTaskHandle
 452              		.global	HelloTaskHandle
 453              		.global	BlinkTaskHandle
 454              		.section	.rodata
 455              		.align	2
 456              		.set	.LANCHOR2,. + 0
 457              	.LC9:
 458 0000 00000000 		.word	.LC0
 459 0004 00000000 		.word	StartDefaultTask
 460 0008 0000     		.short	0
 461 000a 0000     		.space	2
 462 000c 00000000 		.word	0
 463 0010 80000000 		.word	128
 464 0014 00000000 		.word	0
 465 0018 00000000 		.word	0
 466              	.LC10:
 467 001c 0C000000 		.word	.LC2
 468 0020 00000000 		.word	LED_Blinks
 469 0024 0000     		.short	0
ARM GAS  /tmp/ccdV8qDL.s 			page 15


 470 0026 0000     		.space	2
 471 0028 00000000 		.word	0
 472 002c 80000000 		.word	128
 473 0030 00000000 		.word	0
 474 0034 00000000 		.word	0
 475              	.LC11:
 476 0038 14000000 		.word	.LC4
 477 003c 00000000 		.word	lvgl_init
 478 0040 0300     		.short	3
 479 0042 0000     		.space	2
 480 0044 00000000 		.word	0
 481 0048 00080000 		.word	2048
 482 004c 00000000 		.word	0
 483 0050 00000000 		.word	0
 484              	.LC12:
 485 0054 1C000000 		.word	.LC6
 486 0058 00000000 		.word	ADC_Task
 487 005c 0000     		.short	0
 488 005e 0000     		.space	2
 489 0060 00000000 		.word	0
 490 0064 00040000 		.word	1024
 491 0068 00000000 		.word	0
 492 006c 00000000 		.word	0
 493              		.section	.bss.ADCTaskHandle,"aw",%nobits
 494              		.align	2
 495              		.set	.LANCHOR6,. + 0
 498              	ADCTaskHandle:
 499 0000 00000000 		.space	4
 500              		.section	.bss.BlinkTaskHandle,"aw",%nobits
 501              		.align	2
 502              		.set	.LANCHOR4,. + 0
 505              	BlinkTaskHandle:
 506 0000 00000000 		.space	4
 507              		.section	.bss.HelloTaskHandle,"aw",%nobits
 508              		.align	2
 511              	HelloTaskHandle:
 512 0000 00000000 		.space	4
 513              		.section	.bss.counterTaskHandle,"aw",%nobits
 514              		.align	2
 517              	counterTaskHandle:
 518 0000 00000000 		.space	4
 519              		.section	.bss.defaultTaskHandle,"aw",%nobits
 520              		.align	2
 521              		.set	.LANCHOR3,. + 0
 524              	defaultTaskHandle:
 525 0000 00000000 		.space	4
 526              		.section	.bss.lvglTaskHandle,"aw",%nobits
 527              		.align	2
 528              		.set	.LANCHOR5,. + 0
 531              	lvglTaskHandle:
 532 0000 00000000 		.space	4
 533              		.section	.bss.xIdleStack,"aw",%nobits
 534              		.align	2
 535              		.set	.LANCHOR1,. + 0
 538              	xIdleStack:
 539 0000 00000000 		.space	512
 539      00000000 
ARM GAS  /tmp/ccdV8qDL.s 			page 16


 539      00000000 
 539      00000000 
 539      00000000 
 540              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 541              		.align	2
 542              		.set	.LANCHOR0,. + 0
 545              	xIdleTaskTCBBuffer:
 546 0000 00000000 		.space	84
 546      00000000 
 546      00000000 
 546      00000000 
 546      00000000 
 547              		.text
 548              	.Letext0:
 549              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 550              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 551              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 552              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 553              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 554              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 555              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 556              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 557              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 558              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 559              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 560              		.file 14 "Middlewares/lvgl/src/misc/lv_ll.h"
 561              		.file 15 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 562              		.file 16 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 563              		.file 17 "Middlewares/lvgl/src/core/lv_obj.h"
 564              		.file 18 "Middlewares/lvgl/src/core/lv_group.h"
 565              		.file 19 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 566              		.file 20 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 567              		.file 21 "Middlewares/lvgl/src/core/lv_obj_style.h"
 568              		.file 22 "Middlewares/lvgl/src/core/lv_obj_class.h"
 569              		.file 23 "Middlewares/lvgl/src/core/lv_event.h"
 570              		.file 24 "Middlewares/lvgl/src/widgets/lv_bar.h"
 571              		.file 25 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
 572              		.file 26 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 573              		.file 27 "Core/Inc/adc.h"
 574              		.file 28 "Core/Inc/main.h"
 575              		.file 29 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 576              		.file 30 "Middlewares/lvgl/src/misc/lv_timer.h"
 577              		.file 31 "Core/Inc/lvgl_app.h"
 578              		.file 32 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 579              		.file 33 "Middlewares/lvgl/src/hal/lv_hal_tick.h"
 580              		.file 34 "<built-in>"
ARM GAS  /tmp/ccdV8qDL.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccdV8qDL.s:15     .rodata.str1.4:0000000000000000 $d
     /tmp/ccdV8qDL.s:31     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccdV8qDL.s:39     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccdV8qDL.s:67     .text.lvgl_init:0000000000000000 $t
     /tmp/ccdV8qDL.s:74     .text.lvgl_init:0000000000000000 lvgl_init
     /tmp/ccdV8qDL.s:135    .text.LED_Blinks:0000000000000000 $t
     /tmp/ccdV8qDL.s:142    .text.LED_Blinks:0000000000000000 LED_Blinks
     /tmp/ccdV8qDL.s:170    .text.LED_Blinks:0000000000000018 $d
     /tmp/ccdV8qDL.s:175    .text.ADC_Task:0000000000000000 $t
     /tmp/ccdV8qDL.s:182    .text.ADC_Task:0000000000000000 ADC_Task
     /tmp/ccdV8qDL.s:253    .text.ADC_Task:0000000000000058 $d
     /tmp/ccdV8qDL.s:264    .rodata.Helloworld.str1.4:0000000000000000 $d
     /tmp/ccdV8qDL.s:268    .text.Helloworld:0000000000000000 $t
     /tmp/ccdV8qDL.s:275    .text.Helloworld:0000000000000000 Helloworld
     /tmp/ccdV8qDL.s:302    .text.Helloworld:0000000000000014 $d
     /tmp/ccdV8qDL.s:307    .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccdV8qDL.s:314    .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccdV8qDL.s:339    .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccdV8qDL.s:345    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccdV8qDL.s:352    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccdV8qDL.s:440    .text.MX_FREERTOS_Init:0000000000000098 $d
     /tmp/ccdV8qDL.s:524    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccdV8qDL.s:498    .bss.ADCTaskHandle:0000000000000000 ADCTaskHandle
     /tmp/ccdV8qDL.s:517    .bss.counterTaskHandle:0000000000000000 counterTaskHandle
     /tmp/ccdV8qDL.s:531    .bss.lvglTaskHandle:0000000000000000 lvglTaskHandle
     /tmp/ccdV8qDL.s:511    .bss.HelloTaskHandle:0000000000000000 HelloTaskHandle
     /tmp/ccdV8qDL.s:505    .bss.BlinkTaskHandle:0000000000000000 BlinkTaskHandle
     /tmp/ccdV8qDL.s:455    .rodata:0000000000000000 $d
     /tmp/ccdV8qDL.s:494    .bss.ADCTaskHandle:0000000000000000 $d
     /tmp/ccdV8qDL.s:501    .bss.BlinkTaskHandle:0000000000000000 $d
     /tmp/ccdV8qDL.s:508    .bss.HelloTaskHandle:0000000000000000 $d
     /tmp/ccdV8qDL.s:514    .bss.counterTaskHandle:0000000000000000 $d
     /tmp/ccdV8qDL.s:520    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccdV8qDL.s:527    .bss.lvglTaskHandle:0000000000000000 $d
     /tmp/ccdV8qDL.s:534    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccdV8qDL.s:538    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccdV8qDL.s:541    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccdV8qDL.s:545    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer

UNDEFINED SYMBOLS
osDelay
lv_init
lv_port_disp_init
lv_port_indev_init
wave_chart_init
wave_btn
HAL_GetTick
lv_tick_inc
lv_timer_handler
HAL_GPIO_TogglePin
HAL_ADC_Start_DMA
Wave_Data_Init
lv_chart_set_point_count
lv_chart_set_ext_y_array
AD1
ARM GAS  /tmp/ccdV8qDL.s 			page 18


hadc1
adc1CpltFlg
waveStopFlg
wave_chart
wave
wave_ser
puts
osThreadCreate
