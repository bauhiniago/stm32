ARM GAS  /tmp/ccnAYFku.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LED_Blinks,"ax",%progbits
  18              		.align	1
  19              		.global	LED_Blinks
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	LED_Blinks:
  27              	.LFB319:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** #include "fsmc.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "lvgl.h"
ARM GAS  /tmp/ccnAYFku.s 			page 2


  31:Core/Src/main.c **** #include "lvgl_app.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** void LED_Blinks(void){
  29              		.loc 1 58 22 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39              	.L2:
  59:Core/Src/main.c ****   for(;;)
  40              		.loc 1 59 3 discriminator 1 view .LVU1
  60:Core/Src/main.c ****   {
  61:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
  41              		.loc 1 61 5 discriminator 1 view .LVU2
  42 0002 4FF40071 		mov	r1, #512
  43 0006 0448     		ldr	r0, .L4
  44 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  45              	.LVL0:
  62:Core/Src/main.c ****     osDelay(500);
  46              		.loc 1 62 5 discriminator 1 view .LVU3
  47 000c 4FF4FA70 		mov	r0, #500
  48 0010 FFF7FEFF 		bl	osDelay
  49              	.LVL1:
  59:Core/Src/main.c ****   for(;;)
  50              		.loc 1 59 8 discriminator 1 view .LVU4
  51 0014 F5E7     		b	.L2
  52              	.L5:
ARM GAS  /tmp/ccnAYFku.s 			page 3


  53 0016 00BF     		.align	2
  54              	.L4:
  55 0018 00140240 		.word	1073878016
  56              		.cfi_endproc
  57              	.LFE319:
  59              		.section	.rodata.LCD_COUNTER.str1.4,"aMS",%progbits,1
  60              		.align	2
  61              	.LC0:
  62 0000 256400   		.ascii	"%d\000"
  63              		.section	.text.LCD_COUNTER,"ax",%progbits
  64              		.align	1
  65              		.global	LCD_COUNTER
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	LCD_COUNTER:
  72              	.LFB320:
  63:Core/Src/main.c ****   }
  64:Core/Src/main.c **** }
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** void LCD_COUNTER(void){
  73              		.loc 1 66 23 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 24
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 00B5     		push	{lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 14, -4
  81 0002 87B0     		sub	sp, sp, #28
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 32
  67:Core/Src/main.c ****   
  68:Core/Src/main.c ****   uint32_t i=0;
  84              		.loc 1 68 3 view .LVU6
  85              	.LVL2:
  69:Core/Src/main.c ****   char text[20];
  86              		.loc 1 69 3 view .LVU7
  70:Core/Src/main.c ****   counter_label();
  87              		.loc 1 70 3 view .LVU8
  88 0004 FFF7FEFF 		bl	counter_label
  89              	.LVL3:
  90              	.L7:
  71:Core/Src/main.c ****   while (1)
  91              		.loc 1 71 3 discriminator 1 view .LVU9
  92              	.LBB4:
  72:Core/Src/main.c ****   {
  73:Core/Src/main.c ****     osDelay(500);
  93              		.loc 1 73 5 discriminator 1 view .LVU10
  94 0008 4FF4FA70 		mov	r0, #500
  95 000c FFF7FEFF 		bl	osDelay
  96              	.LVL4:
  74:Core/Src/main.c ****     sprintf("%d",text);
  97              		.loc 1 74 5 discriminator 1 view .LVU11
  98 0010 01A9     		add	r1, sp, #4
  99 0012 0448     		ldr	r0, .L9
ARM GAS  /tmp/ccnAYFku.s 			page 4


 100 0014 FFF7FEFF 		bl	sprintf
 101              	.LVL5:
  75:Core/Src/main.c ****     extern lv_obj_t * label1;
 102              		.loc 1 75 5 discriminator 1 view .LVU12
  76:Core/Src/main.c ****     lv_label_set_text(label1, text);
 103              		.loc 1 76 5 discriminator 1 view .LVU13
 104 0018 01A9     		add	r1, sp, #4
 105 001a 034B     		ldr	r3, .L9+4
 106 001c 1868     		ldr	r0, [r3]
 107 001e FFF7FEFF 		bl	lv_label_set_text
 108              	.LVL6:
  77:Core/Src/main.c ****     i++;
 109              		.loc 1 77 5 discriminator 1 view .LVU14
 110              	.LBE4:
  71:Core/Src/main.c ****   {
 111              		.loc 1 71 9 discriminator 1 view .LVU15
 112 0022 F1E7     		b	.L7
 113              	.L10:
 114              		.align	2
 115              	.L9:
 116 0024 00000000 		.word	.LC0
 117 0028 00000000 		.word	label1
 118              		.cfi_endproc
 119              	.LFE320:
 121              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 122              		.align	1
 123              		.global	HAL_TIM_PeriodElapsedCallback
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	HAL_TIM_PeriodElapsedCallback:
 130              	.LVL7:
 131              	.LFB323:
  78:Core/Src/main.c ****   }
  79:Core/Src/main.c **** }
  80:Core/Src/main.c **** /* USER CODE END PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c ****   
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 100:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccnAYFku.s 			page 5


 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_DMA_Init();
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 117:Core/Src/main.c ****   MX_FSMC_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   //osThreadDef(counter, LCD_COUNTER, osPriorityNormal, 0, 2048);
 121:Core/Src/main.c ****   //Task2Handle = osThreadCreate(osThread(counter), NULL);
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 125:Core/Src/main.c ****   MX_FREERTOS_Init();
 126:Core/Src/main.c ****   /* Start scheduler */
 127:Core/Src/main.c ****   osKernelStart();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 130:Core/Src/main.c ****   /* Infinite loop */
 131:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 132:Core/Src/main.c ****   while (1)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 154:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 155:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 156:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 157:Core/Src/main.c ****   */
ARM GAS  /tmp/ccnAYFku.s 			page 6


 158:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /* USER CODE END 4 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****  /**
 191:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 192:Core/Src/main.c ****   * @note   This function is called  when TIM14 interrupt took place, inside
 193:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 194:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 195:Core/Src/main.c ****   * @param  htim : TIM handle
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 199:Core/Src/main.c **** {
 132              		.loc 1 199 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		.loc 1 199 1 is_stmt 0 view .LVU17
 137 0000 08B5     		push	{r3, lr}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 3, -8
 141              		.cfi_offset 14, -4
 200:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 203:Core/Src/main.c ****   if (htim->Instance == TIM14) {
 142              		.loc 1 203 3 is_stmt 1 view .LVU18
ARM GAS  /tmp/ccnAYFku.s 			page 7


 143              		.loc 1 203 11 is_stmt 0 view .LVU19
 144 0002 0268     		ldr	r2, [r0]
 145              		.loc 1 203 6 view .LVU20
 146 0004 034B     		ldr	r3, .L15
 147 0006 9A42     		cmp	r2, r3
 148 0008 00D0     		beq	.L14
 149              	.LVL8:
 150              	.L11:
 204:Core/Src/main.c ****     HAL_IncTick();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 209:Core/Src/main.c **** }
 151              		.loc 1 209 1 view .LVU21
 152 000a 08BD     		pop	{r3, pc}
 153              	.LVL9:
 154              	.L14:
 204:Core/Src/main.c ****     HAL_IncTick();
 155              		.loc 1 204 5 is_stmt 1 view .LVU22
 156 000c FFF7FEFF 		bl	HAL_IncTick
 157              	.LVL10:
 158              		.loc 1 209 1 is_stmt 0 view .LVU23
 159 0010 FBE7     		b	.L11
 160              	.L16:
 161 0012 00BF     		.align	2
 162              	.L15:
 163 0014 00200040 		.word	1073750016
 164              		.cfi_endproc
 165              	.LFE323:
 167              		.section	.text.Error_Handler,"ax",%progbits
 168              		.align	1
 169              		.global	Error_Handler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	Error_Handler:
 176              	.LFB324:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** void Error_Handler(void)
 216:Core/Src/main.c **** {
 177              		.loc 1 216 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ Volatile: function does not return.
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 217:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 218:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 219:Core/Src/main.c ****   __disable_irq();
 183              		.loc 1 219 3 view .LVU25
 184              	.LBB5:
ARM GAS  /tmp/ccnAYFku.s 			page 8


 185              	.LBI5:
 186              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /tmp/ccnAYFku.s 			page 9


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccnAYFku.s 			page 10


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 187              		.loc 2 140 27 view .LVU26
 188              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 189              		.loc 2 142 3 view .LVU27
 190              		.syntax unified
 191              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 192 0000 72B6     		cpsid i
 193              	@ 0 "" 2
 194              		.thumb
 195              		.syntax unified
 196              	.L18:
 197              	.LBE6:
 198              	.LBE5:
 220:Core/Src/main.c ****   while (1)
 199              		.loc 1 220 3 discriminator 1 view .LVU28
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****   }
 200              		.loc 1 222 3 discriminator 1 view .LVU29
 220:Core/Src/main.c ****   while (1)
 201              		.loc 1 220 9 discriminator 1 view .LVU30
 202 0002 FEE7     		b	.L18
 203              		.cfi_endproc
 204              	.LFE324:
 206              		.section	.text.SystemClock_Config,"ax",%progbits
 207              		.align	1
 208              		.global	SystemClock_Config
 209              		.syntax unified
 210              		.thumb
ARM GAS  /tmp/ccnAYFku.s 			page 11


 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	SystemClock_Config:
 215              	.LFB322:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 216              		.loc 1 147 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 80
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 00B5     		push	{lr}
 221              	.LCFI4:
 222              		.cfi_def_cfa_offset 4
 223              		.cfi_offset 14, -4
 224 0002 95B0     		sub	sp, sp, #84
 225              	.LCFI5:
 226              		.cfi_def_cfa_offset 88
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 227              		.loc 1 148 3 view .LVU32
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 228              		.loc 1 148 22 is_stmt 0 view .LVU33
 229 0004 3022     		movs	r2, #48
 230 0006 0021     		movs	r1, #0
 231 0008 08A8     		add	r0, sp, #32
 232 000a FFF7FEFF 		bl	memset
 233              	.LVL11:
 149:Core/Src/main.c **** 
 234              		.loc 1 149 3 is_stmt 1 view .LVU34
 149:Core/Src/main.c **** 
 235              		.loc 1 149 22 is_stmt 0 view .LVU35
 236 000e 0023     		movs	r3, #0
 237 0010 0393     		str	r3, [sp, #12]
 238 0012 0493     		str	r3, [sp, #16]
 239 0014 0593     		str	r3, [sp, #20]
 240 0016 0693     		str	r3, [sp, #24]
 241 0018 0793     		str	r3, [sp, #28]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 242              		.loc 1 153 3 is_stmt 1 view .LVU36
 243              	.LBB7:
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 244              		.loc 1 153 3 view .LVU37
 245 001a 0193     		str	r3, [sp, #4]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 246              		.loc 1 153 3 view .LVU38
 247 001c 1F4A     		ldr	r2, .L25
 248 001e 116C     		ldr	r1, [r2, #64]
 249 0020 41F08051 		orr	r1, r1, #268435456
 250 0024 1164     		str	r1, [r2, #64]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 251              		.loc 1 153 3 view .LVU39
 252 0026 126C     		ldr	r2, [r2, #64]
 253 0028 02F08052 		and	r2, r2, #268435456
 254 002c 0192     		str	r2, [sp, #4]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 255              		.loc 1 153 3 view .LVU40
 256 002e 019A     		ldr	r2, [sp, #4]
 257              	.LBE7:
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccnAYFku.s 			page 12


 258              		.loc 1 153 3 view .LVU41
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 259              		.loc 1 154 3 view .LVU42
 260              	.LBB8:
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 261              		.loc 1 154 3 view .LVU43
 262 0030 0293     		str	r3, [sp, #8]
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 263              		.loc 1 154 3 view .LVU44
 264 0032 1B4A     		ldr	r2, .L25+4
 265 0034 1168     		ldr	r1, [r2]
 266 0036 41F48041 		orr	r1, r1, #16384
 267 003a 1160     		str	r1, [r2]
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 268              		.loc 1 154 3 view .LVU45
 269 003c 1268     		ldr	r2, [r2]
 270 003e 02F48042 		and	r2, r2, #16384
 271 0042 0292     		str	r2, [sp, #8]
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 272              		.loc 1 154 3 view .LVU46
 273 0044 029A     		ldr	r2, [sp, #8]
 274              	.LBE8:
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 275              		.loc 1 154 3 view .LVU47
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 276              		.loc 1 158 3 view .LVU48
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 277              		.loc 1 158 36 is_stmt 0 view .LVU49
 278 0046 0222     		movs	r2, #2
 279 0048 0892     		str	r2, [sp, #32]
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 280              		.loc 1 159 3 is_stmt 1 view .LVU50
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 281              		.loc 1 159 30 is_stmt 0 view .LVU51
 282 004a 0121     		movs	r1, #1
 283 004c 0B91     		str	r1, [sp, #44]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 284              		.loc 1 160 3 is_stmt 1 view .LVU52
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 285              		.loc 1 160 41 is_stmt 0 view .LVU53
 286 004e 1021     		movs	r1, #16
 287 0050 0C91     		str	r1, [sp, #48]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 288              		.loc 1 161 3 is_stmt 1 view .LVU54
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 289              		.loc 1 161 34 is_stmt 0 view .LVU55
 290 0052 0E92     		str	r2, [sp, #56]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 291              		.loc 1 162 3 is_stmt 1 view .LVU56
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 292              		.loc 1 162 35 is_stmt 0 view .LVU57
 293 0054 0F93     		str	r3, [sp, #60]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 294              		.loc 1 163 3 is_stmt 1 view .LVU58
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 295              		.loc 1 163 30 is_stmt 0 view .LVU59
 296 0056 0823     		movs	r3, #8
ARM GAS  /tmp/ccnAYFku.s 			page 13


 297 0058 1093     		str	r3, [sp, #64]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 298              		.loc 1 164 3 is_stmt 1 view .LVU60
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 299              		.loc 1 164 30 is_stmt 0 view .LVU61
 300 005a A823     		movs	r3, #168
 301 005c 1193     		str	r3, [sp, #68]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 302              		.loc 1 165 3 is_stmt 1 view .LVU62
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 303              		.loc 1 165 30 is_stmt 0 view .LVU63
 304 005e 1292     		str	r2, [sp, #72]
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 305              		.loc 1 166 3 is_stmt 1 view .LVU64
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 306              		.loc 1 166 30 is_stmt 0 view .LVU65
 307 0060 0423     		movs	r3, #4
 308 0062 1393     		str	r3, [sp, #76]
 167:Core/Src/main.c ****   {
 309              		.loc 1 167 3 is_stmt 1 view .LVU66
 167:Core/Src/main.c ****   {
 310              		.loc 1 167 7 is_stmt 0 view .LVU67
 311 0064 08A8     		add	r0, sp, #32
 312 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 313              	.LVL12:
 167:Core/Src/main.c ****   {
 314              		.loc 1 167 6 view .LVU68
 315 006a 98B9     		cbnz	r0, .L23
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 316              		.loc 1 173 3 is_stmt 1 view .LVU69
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 317              		.loc 1 173 31 is_stmt 0 view .LVU70
 318 006c 0F23     		movs	r3, #15
 319 006e 0393     		str	r3, [sp, #12]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 320              		.loc 1 175 3 is_stmt 1 view .LVU71
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 321              		.loc 1 175 34 is_stmt 0 view .LVU72
 322 0070 0223     		movs	r3, #2
 323 0072 0493     		str	r3, [sp, #16]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 324              		.loc 1 176 3 is_stmt 1 view .LVU73
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 325              		.loc 1 176 35 is_stmt 0 view .LVU74
 326 0074 0023     		movs	r3, #0
 327 0076 0593     		str	r3, [sp, #20]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 328              		.loc 1 177 3 is_stmt 1 view .LVU75
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 329              		.loc 1 177 36 is_stmt 0 view .LVU76
 330 0078 4FF4A053 		mov	r3, #5120
 331 007c 0693     		str	r3, [sp, #24]
 178:Core/Src/main.c **** 
 332              		.loc 1 178 3 is_stmt 1 view .LVU77
 178:Core/Src/main.c **** 
 333              		.loc 1 178 36 is_stmt 0 view .LVU78
 334 007e 4FF48053 		mov	r3, #4096
ARM GAS  /tmp/ccnAYFku.s 			page 14


 335 0082 0793     		str	r3, [sp, #28]
 180:Core/Src/main.c ****   {
 336              		.loc 1 180 3 is_stmt 1 view .LVU79
 180:Core/Src/main.c ****   {
 337              		.loc 1 180 7 is_stmt 0 view .LVU80
 338 0084 0521     		movs	r1, #5
 339 0086 03A8     		add	r0, sp, #12
 340 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 341              	.LVL13:
 180:Core/Src/main.c ****   {
 342              		.loc 1 180 6 view .LVU81
 343 008c 20B9     		cbnz	r0, .L24
 184:Core/Src/main.c **** 
 344              		.loc 1 184 1 view .LVU82
 345 008e 15B0     		add	sp, sp, #84
 346              	.LCFI6:
 347              		.cfi_remember_state
 348              		.cfi_def_cfa_offset 4
 349              		@ sp needed
 350 0090 5DF804FB 		ldr	pc, [sp], #4
 351              	.L23:
 352              	.LCFI7:
 353              		.cfi_restore_state
 169:Core/Src/main.c ****   }
 354              		.loc 1 169 5 is_stmt 1 view .LVU83
 355 0094 FFF7FEFF 		bl	Error_Handler
 356              	.LVL14:
 357              	.L24:
 182:Core/Src/main.c ****   }
 358              		.loc 1 182 5 view .LVU84
 359 0098 FFF7FEFF 		bl	Error_Handler
 360              	.LVL15:
 361              	.L26:
 362              		.align	2
 363              	.L25:
 364 009c 00380240 		.word	1073887232
 365 00a0 00700040 		.word	1073770496
 366              		.cfi_endproc
 367              	.LFE322:
 369              		.section	.text.main,"ax",%progbits
 370              		.align	1
 371              		.global	main
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	main:
 378              	.LFB321:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 379              		.loc 1 92 1 view -0
 380              		.cfi_startproc
 381              		@ Volatile: function does not return.
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI8:
 386              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccnAYFku.s 			page 15


 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 100:Core/Src/main.c **** 
 389              		.loc 1 100 3 view .LVU86
 390 0002 FFF7FEFF 		bl	HAL_Init
 391              	.LVL16:
 107:Core/Src/main.c **** 
 392              		.loc 1 107 3 view .LVU87
 393 0006 FFF7FEFF 		bl	SystemClock_Config
 394              	.LVL17:
 114:Core/Src/main.c ****   MX_DMA_Init();
 395              		.loc 1 114 3 view .LVU88
 396 000a FFF7FEFF 		bl	MX_GPIO_Init
 397              	.LVL18:
 115:Core/Src/main.c ****   MX_USART1_UART_Init();
 398              		.loc 1 115 3 view .LVU89
 399 000e FFF7FEFF 		bl	MX_DMA_Init
 400              	.LVL19:
 116:Core/Src/main.c ****   MX_FSMC_Init();
 401              		.loc 1 116 3 view .LVU90
 402 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 403              	.LVL20:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 404              		.loc 1 117 3 view .LVU91
 405 0016 FFF7FEFF 		bl	MX_FSMC_Init
 406              	.LVL21:
 125:Core/Src/main.c ****   /* Start scheduler */
 407              		.loc 1 125 3 view .LVU92
 408 001a FFF7FEFF 		bl	MX_FREERTOS_Init
 409              	.LVL22:
 127:Core/Src/main.c **** 
 410              		.loc 1 127 3 view .LVU93
 411 001e FFF7FEFF 		bl	osKernelStart
 412              	.LVL23:
 413              	.L28:
 132:Core/Src/main.c ****   {
 414              		.loc 1 132 3 discriminator 1 view .LVU94
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 415              		.loc 1 138 3 discriminator 1 view .LVU95
 132:Core/Src/main.c ****   {
 416              		.loc 1 132 9 discriminator 1 view .LVU96
 417 0022 FEE7     		b	.L28
 418              		.cfi_endproc
 419              	.LFE321:
 421              		.text
 422              	.Letext0:
 423              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 424              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 425              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 426              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 427              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 428              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 429              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 430              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 431              		.file 11 "Middlewares/lvgl/src/misc/lv_ll.h"
 432              		.file 12 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 433              		.file 13 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
ARM GAS  /tmp/ccnAYFku.s 			page 16


 434              		.file 14 "Middlewares/lvgl/src/core/lv_obj.h"
 435              		.file 15 "Middlewares/lvgl/src/core/lv_group.h"
 436              		.file 16 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 437              		.file 17 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 438              		.file 18 "Middlewares/lvgl/src/core/lv_obj_style.h"
 439              		.file 19 "Middlewares/lvgl/src/core/lv_obj_class.h"
 440              		.file 20 "Middlewares/lvgl/src/core/lv_event.h"
 441              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 442              		.file 22 "Core/Inc/gpio.h"
 443              		.file 23 "Core/Inc/dma.h"
 444              		.file 24 "Core/Inc/usart.h"
 445              		.file 25 "Core/Inc/fsmc.h"
 446              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 447              		.file 27 "<built-in>"
 448              		.file 28 "Middlewares/lvgl/src/widgets/lv_label.h"
 449              		.file 29 "Core/Inc/lvgl_app.h"
 450              		.file 30 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/ccnAYFku.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnAYFku.s:18     .text.LED_Blinks:0000000000000000 $t
     /tmp/ccnAYFku.s:26     .text.LED_Blinks:0000000000000000 LED_Blinks
     /tmp/ccnAYFku.s:55     .text.LED_Blinks:0000000000000018 $d
     /tmp/ccnAYFku.s:60     .rodata.LCD_COUNTER.str1.4:0000000000000000 $d
     /tmp/ccnAYFku.s:64     .text.LCD_COUNTER:0000000000000000 $t
     /tmp/ccnAYFku.s:71     .text.LCD_COUNTER:0000000000000000 LCD_COUNTER
     /tmp/ccnAYFku.s:116    .text.LCD_COUNTER:0000000000000024 $d
     /tmp/ccnAYFku.s:122    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccnAYFku.s:129    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccnAYFku.s:163    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccnAYFku.s:168    .text.Error_Handler:0000000000000000 $t
     /tmp/ccnAYFku.s:175    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccnAYFku.s:207    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnAYFku.s:214    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnAYFku.s:364    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccnAYFku.s:370    .text.main:0000000000000000 $t
     /tmp/ccnAYFku.s:377    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
osDelay
counter_label
sprintf
lv_label_set_text
label1
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_FSMC_Init
MX_FREERTOS_Init
osKernelStart
