ARM GAS  /tmp/ccr1xbKF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_ADC_ConvCpltCallback
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_ADC_ConvCpltCallback:
  27              	.LVL0:
  28              	.LFB427:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "adc.h"
  24:Core/Src/main.c **** #include "dma.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** #include "usart.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** #include "fsmc.h"
  29:Core/Src/main.c **** 
ARM GAS  /tmp/ccr1xbKF.s 			page 2


  30:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:Core/Src/main.c **** #include "lvgl.h"
  33:Core/Src/main.c **** #include "lvgl_app.h"
  34:Core/Src/main.c **** #include <stdio.h>
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** uint8_t adc1CpltFlg=0;
  56:Core/Src/main.c **** uint16_t wave[wave_num];
  57:Core/Src/main.c **** uint16_t AD1[6000];
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc){
  30              		.loc 1 64 55 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  65:Core/Src/main.c ****   if(hadc->Instance == ADC1){
  35              		.loc 1 65 3 view .LVU1
  36              		.loc 1 65 10 is_stmt 0 view .LVU2
  37 0000 0268     		ldr	r2, [r0]
  38              		.loc 1 65 5 view .LVU3
  39 0002 044B     		ldr	r3, .L4
  40 0004 9A42     		cmp	r2, r3
  41 0006 00D0     		beq	.L3
  42              	.L1:
  66:Core/Src/main.c ****     adc1CpltFlg =1;
  67:Core/Src/main.c ****   }
  68:Core/Src/main.c **** }
  43              		.loc 1 68 1 view .LVU4
  44 0008 7047     		bx	lr
  45              	.L3:
  66:Core/Src/main.c ****     adc1CpltFlg =1;
  46              		.loc 1 66 5 is_stmt 1 view .LVU5
ARM GAS  /tmp/ccr1xbKF.s 			page 3


  66:Core/Src/main.c ****     adc1CpltFlg =1;
  47              		.loc 1 66 17 is_stmt 0 view .LVU6
  48 000a 034B     		ldr	r3, .L4+4
  49 000c 0122     		movs	r2, #1
  50 000e 1A70     		strb	r2, [r3]
  51              		.loc 1 68 1 view .LVU7
  52 0010 FAE7     		b	.L1
  53              	.L5:
  54 0012 00BF     		.align	2
  55              	.L4:
  56 0014 00200140 		.word	1073815552
  57 0018 00000000 		.word	.LANCHOR0
  58              		.cfi_endproc
  59              	.LFE427:
  61              		.global	__aeabi_i2d
  62              		.global	__aeabi_dmul
  63              		.global	__aeabi_d2uiz
  64              		.section	.text.Wave_Data_Init,"ax",%progbits
  65              		.align	1
  66              		.global	Wave_Data_Init
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv4-sp-d16
  72              	Wave_Data_Init:
  73              	.LFB428:
  69:Core/Src/main.c **** void Wave_Data_Init(void){
  74              		.loc 1 69 26 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 70B5     		push	{r4, r5, r6, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 16
  81              		.cfi_offset 4, -16
  82              		.cfi_offset 5, -12
  83              		.cfi_offset 6, -8
  84              		.cfi_offset 14, -4
  70:Core/Src/main.c ****   //AD1_Max=0;
  71:Core/Src/main.c ****   //AD1_Min=4096;
  72:Core/Src/main.c ****   uint16_t Point_num=6000 ;
  85              		.loc 1 72 3 view .LVU9
  86              	.LVL1:
  73:Core/Src/main.c ****   for(int i = 0,k=0; i < Point_num;) {
  87              		.loc 1 73 3 view .LVU10
  88              	.LBB4:
  89              		.loc 1 73 7 view .LVU11
  90              		.loc 1 73 17 is_stmt 0 view .LVU12
  91 0002 0025     		movs	r5, #0
  92              		.loc 1 73 11 view .LVU13
  93 0004 2C46     		mov	r4, r5
  94              		.loc 1 73 3 view .LVU14
  95 0006 25E0     		b	.L7
  96              	.LVL2:
  97              	.L9:
  98              	.LBB5:
  74:Core/Src/main.c ****     wave[k]=0;
ARM GAS  /tmp/ccr1xbKF.s 			page 4


  75:Core/Src/main.c ****     for (int j = 0; j < Point_num/wave_num; ++j) {
  76:Core/Src/main.c ****       wave[k]+=AD1[i++];
  99              		.loc 1 76 7 is_stmt 1 discriminator 3 view .LVU15
 100              		.loc 1 76 19 is_stmt 0 discriminator 3 view .LVU16
 101 0008 194B     		ldr	r3, .L13+8
 102 000a 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 103              		.loc 1 76 14 discriminator 3 view .LVU17
 104 000e 1949     		ldr	r1, .L13+12
 105 0010 31F81500 		ldrh	r0, [r1, r5, lsl #1]
 106 0014 0344     		add	r3, r3, r0
 107 0016 21F81530 		strh	r3, [r1, r5, lsl #1]	@ movhi
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 108              		.loc 1 75 45 is_stmt 1 discriminator 3 view .LVU18
 109 001a 0132     		adds	r2, r2, #1
 110              	.LVL3:
 111              		.loc 1 76 21 is_stmt 0 discriminator 3 view .LVU19
 112 001c 0134     		adds	r4, r4, #1
 113              	.LVL4:
 114              	.L8:
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 115              		.loc 1 75 21 is_stmt 1 discriminator 1 view .LVU20
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 116              		.loc 1 75 5 is_stmt 0 discriminator 1 view .LVU21
 117 001e 0B2A     		cmp	r2, #11
 118 0020 F2DD     		ble	.L9
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 119              		.loc 1 75 5 discriminator 1 view .LVU22
 120              	.LBE5:
  77:Core/Src/main.c ****     }
  78:Core/Src/main.c ****     //printf("%ld\r\n",AD1[i]);
  79:Core/Src/main.c ****     wave[k]/=(Point_num/wave_num);
 121              		.loc 1 79 5 is_stmt 1 view .LVU23
 122              		.loc 1 79 12 is_stmt 0 view .LVU24
 123 0022 144E     		ldr	r6, .L13+12
 124 0024 36F81500 		ldrh	r0, [r6, r5, lsl #1]
 125 0028 134B     		ldr	r3, .L13+16
 126 002a A3FB0030 		umull	r3, r0, r3, r0
 127 002e C008     		lsrs	r0, r0, #3
 128 0030 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
  80:Core/Src/main.c ****     wave[k]=(wave[k]/4096.0)*3300;
 129              		.loc 1 80 5 is_stmt 1 view .LVU25
 130              		.loc 1 80 21 is_stmt 0 view .LVU26
 131 0034 FFF7FEFF 		bl	__aeabi_i2d
 132              	.LVL5:
 133              		.loc 1 80 21 view .LVU27
 134 0038 0022     		movs	r2, #0
 135 003a 104B     		ldr	r3, .L13+20
 136 003c FFF7FEFF 		bl	__aeabi_dmul
 137              	.LVL6:
 138              		.loc 1 80 29 view .LVU28
 139 0040 09A3     		adr	r3, .L13
 140 0042 D3E90023 		ldrd	r2, [r3]
 141 0046 FFF7FEFF 		bl	__aeabi_dmul
 142              	.LVL7:
 143              		.loc 1 80 12 view .LVU29
 144 004a FFF7FEFF 		bl	__aeabi_d2uiz
 145              	.LVL8:
ARM GAS  /tmp/ccr1xbKF.s 			page 5


 146 004e 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
  81:Core/Src/main.c ****     // if (wave[k]>3300)
  82:Core/Src/main.c ****     // {
  83:Core/Src/main.c ****     //   wave[k]=wave[k-1];
  84:Core/Src/main.c ****     // }
  85:Core/Src/main.c ****     
  86:Core/Src/main.c ****     //printf("%d\r\n",wave[k]);
  87:Core/Src/main.c ****     k++;
 147              		.loc 1 87 5 is_stmt 1 view .LVU30
 148              		.loc 1 87 6 is_stmt 0 view .LVU31
 149 0052 0135     		adds	r5, r5, #1
 150              	.LVL9:
 151              	.L7:
  73:Core/Src/main.c ****     wave[k]=0;
 152              		.loc 1 73 22 is_stmt 1 discriminator 1 view .LVU32
  73:Core/Src/main.c ****     wave[k]=0;
 153              		.loc 1 73 3 is_stmt 0 discriminator 1 view .LVU33
 154 0054 41F26F73 		movw	r3, #5999
 155 0058 9C42     		cmp	r4, r3
 156 005a 04DC     		bgt	.L12
  74:Core/Src/main.c ****     for (int j = 0; j < Point_num/wave_num; ++j) {
 157              		.loc 1 74 5 is_stmt 1 view .LVU34
  74:Core/Src/main.c ****     for (int j = 0; j < Point_num/wave_num; ++j) {
 158              		.loc 1 74 12 is_stmt 0 view .LVU35
 159 005c 0022     		movs	r2, #0
 160 005e 054B     		ldr	r3, .L13+12
 161 0060 23F81520 		strh	r2, [r3, r5, lsl #1]	@ movhi
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 162              		.loc 1 75 5 is_stmt 1 view .LVU36
 163              	.LBB6:
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 164              		.loc 1 75 10 view .LVU37
 165              	.LVL10:
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 166              		.loc 1 75 5 is_stmt 0 view .LVU38
 167 0064 DBE7     		b	.L8
 168              	.LVL11:
 169              	.L12:
  75:Core/Src/main.c ****       wave[k]+=AD1[i++];
 170              		.loc 1 75 5 view .LVU39
 171              	.LBE6:
 172              	.LBE4:
  88:Core/Src/main.c ****   }
  89:Core/Src/main.c ****   
  90:Core/Src/main.c **** }
 173              		.loc 1 90 1 view .LVU40
 174 0066 70BD     		pop	{r4, r5, r6, pc}
 175              	.LVL12:
 176              	.L14:
 177              		.loc 1 90 1 view .LVU41
 178              		.align	3
 179              	.L13:
 180 0068 00000000 		.word	0
 181 006c 00C8A940 		.word	1084868608
 182 0070 00000000 		.word	AD1
 183 0074 00000000 		.word	.LANCHOR1
 184 0078 ABAAAAAA 		.word	-1431655765
ARM GAS  /tmp/ccr1xbKF.s 			page 6


 185 007c 0000303F 		.word	1060110336
 186              		.cfi_endproc
 187              	.LFE428:
 189              		.section	.text.TIM2_Callback,"ax",%progbits
 190              		.align	1
 191              		.global	TIM2_Callback
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv4-sp-d16
 197              	TIM2_Callback:
 198              	.LFB429:
  91:Core/Src/main.c **** void TIM2_Callback(){
 199              		.loc 1 91 21 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
  92:Core/Src/main.c ****   //HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
  93:Core/Src/main.c ****   // extern lv_obj_t * wave_chart;
  94:Core/Src/main.c ****   // extern uint8_t waveStopFlg;
  95:Core/Src/main.c ****   // extern lv_chart_series_t * wave_ser;
  96:Core/Src/main.c ****   // if(adc1CpltFlg){
  97:Core/Src/main.c ****   //     //HAL_Delay(100);
  98:Core/Src/main.c ****   //     Wave_Data_Init();
  99:Core/Src/main.c ****   //     if(waveStopFlg==0){
 100:Core/Src/main.c ****   //       lv_chart_set_point_count(wave_chart, 640);
 101:Core/Src/main.c ****   //       lv_chart_set_ext_y_array(wave_chart, wave_ser, (lv_coord_t *)wave);
 102:Core/Src/main.c ****   //     }
 103:Core/Src/main.c ****   //     adc1CpltFlg=0;
 104:Core/Src/main.c ****   //     HAL_ADC_Start_DMA(&hadc1,(uint16_t *)AD1,6000);
 105:Core/Src/main.c ****   //   }
 106:Core/Src/main.c **** }
 204              		.loc 1 106 1 view .LVU43
 205 0000 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE429:
 209              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 210              		.align	1
 211              		.global	HAL_TIM_PeriodElapsedCallback
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv4-sp-d16
 217              	HAL_TIM_PeriodElapsedCallback:
 218              	.LVL13:
 219              	.LFB432:
 107:Core/Src/main.c **** /* USER CODE END PFP */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 110:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END 0 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief  The application entry point.
 116:Core/Src/main.c ****   * @retval int
ARM GAS  /tmp/ccr1xbKF.s 			page 7


 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** int main(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 121:Core/Src/main.c ****   
 122:Core/Src/main.c ****   /* USER CODE END 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Core/Src/main.c ****   HAL_Init();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END Init */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Configure the system clock */
 134:Core/Src/main.c ****   SystemClock_Config();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END SysInit */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Initialize all configured peripherals */
 141:Core/Src/main.c ****   MX_GPIO_Init();
 142:Core/Src/main.c ****   MX_DMA_Init();
 143:Core/Src/main.c ****   MX_USART1_UART_Init();
 144:Core/Src/main.c ****   MX_FSMC_Init();
 145:Core/Src/main.c ****   MX_ADC1_Init();
 146:Core/Src/main.c ****   MX_TIM2_Init();
 147:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* USER CODE END 2 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 152:Core/Src/main.c ****   MX_FREERTOS_Init();
 153:Core/Src/main.c ****   /* Start scheduler */
 154:Core/Src/main.c ****   osKernelStart();
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 157:Core/Src/main.c ****   /* Infinite loop */
 158:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 159:Core/Src/main.c ****   while (1)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     
 162:Core/Src/main.c ****     /* USER CODE END WHILE */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c ****   /* USER CODE END 3 */
 167:Core/Src/main.c **** }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /**
 170:Core/Src/main.c ****   * @brief System Clock Configuration
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  /tmp/ccr1xbKF.s 			page 8


 174:Core/Src/main.c **** {
 175:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 176:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 181:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 182:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 183:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 194:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 201:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 205:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /* USER CODE END 4 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****  /**
 218:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 219:Core/Src/main.c ****   * @note   This function is called  when TIM14 interrupt took place, inside
 220:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 221:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 222:Core/Src/main.c ****   * @param  htim : TIM handle
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 226:Core/Src/main.c **** {
 220              		.loc 1 226 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccr1xbKF.s 			page 9


 224              		.loc 1 226 1 is_stmt 0 view .LVU45
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI1:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 227:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 230:Core/Src/main.c ****   if (htim->Instance == TIM14) {
 230              		.loc 1 230 3 is_stmt 1 view .LVU46
 231              		.loc 1 230 11 is_stmt 0 view .LVU47
 232 0002 0268     		ldr	r2, [r0]
 233              		.loc 1 230 6 view .LVU48
 234 0004 034B     		ldr	r3, .L20
 235 0006 9A42     		cmp	r2, r3
 236 0008 00D0     		beq	.L19
 237              	.LVL14:
 238              	.L16:
 231:Core/Src/main.c ****     HAL_IncTick();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 234:Core/Src/main.c ****   if(htim->Instance == htim2.Instance)
 235:Core/Src/main.c ****     TIM2_Callback();
 236:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 237:Core/Src/main.c **** }
 239              		.loc 1 237 1 view .LVU49
 240 000a 08BD     		pop	{r3, pc}
 241              	.LVL15:
 242              	.L19:
 231:Core/Src/main.c ****     HAL_IncTick();
 243              		.loc 1 231 5 is_stmt 1 view .LVU50
 244 000c FFF7FEFF 		bl	HAL_IncTick
 245              	.LVL16:
 234:Core/Src/main.c ****     TIM2_Callback();
 246              		.loc 1 234 3 view .LVU51
 247              		.loc 1 237 1 is_stmt 0 view .LVU52
 248 0010 FBE7     		b	.L16
 249              	.L21:
 250 0012 00BF     		.align	2
 251              	.L20:
 252 0014 00200040 		.word	1073750016
 253              		.cfi_endproc
 254              	.LFE432:
 256              		.section	.text.Error_Handler,"ax",%progbits
 257              		.align	1
 258              		.global	Error_Handler
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 262              		.fpu fpv4-sp-d16
 264              	Error_Handler:
 265              	.LFB433:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /**
 240:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 241:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccr1xbKF.s 			page 10


 242:Core/Src/main.c ****   */
 243:Core/Src/main.c **** void Error_Handler(void)
 244:Core/Src/main.c **** {
 266              		.loc 1 244 1 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ Volatile: function does not return.
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 245:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 246:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 247:Core/Src/main.c ****   __disable_irq();
 272              		.loc 1 247 3 view .LVU54
 273              	.LBB7:
 274              	.LBI7:
 275              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  /tmp/ccr1xbKF.s 			page 11


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  /tmp/ccr1xbKF.s 			page 12


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 276              		.loc 2 140 27 view .LVU55
 277              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 278              		.loc 2 142 3 view .LVU56
 279              		.syntax unified
 280              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 281 0000 72B6     		cpsid i
 282              	@ 0 "" 2
 283              		.thumb
 284              		.syntax unified
 285              	.L23:
 286              	.LBE8:
 287              	.LBE7:
 248:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccr1xbKF.s 			page 13


 288              		.loc 1 248 3 discriminator 1 view .LVU57
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****   }
 289              		.loc 1 250 3 discriminator 1 view .LVU58
 248:Core/Src/main.c ****   while (1)
 290              		.loc 1 248 9 discriminator 1 view .LVU59
 291 0002 FEE7     		b	.L23
 292              		.cfi_endproc
 293              	.LFE433:
 295              		.section	.text.SystemClock_Config,"ax",%progbits
 296              		.align	1
 297              		.global	SystemClock_Config
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv4-sp-d16
 303              	SystemClock_Config:
 304              	.LFB431:
 174:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 305              		.loc 1 174 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 80
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 00B5     		push	{lr}
 310              	.LCFI2:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 14, -4
 313 0002 95B0     		sub	sp, sp, #84
 314              	.LCFI3:
 315              		.cfi_def_cfa_offset 88
 175:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 316              		.loc 1 175 3 view .LVU61
 175:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 317              		.loc 1 175 22 is_stmt 0 view .LVU62
 318 0004 3022     		movs	r2, #48
 319 0006 0021     		movs	r1, #0
 320 0008 08A8     		add	r0, sp, #32
 321 000a FFF7FEFF 		bl	memset
 322              	.LVL17:
 176:Core/Src/main.c **** 
 323              		.loc 1 176 3 is_stmt 1 view .LVU63
 176:Core/Src/main.c **** 
 324              		.loc 1 176 22 is_stmt 0 view .LVU64
 325 000e 0023     		movs	r3, #0
 326 0010 0393     		str	r3, [sp, #12]
 327 0012 0493     		str	r3, [sp, #16]
 328 0014 0593     		str	r3, [sp, #20]
 329 0016 0693     		str	r3, [sp, #24]
 330 0018 0793     		str	r3, [sp, #28]
 180:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 331              		.loc 1 180 3 is_stmt 1 view .LVU65
 332              	.LBB9:
 180:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 333              		.loc 1 180 3 view .LVU66
 334 001a 0193     		str	r3, [sp, #4]
 180:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 335              		.loc 1 180 3 view .LVU67
ARM GAS  /tmp/ccr1xbKF.s 			page 14


 336 001c 1F4A     		ldr	r2, .L30
 337 001e 116C     		ldr	r1, [r2, #64]
 338 0020 41F08051 		orr	r1, r1, #268435456
 339 0024 1164     		str	r1, [r2, #64]
 180:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 340              		.loc 1 180 3 view .LVU68
 341 0026 126C     		ldr	r2, [r2, #64]
 342 0028 02F08052 		and	r2, r2, #268435456
 343 002c 0192     		str	r2, [sp, #4]
 180:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 344              		.loc 1 180 3 view .LVU69
 345 002e 019A     		ldr	r2, [sp, #4]
 346              	.LBE9:
 180:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 347              		.loc 1 180 3 view .LVU70
 181:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 348              		.loc 1 181 3 view .LVU71
 349              	.LBB10:
 181:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 350              		.loc 1 181 3 view .LVU72
 351 0030 0293     		str	r3, [sp, #8]
 181:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 352              		.loc 1 181 3 view .LVU73
 353 0032 1B4A     		ldr	r2, .L30+4
 354 0034 1168     		ldr	r1, [r2]
 355 0036 41F48041 		orr	r1, r1, #16384
 356 003a 1160     		str	r1, [r2]
 181:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 357              		.loc 1 181 3 view .LVU74
 358 003c 1268     		ldr	r2, [r2]
 359 003e 02F48042 		and	r2, r2, #16384
 360 0042 0292     		str	r2, [sp, #8]
 181:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 361              		.loc 1 181 3 view .LVU75
 362 0044 029A     		ldr	r2, [sp, #8]
 363              	.LBE10:
 181:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 364              		.loc 1 181 3 view .LVU76
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 365              		.loc 1 185 3 view .LVU77
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 366              		.loc 1 185 36 is_stmt 0 view .LVU78
 367 0046 0222     		movs	r2, #2
 368 0048 0892     		str	r2, [sp, #32]
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 369              		.loc 1 186 3 is_stmt 1 view .LVU79
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 370              		.loc 1 186 30 is_stmt 0 view .LVU80
 371 004a 0121     		movs	r1, #1
 372 004c 0B91     		str	r1, [sp, #44]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 373              		.loc 1 187 3 is_stmt 1 view .LVU81
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 374              		.loc 1 187 41 is_stmt 0 view .LVU82
 375 004e 1021     		movs	r1, #16
 376 0050 0C91     		str	r1, [sp, #48]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  /tmp/ccr1xbKF.s 			page 15


 377              		.loc 1 188 3 is_stmt 1 view .LVU83
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 378              		.loc 1 188 34 is_stmt 0 view .LVU84
 379 0052 0E92     		str	r2, [sp, #56]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 380              		.loc 1 189 3 is_stmt 1 view .LVU85
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 381              		.loc 1 189 35 is_stmt 0 view .LVU86
 382 0054 0F93     		str	r3, [sp, #60]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 383              		.loc 1 190 3 is_stmt 1 view .LVU87
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 384              		.loc 1 190 30 is_stmt 0 view .LVU88
 385 0056 0823     		movs	r3, #8
 386 0058 1093     		str	r3, [sp, #64]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 387              		.loc 1 191 3 is_stmt 1 view .LVU89
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 388              		.loc 1 191 30 is_stmt 0 view .LVU90
 389 005a A823     		movs	r3, #168
 390 005c 1193     		str	r3, [sp, #68]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 391              		.loc 1 192 3 is_stmt 1 view .LVU91
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 392              		.loc 1 192 30 is_stmt 0 view .LVU92
 393 005e 1292     		str	r2, [sp, #72]
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 394              		.loc 1 193 3 is_stmt 1 view .LVU93
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 395              		.loc 1 193 30 is_stmt 0 view .LVU94
 396 0060 0423     		movs	r3, #4
 397 0062 1393     		str	r3, [sp, #76]
 194:Core/Src/main.c ****   {
 398              		.loc 1 194 3 is_stmt 1 view .LVU95
 194:Core/Src/main.c ****   {
 399              		.loc 1 194 7 is_stmt 0 view .LVU96
 400 0064 08A8     		add	r0, sp, #32
 401 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 402              	.LVL18:
 194:Core/Src/main.c ****   {
 403              		.loc 1 194 6 view .LVU97
 404 006a 98B9     		cbnz	r0, .L28
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 405              		.loc 1 200 3 is_stmt 1 view .LVU98
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 406              		.loc 1 200 31 is_stmt 0 view .LVU99
 407 006c 0F23     		movs	r3, #15
 408 006e 0393     		str	r3, [sp, #12]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 409              		.loc 1 202 3 is_stmt 1 view .LVU100
 202:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 410              		.loc 1 202 34 is_stmt 0 view .LVU101
 411 0070 0223     		movs	r3, #2
 412 0072 0493     		str	r3, [sp, #16]
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 413              		.loc 1 203 3 is_stmt 1 view .LVU102
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
ARM GAS  /tmp/ccr1xbKF.s 			page 16


 414              		.loc 1 203 35 is_stmt 0 view .LVU103
 415 0074 0023     		movs	r3, #0
 416 0076 0593     		str	r3, [sp, #20]
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 417              		.loc 1 204 3 is_stmt 1 view .LVU104
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 418              		.loc 1 204 36 is_stmt 0 view .LVU105
 419 0078 4FF4A053 		mov	r3, #5120
 420 007c 0693     		str	r3, [sp, #24]
 205:Core/Src/main.c **** 
 421              		.loc 1 205 3 is_stmt 1 view .LVU106
 205:Core/Src/main.c **** 
 422              		.loc 1 205 36 is_stmt 0 view .LVU107
 423 007e 4FF48053 		mov	r3, #4096
 424 0082 0793     		str	r3, [sp, #28]
 207:Core/Src/main.c ****   {
 425              		.loc 1 207 3 is_stmt 1 view .LVU108
 207:Core/Src/main.c ****   {
 426              		.loc 1 207 7 is_stmt 0 view .LVU109
 427 0084 0521     		movs	r1, #5
 428 0086 03A8     		add	r0, sp, #12
 429 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 430              	.LVL19:
 207:Core/Src/main.c ****   {
 431              		.loc 1 207 6 view .LVU110
 432 008c 20B9     		cbnz	r0, .L29
 211:Core/Src/main.c **** 
 433              		.loc 1 211 1 view .LVU111
 434 008e 15B0     		add	sp, sp, #84
 435              	.LCFI4:
 436              		.cfi_remember_state
 437              		.cfi_def_cfa_offset 4
 438              		@ sp needed
 439 0090 5DF804FB 		ldr	pc, [sp], #4
 440              	.L28:
 441              	.LCFI5:
 442              		.cfi_restore_state
 196:Core/Src/main.c ****   }
 443              		.loc 1 196 5 is_stmt 1 view .LVU112
 444 0094 FFF7FEFF 		bl	Error_Handler
 445              	.LVL20:
 446              	.L29:
 209:Core/Src/main.c ****   }
 447              		.loc 1 209 5 view .LVU113
 448 0098 FFF7FEFF 		bl	Error_Handler
 449              	.LVL21:
 450              	.L31:
 451              		.align	2
 452              	.L30:
 453 009c 00380240 		.word	1073887232
 454 00a0 00700040 		.word	1073770496
 455              		.cfi_endproc
 456              	.LFE431:
 458              		.section	.text.main,"ax",%progbits
 459              		.align	1
 460              		.global	main
 461              		.syntax unified
ARM GAS  /tmp/ccr1xbKF.s 			page 17


 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv4-sp-d16
 466              	main:
 467              	.LFB430:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 468              		.loc 1 119 1 view -0
 469              		.cfi_startproc
 470              		@ Volatile: function does not return.
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473 0000 08B5     		push	{r3, lr}
 474              	.LCFI6:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 3, -8
 477              		.cfi_offset 14, -4
 127:Core/Src/main.c **** 
 478              		.loc 1 127 3 view .LVU115
 479 0002 FFF7FEFF 		bl	HAL_Init
 480              	.LVL22:
 134:Core/Src/main.c **** 
 481              		.loc 1 134 3 view .LVU116
 482 0006 FFF7FEFF 		bl	SystemClock_Config
 483              	.LVL23:
 141:Core/Src/main.c ****   MX_DMA_Init();
 484              		.loc 1 141 3 view .LVU117
 485 000a FFF7FEFF 		bl	MX_GPIO_Init
 486              	.LVL24:
 142:Core/Src/main.c ****   MX_USART1_UART_Init();
 487              		.loc 1 142 3 view .LVU118
 488 000e FFF7FEFF 		bl	MX_DMA_Init
 489              	.LVL25:
 143:Core/Src/main.c ****   MX_FSMC_Init();
 490              		.loc 1 143 3 view .LVU119
 491 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 492              	.LVL26:
 144:Core/Src/main.c ****   MX_ADC1_Init();
 493              		.loc 1 144 3 view .LVU120
 494 0016 FFF7FEFF 		bl	MX_FSMC_Init
 495              	.LVL27:
 145:Core/Src/main.c ****   MX_TIM2_Init();
 496              		.loc 1 145 3 view .LVU121
 497 001a FFF7FEFF 		bl	MX_ADC1_Init
 498              	.LVL28:
 146:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 499              		.loc 1 146 3 view .LVU122
 500 001e FFF7FEFF 		bl	MX_TIM2_Init
 501              	.LVL29:
 152:Core/Src/main.c ****   /* Start scheduler */
 502              		.loc 1 152 3 view .LVU123
 503 0022 FFF7FEFF 		bl	MX_FREERTOS_Init
 504              	.LVL30:
 154:Core/Src/main.c **** 
 505              		.loc 1 154 3 view .LVU124
 506 0026 FFF7FEFF 		bl	osKernelStart
 507              	.LVL31:
 508              	.L33:
ARM GAS  /tmp/ccr1xbKF.s 			page 18


 159:Core/Src/main.c ****   {
 509              		.loc 1 159 3 discriminator 1 view .LVU125
 165:Core/Src/main.c ****   /* USER CODE END 3 */
 510              		.loc 1 165 3 discriminator 1 view .LVU126
 159:Core/Src/main.c ****   {
 511              		.loc 1 159 9 discriminator 1 view .LVU127
 512 002a FEE7     		b	.L33
 513              		.cfi_endproc
 514              	.LFE430:
 516              		.global	AD1
 517              		.global	wave
 518              		.global	adc1CpltFlg
 519              		.section	.bss.AD1,"aw",%nobits
 520              		.align	2
 523              	AD1:
 524 0000 00000000 		.space	12000
 524      00000000 
 524      00000000 
 524      00000000 
 524      00000000 
 525              		.section	.bss.adc1CpltFlg,"aw",%nobits
 526              		.set	.LANCHOR0,. + 0
 529              	adc1CpltFlg:
 530 0000 00       		.space	1
 531              		.section	.bss.wave,"aw",%nobits
 532              		.align	2
 533              		.set	.LANCHOR1,. + 0
 536              	wave:
 537 0000 00000000 		.space	1000
 537      00000000 
 537      00000000 
 537      00000000 
 537      00000000 
 538              		.text
 539              	.Letext0:
 540              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 541              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 542              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 543              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 544              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 545              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 546              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 547              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 548              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 549              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 550              		.file 13 "Middlewares/lvgl/src/core/lv_obj.h"
 551              		.file 14 "Middlewares/lvgl/src/widgets/lv_bar.h"
 552              		.file 15 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 553              		.file 16 "Core/Inc/tim.h"
 554              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 555              		.file 18 "Core/Inc/gpio.h"
 556              		.file 19 "Core/Inc/dma.h"
 557              		.file 20 "Core/Inc/usart.h"
 558              		.file 21 "Core/Inc/fsmc.h"
 559              		.file 22 "Core/Inc/adc.h"
 560              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 561              		.file 24 "<built-in>"
ARM GAS  /tmp/ccr1xbKF.s 			page 19


ARM GAS  /tmp/ccr1xbKF.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccr1xbKF.s:18     .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccr1xbKF.s:26     .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccr1xbKF.s:56     .text.HAL_ADC_ConvCpltCallback:0000000000000014 $d
     /tmp/ccr1xbKF.s:65     .text.Wave_Data_Init:0000000000000000 $t
     /tmp/ccr1xbKF.s:72     .text.Wave_Data_Init:0000000000000000 Wave_Data_Init
     /tmp/ccr1xbKF.s:180    .text.Wave_Data_Init:0000000000000068 $d
     /tmp/ccr1xbKF.s:523    .bss.AD1:0000000000000000 AD1
     /tmp/ccr1xbKF.s:190    .text.TIM2_Callback:0000000000000000 $t
     /tmp/ccr1xbKF.s:197    .text.TIM2_Callback:0000000000000000 TIM2_Callback
     /tmp/ccr1xbKF.s:210    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccr1xbKF.s:217    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccr1xbKF.s:252    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccr1xbKF.s:257    .text.Error_Handler:0000000000000000 $t
     /tmp/ccr1xbKF.s:264    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccr1xbKF.s:296    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccr1xbKF.s:303    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccr1xbKF.s:453    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccr1xbKF.s:459    .text.main:0000000000000000 $t
     /tmp/ccr1xbKF.s:466    .text.main:0000000000000000 main
     /tmp/ccr1xbKF.s:536    .bss.wave:0000000000000000 wave
     /tmp/ccr1xbKF.s:529    .bss.adc1CpltFlg:0000000000000000 adc1CpltFlg
     /tmp/ccr1xbKF.s:520    .bss.AD1:0000000000000000 $d
     /tmp/ccr1xbKF.s:530    .bss.adc1CpltFlg:0000000000000000 $d
     /tmp/ccr1xbKF.s:532    .bss.wave:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_FSMC_Init
MX_ADC1_Init
MX_TIM2_Init
MX_FREERTOS_Init
osKernelStart
