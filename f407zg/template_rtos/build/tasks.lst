ARM GAS  /tmp/cc0mjIFM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	prvTaskIsTaskSuspended:
  26              	.LVL0:
  27              	.LFB15:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
ARM GAS  /tmp/cc0mjIFM.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
ARM GAS  /tmp/cc0mjIFM.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
ARM GAS  /tmp/cc0mjIFM.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
ARM GAS  /tmp/cc0mjIFM.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/cc0mjIFM.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
ARM GAS  /tmp/cc0mjIFM.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/cc0mjIFM.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/cc0mjIFM.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  /tmp/cc0mjIFM.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/cc0mjIFM.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  /tmp/cc0mjIFM.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc0mjIFM.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/cc0mjIFM.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  /tmp/cc0mjIFM.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
ARM GAS  /tmp/cc0mjIFM.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
ARM GAS  /tmp/cc0mjIFM.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
ARM GAS  /tmp/cc0mjIFM.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
ARM GAS  /tmp/cc0mjIFM.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc0mjIFM.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  /tmp/cc0mjIFM.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
ARM GAS  /tmp/cc0mjIFM.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
ARM GAS  /tmp/cc0mjIFM.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
ARM GAS  /tmp/cc0mjIFM.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc0mjIFM.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
ARM GAS  /tmp/cc0mjIFM.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  /tmp/cc0mjIFM.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc0mjIFM.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
ARM GAS  /tmp/cc0mjIFM.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc0mjIFM.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc0mjIFM.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc0mjIFM.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  29              		.loc 1 1806 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1807 2 view .LVU1
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1808 2 view .LVU2
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  36              		.loc 1 1814 3 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
  38              		.loc 1 1814 24 discriminator 2 view .LVU4
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1817 3 discriminator 2 view .LVU5
  40              		.loc 1 1817 7 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1817 5 discriminator 2 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1807 13 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1807 13 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1814 3 is_stmt 1 view .LVU10
  54              	.LBB110:
  55              	.LBI110:
  56              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
ARM GAS  /tmp/cc0mjIFM.s 			page 34


   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
ARM GAS  /tmp/cc0mjIFM.s 			page 35


  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc0mjIFM.s 			page 36


 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
ARM GAS  /tmp/cc0mjIFM.s 			page 37


 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 191 30 view .LVU11
  58              	.LBB111:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  59              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  60              		.loc 2 195 2 view .LVU13
  61              		.syntax unified
  62              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              	.LVL3:
  70              		.thumb
  71              		.syntax unified
  72              	.L3:
  73              		.loc 2 195 2 is_stmt 0 view .LVU14
  74              	.LBE111:
  75              	.LBE110:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  76              		.loc 1 1814 3 is_stmt 1 discriminator 1 view .LVU15
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  77              		.loc 1 1814 3 discriminator 1 view .LVU16
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78              		.loc 1 1814 3 discriminator 1 view .LVU17
  79 001e FEE7     		b	.L3
  80              	.L9:
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  81              		.loc 1 1820 4 view .LVU18
  82              		.loc 1 1820 8 is_stmt 0 view .LVU19
  83 0020 836A     		ldr	r3, [r0, #40]
  84              		.loc 1 1820 6 view .LVU20
  85 0022 064A     		ldr	r2, .L10+4
  86 0024 9342     		cmp	r3, r2
  87 0026 02D0     		beq	.L6
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
ARM GAS  /tmp/cc0mjIFM.s 			page 38


1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  88              		.loc 1 1824 5 is_stmt 1 view .LVU21
  89              		.loc 1 1824 7 is_stmt 0 view .LVU22
  90 0028 1BB1     		cbz	r3, .L7
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  91              		.loc 1 1807 13 view .LVU23
  92 002a 0020     		movs	r0, #0
  93              	.LVL4:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  94              		.loc 1 1807 13 view .LVU24
  95 002c 7047     		bx	lr
  96              	.LVL5:
  97              	.L6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  98              		.loc 1 1807 13 view .LVU25
  99 002e 0020     		movs	r0, #0
 100              	.LVL6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 101              		.loc 1 1807 13 view .LVU26
 102 0030 7047     		bx	lr
 103              	.LVL7:
 104              	.L7:
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 105              		.loc 1 1826 14 view .LVU27
 106 0032 0120     		movs	r0, #1
 107              	.LVL8:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 108              		.loc 1 1840 28 is_stmt 1 view .LVU28
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 109              		.loc 1 1843 3 view .LVU29
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 110              		.loc 1 1844 2 is_stmt 0 view .LVU30
 111 0034 7047     		bx	lr
 112              	.L11:
 113 0036 00BF     		.align	2
 114              	.L10:
 115 0038 00000000 		.word	.LANCHOR0
 116 003c 00000000 		.word	.LANCHOR1
 117              		.cfi_endproc
 118              	.LFE15:
ARM GAS  /tmp/cc0mjIFM.s 			page 39


 120              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 121              		.align	1
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv4-sp-d16
 127              	prvResetNextTaskUnblockTime:
 128              	.LFB41:
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/cc0mjIFM.s 			page 40


1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 41


1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc0mjIFM.s 			page 42


2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
ARM GAS  /tmp/cc0mjIFM.s 			page 43


2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
ARM GAS  /tmp/cc0mjIFM.s 			page 44


2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
ARM GAS  /tmp/cc0mjIFM.s 			page 45


2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc0mjIFM.s 			page 46


2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc0mjIFM.s 			page 47


2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 48


2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
ARM GAS  /tmp/cc0mjIFM.s 			page 49


2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 50


2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 51


2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
ARM GAS  /tmp/cc0mjIFM.s 			page 52


2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
ARM GAS  /tmp/cc0mjIFM.s 			page 53


2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc0mjIFM.s 			page 54


2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
ARM GAS  /tmp/cc0mjIFM.s 			page 55


2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/cc0mjIFM.s 			page 56


2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
ARM GAS  /tmp/cc0mjIFM.s 			page 57


2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  /tmp/cc0mjIFM.s 			page 58


2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
ARM GAS  /tmp/cc0mjIFM.s 			page 59


2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
ARM GAS  /tmp/cc0mjIFM.s 			page 60


3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
ARM GAS  /tmp/cc0mjIFM.s 			page 61


3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
ARM GAS  /tmp/cc0mjIFM.s 			page 62


3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc0mjIFM.s 			page 63


3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc0mjIFM.s 			page 64


3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
ARM GAS  /tmp/cc0mjIFM.s 			page 65


3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
ARM GAS  /tmp/cc0mjIFM.s 			page 66


3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
ARM GAS  /tmp/cc0mjIFM.s 			page 67


3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
ARM GAS  /tmp/cc0mjIFM.s 			page 68


3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc0mjIFM.s 			page 69


3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 70


3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 71


3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc0mjIFM.s 			page 72


3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 73


3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
ARM GAS  /tmp/cc0mjIFM.s 			page 74


3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc0mjIFM.s 			page 75


3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 129              		.loc 1 3944 1 is_stmt 1 view -0
ARM GAS  /tmp/cc0mjIFM.s 			page 76


 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 134              		.loc 1 3945 1 view .LVU32
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 135              		.loc 1 3947 2 view .LVU33
 136              		.loc 1 3947 6 is_stmt 0 view .LVU34
 137 0000 084B     		ldr	r3, .L15
 138 0002 1B68     		ldr	r3, [r3]
 139 0004 1B68     		ldr	r3, [r3]
 140              		.loc 1 3947 4 view .LVU35
 141 0006 23B9     		cbnz	r3, .L13
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 142              		.loc 1 3953 3 is_stmt 1 view .LVU36
 143              		.loc 1 3953 24 is_stmt 0 view .LVU37
 144 0008 074B     		ldr	r3, .L15+4
 145 000a 4FF0FF32 		mov	r2, #-1
 146 000e 1A60     		str	r2, [r3]
 147 0010 7047     		bx	lr
 148              	.L13:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 149              		.loc 1 3961 3 is_stmt 1 view .LVU38
 150              		.loc 1 3961 15 is_stmt 0 view .LVU39
 151 0012 044B     		ldr	r3, .L15
 152 0014 1B68     		ldr	r3, [r3]
 153 0016 DB68     		ldr	r3, [r3, #12]
 154              		.loc 1 3961 13 view .LVU40
 155 0018 DB68     		ldr	r3, [r3, #12]
 156              	.LVL9:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 157              		.loc 1 3962 3 is_stmt 1 view .LVU41
 158              		.loc 1 3962 26 is_stmt 0 view .LVU42
 159 001a 5A68     		ldr	r2, [r3, #4]
 160              		.loc 1 3962 24 view .LVU43
 161 001c 024B     		ldr	r3, .L15+4
 162              	.LVL10:
 163              		.loc 1 3962 24 view .LVU44
 164 001e 1A60     		str	r2, [r3]
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 165              		.loc 1 3964 1 view .LVU45
 166 0020 7047     		bx	lr
ARM GAS  /tmp/cc0mjIFM.s 			page 77


 167              	.L16:
 168 0022 00BF     		.align	2
 169              	.L15:
 170 0024 00000000 		.word	.LANCHOR2
 171 0028 00000000 		.word	.LANCHOR3
 172              		.cfi_endproc
 173              	.LFE41:
 175              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	prvInitialiseNewTask:
 183              	.LVL11:
 184              	.LFB7:
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 185              		.loc 1 832 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 16, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 189              		.loc 1 832 1 is_stmt 0 view .LVU47
 190 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 191              	.LCFI0:
 192              		.cfi_def_cfa_offset 32
 193              		.cfi_offset 4, -32
 194              		.cfi_offset 5, -28
 195              		.cfi_offset 6, -24
 196              		.cfi_offset 7, -20
 197              		.cfi_offset 8, -16
 198              		.cfi_offset 9, -12
 199              		.cfi_offset 10, -8
 200              		.cfi_offset 14, -4
 201 0004 0746     		mov	r7, r0
 202 0006 9846     		mov	r8, r3
 203 0008 089D     		ldr	r5, [sp, #32]
 204 000a DDF82490 		ldr	r9, [sp, #36]
 205 000e 0A9C     		ldr	r4, [sp, #40]
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 206              		.loc 1 833 1 is_stmt 1 view .LVU48
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 207              		.loc 1 834 1 view .LVU49
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 208              		.loc 1 864 3 view .LVU50
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 209              		.loc 1 864 29 is_stmt 0 view .LVU51
 210 0010 266B     		ldr	r6, [r4, #48]
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 211              		.loc 1 864 38 view .LVU52
 212 0012 02F18042 		add	r2, r2, #1073741824
 213              	.LVL12:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 214              		.loc 1 864 38 view .LVU53
 215 0016 013A     		subs	r2, r2, #1
 216              	.LVL13:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
ARM GAS  /tmp/cc0mjIFM.s 			page 78


 217              		.loc 1 864 16 view .LVU54
 218 0018 06EB8206 		add	r6, r6, r2, lsl #2
 219              	.LVL14:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220              		.loc 1 865 3 is_stmt 1 view .LVU55
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 221              		.loc 1 865 81 is_stmt 0 view .LVU56
 222 001c 26F00706 		bic	r6, r6, #7
 223              	.LVL15:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 224              		.loc 1 868 3 is_stmt 1 view .LVU57
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225              		.loc 1 868 124 view .LVU58
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 226              		.loc 1 892 2 view .LVU59
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 227              		.loc 1 892 4 is_stmt 0 view .LVU60
 228 0020 0029     		cmp	r1, #0
 229 0022 3AD0     		beq	.L29
 230 0024 8E46     		mov	lr, r1
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 231              		.loc 1 894 10 view .LVU61
 232 0026 4FF0000C 		mov	ip, #0
 233              	.LVL16:
 234              	.L18:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 235              		.loc 1 894 31 is_stmt 1 discriminator 1 view .LVU62
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 236              		.loc 1 894 3 is_stmt 0 discriminator 1 view .LVU63
 237 002a BCF10F0F 		cmp	ip, #15
 238 002e 0BD8     		bhi	.L20
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 239              		.loc 1 896 4 is_stmt 1 view .LVU64
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 240              		.loc 1 896 38 is_stmt 0 view .LVU65
 241 0030 1EF80C20 		ldrb	r2, [lr, ip]	@ zero_extendqisi2
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242              		.loc 1 896 30 view .LVU66
 243 0034 04EB0C03 		add	r3, r4, ip
 244 0038 83F83420 		strb	r2, [r3, #52]
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 245              		.loc 1 901 4 is_stmt 1 view .LVU67
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 246              		.loc 1 901 14 is_stmt 0 view .LVU68
 247 003c 1EF80C30 		ldrb	r3, [lr, ip]	@ zero_extendqisi2
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 248              		.loc 1 901 6 view .LVU69
 249 0040 13B1     		cbz	r3, .L20
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 250              		.loc 1 907 29 is_stmt 1 discriminator 2 view .LVU70
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 251              		.loc 1 894 76 discriminator 2 view .LVU71
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 252              		.loc 1 894 77 is_stmt 0 discriminator 2 view .LVU72
 253 0042 0CF1010C 		add	ip, ip, #1
 254              	.LVL17:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc0mjIFM.s 			page 79


 255              		.loc 1 894 77 discriminator 2 view .LVU73
 256 0046 F0E7     		b	.L18
 257              	.L20:
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 258              		.loc 1 913 3 is_stmt 1 view .LVU74
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 259              		.loc 1 913 55 is_stmt 0 view .LVU75
 260 0048 0023     		movs	r3, #0
 261 004a 84F84330 		strb	r3, [r4, #67]
 262              	.LVL18:
 263              	.L22:
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 264              		.loc 1 924 2 is_stmt 1 view .LVU76
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 265              		.loc 1 924 4 is_stmt 0 view .LVU77
 266 004e 062D     		cmp	r5, #6
 267 0050 00D9     		bls	.L23
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 268              		.loc 1 926 14 view .LVU78
 269 0052 0625     		movs	r5, #6
 270              	.L23:
 271              	.LVL19:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 272              		.loc 1 930 27 is_stmt 1 view .LVU79
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 273              		.loc 1 933 2 view .LVU80
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 274              		.loc 1 933 23 is_stmt 0 view .LVU81
 275 0054 E562     		str	r5, [r4, #44]
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 276              		.loc 1 936 3 is_stmt 1 view .LVU82
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 277              		.loc 1 936 28 is_stmt 0 view .LVU83
 278 0056 6564     		str	r5, [r4, #68]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 279              		.loc 1 937 3 is_stmt 1 view .LVU84
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 280              		.loc 1 937 27 is_stmt 0 view .LVU85
 281 0058 4FF0000A 		mov	r10, #0
 282 005c C4F848A0 		str	r10, [r4, #72]
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 283              		.loc 1 941 2 is_stmt 1 view .LVU86
 284 0060 201D     		adds	r0, r4, #4
 285              	.LVL20:
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 286              		.loc 1 941 2 is_stmt 0 view .LVU87
 287 0062 FFF7FEFF 		bl	vListInitialiseItem
 288              	.LVL21:
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 289              		.loc 1 942 2 is_stmt 1 view .LVU88
 290 0066 04F11800 		add	r0, r4, #24
 291 006a FFF7FEFF 		bl	vListInitialiseItem
 292              	.LVL22:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 293              		.loc 1 946 2 view .LVU89
 294 006e 2461     		str	r4, [r4, #16]
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
ARM GAS  /tmp/cc0mjIFM.s 			page 80


 295              		.loc 1 949 2 view .LVU90
 296 0070 C5F10705 		rsb	r5, r5, #7
 297              	.LVL23:
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 298              		.loc 1 949 2 is_stmt 0 view .LVU91
 299 0074 A561     		str	r5, [r4, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 300              		.loc 1 950 2 is_stmt 1 view .LVU92
 301 0076 6462     		str	r4, [r4, #36]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 302              		.loc 1 977 3 view .LVU93
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 303              		.loc 1 992 3 view .LVU94
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 304              		.loc 1 992 29 is_stmt 0 view .LVU95
 305 0078 C4F84CA0 		str	r10, [r4, #76]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 306              		.loc 1 993 3 is_stmt 1 view .LVU96
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 307              		.loc 1 993 27 is_stmt 0 view .LVU97
 308 007c 84F850A0 		strb	r10, [r4, #80]
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 309              		.loc 1 1058 4 is_stmt 1 view .LVU98
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 310              		.loc 1 1058 29 is_stmt 0 view .LVU99
 311 0080 4246     		mov	r2, r8
 312 0082 3946     		mov	r1, r7
 313 0084 3046     		mov	r0, r6
 314 0086 FFF7FEFF 		bl	pxPortInitialiseStack
 315              	.LVL24:
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 316              		.loc 1 1058 27 view .LVU100
 317 008a 2060     		str	r0, [r4]
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 318              		.loc 1 1064 2 is_stmt 1 view .LVU101
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 319              		.loc 1 1064 4 is_stmt 0 view .LVU102
 320 008c B9F1000F 		cmp	r9, #0
 321 0090 01D0     		beq	.L17
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 322              		.loc 1 1068 3 is_stmt 1 view .LVU103
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 323              		.loc 1 1068 18 is_stmt 0 view .LVU104
 324 0092 C9F80040 		str	r4, [r9]
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 325              		.loc 1 1072 27 is_stmt 1 view .LVU105
 326              	.L17:
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 327              		.loc 1 1074 1 is_stmt 0 view .LVU106
 328 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 329              	.LVL25:
 330              	.L29:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 331              		.loc 1 919 3 is_stmt 1 view .LVU107
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 332              		.loc 1 919 29 is_stmt 0 view .LVU108
 333 009a 0023     		movs	r3, #0
ARM GAS  /tmp/cc0mjIFM.s 			page 81


 334              	.LVL26:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 335              		.loc 1 919 29 view .LVU109
 336 009c 84F83430 		strb	r3, [r4, #52]
 337 00a0 D5E7     		b	.L22
 338              		.cfi_endproc
 339              	.LFE7:
 341              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 342              		.align	1
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu fpv4-sp-d16
 348              	prvInitialiseTaskLists:
 349              	.LFB38:
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 350              		.loc 1 3608 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 38B5     		push	{r3, r4, r5, lr}
 355              	.LCFI1:
 356              		.cfi_def_cfa_offset 16
 357              		.cfi_offset 3, -16
 358              		.cfi_offset 4, -12
 359              		.cfi_offset 5, -8
 360              		.cfi_offset 14, -4
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361              		.loc 1 3609 1 view .LVU111
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 362              		.loc 1 3611 2 view .LVU112
 363              	.LVL27:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 364              		.loc 1 3611 18 is_stmt 0 view .LVU113
 365 0002 0024     		movs	r4, #0
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 366              		.loc 1 3611 2 view .LVU114
 367 0004 07E0     		b	.L31
 368              	.LVL28:
 369              	.L32:
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 370              		.loc 1 3613 3 is_stmt 1 discriminator 3 view .LVU115
 371 0006 04EB8402 		add	r2, r4, r4, lsl #2
 372 000a 9300     		lsls	r3, r2, #2
 373 000c 0E48     		ldr	r0, .L34
 374 000e 1844     		add	r0, r0, r3
 375 0010 FFF7FEFF 		bl	vListInitialise
 376              	.LVL29:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 377              		.loc 1 3611 91 discriminator 3 view .LVU116
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 378              		.loc 1 3611 101 is_stmt 0 discriminator 3 view .LVU117
 379 0014 0134     		adds	r4, r4, #1
 380              	.LVL30:
 381              	.L31:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 382              		.loc 1 3611 40 is_stmt 1 discriminator 1 view .LVU118
ARM GAS  /tmp/cc0mjIFM.s 			page 82


3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 383              		.loc 1 3611 2 is_stmt 0 discriminator 1 view .LVU119
 384 0016 062C     		cmp	r4, #6
 385 0018 F5D9     		bls	.L32
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 386              		.loc 1 3616 2 is_stmt 1 view .LVU120
 387 001a 0C4D     		ldr	r5, .L34+4
 388 001c 2846     		mov	r0, r5
 389 001e FFF7FEFF 		bl	vListInitialise
 390              	.LVL31:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 391              		.loc 1 3617 2 view .LVU121
 392 0022 0B4C     		ldr	r4, .L34+8
 393              	.LVL32:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 394              		.loc 1 3617 2 is_stmt 0 view .LVU122
 395 0024 2046     		mov	r0, r4
 396 0026 FFF7FEFF 		bl	vListInitialise
 397              	.LVL33:
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398              		.loc 1 3618 2 is_stmt 1 view .LVU123
 399 002a 0A48     		ldr	r0, .L34+12
 400 002c FFF7FEFF 		bl	vListInitialise
 401              	.LVL34:
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 402              		.loc 1 3622 3 view .LVU124
 403 0030 0948     		ldr	r0, .L34+16
 404 0032 FFF7FEFF 		bl	vListInitialise
 405              	.LVL35:
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 406              		.loc 1 3628 3 view .LVU125
 407 0036 0948     		ldr	r0, .L34+20
 408 0038 FFF7FEFF 		bl	vListInitialise
 409              	.LVL36:
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 410              		.loc 1 3634 2 view .LVU126
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 411              		.loc 1 3634 20 is_stmt 0 view .LVU127
 412 003c 084B     		ldr	r3, .L34+24
 413 003e 1D60     		str	r5, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 414              		.loc 1 3635 2 is_stmt 1 view .LVU128
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 415              		.loc 1 3635 28 is_stmt 0 view .LVU129
 416 0040 084B     		ldr	r3, .L34+28
 417 0042 1C60     		str	r4, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 418              		.loc 1 3636 1 view .LVU130
 419 0044 38BD     		pop	{r3, r4, r5, pc}
 420              	.L35:
 421 0046 00BF     		.align	2
 422              	.L34:
 423 0048 00000000 		.word	.LANCHOR4
 424 004c 00000000 		.word	.LANCHOR5
 425 0050 00000000 		.word	.LANCHOR6
 426 0054 00000000 		.word	.LANCHOR1
 427 0058 00000000 		.word	.LANCHOR7
ARM GAS  /tmp/cc0mjIFM.s 			page 83


 428 005c 00000000 		.word	.LANCHOR0
 429 0060 00000000 		.word	.LANCHOR2
 430 0064 00000000 		.word	.LANCHOR8
 431              		.cfi_endproc
 432              	.LFE38:
 434              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	prvAddNewTaskToReadyList:
 442              	.LVL37:
 443              	.LFB8:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 444              		.loc 1 1078 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 448              		.loc 1 1078 1 is_stmt 0 view .LVU132
 449 0000 10B5     		push	{r4, lr}
 450              	.LCFI2:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 4, -8
 453              		.cfi_offset 14, -4
 454 0002 0446     		mov	r4, r0
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 455              		.loc 1 1081 2 is_stmt 1 view .LVU133
 456 0004 FFF7FEFF 		bl	vPortEnterCritical
 457              	.LVL38:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 458              		.loc 1 1083 3 view .LVU134
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 459              		.loc 1 1083 25 is_stmt 0 view .LVU135
 460 0008 214A     		ldr	r2, .L43
 461 000a 1368     		ldr	r3, [r2]
 462 000c 0133     		adds	r3, r3, #1
 463 000e 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 464              		.loc 1 1084 3 is_stmt 1 view .LVU136
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 465              		.loc 1 1084 20 is_stmt 0 view .LVU137
 466 0010 204B     		ldr	r3, .L43+4
 467 0012 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 468              		.loc 1 1084 5 view .LVU138
 469 0014 5BB1     		cbz	r3, .L41
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 470              		.loc 1 1107 4 is_stmt 1 view .LVU139
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 471              		.loc 1 1107 26 is_stmt 0 view .LVU140
 472 0016 204B     		ldr	r3, .L43+8
 473 0018 1B68     		ldr	r3, [r3]
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 474              		.loc 1 1107 6 view .LVU141
 475 001a 6BB9     		cbnz	r3, .L38
ARM GAS  /tmp/cc0mjIFM.s 			page 84


1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 476              		.loc 1 1109 5 is_stmt 1 view .LVU142
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 477              		.loc 1 1109 21 is_stmt 0 view .LVU143
 478 001c 1D4B     		ldr	r3, .L43+4
 479 001e 1B68     		ldr	r3, [r3]
 480 0020 DA6A     		ldr	r2, [r3, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 481              		.loc 1 1109 45 view .LVU144
 482 0022 E36A     		ldr	r3, [r4, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 483              		.loc 1 1109 7 view .LVU145
 484 0024 9A42     		cmp	r2, r3
 485 0026 07D8     		bhi	.L38
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 486              		.loc 1 1111 6 is_stmt 1 view .LVU146
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 487              		.loc 1 1111 19 is_stmt 0 view .LVU147
 488 0028 1A4B     		ldr	r3, .L43+4
 489 002a 1C60     		str	r4, [r3]
 490 002c 04E0     		b	.L38
 491              	.L41:
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 492              		.loc 1 1088 4 is_stmt 1 view .LVU148
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493              		.loc 1 1088 17 is_stmt 0 view .LVU149
 494 002e 194B     		ldr	r3, .L43+4
 495 0030 1C60     		str	r4, [r3]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 496              		.loc 1 1090 4 is_stmt 1 view .LVU150
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 497              		.loc 1 1090 31 is_stmt 0 view .LVU151
 498 0032 1368     		ldr	r3, [r2]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 499              		.loc 1 1090 6 view .LVU152
 500 0034 012B     		cmp	r3, #1
 501 0036 28D0     		beq	.L42
 502              	.L38:
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 503              		.loc 1 1120 29 is_stmt 1 view .LVU153
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 504              		.loc 1 1124 3 view .LVU154
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505              		.loc 1 1124 15 is_stmt 0 view .LVU155
 506 0038 184A     		ldr	r2, .L43+12
 507 003a 1368     		ldr	r3, [r2]
 508 003c 0133     		adds	r3, r3, #1
 509 003e 1360     		str	r3, [r2]
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510              		.loc 1 1132 31 is_stmt 1 view .LVU156
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511              		.loc 1 1134 3 view .LVU157
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512              		.loc 1 1134 3 view .LVU158
 513 0040 E06A     		ldr	r0, [r4, #44]
 514 0042 0123     		movs	r3, #1
 515 0044 8340     		lsls	r3, r3, r0
ARM GAS  /tmp/cc0mjIFM.s 			page 85


 516 0046 164A     		ldr	r2, .L43+16
 517 0048 1168     		ldr	r1, [r2]
 518 004a 0B43     		orrs	r3, r3, r1
 519 004c 1360     		str	r3, [r2]
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 520              		.loc 1 1134 3 view .LVU159
 521 004e 00EB8000 		add	r0, r0, r0, lsl #2
 522 0052 211D     		adds	r1, r4, #4
 523 0054 134B     		ldr	r3, .L43+20
 524 0056 03EB8000 		add	r0, r3, r0, lsl #2
 525 005a FFF7FEFF 		bl	vListInsertEnd
 526              	.LVL39:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527              		.loc 1 1134 36 view .LVU160
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 528              		.loc 1 1136 3 view .LVU161
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529              		.loc 1 1138 2 view .LVU162
 530 005e FFF7FEFF 		bl	vPortExitCritical
 531              	.LVL40:
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 532              		.loc 1 1140 2 view .LVU163
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 533              		.loc 1 1140 24 is_stmt 0 view .LVU164
 534 0062 0D4B     		ldr	r3, .L43+8
 535 0064 1B68     		ldr	r3, [r3]
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 536              		.loc 1 1140 4 view .LVU165
 537 0066 7BB1     		cbz	r3, .L36
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 538              		.loc 1 1144 3 is_stmt 1 view .LVU166
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 539              		.loc 1 1144 19 is_stmt 0 view .LVU167
 540 0068 0A4B     		ldr	r3, .L43+4
 541 006a 1B68     		ldr	r3, [r3]
 542 006c DA6A     		ldr	r2, [r3, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 543              		.loc 1 1144 42 view .LVU168
 544 006e E36A     		ldr	r3, [r4, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 545              		.loc 1 1144 5 view .LVU169
 546 0070 9A42     		cmp	r2, r3
 547 0072 09D2     		bcs	.L36
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 548              		.loc 1 1146 4 is_stmt 1 view .LVU170
 549 0074 4FF0E023 		mov	r3, #-536813568
 550 0078 4FF08052 		mov	r2, #268435456
 551 007c C3F8042D 		str	r2, [r3, #3332]
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 552              		.loc 1 1146 4 view .LVU171
 553              		.syntax unified
 554              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 555 0080 BFF34F8F 		dsb
 556              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 557              		.loc 1 1146 4 view .LVU172
 558              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
ARM GAS  /tmp/cc0mjIFM.s 			page 86


 559 0084 BFF36F8F 		isb
 560              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 561              		.loc 1 1146 35 view .LVU173
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 562              		.loc 1 1155 27 view .LVU174
 563              		.thumb
 564              		.syntax unified
 565              	.L36:
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 566              		.loc 1 1157 1 is_stmt 0 view .LVU175
 567 0088 10BD     		pop	{r4, pc}
 568              	.LVL41:
 569              	.L42:
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 570              		.loc 1 1095 5 is_stmt 1 view .LVU176
 571 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 572              	.LVL42:
 573 008e D3E7     		b	.L38
 574              	.L44:
 575              		.align	2
 576              	.L43:
 577 0090 00000000 		.word	.LANCHOR9
 578 0094 00000000 		.word	.LANCHOR10
 579 0098 00000000 		.word	.LANCHOR11
 580 009c 00000000 		.word	.LANCHOR12
 581 00a0 00000000 		.word	.LANCHOR13
 582 00a4 00000000 		.word	.LANCHOR4
 583              		.cfi_endproc
 584              	.LFE8:
 586              		.section	.text.prvDeleteTCB,"ax",%progbits
 587              		.align	1
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu fpv4-sp-d16
 593              	prvDeleteTCB:
 594              	.LVL43:
 595              	.LFB40:
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 596              		.loc 1 3888 2 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 600              		.loc 1 3888 2 is_stmt 0 view .LVU178
 601 0000 10B5     		push	{r4, lr}
 602              	.LCFI3:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 606 0002 0446     		mov	r4, r0
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607              		.loc 1 3892 3 is_stmt 1 view .LVU179
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 608              		.loc 1 3916 4 view .LVU180
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc0mjIFM.s 			page 87


 609              		.loc 1 3916 13 is_stmt 0 view .LVU181
 610 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 611              		.loc 1 3916 6 view .LVU182
 612 0008 63B1     		cbz	r3, .L51
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 613              		.loc 1 3923 9 is_stmt 1 view .LVU183
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 614              		.loc 1 3923 11 is_stmt 0 view .LVU184
 615 000a 012B     		cmp	r3, #1
 616 000c 11D0     		beq	.L52
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 617              		.loc 1 3933 5 is_stmt 1 view .LVU185
 618 000e 022B     		cmp	r3, #2
 619 0010 0ED0     		beq	.L45
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 620              		.loc 1 3933 5 view .LVU186
 621              	.LBB112:
 622              	.LBI112:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 623              		.loc 2 191 30 view .LVU187
 624              	.LBB113:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 625              		.loc 2 193 1 view .LVU188
 626              		.loc 2 195 2 view .LVU189
 627              		.syntax unified
 628              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 629 0012 4FF05003 			mov r3, #80												
 630 0016 83F31188 		msr basepri, r3											
 631 001a BFF36F8F 		isb														
 632 001e BFF34F8F 		dsb														
 633              	
 634              	@ 0 "" 2
 635              	.LVL44:
 636              		.thumb
 637              		.syntax unified
 638              	.L49:
 639              		.loc 2 195 2 is_stmt 0 view .LVU190
 640              	.LBE113:
 641              	.LBE112:
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 642              		.loc 1 3933 5 is_stmt 1 discriminator 1 view .LVU191
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 643              		.loc 1 3933 5 discriminator 1 view .LVU192
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 644              		.loc 1 3933 5 discriminator 1 view .LVU193
 645 0022 FEE7     		b	.L49
 646              	.L51:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 647              		.loc 1 3920 5 view .LVU194
 648 0024 006B     		ldr	r0, [r0, #48]
 649              	.LVL45:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 650              		.loc 1 3920 5 is_stmt 0 view .LVU195
 651 0026 FFF7FEFF 		bl	vPortFree
 652              	.LVL46:
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc0mjIFM.s 			page 88


 653              		.loc 1 3921 5 is_stmt 1 view .LVU196
 654 002a 2046     		mov	r0, r4
 655 002c FFF7FEFF 		bl	vPortFree
 656              	.LVL47:
 657              	.L45:
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 658              		.loc 1 3938 2 is_stmt 0 view .LVU197
 659 0030 10BD     		pop	{r4, pc}
 660              	.LVL48:
 661              	.L52:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662              		.loc 1 3927 5 is_stmt 1 view .LVU198
 663 0032 FFF7FEFF 		bl	vPortFree
 664              	.LVL49:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 665              		.loc 1 3927 5 is_stmt 0 view .LVU199
 666 0036 FBE7     		b	.L45
 667              		.cfi_endproc
 668              	.LFE40:
 670              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 671              		.align	1
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 677              	prvCheckTasksWaitingTermination:
 678              	.LFB39:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679              		.loc 1 3640 1 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              	.LBB114:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684              		.loc 1 3646 3 view .LVU201
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 685              		.loc 1 3650 3 view .LVU202
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686              		.loc 1 3650 8 view .LVU203
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 687              		.loc 1 3650 39 is_stmt 0 view .LVU204
 688 0000 0F4B     		ldr	r3, .L60
 689 0002 1B68     		ldr	r3, [r3]
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 690              		.loc 1 3650 8 view .LVU205
 691 0004 D3B1     		cbz	r3, .L59
 692              	.LBE114:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 693              		.loc 1 3640 1 view .LVU206
 694 0006 10B5     		push	{r4, lr}
 695              	.LCFI4:
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 4, -8
 698              		.cfi_offset 14, -4
 699              	.L55:
 700              	.LBB115:
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc0mjIFM.s 			page 89


 701              		.loc 1 3652 4 is_stmt 1 view .LVU207
 702 0008 FFF7FEFF 		bl	vPortEnterCritical
 703              	.LVL50:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 704              		.loc 1 3654 5 view .LVU208
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 705              		.loc 1 3654 13 is_stmt 0 view .LVU209
 706 000c 0D4B     		ldr	r3, .L60+4
 707 000e DB68     		ldr	r3, [r3, #12]
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 708              		.loc 1 3654 11 view .LVU210
 709 0010 DC68     		ldr	r4, [r3, #12]
 710              	.LVL51:
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 711              		.loc 1 3655 5 is_stmt 1 view .LVU211
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 712              		.loc 1 3655 14 is_stmt 0 view .LVU212
 713 0012 201D     		adds	r0, r4, #4
 714 0014 FFF7FEFF 		bl	uxListRemove
 715              	.LVL52:
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 716              		.loc 1 3656 5 is_stmt 1 view .LVU213
 717 0018 0B4A     		ldr	r2, .L60+8
 718 001a 1368     		ldr	r3, [r2]
 719 001c 013B     		subs	r3, r3, #1
 720 001e 1360     		str	r3, [r2]
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 721              		.loc 1 3657 5 view .LVU214
 722 0020 074A     		ldr	r2, .L60
 723 0022 1368     		ldr	r3, [r2]
 724 0024 013B     		subs	r3, r3, #1
 725 0026 1360     		str	r3, [r2]
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726              		.loc 1 3659 4 view .LVU215
 727 0028 FFF7FEFF 		bl	vPortExitCritical
 728              	.LVL53:
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 729              		.loc 1 3661 4 view .LVU216
 730 002c 2046     		mov	r0, r4
 731 002e FFF7FEFF 		bl	prvDeleteTCB
 732              	.LVL54:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 733              		.loc 1 3650 8 view .LVU217
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 734              		.loc 1 3650 39 is_stmt 0 view .LVU218
 735 0032 034B     		ldr	r3, .L60
 736 0034 1B68     		ldr	r3, [r3]
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 737              		.loc 1 3650 8 view .LVU219
 738 0036 002B     		cmp	r3, #0
 739 0038 E6D1     		bne	.L55
 740              	.LBE115:
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 741              		.loc 1 3665 1 view .LVU220
 742 003a 10BD     		pop	{r4, pc}
 743              	.LVL55:
 744              	.L59:
ARM GAS  /tmp/cc0mjIFM.s 			page 90


 745              	.LCFI5:
 746              		.cfi_def_cfa_offset 0
 747              		.cfi_restore 4
 748              		.cfi_restore 14
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 749              		.loc 1 3665 1 view .LVU221
 750 003c 7047     		bx	lr
 751              	.L61:
 752 003e 00BF     		.align	2
 753              	.L60:
 754 0040 00000000 		.word	.LANCHOR14
 755 0044 00000000 		.word	.LANCHOR7
 756 0048 00000000 		.word	.LANCHOR9
 757              		.cfi_endproc
 758              	.LFE39:
 760              		.section	.text.prvIdleTask,"ax",%progbits
 761              		.align	1
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv4-sp-d16
 767              	prvIdleTask:
 768              	.LFB37:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 769              		.loc 1 3393 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ Volatile: function does not return.
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL56:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 775              		.loc 1 3393 1 is_stmt 0 view .LVU223
 776 0000 08B5     		push	{r3, lr}
 777              	.LCFI6:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 3, -8
 780              		.cfi_offset 14, -4
 781              	.LVL57:
 782              	.L63:
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 783              		.loc 1 3395 2 is_stmt 1 view .LVU224
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 784              		.loc 1 3403 64 view .LVU225
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 785              		.loc 1 3405 2 view .LVU226
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 786              		.loc 1 3409 3 view .LVU227
 787 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 788              	.LVL58:
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 789              		.loc 1 3432 4 view .LVU228
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 790              		.loc 1 3432 8 is_stmt 0 view .LVU229
 791 0006 074B     		ldr	r3, .L66
 792 0008 1B68     		ldr	r3, [r3]
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 793              		.loc 1 3432 6 view .LVU230
ARM GAS  /tmp/cc0mjIFM.s 			page 91


 794 000a 012B     		cmp	r3, #1
 795 000c F9D9     		bls	.L63
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796              		.loc 1 3434 5 is_stmt 1 view .LVU231
 797 000e 4FF0E023 		mov	r3, #-536813568
 798 0012 4FF08052 		mov	r2, #268435456
 799 0016 C3F8042D 		str	r2, [r3, #3332]
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800              		.loc 1 3434 5 view .LVU232
 801              		.syntax unified
 802              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 803 001a BFF34F8F 		dsb
 804              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 805              		.loc 1 3434 5 view .LVU233
 806              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 807 001e BFF36F8F 		isb
 808              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 809              		.loc 1 3434 16 view .LVU234
 810              		.thumb
 811              		.syntax unified
 812 0022 EEE7     		b	.L63
 813              	.L67:
 814              		.align	2
 815              	.L66:
 816 0024 00000000 		.word	.LANCHOR4
 817              		.cfi_endproc
 818              	.LFE37:
 820              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 821              		.align	1
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu fpv4-sp-d16
 827              	prvAddCurrentTaskToDelayedList:
 828              	.LVL59:
 829              	.LFB56:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 92


3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 93


4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc0mjIFM.s 			page 94


4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
ARM GAS  /tmp/cc0mjIFM.s 			page 95


4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc0mjIFM.s 			page 96


4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc0mjIFM.s 			page 97


4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
ARM GAS  /tmp/cc0mjIFM.s 			page 98


4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
ARM GAS  /tmp/cc0mjIFM.s 			page 99


4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 100


4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
ARM GAS  /tmp/cc0mjIFM.s 			page 101


4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/cc0mjIFM.s 			page 102


4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
ARM GAS  /tmp/cc0mjIFM.s 			page 103


4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc0mjIFM.s 			page 104


4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 105


4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
ARM GAS  /tmp/cc0mjIFM.s 			page 106


4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
ARM GAS  /tmp/cc0mjIFM.s 			page 107


4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
ARM GAS  /tmp/cc0mjIFM.s 			page 108


4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cc0mjIFM.s 			page 109


4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc0mjIFM.s 			page 110


5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
ARM GAS  /tmp/cc0mjIFM.s 			page 111


5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
ARM GAS  /tmp/cc0mjIFM.s 			page 112


5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 830              		.loc 1 5178 1 view -0
 831              		.cfi_startproc
ARM GAS  /tmp/cc0mjIFM.s 			page 113


 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		.loc 1 5178 1 is_stmt 0 view .LVU236
 835 0000 70B5     		push	{r4, r5, r6, lr}
 836              	.LCFI7:
 837              		.cfi_def_cfa_offset 16
 838              		.cfi_offset 4, -16
 839              		.cfi_offset 5, -12
 840              		.cfi_offset 6, -8
 841              		.cfi_offset 14, -4
 842 0002 0446     		mov	r4, r0
 843 0004 0D46     		mov	r5, r1
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 844              		.loc 1 5179 1 is_stmt 1 view .LVU237
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 845              		.loc 1 5180 1 view .LVU238
 846              		.loc 1 5180 18 is_stmt 0 view .LVU239
 847 0006 1D4B     		ldr	r3, .L75
 848 0008 1E68     		ldr	r6, [r3]
 849              	.LVL60:
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 850              		.loc 1 5193 2 is_stmt 1 view .LVU240
 851              		.loc 1 5193 35 is_stmt 0 view .LVU241
 852 000a 1D4B     		ldr	r3, .L75+4
 853 000c 1868     		ldr	r0, [r3]
 854              	.LVL61:
 855              		.loc 1 5193 6 view .LVU242
 856 000e 0430     		adds	r0, r0, #4
 857 0010 FFF7FEFF 		bl	uxListRemove
 858              	.LVL62:
 859              		.loc 1 5193 4 view .LVU243
 860 0014 50B9     		cbnz	r0, .L69
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 861              		.loc 1 5197 3 is_stmt 1 view .LVU244
 862 0016 1A4B     		ldr	r3, .L75+4
 863 0018 1B68     		ldr	r3, [r3]
 864 001a DA6A     		ldr	r2, [r3, #44]
 865 001c 0123     		movs	r3, #1
 866 001e 03FA02F2 		lsl	r2, r3, r2
 867 0022 1849     		ldr	r1, .L75+8
 868 0024 0B68     		ldr	r3, [r1]
 869 0026 23EA0203 		bic	r3, r3, r2
ARM GAS  /tmp/cc0mjIFM.s 			page 114


 870 002a 0B60     		str	r3, [r1]
 871              	.L69:
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 872              		.loc 1 5201 27 view .LVU245
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 873              		.loc 1 5206 3 view .LVU246
 874              		.loc 1 5206 5 is_stmt 0 view .LVU247
 875 002c B4F1FF3F 		cmp	r4, #-1
 876 0030 0DD0     		beq	.L74
 877              	.L70:
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 878              		.loc 1 5218 4 is_stmt 1 view .LVU248
 879              		.loc 1 5218 16 is_stmt 0 view .LVU249
 880 0032 3444     		add	r4, r4, r6
 881              	.LVL63:
5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 882              		.loc 1 5221 4 is_stmt 1 view .LVU250
 883 0034 124B     		ldr	r3, .L75+4
 884 0036 1B68     		ldr	r3, [r3]
 885 0038 5C60     		str	r4, [r3, #4]
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 886              		.loc 1 5223 4 view .LVU251
 887              		.loc 1 5223 6 is_stmt 0 view .LVU252
 888 003a A642     		cmp	r6, r4
 889 003c 10D9     		bls	.L72
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 890              		.loc 1 5227 5 is_stmt 1 view .LVU253
 891 003e 124B     		ldr	r3, .L75+12
 892 0040 1868     		ldr	r0, [r3]
 893              		.loc 1 5227 60 is_stmt 0 view .LVU254
 894 0042 0F4B     		ldr	r3, .L75+4
 895 0044 1968     		ldr	r1, [r3]
 896              		.loc 1 5227 5 view .LVU255
ARM GAS  /tmp/cc0mjIFM.s 			page 115


 897 0046 0431     		adds	r1, r1, #4
 898 0048 FFF7FEFF 		bl	vListInsert
 899              	.LVL64:
 900              	.L68:
5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc0mjIFM.s 			page 116


5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 901              		.loc 1 5286 1 view .LVU256
 902 004c 70BD     		pop	{r4, r5, r6, pc}
 903              	.LVL65:
 904              	.L74:
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 905              		.loc 1 5206 41 discriminator 1 view .LVU257
 906 004e 002D     		cmp	r5, #0
 907 0050 EFD0     		beq	.L70
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 908              		.loc 1 5211 4 is_stmt 1 view .LVU258
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 909              		.loc 1 5211 56 is_stmt 0 view .LVU259
 910 0052 0B4B     		ldr	r3, .L75+4
 911 0054 1968     		ldr	r1, [r3]
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 912              		.loc 1 5211 4 view .LVU260
 913 0056 0431     		adds	r1, r1, #4
 914 0058 0C48     		ldr	r0, .L75+16
 915 005a FFF7FEFF 		bl	vListInsertEnd
 916              	.LVL66:
 917 005e F5E7     		b	.L68
 918              	.LVL67:
 919              	.L72:
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 920              		.loc 1 5233 5 is_stmt 1 view .LVU261
 921 0060 0B4B     		ldr	r3, .L75+20
 922 0062 1868     		ldr	r0, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 923              		.loc 1 5233 52 is_stmt 0 view .LVU262
 924 0064 064B     		ldr	r3, .L75+4
 925 0066 1968     		ldr	r1, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 926              		.loc 1 5233 5 view .LVU263
 927 0068 0431     		adds	r1, r1, #4
 928 006a FFF7FEFF 		bl	vListInsert
 929              	.LVL68:
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 930              		.loc 1 5238 5 is_stmt 1 view .LVU264
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 931              		.loc 1 5238 21 is_stmt 0 view .LVU265
 932 006e 094B     		ldr	r3, .L75+24
 933 0070 1B68     		ldr	r3, [r3]
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 934              		.loc 1 5238 7 view .LVU266
 935 0072 A342     		cmp	r3, r4
 936 0074 EAD9     		bls	.L68
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 937              		.loc 1 5240 6 is_stmt 1 view .LVU267
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 938              		.loc 1 5240 27 is_stmt 0 view .LVU268
 939 0076 074B     		ldr	r3, .L75+24
ARM GAS  /tmp/cc0mjIFM.s 			page 117


 940 0078 1C60     		str	r4, [r3]
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 941              		.loc 1 5244 30 is_stmt 1 view .LVU269
 942              		.loc 1 5286 1 is_stmt 0 view .LVU270
 943 007a E7E7     		b	.L68
 944              	.L76:
 945              		.align	2
 946              	.L75:
 947 007c 00000000 		.word	.LANCHOR15
 948 0080 00000000 		.word	.LANCHOR10
 949 0084 00000000 		.word	.LANCHOR13
 950 0088 00000000 		.word	.LANCHOR8
 951 008c 00000000 		.word	.LANCHOR0
 952 0090 00000000 		.word	.LANCHOR2
 953 0094 00000000 		.word	.LANCHOR3
 954              		.cfi_endproc
 955              	.LFE56:
 957              		.section	.text.xTaskCreateStatic,"ax",%progbits
 958              		.align	1
 959              		.global	xTaskCreateStatic
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv4-sp-d16
 965              	xTaskCreateStatic:
 966              	.LVL69:
 967              	.LFB5:
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 968              		.loc 1 588 2 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 12, pretend = 0, frame = 8
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 972              		.loc 1 588 2 is_stmt 0 view .LVU272
 973 0000 30B5     		push	{r4, r5, lr}
 974              	.LCFI8:
 975              		.cfi_def_cfa_offset 12
 976              		.cfi_offset 4, -12
 977              		.cfi_offset 5, -8
 978              		.cfi_offset 14, -4
 979 0002 87B0     		sub	sp, sp, #28
 980              	.LCFI9:
 981              		.cfi_def_cfa_offset 40
 982 0004 0B9C     		ldr	r4, [sp, #44]
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 983              		.loc 1 589 2 is_stmt 1 view .LVU273
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 984              		.loc 1 590 2 view .LVU274
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 985              		.loc 1 592 3 view .LVU275
 986 0006 7CB1     		cbz	r4, .L85
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 987              		.loc 1 592 41 discriminator 2 view .LVU276
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988              		.loc 1 593 3 discriminator 2 view .LVU277
 989 0008 0C9D     		ldr	r5, [sp, #48]
 990 000a B5B1     		cbz	r5, .L86
ARM GAS  /tmp/cc0mjIFM.s 			page 118


 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 991              		.loc 1 593 39 discriminator 2 view .LVU278
 992              	.LBB116:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 993              		.loc 1 600 4 discriminator 2 view .LVU279
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 994              		.loc 1 600 20 is_stmt 0 discriminator 2 view .LVU280
 995 000c 5425     		movs	r5, #84
 996 000e 0495     		str	r5, [sp, #16]
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 997              		.loc 1 601 4 is_stmt 1 discriminator 2 view .LVU281
 998 0010 049D     		ldr	r5, [sp, #16]
 999 0012 542D     		cmp	r5, #84
 1000 0014 1AD0     		beq	.L82
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1001              		.loc 1 601 4 view .LVU282
 1002              	.LBB117:
 1003              	.LBI117:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1004              		.loc 2 191 30 view .LVU283
 1005              	.LBB118:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1006              		.loc 2 193 1 view .LVU284
 1007              		.loc 2 195 2 view .LVU285
 1008              		.syntax unified
 1009              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1010 0016 4FF05003 			mov r3, #80												
 1011 001a 83F31188 		msr basepri, r3											
 1012 001e BFF36F8F 		isb														
 1013 0022 BFF34F8F 		dsb														
 1014              	
 1015              	@ 0 "" 2
 1016              	.LVL70:
 1017              		.thumb
 1018              		.syntax unified
 1019              	.L83:
 1020              		.loc 2 195 2 is_stmt 0 view .LVU286
 1021              	.LBE118:
 1022              	.LBE117:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1023              		.loc 1 601 4 is_stmt 1 discriminator 3 view .LVU287
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1024              		.loc 1 601 4 discriminator 3 view .LVU288
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1025              		.loc 1 601 4 discriminator 3 view .LVU289
 1026 0026 FEE7     		b	.L83
 1027              	.LVL71:
 1028              	.L85:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1029              		.loc 1 601 4 is_stmt 0 discriminator 3 view .LVU290
 1030              	.LBE116:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1031              		.loc 1 592 3 is_stmt 1 view .LVU291
 1032              	.LBB119:
 1033              	.LBI119:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1034              		.loc 2 191 30 view .LVU292
ARM GAS  /tmp/cc0mjIFM.s 			page 119


 1035              	.LBB120:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1036              		.loc 2 193 1 view .LVU293
 1037              		.loc 2 195 2 view .LVU294
 1038              		.syntax unified
 1039              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1040 0028 4FF05003 			mov r3, #80												
 1041 002c 83F31188 		msr basepri, r3											
 1042 0030 BFF36F8F 		isb														
 1043 0034 BFF34F8F 		dsb														
 1044              	
 1045              	@ 0 "" 2
 1046              	.LVL72:
 1047              		.thumb
 1048              		.syntax unified
 1049              	.L79:
 1050              		.loc 2 195 2 is_stmt 0 view .LVU295
 1051              	.LBE120:
 1052              	.LBE119:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1053              		.loc 1 592 3 is_stmt 1 discriminator 1 view .LVU296
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1054              		.loc 1 592 3 discriminator 1 view .LVU297
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1055              		.loc 1 592 3 discriminator 1 view .LVU298
 1056 0038 FEE7     		b	.L79
 1057              	.LVL73:
 1058              	.L86:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1059              		.loc 1 593 3 view .LVU299
 1060              	.LBB121:
 1061              	.LBI121:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1062              		.loc 2 191 30 view .LVU300
 1063              	.LBB122:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1064              		.loc 2 193 1 view .LVU301
 1065              		.loc 2 195 2 view .LVU302
 1066              		.syntax unified
 1067              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1068 003a 4FF05003 			mov r3, #80												
 1069 003e 83F31188 		msr basepri, r3											
 1070 0042 BFF36F8F 		isb														
 1071 0046 BFF34F8F 		dsb														
 1072              	
 1073              	@ 0 "" 2
 1074              	.LVL74:
 1075              		.thumb
 1076              		.syntax unified
 1077              	.L81:
 1078              		.loc 2 195 2 is_stmt 0 view .LVU303
 1079              	.LBE122:
 1080              	.LBE121:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1081              		.loc 1 593 3 is_stmt 1 discriminator 2 view .LVU304
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1082              		.loc 1 593 3 discriminator 2 view .LVU305
ARM GAS  /tmp/cc0mjIFM.s 			page 120


 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1083              		.loc 1 593 3 discriminator 2 view .LVU306
 1084 004a FEE7     		b	.L81
 1085              	.LVL75:
 1086              	.L82:
 1087              	.LBB123:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1088              		.loc 1 601 44 discriminator 2 view .LVU307
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1089              		.loc 1 602 4 discriminator 2 view .LVU308
 1090 004c 049D     		ldr	r5, [sp, #16]
 1091              	.LBE123:
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1092              		.loc 1 607 3 discriminator 2 view .LVU309
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1093              		.loc 1 611 4 discriminator 2 view .LVU310
 1094              	.LVL76:
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1095              		.loc 1 612 4 discriminator 2 view .LVU311
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1096              		.loc 1 612 22 is_stmt 0 discriminator 2 view .LVU312
 1097 004e 0C9D     		ldr	r5, [sp, #48]
 1098 0050 2C63     		str	r4, [r5, #48]
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1099              		.loc 1 618 5 is_stmt 1 discriminator 2 view .LVU313
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1100              		.loc 1 618 37 is_stmt 0 discriminator 2 view .LVU314
 1101 0052 0224     		movs	r4, #2
 1102 0054 85F85140 		strb	r4, [r5, #81]
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1103              		.loc 1 622 4 is_stmt 1 discriminator 2 view .LVU315
 1104 0058 0024     		movs	r4, #0
 1105 005a 0394     		str	r4, [sp, #12]
 1106 005c 0295     		str	r5, [sp, #8]
 1107 005e 05AC     		add	r4, sp, #20
 1108 0060 0194     		str	r4, [sp, #4]
 1109 0062 0A9C     		ldr	r4, [sp, #40]
 1110 0064 0094     		str	r4, [sp]
 1111 0066 FFF7FEFF 		bl	prvInitialiseNewTask
 1112              	.LVL77:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1113              		.loc 1 623 4 discriminator 2 view .LVU316
 1114 006a 0C98     		ldr	r0, [sp, #48]
 1115 006c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1116              	.LVL78:
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1117              		.loc 1 630 3 discriminator 2 view .LVU317
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1118              		.loc 1 631 2 is_stmt 0 discriminator 2 view .LVU318
 1119 0070 0598     		ldr	r0, [sp, #20]
 1120 0072 07B0     		add	sp, sp, #28
 1121              	.LCFI10:
 1122              		.cfi_def_cfa_offset 12
 1123              		@ sp needed
 1124 0074 30BD     		pop	{r4, r5, pc}
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1125              		.loc 1 631 2 discriminator 2 view .LVU319
ARM GAS  /tmp/cc0mjIFM.s 			page 121


 1126              		.cfi_endproc
 1127              	.LFE5:
 1129              		.section	.text.xTaskCreate,"ax",%progbits
 1130              		.align	1
 1131              		.global	xTaskCreate
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv4-sp-d16
 1137              	xTaskCreate:
 1138              	.LVL79:
 1139              	.LFB6:
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1140              		.loc 1 739 2 is_stmt 1 view -0
 1141              		.cfi_startproc
 1142              		@ args = 8, pretend = 0, frame = 0
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1144              		.loc 1 739 2 is_stmt 0 view .LVU321
 1145 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1146              	.LCFI11:
 1147              		.cfi_def_cfa_offset 28
 1148              		.cfi_offset 4, -28
 1149              		.cfi_offset 5, -24
 1150              		.cfi_offset 6, -20
 1151              		.cfi_offset 7, -16
 1152              		.cfi_offset 8, -12
 1153              		.cfi_offset 9, -8
 1154              		.cfi_offset 14, -4
 1155 0004 85B0     		sub	sp, sp, #20
 1156              	.LCFI12:
 1157              		.cfi_def_cfa_offset 48
 1158 0006 0746     		mov	r7, r0
 1159 0008 8846     		mov	r8, r1
 1160 000a 1446     		mov	r4, r2
 1161 000c 1E46     		mov	r6, r3
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1162              		.loc 1 740 2 is_stmt 1 view .LVU322
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1163              		.loc 1 741 2 view .LVU323
 1164              	.LBB124:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1165              		.loc 1 770 3 view .LVU324
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1166              		.loc 1 773 4 view .LVU325
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1167              		.loc 1 773 14 is_stmt 0 view .LVU326
 1168 000e 9000     		lsls	r0, r2, #2
 1169              	.LVL80:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1170              		.loc 1 773 14 view .LVU327
 1171 0010 FFF7FEFF 		bl	pvPortMalloc
 1172              	.LVL81:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1173              		.loc 1 775 4 is_stmt 1 view .LVU328
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1174              		.loc 1 775 6 is_stmt 0 view .LVU329
ARM GAS  /tmp/cc0mjIFM.s 			page 122


 1175 0014 00B3     		cbz	r0, .L91
 1176 0016 8146     		mov	r9, r0
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1177              		.loc 1 778 5 is_stmt 1 view .LVU330
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1178              		.loc 1 778 28 is_stmt 0 view .LVU331
 1179 0018 5420     		movs	r0, #84
 1180              	.LVL82:
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1181              		.loc 1 778 28 view .LVU332
 1182 001a FFF7FEFF 		bl	pvPortMalloc
 1183              	.LVL83:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1184              		.loc 1 780 5 is_stmt 1 view .LVU333
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1185              		.loc 1 780 7 is_stmt 0 view .LVU334
 1186 001e 0546     		mov	r5, r0
 1187 0020 B0B1     		cbz	r0, .L89
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1188              		.loc 1 783 6 is_stmt 1 view .LVU335
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1189              		.loc 1 783 24 is_stmt 0 view .LVU336
 1190 0022 C0F83090 		str	r9, [r0, #48]
 1191              	.LVL84:
 1192              	.L90:
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1193              		.loc 1 783 24 view .LVU337
 1194              	.LBE124:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1195              		.loc 1 799 3 is_stmt 1 view .LVU338
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1196              		.loc 1 799 5 is_stmt 0 view .LVU339
 1197 0026 E5B1     		cbz	r5, .L92
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1198              		.loc 1 805 5 is_stmt 1 view .LVU340
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1199              		.loc 1 805 37 is_stmt 0 view .LVU341
 1200 0028 0023     		movs	r3, #0
 1201 002a 85F85130 		strb	r3, [r5, #81]
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1202              		.loc 1 809 4 is_stmt 1 view .LVU342
 1203 002e 0393     		str	r3, [sp, #12]
 1204 0030 0295     		str	r5, [sp, #8]
 1205 0032 0D9B     		ldr	r3, [sp, #52]
 1206 0034 0193     		str	r3, [sp, #4]
 1207 0036 0C9B     		ldr	r3, [sp, #48]
 1208 0038 0093     		str	r3, [sp]
 1209 003a 3346     		mov	r3, r6
 1210 003c 2246     		mov	r2, r4
 1211 003e 4146     		mov	r1, r8
 1212 0040 3846     		mov	r0, r7
 1213 0042 FFF7FEFF 		bl	prvInitialiseNewTask
 1214              	.LVL85:
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1215              		.loc 1 810 4 view .LVU343
 1216 0046 2846     		mov	r0, r5
 1217 0048 FFF7FEFF 		bl	prvAddNewTaskToReadyList
ARM GAS  /tmp/cc0mjIFM.s 			page 123


 1218              	.LVL86:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1219              		.loc 1 811 4 view .LVU344
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1220              		.loc 1 811 12 is_stmt 0 view .LVU345
 1221 004c 0120     		movs	r0, #1
 1222 004e 05E0     		b	.L87
 1223              	.LVL87:
 1224              	.L89:
 1225              	.LBB125:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1226              		.loc 1 789 6 is_stmt 1 view .LVU346
 1227 0050 4846     		mov	r0, r9
 1228              	.LVL88:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1229              		.loc 1 789 6 is_stmt 0 view .LVU347
 1230 0052 FFF7FEFF 		bl	vPortFree
 1231              	.LVL89:
 1232 0056 E6E7     		b	.L90
 1233              	.LVL90:
 1234              	.L91:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1235              		.loc 1 789 6 view .LVU348
 1236              	.LBE125:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1237              		.loc 1 815 12 view .LVU349
 1238 0058 4FF0FF30 		mov	r0, #-1
 1239              	.LVL91:
 1240              	.L87:
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1241              		.loc 1 819 2 view .LVU350
 1242 005c 05B0     		add	sp, sp, #20
 1243              	.LCFI13:
 1244              		.cfi_remember_state
 1245              		.cfi_def_cfa_offset 28
 1246              		@ sp needed
 1247 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1248              	.LVL92:
 1249              	.L92:
 1250              	.LCFI14:
 1251              		.cfi_restore_state
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1252              		.loc 1 815 12 view .LVU351
 1253 0062 4FF0FF30 		mov	r0, #-1
 1254              	.LVL93:
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1255              		.loc 1 818 3 is_stmt 1 view .LVU352
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1256              		.loc 1 818 10 is_stmt 0 view .LVU353
 1257 0066 F9E7     		b	.L87
 1258              		.cfi_endproc
 1259              	.LFE6:
 1261              		.section	.text.vTaskDelete,"ax",%progbits
 1262              		.align	1
 1263              		.global	vTaskDelete
 1264              		.syntax unified
 1265              		.thumb
ARM GAS  /tmp/cc0mjIFM.s 			page 124


 1266              		.thumb_func
 1267              		.fpu fpv4-sp-d16
 1269              	vTaskDelete:
 1270              	.LVL94:
 1271              	.LFB9:
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1272              		.loc 1 1163 2 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1276              		.loc 1 1163 2 is_stmt 0 view .LVU355
 1277 0000 38B5     		push	{r3, r4, r5, lr}
 1278              	.LCFI15:
 1279              		.cfi_def_cfa_offset 16
 1280              		.cfi_offset 3, -16
 1281              		.cfi_offset 4, -12
 1282              		.cfi_offset 5, -8
 1283              		.cfi_offset 14, -4
 1284 0002 0446     		mov	r4, r0
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1285              		.loc 1 1164 2 is_stmt 1 view .LVU356
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1286              		.loc 1 1166 3 view .LVU357
 1287 0004 FFF7FEFF 		bl	vPortEnterCritical
 1288              	.LVL95:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1289              		.loc 1 1170 4 view .LVU358
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1290              		.loc 1 1170 12 is_stmt 0 view .LVU359
 1291 0008 002C     		cmp	r4, #0
 1292 000a 33D0     		beq	.L104
 1293              	.LVL96:
 1294              	.L95:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1295              		.loc 1 1173 4 is_stmt 1 discriminator 4 view .LVU360
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1296              		.loc 1 1173 8 is_stmt 0 discriminator 4 view .LVU361
 1297 000c 251D     		adds	r5, r4, #4
 1298 000e 2846     		mov	r0, r5
 1299 0010 FFF7FEFF 		bl	uxListRemove
 1300              	.LVL97:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1301              		.loc 1 1173 6 discriminator 4 view .LVU362
 1302 0014 68B9     		cbnz	r0, .L96
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1303              		.loc 1 1175 5 is_stmt 1 view .LVU363
 1304 0016 E26A     		ldr	r2, [r4, #44]
 1305 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1306 001c 9B00     		lsls	r3, r3, #2
 1307 001e 2749     		ldr	r1, .L107
 1308 0020 CB58     		ldr	r3, [r1, r3]
 1309 0022 33B9     		cbnz	r3, .L96
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1310              		.loc 1 1175 5 discriminator 1 view .LVU364
 1311 0024 0123     		movs	r3, #1
 1312 0026 9340     		lsls	r3, r3, r2
ARM GAS  /tmp/cc0mjIFM.s 			page 125


 1313 0028 2549     		ldr	r1, .L107+4
 1314 002a 0A68     		ldr	r2, [r1]
 1315 002c 22EA0302 		bic	r2, r2, r3
 1316 0030 0A60     		str	r2, [r1]
 1317              	.L96:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1318              		.loc 1 1179 29 view .LVU365
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1319              		.loc 1 1183 4 view .LVU366
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1320              		.loc 1 1183 8 is_stmt 0 view .LVU367
 1321 0032 A36A     		ldr	r3, [r4, #40]
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1322              		.loc 1 1183 6 view .LVU368
 1323 0034 1BB1     		cbz	r3, .L97
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1324              		.loc 1 1185 5 is_stmt 1 view .LVU369
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1325              		.loc 1 1185 14 is_stmt 0 view .LVU370
 1326 0036 04F11800 		add	r0, r4, #24
 1327 003a FFF7FEFF 		bl	uxListRemove
 1328              	.LVL98:
 1329              	.L97:
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1330              		.loc 1 1189 29 is_stmt 1 view .LVU371
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1331              		.loc 1 1196 4 view .LVU372
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1332              		.loc 1 1196 16 is_stmt 0 view .LVU373
 1333 003e 214A     		ldr	r2, .L107+8
 1334 0040 1368     		ldr	r3, [r2]
 1335 0042 0133     		adds	r3, r3, #1
 1336 0044 1360     		str	r3, [r2]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1337              		.loc 1 1198 4 is_stmt 1 view .LVU374
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1338              		.loc 1 1198 14 is_stmt 0 view .LVU375
 1339 0046 204B     		ldr	r3, .L107+12
 1340 0048 1B68     		ldr	r3, [r3]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1341              		.loc 1 1198 6 view .LVU376
 1342 004a A342     		cmp	r3, r4
 1343 004c 15D0     		beq	.L105
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
 1344              		.loc 1 1225 5 is_stmt 1 view .LVU377
 1345 004e 1F4A     		ldr	r2, .L107+16
 1346 0050 1368     		ldr	r3, [r2]
 1347 0052 013B     		subs	r3, r3, #1
 1348 0054 1360     		str	r3, [r2]
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1349              		.loc 1 1226 30 view .LVU378
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1350              		.loc 1 1227 5 view .LVU379
 1351 0056 2046     		mov	r0, r4
 1352 0058 FFF7FEFF 		bl	prvDeleteTCB
 1353              	.LVL99:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc0mjIFM.s 			page 126


 1354              		.loc 1 1231 5 view .LVU380
 1355 005c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1356              	.LVL100:
 1357              	.L99:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1358              		.loc 1 1234 3 view .LVU381
 1359 0060 FFF7FEFF 		bl	vPortExitCritical
 1360              	.LVL101:
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1361              		.loc 1 1238 3 view .LVU382
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1362              		.loc 1 1238 25 is_stmt 0 view .LVU383
 1363 0064 1A4B     		ldr	r3, .L107+20
 1364 0066 1B68     		ldr	r3, [r3]
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1365              		.loc 1 1238 5 view .LVU384
 1366 0068 1BB1     		cbz	r3, .L94
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1367              		.loc 1 1240 4 is_stmt 1 view .LVU385
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1368              		.loc 1 1240 14 is_stmt 0 view .LVU386
 1369 006a 174B     		ldr	r3, .L107+12
 1370 006c 1B68     		ldr	r3, [r3]
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1371              		.loc 1 1240 6 view .LVU387
 1372 006e A342     		cmp	r3, r4
 1373 0070 0CD0     		beq	.L106
 1374              	.L94:
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1375              		.loc 1 1250 2 view .LVU388
 1376 0072 38BD     		pop	{r3, r4, r5, pc}
 1377              	.LVL102:
 1378              	.L104:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1379              		.loc 1 1170 12 discriminator 1 view .LVU389
 1380 0074 144B     		ldr	r3, .L107+12
 1381 0076 1C68     		ldr	r4, [r3]
 1382              	.LVL103:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1383              		.loc 1 1170 12 discriminator 1 view .LVU390
 1384 0078 C8E7     		b	.L95
 1385              	.LVL104:
 1386              	.L105:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1387              		.loc 1 1205 5 is_stmt 1 view .LVU391
 1388 007a 2946     		mov	r1, r5
 1389 007c 1548     		ldr	r0, .L107+24
 1390 007e FFF7FEFF 		bl	vListInsertEnd
 1391              	.LVL105:
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1392              		.loc 1 1210 5 view .LVU392
 1393 0082 154A     		ldr	r2, .L107+28
 1394 0084 1368     		ldr	r3, [r2]
 1395 0086 0133     		adds	r3, r3, #1
 1396 0088 1360     		str	r3, [r2]
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1397              		.loc 1 1214 30 view .LVU393
ARM GAS  /tmp/cc0mjIFM.s 			page 127


1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1398              		.loc 1 1221 54 view .LVU394
 1399 008a E9E7     		b	.L99
 1400              	.L106:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1401              		.loc 1 1242 5 view .LVU395
 1402 008c 134B     		ldr	r3, .L107+32
 1403 008e 1B68     		ldr	r3, [r3]
 1404 0090 43B1     		cbz	r3, .L101
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1405              		.loc 1 1242 5 view .LVU396
 1406              	.LBB126:
 1407              	.LBI126:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1408              		.loc 2 191 30 view .LVU397
 1409              	.LBB127:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1410              		.loc 2 193 1 view .LVU398
 1411              		.loc 2 195 2 view .LVU399
 1412              		.syntax unified
 1413              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1414 0092 4FF05003 			mov r3, #80												
 1415 0096 83F31188 		msr basepri, r3											
 1416 009a BFF36F8F 		isb														
 1417 009e BFF34F8F 		dsb														
 1418              	
 1419              	@ 0 "" 2
 1420              	.LVL106:
 1421              		.thumb
 1422              		.syntax unified
 1423              	.L102:
 1424              		.loc 2 195 2 is_stmt 0 view .LVU400
 1425              	.LBE127:
 1426              	.LBE126:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1427              		.loc 1 1242 5 is_stmt 1 discriminator 1 view .LVU401
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1428              		.loc 1 1242 5 discriminator 1 view .LVU402
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1429              		.loc 1 1242 5 discriminator 1 view .LVU403
 1430 00a2 FEE7     		b	.L102
 1431              	.L101:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1432              		.loc 1 1242 46 discriminator 2 view .LVU404
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1433              		.loc 1 1243 5 discriminator 2 view .LVU405
 1434 00a4 4FF0E023 		mov	r3, #-536813568
 1435 00a8 4FF08052 		mov	r2, #268435456
 1436 00ac C3F8042D 		str	r2, [r3, #3332]
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1437              		.loc 1 1243 5 discriminator 2 view .LVU406
 1438              		.syntax unified
 1439              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1440 00b0 BFF34F8F 		dsb
 1441              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1442              		.loc 1 1243 5 discriminator 2 view .LVU407
ARM GAS  /tmp/cc0mjIFM.s 			page 128


 1443              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1444 00b4 BFF36F8F 		isb
 1445              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1446              		.loc 1 1243 27 discriminator 2 view .LVU408
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1447              		.loc 1 1247 29 discriminator 2 view .LVU409
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1448              		.loc 1 1250 2 is_stmt 0 discriminator 2 view .LVU410
 1449              		.thumb
 1450              		.syntax unified
 1451 00b8 DBE7     		b	.L94
 1452              	.L108:
 1453 00ba 00BF     		.align	2
 1454              	.L107:
 1455 00bc 00000000 		.word	.LANCHOR4
 1456 00c0 00000000 		.word	.LANCHOR13
 1457 00c4 00000000 		.word	.LANCHOR12
 1458 00c8 00000000 		.word	.LANCHOR10
 1459 00cc 00000000 		.word	.LANCHOR9
 1460 00d0 00000000 		.word	.LANCHOR11
 1461 00d4 00000000 		.word	.LANCHOR7
 1462 00d8 00000000 		.word	.LANCHOR14
 1463 00dc 00000000 		.word	.LANCHOR16
 1464              		.cfi_endproc
 1465              	.LFE9:
 1467              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1468              		.align	1
 1469              		.global	uxTaskPriorityGet
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1473              		.fpu fpv4-sp-d16
 1475              	uxTaskPriorityGet:
 1476              	.LVL107:
 1477              	.LFB11:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1478              		.loc 1 1479 2 is_stmt 1 view -0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1482              		.loc 1 1479 2 is_stmt 0 view .LVU412
 1483 0000 10B5     		push	{r4, lr}
 1484              	.LCFI16:
 1485              		.cfi_def_cfa_offset 8
 1486              		.cfi_offset 4, -8
 1487              		.cfi_offset 14, -4
 1488 0002 0446     		mov	r4, r0
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1489              		.loc 1 1480 2 is_stmt 1 view .LVU413
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1490              		.loc 1 1481 2 view .LVU414
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1491              		.loc 1 1483 3 view .LVU415
 1492 0004 FFF7FEFF 		bl	vPortEnterCritical
 1493              	.LVL108:
ARM GAS  /tmp/cc0mjIFM.s 			page 129


1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1494              		.loc 1 1487 4 view .LVU416
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1495              		.loc 1 1487 12 is_stmt 0 view .LVU417
 1496 0008 24B1     		cbz	r4, .L112
 1497              	.LVL109:
 1498              	.L110:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1499              		.loc 1 1488 4 is_stmt 1 discriminator 4 view .LVU418
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1500              		.loc 1 1488 13 is_stmt 0 discriminator 4 view .LVU419
 1501 000a E46A     		ldr	r4, [r4, #44]
 1502              	.LVL110:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1503              		.loc 1 1490 3 is_stmt 1 discriminator 4 view .LVU420
 1504 000c FFF7FEFF 		bl	vPortExitCritical
 1505              	.LVL111:
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1506              		.loc 1 1492 3 discriminator 4 view .LVU421
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1507              		.loc 1 1493 2 is_stmt 0 discriminator 4 view .LVU422
 1508 0010 2046     		mov	r0, r4
 1509 0012 10BD     		pop	{r4, pc}
 1510              	.LVL112:
 1511              	.L112:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1512              		.loc 1 1487 12 discriminator 1 view .LVU423
 1513 0014 014B     		ldr	r3, .L113
 1514 0016 1C68     		ldr	r4, [r3]
 1515              	.LVL113:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1516              		.loc 1 1487 12 discriminator 1 view .LVU424
 1517 0018 F7E7     		b	.L110
 1518              	.L114:
 1519 001a 00BF     		.align	2
 1520              	.L113:
 1521 001c 00000000 		.word	.LANCHOR10
 1522              		.cfi_endproc
 1523              	.LFE11:
 1525              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1526              		.align	1
 1527              		.global	uxTaskPriorityGetFromISR
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1531              		.fpu fpv4-sp-d16
 1533              	uxTaskPriorityGetFromISR:
 1534              	.LVL114:
 1535              	.LFB12:
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1536              		.loc 1 1501 2 is_stmt 1 view -0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1540              		.loc 1 1501 2 is_stmt 0 view .LVU426
 1541 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cc0mjIFM.s 			page 130


 1542              	.LCFI17:
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 4, -8
 1545              		.cfi_offset 14, -4
 1546 0002 0446     		mov	r4, r0
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1547              		.loc 1 1502 2 is_stmt 1 view .LVU427
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1548              		.loc 1 1503 2 view .LVU428
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1549              		.loc 1 1521 3 view .LVU429
 1550 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1551              	.LVL115:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1552              		.loc 1 1523 3 view .LVU430
 1553              	.LBB128:
 1554              	.LBI128:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1555              		.loc 2 207 34 view .LVU431
 1556              	.LBB129:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1557              		.loc 2 209 1 view .LVU432
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1558              		.loc 2 211 2 view .LVU433
 1559              		.syntax unified
 1560              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1561 0008 EFF31183 			mrs r3, basepri											
 1562 000c 4FF05002 		mov r2, #80												
 1563 0010 82F31188 		msr basepri, r2											
 1564 0014 BFF36F8F 		isb														
 1565 0018 BFF34F8F 		dsb														
 1566              	
 1567              	@ 0 "" 2
 1568              	.LVL116:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
ARM GAS  /tmp/cc0mjIFM.s 			page 131


 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1569              		.loc 2 223 2 view .LVU434
 1570              		.loc 2 223 2 is_stmt 0 view .LVU435
 1571              		.thumb
 1572              		.syntax unified
 1573              	.LBE129:
 1574              	.LBE128:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1575              		.loc 1 1527 4 is_stmt 1 view .LVU436
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1576              		.loc 1 1527 12 is_stmt 0 view .LVU437
 1577 001c 1CB1     		cbz	r4, .L118
 1578              	.LVL117:
 1579              	.L116:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1580              		.loc 1 1528 4 is_stmt 1 discriminator 4 view .LVU438
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1581              		.loc 1 1528 13 is_stmt 0 discriminator 4 view .LVU439
 1582 001e E06A     		ldr	r0, [r4, #44]
 1583              	.LVL118:
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1584              		.loc 1 1530 3 is_stmt 1 discriminator 4 view .LVU440
 1585              	.LBB130:
 1586              	.LBI130:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1587              		.loc 2 227 30 discriminator 4 view .LVU441
 1588              	.LBB131:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1589              		.loc 2 229 2 discriminator 4 view .LVU442
 1590              		.syntax unified
 1591              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1592 0020 83F31188 			msr basepri, r3	
 1593              	@ 0 "" 2
 1594              	.LVL119:
 1595              		.loc 2 229 2 is_stmt 0 discriminator 4 view .LVU443
 1596              		.thumb
 1597              		.syntax unified
 1598              	.LBE131:
 1599              	.LBE130:
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1600              		.loc 1 1532 3 is_stmt 1 discriminator 4 view .LVU444
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1601              		.loc 1 1533 2 is_stmt 0 discriminator 4 view .LVU445
 1602 0024 10BD     		pop	{r4, pc}
 1603              	.LVL120:
 1604              	.L118:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1605              		.loc 1 1527 12 discriminator 1 view .LVU446
 1606 0026 014A     		ldr	r2, .L119
 1607 0028 1468     		ldr	r4, [r2]
 1608              	.LVL121:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  /tmp/cc0mjIFM.s 			page 132


 1609              		.loc 1 1527 12 discriminator 1 view .LVU447
 1610 002a F8E7     		b	.L116
 1611              	.L120:
 1612              		.align	2
 1613              	.L119:
 1614 002c 00000000 		.word	.LANCHOR10
 1615              		.cfi_endproc
 1616              	.LFE12:
 1618              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1619              		.align	1
 1620              		.global	vTaskPrioritySet
 1621              		.syntax unified
 1622              		.thumb
 1623              		.thumb_func
 1624              		.fpu fpv4-sp-d16
 1626              	vTaskPrioritySet:
 1627              	.LVL122:
 1628              	.LFB13:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1629              		.loc 1 1541 2 is_stmt 1 view -0
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 0
 1632              		@ frame_needed = 0, uses_anonymous_args = 0
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1633              		.loc 1 1541 2 is_stmt 0 view .LVU449
 1634 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1635              	.LCFI18:
 1636              		.cfi_def_cfa_offset 24
 1637              		.cfi_offset 3, -24
 1638              		.cfi_offset 4, -20
 1639              		.cfi_offset 5, -16
 1640              		.cfi_offset 6, -12
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1643              		.loc 1 1542 2 is_stmt 1 view .LVU450
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1644              		.loc 1 1543 2 view .LVU451
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1645              		.loc 1 1544 2 view .LVU452
 1646              	.LVL123:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1647              		.loc 1 1546 3 view .LVU453
 1648 0002 0629     		cmp	r1, #6
 1649 0004 08D9     		bls	.L122
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1650              		.loc 1 1546 3 view .LVU454
 1651              	.LBB132:
 1652              	.LBI132:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1653              		.loc 2 191 30 view .LVU455
 1654              	.LBB133:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1655              		.loc 2 193 1 view .LVU456
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1656              		.loc 2 195 2 view .LVU457
 1657              		.syntax unified
ARM GAS  /tmp/cc0mjIFM.s 			page 133


 1658              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1659 0006 4FF05003 			mov r3, #80												
 1660 000a 83F31188 		msr basepri, r3											
 1661 000e BFF36F8F 		isb														
 1662 0012 BFF34F8F 		dsb														
 1663              	
 1664              	@ 0 "" 2
 1665              	.LVL124:
 1666              		.thumb
 1667              		.syntax unified
 1668              	.L123:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1669              		.loc 2 195 2 is_stmt 0 view .LVU458
 1670              	.LBE133:
 1671              	.LBE132:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1672              		.loc 1 1546 3 is_stmt 1 discriminator 1 view .LVU459
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1673              		.loc 1 1546 3 discriminator 1 view .LVU460
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1674              		.loc 1 1546 3 discriminator 1 view .LVU461
 1675 0016 FEE7     		b	.L123
 1676              	.L122:
 1677 0018 0546     		mov	r5, r0
 1678 001a 0C46     		mov	r4, r1
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1679              		.loc 1 1546 59 view .LVU462
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1680              		.loc 1 1549 3 view .LVU463
 1681              	.LVL125:
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1682              		.loc 1 1555 28 view .LVU464
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1683              		.loc 1 1558 3 view .LVU465
 1684 001c FFF7FEFF 		bl	vPortEnterCritical
 1685              	.LVL126:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1686              		.loc 1 1562 4 view .LVU466
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1687              		.loc 1 1562 12 is_stmt 0 view .LVU467
 1688 0020 75B1     		cbz	r5, .L136
 1689              	.LVL127:
 1690              	.L124:
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1691              		.loc 1 1564 50 is_stmt 1 discriminator 4 view .LVU468
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1692              		.loc 1 1568 5 discriminator 4 view .LVU469
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1693              		.loc 1 1568 27 is_stmt 0 discriminator 4 view .LVU470
 1694 0022 6B6C     		ldr	r3, [r5, #68]
 1695              	.LVL128:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1696              		.loc 1 1576 4 is_stmt 1 discriminator 4 view .LVU471
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1697              		.loc 1 1576 6 is_stmt 0 discriminator 4 view .LVU472
 1698 0024 9C42     		cmp	r4, r3
 1699 0026 30D0     		beq	.L125
ARM GAS  /tmp/cc0mjIFM.s 			page 134


1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1700              		.loc 1 1580 5 is_stmt 1 view .LVU473
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1701              		.loc 1 1580 7 is_stmt 0 view .LVU474
 1702 0028 0DD9     		bls	.L126
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1703              		.loc 1 1582 6 is_stmt 1 view .LVU475
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1704              		.loc 1 1582 16 is_stmt 0 view .LVU476
 1705 002a 2C4A     		ldr	r2, .L139
 1706 002c 1268     		ldr	r2, [r2]
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1707              		.loc 1 1582 8 view .LVU477
 1708 002e AA42     		cmp	r2, r5
 1709 0030 2ED0     		beq	.L132
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1710              		.loc 1 1587 7 is_stmt 1 view .LVU478
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1711              		.loc 1 1587 40 is_stmt 0 view .LVU479
 1712 0032 2A4A     		ldr	r2, .L139
 1713 0034 1268     		ldr	r2, [r2]
 1714 0036 D26A     		ldr	r2, [r2, #44]
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1715              		.loc 1 1587 9 view .LVU480
 1716 0038 A242     		cmp	r2, r4
 1717 003a 2BD9     		bls	.L133
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1718              		.loc 1 1544 13 view .LVU481
 1719 003c 0027     		movs	r7, #0
 1720 003e 07E0     		b	.L127
 1721              	.LVL129:
 1722              	.L136:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1723              		.loc 1 1562 12 discriminator 1 view .LVU482
 1724 0040 264B     		ldr	r3, .L139
 1725 0042 1D68     		ldr	r5, [r3]
 1726              	.LVL130:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1727              		.loc 1 1562 12 discriminator 1 view .LVU483
 1728 0044 EDE7     		b	.L124
 1729              	.LVL131:
 1730              	.L126:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1731              		.loc 1 1603 10 is_stmt 1 view .LVU484
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1732              		.loc 1 1603 20 is_stmt 0 view .LVU485
 1733 0046 254A     		ldr	r2, .L139
 1734 0048 1268     		ldr	r2, [r2]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1735              		.loc 1 1603 12 view .LVU486
 1736 004a AA42     		cmp	r2, r5
 1737 004c 24D0     		beq	.L134
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1738              		.loc 1 1544 13 view .LVU487
 1739 004e 0027     		movs	r7, #0
 1740              	.L127:
 1741              	.LVL132:
ARM GAS  /tmp/cc0mjIFM.s 			page 135


1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1742              		.loc 1 1615 5 is_stmt 1 view .LVU488
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1743              		.loc 1 1620 5 view .LVU489
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1744              		.loc 1 1620 27 is_stmt 0 view .LVU490
 1745 0050 EE6A     		ldr	r6, [r5, #44]
 1746              	.LVL133:
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1747              		.loc 1 1626 6 is_stmt 1 view .LVU491
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1748              		.loc 1 1626 8 is_stmt 0 view .LVU492
 1749 0052 B342     		cmp	r3, r6
 1750 0054 22D0     		beq	.L137
 1751              	.L128:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1752              		.loc 1 1632 31 is_stmt 1 view .LVU493
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1753              		.loc 1 1636 6 view .LVU494
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1754              		.loc 1 1636 28 is_stmt 0 view .LVU495
 1755 0056 6C64     		str	r4, [r5, #68]
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1756              		.loc 1 1646 5 is_stmt 1 view .LVU496
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1757              		.loc 1 1646 11 is_stmt 0 view .LVU497
 1758 0058 AB69     		ldr	r3, [r5, #24]
 1759              	.LVL134:
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1760              		.loc 1 1646 7 view .LVU498
 1761 005a 002B     		cmp	r3, #0
 1762 005c 02DB     		blt	.L129
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1763              		.loc 1 1648 6 is_stmt 1 view .LVU499
 1764 005e C4F10704 		rsb	r4, r4, #7
 1765              	.LVL135:
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1766              		.loc 1 1648 6 is_stmt 0 view .LVU500
 1767 0062 AC61     		str	r4, [r5, #24]
 1768              	.L129:
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1769              		.loc 1 1652 30 is_stmt 1 view .LVU501
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1770              		.loc 1 1659 5 view .LVU502
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1771              		.loc 1 1659 9 is_stmt 0 view .LVU503
 1772 0064 6969     		ldr	r1, [r5, #20]
 1773 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1774 006a 1D4B     		ldr	r3, .L139+4
 1775 006c 03EB8203 		add	r3, r3, r2, lsl #2
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1776              		.loc 1 1659 7 view .LVU504
 1777 0070 9942     		cmp	r1, r3
 1778 0072 15D0     		beq	.L138
 1779              	.LVL136:
 1780              	.L130:
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc0mjIFM.s 			page 136


 1781              		.loc 1 1679 30 is_stmt 1 view .LVU505
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1782              		.loc 1 1682 5 view .LVU506
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1783              		.loc 1 1682 7 is_stmt 0 view .LVU507
 1784 0074 4FB1     		cbz	r7, .L125
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1785              		.loc 1 1684 6 is_stmt 1 view .LVU508
 1786 0076 4FF0E023 		mov	r3, #-536813568
 1787 007a 4FF08052 		mov	r2, #268435456
 1788 007e C3F8042D 		str	r2, [r3, #3332]
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1789              		.loc 1 1684 6 view .LVU509
 1790              		.syntax unified
 1791              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1792 0082 BFF34F8F 		dsb
 1793              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1794              		.loc 1 1684 6 view .LVU510
 1795              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1796 0086 BFF36F8F 		isb
 1797              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1798              		.loc 1 1684 37 view .LVU511
 1799              	.LVL137:
 1800              		.thumb
 1801              		.syntax unified
 1802              	.L125:
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1803              		.loc 1 1688 30 view .LVU512
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1804              		.loc 1 1693 5 view .LVU513
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1805              		.loc 1 1696 3 view .LVU514
 1806 008a FFF7FEFF 		bl	vPortExitCritical
 1807              	.LVL138:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1808              		.loc 1 1697 2 is_stmt 0 view .LVU515
 1809 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1810              	.LVL139:
 1811              	.L132:
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1812              		.loc 1 1544 13 view .LVU516
 1813 0090 0027     		movs	r7, #0
 1814 0092 DDE7     		b	.L127
 1815              	.L133:
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1816              		.loc 1 1589 23 view .LVU517
 1817 0094 0127     		movs	r7, #1
 1818 0096 DBE7     		b	.L127
 1819              	.L134:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1820              		.loc 1 1608 21 view .LVU518
 1821 0098 0127     		movs	r7, #1
 1822 009a D9E7     		b	.L127
 1823              	.LVL140:
 1824              	.L137:
ARM GAS  /tmp/cc0mjIFM.s 			page 137


1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1825              		.loc 1 1628 7 is_stmt 1 view .LVU519
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1826              		.loc 1 1628 25 is_stmt 0 view .LVU520
 1827 009c EC62     		str	r4, [r5, #44]
 1828 009e DAE7     		b	.L128
 1829              	.LVL141:
 1830              	.L138:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1831              		.loc 1 1664 6 is_stmt 1 view .LVU521
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1832              		.loc 1 1664 10 is_stmt 0 view .LVU522
 1833 00a0 2C1D     		adds	r4, r5, #4
 1834 00a2 2046     		mov	r0, r4
 1835 00a4 FFF7FEFF 		bl	uxListRemove
 1836              	.LVL142:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1837              		.loc 1 1664 8 view .LVU523
 1838 00a8 38B9     		cbnz	r0, .L131
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1839              		.loc 1 1669 7 is_stmt 1 view .LVU524
 1840 00aa 0123     		movs	r3, #1
 1841 00ac 03FA06F6 		lsl	r6, r3, r6
 1842              	.LVL143:
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1843              		.loc 1 1669 7 is_stmt 0 view .LVU525
 1844 00b0 0C4A     		ldr	r2, .L139+8
 1845 00b2 1368     		ldr	r3, [r2]
 1846 00b4 23EA0603 		bic	r3, r3, r6
 1847 00b8 1360     		str	r3, [r2]
 1848              	.L131:
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1849              		.loc 1 1673 31 is_stmt 1 view .LVU526
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1850              		.loc 1 1675 6 view .LVU527
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1851              		.loc 1 1675 6 view .LVU528
 1852 00ba E86A     		ldr	r0, [r5, #44]
 1853 00bc 0123     		movs	r3, #1
 1854 00be 8340     		lsls	r3, r3, r0
 1855 00c0 084A     		ldr	r2, .L139+8
 1856 00c2 1168     		ldr	r1, [r2]
 1857 00c4 0B43     		orrs	r3, r3, r1
 1858 00c6 1360     		str	r3, [r2]
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1859              		.loc 1 1675 6 view .LVU529
 1860 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 1861 00cc 2146     		mov	r1, r4
 1862 00ce 044B     		ldr	r3, .L139+4
 1863 00d0 03EB8000 		add	r0, r3, r0, lsl #2
 1864 00d4 FFF7FEFF 		bl	vListInsertEnd
 1865              	.LVL144:
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1866              		.loc 1 1675 36 view .LVU530
 1867 00d8 CCE7     		b	.L130
 1868              	.L140:
 1869 00da 00BF     		.align	2
ARM GAS  /tmp/cc0mjIFM.s 			page 138


 1870              	.L139:
 1871 00dc 00000000 		.word	.LANCHOR10
 1872 00e0 00000000 		.word	.LANCHOR4
 1873 00e4 00000000 		.word	.LANCHOR13
 1874              		.cfi_endproc
 1875              	.LFE13:
 1877              		.section	.text.vTaskResume,"ax",%progbits
 1878              		.align	1
 1879              		.global	vTaskResume
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	vTaskResume:
 1886              	.LVL145:
 1887              	.LFB16:
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1888              		.loc 1 1852 2 view -0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1892              		.loc 1 1852 2 is_stmt 0 view .LVU532
 1893 0000 38B5     		push	{r3, r4, r5, lr}
 1894              	.LCFI19:
 1895              		.cfi_def_cfa_offset 16
 1896              		.cfi_offset 3, -16
 1897              		.cfi_offset 4, -12
 1898              		.cfi_offset 5, -8
 1899              		.cfi_offset 14, -4
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1900              		.loc 1 1853 2 is_stmt 1 view .LVU533
 1901              	.LVL146:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1902              		.loc 1 1856 3 view .LVU534
 1903 0002 68B1     		cbz	r0, .L147
 1904 0004 0446     		mov	r4, r0
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1905              		.loc 1 1856 32 discriminator 2 view .LVU535
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1906              		.loc 1 1860 3 discriminator 2 view .LVU536
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1907              		.loc 1 1860 15 is_stmt 0 discriminator 2 view .LVU537
 1908 0006 1D4B     		ldr	r3, .L149
 1909 0008 1B68     		ldr	r3, [r3]
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1910              		.loc 1 1860 5 discriminator 2 view .LVU538
 1911 000a 8342     		cmp	r3, r0
 1912 000c 07D0     		beq	.L141
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1913              		.loc 1 1862 4 is_stmt 1 view .LVU539
 1914 000e FFF7FEFF 		bl	vPortEnterCritical
 1915              	.LVL147:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1916              		.loc 1 1864 5 view .LVU540
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1917              		.loc 1 1864 9 is_stmt 0 view .LVU541
ARM GAS  /tmp/cc0mjIFM.s 			page 139


 1918 0012 2046     		mov	r0, r4
 1919 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1920              	.LVL148:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1921              		.loc 1 1864 7 view .LVU542
 1922 0018 58B9     		cbnz	r0, .L148
 1923              	.L145:
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1924              		.loc 1 1888 30 is_stmt 1 view .LVU543
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1925              		.loc 1 1891 4 view .LVU544
 1926 001a FFF7FEFF 		bl	vPortExitCritical
 1927              	.LVL149:
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1928              		.loc 1 1895 28 view .LVU545
 1929              	.L141:
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1930              		.loc 1 1897 2 is_stmt 0 view .LVU546
 1931 001e 38BD     		pop	{r3, r4, r5, pc}
 1932              	.LVL150:
 1933              	.L147:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1934              		.loc 1 1856 3 is_stmt 1 view .LVU547
 1935              	.LBB134:
 1936              	.LBI134:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1937              		.loc 2 191 30 view .LVU548
 1938              	.LBB135:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1939              		.loc 2 193 1 view .LVU549
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1940              		.loc 2 195 2 view .LVU550
 1941              		.syntax unified
 1942              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1943 0020 4FF05003 			mov r3, #80												
 1944 0024 83F31188 		msr basepri, r3											
 1945 0028 BFF36F8F 		isb														
 1946 002c BFF34F8F 		dsb														
 1947              	
 1948              	@ 0 "" 2
 1949              	.LVL151:
 1950              		.thumb
 1951              		.syntax unified
 1952              	.L143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1953              		.loc 2 195 2 is_stmt 0 view .LVU551
 1954              	.LBE135:
 1955              	.LBE134:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1956              		.loc 1 1856 3 is_stmt 1 discriminator 1 view .LVU552
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1957              		.loc 1 1856 3 discriminator 1 view .LVU553
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1958              		.loc 1 1856 3 discriminator 1 view .LVU554
 1959 0030 FEE7     		b	.L143
 1960              	.LVL152:
 1961              	.L148:
ARM GAS  /tmp/cc0mjIFM.s 			page 140


1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1962              		.loc 1 1866 31 view .LVU555
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1963              		.loc 1 1870 6 view .LVU556
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1964              		.loc 1 1870 15 is_stmt 0 view .LVU557
 1965 0032 251D     		adds	r5, r4, #4
 1966 0034 2846     		mov	r0, r5
 1967 0036 FFF7FEFF 		bl	uxListRemove
 1968              	.LVL153:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1969              		.loc 1 1871 6 is_stmt 1 view .LVU558
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1970              		.loc 1 1871 6 view .LVU559
 1971 003a E06A     		ldr	r0, [r4, #44]
 1972 003c 0123     		movs	r3, #1
 1973 003e 8340     		lsls	r3, r3, r0
 1974 0040 0F4A     		ldr	r2, .L149+4
 1975 0042 1168     		ldr	r1, [r2]
 1976 0044 0B43     		orrs	r3, r3, r1
 1977 0046 1360     		str	r3, [r2]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1978              		.loc 1 1871 6 view .LVU560
 1979 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1980 004c 2946     		mov	r1, r5
 1981 004e 0D4B     		ldr	r3, .L149+8
 1982 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1983 0054 FFF7FEFF 		bl	vListInsertEnd
 1984              	.LVL154:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1985              		.loc 1 1871 36 view .LVU561
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1986              		.loc 1 1874 6 view .LVU562
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1987              		.loc 1 1874 15 is_stmt 0 view .LVU563
 1988 0058 E26A     		ldr	r2, [r4, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1989              		.loc 1 1874 43 view .LVU564
 1990 005a 084B     		ldr	r3, .L149
 1991 005c 1B68     		ldr	r3, [r3]
 1992 005e DB6A     		ldr	r3, [r3, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1993              		.loc 1 1874 8 view .LVU565
 1994 0060 9A42     		cmp	r2, r3
 1995 0062 DAD3     		bcc	.L145
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1996              		.loc 1 1879 7 is_stmt 1 view .LVU566
 1997 0064 4FF0E023 		mov	r3, #-536813568
 1998 0068 4FF08052 		mov	r2, #268435456
 1999 006c C3F8042D 		str	r2, [r3, #3332]
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2000              		.loc 1 1879 7 view .LVU567
 2001              		.syntax unified
 2002              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2003 0070 BFF34F8F 		dsb
 2004              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc0mjIFM.s 			page 141


 2005              		.loc 1 1879 7 view .LVU568
 2006              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2007 0074 BFF36F8F 		isb
 2008              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2009              		.loc 1 1879 38 view .LVU569
 2010              		.thumb
 2011              		.syntax unified
 2012 0078 CFE7     		b	.L145
 2013              	.L150:
 2014 007a 00BF     		.align	2
 2015              	.L149:
 2016 007c 00000000 		.word	.LANCHOR10
 2017 0080 00000000 		.word	.LANCHOR13
 2018 0084 00000000 		.word	.LANCHOR4
 2019              		.cfi_endproc
 2020              	.LFE16:
 2022              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2023              		.align	1
 2024              		.global	xTaskResumeFromISR
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2028              		.fpu fpv4-sp-d16
 2030              	xTaskResumeFromISR:
 2031              	.LVL155:
 2032              	.LFB17:
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2033              		.loc 1 1906 2 view -0
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 0
 2036              		@ frame_needed = 0, uses_anonymous_args = 0
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2037              		.loc 1 1906 2 is_stmt 0 view .LVU571
 2038 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2039              	.LCFI20:
 2040              		.cfi_def_cfa_offset 24
 2041              		.cfi_offset 3, -24
 2042              		.cfi_offset 4, -20
 2043              		.cfi_offset 5, -16
 2044              		.cfi_offset 6, -12
 2045              		.cfi_offset 7, -8
 2046              		.cfi_offset 14, -4
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2047              		.loc 1 1907 2 is_stmt 1 view .LVU572
 2048              	.LVL156:
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 2049              		.loc 1 1908 2 view .LVU573
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2050              		.loc 1 1909 2 view .LVU574
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2051              		.loc 1 1911 3 view .LVU575
 2052 0002 90B3     		cbz	r0, .L159
 2053 0004 0446     		mov	r4, r0
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2054              		.loc 1 1911 32 discriminator 2 view .LVU576
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 142


 2055              		.loc 1 1929 3 discriminator 2 view .LVU577
 2056 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2057              	.LVL157:
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2058              		.loc 1 1931 3 discriminator 2 view .LVU578
 2059              	.LBB136:
 2060              	.LBI136:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2061              		.loc 2 207 34 discriminator 2 view .LVU579
 2062              	.LBB137:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2063              		.loc 2 209 1 discriminator 2 view .LVU580
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2064              		.loc 2 211 2 discriminator 2 view .LVU581
 2065              		.syntax unified
 2066              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2067 000a EFF31186 			mrs r6, basepri											
 2068 000e 4FF05003 		mov r3, #80												
 2069 0012 83F31188 		msr basepri, r3											
 2070 0016 BFF36F8F 		isb														
 2071 001a BFF34F8F 		dsb														
 2072              	
 2073              	@ 0 "" 2
 2074              	.LVL158:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2075              		.loc 2 223 2 discriminator 2 view .LVU582
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2076              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU583
 2077              		.thumb
 2078              		.syntax unified
 2079              	.LBE137:
 2080              	.LBE136:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2081              		.loc 1 1933 4 is_stmt 1 discriminator 2 view .LVU584
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2082              		.loc 1 1933 8 is_stmt 0 discriminator 2 view .LVU585
 2083 001e 2046     		mov	r0, r4
 2084 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2085              	.LVL159:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2086              		.loc 1 1933 6 discriminator 2 view .LVU586
 2087 0024 0546     		mov	r5, r0
 2088 0026 E0B1     		cbz	r0, .L154
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2089              		.loc 1 1935 39 is_stmt 1 view .LVU587
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2090              		.loc 1 1938 5 view .LVU588
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2091              		.loc 1 1938 30 is_stmt 0 view .LVU589
 2092 0028 194B     		ldr	r3, .L160
 2093 002a 1B68     		ldr	r3, [r3]
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2094              		.loc 1 1938 7 view .LVU590
 2095 002c 43BB     		cbnz	r3, .L155
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2096              		.loc 1 1942 6 is_stmt 1 view .LVU591
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cc0mjIFM.s 			page 143


 2097              		.loc 1 1942 15 is_stmt 0 view .LVU592
 2098 002e E26A     		ldr	r2, [r4, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2099              		.loc 1 1942 43 view .LVU593
 2100 0030 184B     		ldr	r3, .L160+4
 2101 0032 1B68     		ldr	r3, [r3]
 2102 0034 DB6A     		ldr	r3, [r3, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2103              		.loc 1 1942 8 view .LVU594
 2104 0036 9A42     		cmp	r2, r3
 2105 0038 20D2     		bcs	.L157
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2106              		.loc 1 1907 13 view .LVU595
 2107 003a 0025     		movs	r5, #0
 2108              	.L156:
 2109              	.LVL160:
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2110              		.loc 1 1948 31 is_stmt 1 view .LVU596
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2111              		.loc 1 1951 6 view .LVU597
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2112              		.loc 1 1951 15 is_stmt 0 view .LVU598
 2113 003c 271D     		adds	r7, r4, #4
 2114 003e 3846     		mov	r0, r7
 2115 0040 FFF7FEFF 		bl	uxListRemove
 2116              	.LVL161:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2117              		.loc 1 1952 6 is_stmt 1 view .LVU599
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2118              		.loc 1 1952 6 view .LVU600
 2119 0044 E06A     		ldr	r0, [r4, #44]
 2120 0046 0123     		movs	r3, #1
 2121 0048 8340     		lsls	r3, r3, r0
 2122 004a 134A     		ldr	r2, .L160+8
 2123 004c 1168     		ldr	r1, [r2]
 2124 004e 0B43     		orrs	r3, r3, r1
 2125 0050 1360     		str	r3, [r2]
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2126              		.loc 1 1952 6 view .LVU601
 2127 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2128 0056 3946     		mov	r1, r7
 2129 0058 104B     		ldr	r3, .L160+12
 2130 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2131 005e FFF7FEFF 		bl	vListInsertEnd
 2132              	.LVL162:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2133              		.loc 1 1952 36 view .LVU602
 2134              	.L154:
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2135              		.loc 1 1964 29 view .LVU603
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2136              		.loc 1 1967 3 view .LVU604
 2137              	.LBB138:
 2138              	.LBI138:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2139              		.loc 2 227 30 view .LVU605
 2140              	.LBB139:
ARM GAS  /tmp/cc0mjIFM.s 			page 144


 2141              		.loc 2 229 2 view .LVU606
 2142              		.syntax unified
 2143              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2144 0062 86F31188 			msr basepri, r6	
 2145              	@ 0 "" 2
 2146              	.LVL163:
 2147              		.loc 2 229 2 is_stmt 0 view .LVU607
 2148              		.thumb
 2149              		.syntax unified
 2150              	.LBE139:
 2151              	.LBE138:
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2152              		.loc 1 1969 3 is_stmt 1 view .LVU608
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2153              		.loc 1 1970 2 is_stmt 0 view .LVU609
 2154 0066 2846     		mov	r0, r5
 2155 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2156              	.LVL164:
 2157              	.L159:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2158              		.loc 1 1911 3 is_stmt 1 view .LVU610
 2159              	.LBB140:
 2160              	.LBI140:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2161              		.loc 2 191 30 view .LVU611
 2162              	.LBB141:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2163              		.loc 2 193 1 view .LVU612
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2164              		.loc 2 195 2 view .LVU613
 2165              		.syntax unified
 2166              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2167 006a 4FF05003 			mov r3, #80												
 2168 006e 83F31188 		msr basepri, r3											
 2169 0072 BFF36F8F 		isb														
 2170 0076 BFF34F8F 		dsb														
 2171              	
 2172              	@ 0 "" 2
 2173              	.LVL165:
 2174              		.thumb
 2175              		.syntax unified
 2176              	.L153:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2177              		.loc 2 195 2 is_stmt 0 view .LVU614
 2178              	.LBE141:
 2179              	.LBE140:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2180              		.loc 1 1911 3 is_stmt 1 discriminator 1 view .LVU615
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2181              		.loc 1 1911 3 discriminator 1 view .LVU616
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2182              		.loc 1 1911 3 discriminator 1 view .LVU617
 2183 007a FEE7     		b	.L153
 2184              	.LVL166:
 2185              	.L157:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2186              		.loc 1 1944 22 is_stmt 0 view .LVU618
ARM GAS  /tmp/cc0mjIFM.s 			page 145


 2187 007c 0125     		movs	r5, #1
 2188 007e DDE7     		b	.L156
 2189              	.L155:
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2190              		.loc 1 1959 6 is_stmt 1 view .LVU619
 2191 0080 04F11801 		add	r1, r4, #24
 2192 0084 0648     		ldr	r0, .L160+16
 2193 0086 FFF7FEFF 		bl	vListInsertEnd
 2194              	.LVL167:
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2195              		.loc 1 1907 13 is_stmt 0 view .LVU620
 2196 008a 0025     		movs	r5, #0
 2197 008c E9E7     		b	.L154
 2198              	.L161:
 2199 008e 00BF     		.align	2
 2200              	.L160:
 2201 0090 00000000 		.word	.LANCHOR16
 2202 0094 00000000 		.word	.LANCHOR10
 2203 0098 00000000 		.word	.LANCHOR13
 2204 009c 00000000 		.word	.LANCHOR4
 2205 00a0 00000000 		.word	.LANCHOR1
 2206              		.cfi_endproc
 2207              	.LFE17:
 2209              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2210              		.align	2
 2211              	.LC0:
 2212 0000 49444C45 		.ascii	"IDLE\000"
 2212      00
 2213              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2214              		.align	1
 2215              		.global	vTaskStartScheduler
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2219              		.fpu fpv4-sp-d16
 2221              	vTaskStartScheduler:
 2222              	.LFB18:
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2223              		.loc 1 1976 1 is_stmt 1 view -0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 16
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227 0000 10B5     		push	{r4, lr}
 2228              	.LCFI21:
 2229              		.cfi_def_cfa_offset 8
 2230              		.cfi_offset 4, -8
 2231              		.cfi_offset 14, -4
 2232 0002 88B0     		sub	sp, sp, #32
 2233              	.LCFI22:
 2234              		.cfi_def_cfa_offset 40
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2235              		.loc 1 1977 1 view .LVU622
 2236              	.LBB142:
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2237              		.loc 1 1982 3 view .LVU623
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2238              		.loc 1 1982 17 is_stmt 0 view .LVU624
ARM GAS  /tmp/cc0mjIFM.s 			page 146


 2239 0004 0024     		movs	r4, #0
 2240 0006 0594     		str	r4, [sp, #20]
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2241              		.loc 1 1983 3 is_stmt 1 view .LVU625
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2242              		.loc 1 1983 16 is_stmt 0 view .LVU626
 2243 0008 0694     		str	r4, [sp, #24]
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2244              		.loc 1 1984 3 is_stmt 1 view .LVU627
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2245              		.loc 1 1988 3 view .LVU628
 2246 000a 07AA     		add	r2, sp, #28
 2247 000c 06A9     		add	r1, sp, #24
 2248 000e 05A8     		add	r0, sp, #20
 2249 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2250              	.LVL168:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2251              		.loc 1 1989 3 view .LVU629
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2252              		.loc 1 1989 21 is_stmt 0 view .LVU630
 2253 0014 059B     		ldr	r3, [sp, #20]
 2254 0016 0293     		str	r3, [sp, #8]
 2255 0018 069B     		ldr	r3, [sp, #24]
 2256 001a 0193     		str	r3, [sp, #4]
 2257 001c 0094     		str	r4, [sp]
 2258 001e 2346     		mov	r3, r4
 2259 0020 079A     		ldr	r2, [sp, #28]
 2260 0022 0E49     		ldr	r1, .L166
 2261 0024 0E48     		ldr	r0, .L166+4
 2262 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2263              	.LVL169:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2264              		.loc 1 1989 19 view .LVU631
 2265 002a 0E4B     		ldr	r3, .L166+8
 2266 002c 1860     		str	r0, [r3]
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2267              		.loc 1 1997 3 is_stmt 1 view .LVU632
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2268              		.loc 1 1997 5 is_stmt 0 view .LVU633
 2269 002e 90B1     		cbz	r0, .L162
 2270              	.LVL170:
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2271              		.loc 1 1997 5 view .LVU634
 2272              	.LBE142:
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2273              		.loc 1 2031 2 is_stmt 1 view .LVU635
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2274              		.loc 1 2047 3 view .LVU636
 2275              	.LBB143:
 2276              	.LBI143:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2277              		.loc 2 191 30 view .LVU637
 2278              	.LBB144:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2279              		.loc 2 193 1 view .LVU638
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2280              		.loc 2 195 2 view .LVU639
ARM GAS  /tmp/cc0mjIFM.s 			page 147


 2281              		.syntax unified
 2282              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2283 0030 4FF05003 			mov r3, #80												
 2284 0034 83F31188 		msr basepri, r3											
 2285 0038 BFF36F8F 		isb														
 2286 003c BFF34F8F 		dsb														
 2287              	
 2288              	@ 0 "" 2
 2289              		.thumb
 2290              		.syntax unified
 2291              	.LBE144:
 2292              	.LBE143:
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2293              		.loc 1 2059 3 view .LVU640
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2294              		.loc 1 2059 24 is_stmt 0 view .LVU641
 2295 0040 094B     		ldr	r3, .L166+12
 2296 0042 4FF0FF32 		mov	r2, #-1
 2297 0046 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2298              		.loc 1 2060 3 is_stmt 1 view .LVU642
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2299              		.loc 1 2060 21 is_stmt 0 view .LVU643
 2300 0048 084B     		ldr	r3, .L166+16
 2301 004a 0122     		movs	r2, #1
 2302 004c 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2303              		.loc 1 2061 3 is_stmt 1 view .LVU644
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2304              		.loc 1 2061 14 is_stmt 0 view .LVU645
 2305 004e 084B     		ldr	r3, .L166+20
 2306 0050 1C60     		str	r4, [r3]
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2307              		.loc 1 2069 43 is_stmt 1 view .LVU646
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2308              		.loc 1 2071 26 view .LVU647
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2309              		.loc 1 2075 3 view .LVU648
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2310              		.loc 1 2075 7 is_stmt 0 view .LVU649
 2311 0052 FFF7FEFF 		bl	xPortStartScheduler
 2312              	.LVL171:
 2313              	.L162:
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2314              		.loc 1 2096 1 view .LVU650
 2315 0056 08B0     		add	sp, sp, #32
 2316              	.LCFI23:
 2317              		.cfi_def_cfa_offset 8
 2318              		@ sp needed
 2319 0058 10BD     		pop	{r4, pc}
 2320              	.L167:
 2321 005a 00BF     		.align	2
 2322              	.L166:
 2323 005c 00000000 		.word	.LC0
 2324 0060 00000000 		.word	prvIdleTask
 2325 0064 00000000 		.word	.LANCHOR17
 2326 0068 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/cc0mjIFM.s 			page 148


 2327 006c 00000000 		.word	.LANCHOR11
 2328 0070 00000000 		.word	.LANCHOR15
 2329              		.cfi_endproc
 2330              	.LFE18:
 2332              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2333              		.align	1
 2334              		.global	vTaskEndScheduler
 2335              		.syntax unified
 2336              		.thumb
 2337              		.thumb_func
 2338              		.fpu fpv4-sp-d16
 2340              	vTaskEndScheduler:
 2341              	.LFB19:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2342              		.loc 1 2100 1 is_stmt 1 view -0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346 0000 08B5     		push	{r3, lr}
 2347              	.LCFI24:
 2348              		.cfi_def_cfa_offset 8
 2349              		.cfi_offset 3, -8
 2350              		.cfi_offset 14, -4
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2351              		.loc 1 2104 2 view .LVU652
 2352              	.LBB145:
 2353              	.LBI145:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2354              		.loc 2 191 30 view .LVU653
 2355              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2356              		.loc 2 193 1 view .LVU654
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2357              		.loc 2 195 2 view .LVU655
 2358              		.syntax unified
 2359              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2360 0002 4FF05003 			mov r3, #80												
 2361 0006 83F31188 		msr basepri, r3											
 2362 000a BFF36F8F 		isb														
 2363 000e BFF34F8F 		dsb														
 2364              	
 2365              	@ 0 "" 2
 2366              		.thumb
 2367              		.syntax unified
 2368              	.LBE146:
 2369              	.LBE145:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2370              		.loc 1 2105 2 view .LVU656
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2371              		.loc 1 2105 20 is_stmt 0 view .LVU657
 2372 0012 034B     		ldr	r3, .L170
 2373 0014 0022     		movs	r2, #0
 2374 0016 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2375              		.loc 1 2106 2 is_stmt 1 view .LVU658
 2376 0018 FFF7FEFF 		bl	vPortEndScheduler
 2377              	.LVL172:
ARM GAS  /tmp/cc0mjIFM.s 			page 149


2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2378              		.loc 1 2107 1 is_stmt 0 view .LVU659
 2379 001c 08BD     		pop	{r3, pc}
 2380              	.L171:
 2381 001e 00BF     		.align	2
 2382              	.L170:
 2383 0020 00000000 		.word	.LANCHOR11
 2384              		.cfi_endproc
 2385              	.LFE19:
 2387              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2388              		.align	1
 2389              		.global	vTaskSuspendAll
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2393              		.fpu fpv4-sp-d16
 2395              	vTaskSuspendAll:
 2396              	.LFB20:
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2397              		.loc 1 2111 1 is_stmt 1 view -0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401              		@ link register save eliminated.
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2402              		.loc 1 2119 24 view .LVU661
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2403              		.loc 1 2123 2 view .LVU662
 2404 0000 024A     		ldr	r2, .L173
 2405 0002 1368     		ldr	r3, [r2]
 2406 0004 0133     		adds	r3, r3, #1
 2407 0006 1360     		str	r3, [r2]
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2408              		.loc 1 2127 2 view .LVU663
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2409              		.loc 1 2128 1 is_stmt 0 view .LVU664
 2410 0008 7047     		bx	lr
 2411              	.L174:
 2412 000a 00BF     		.align	2
 2413              	.L173:
 2414 000c 00000000 		.word	.LANCHOR16
 2415              		.cfi_endproc
 2416              	.LFE20:
 2418              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2419              		.align	1
 2420              		.global	xTaskGetTickCount
 2421              		.syntax unified
 2422              		.thumb
 2423              		.thumb_func
 2424              		.fpu fpv4-sp-d16
 2426              	xTaskGetTickCount:
 2427              	.LFB22:
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2428              		.loc 1 2305 1 is_stmt 1 view -0
 2429              		.cfi_startproc
 2430              		@ args = 0, pretend = 0, frame = 0
 2431              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc0mjIFM.s 			page 150


 2432              		@ link register save eliminated.
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2433              		.loc 1 2306 1 view .LVU666
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2434              		.loc 1 2309 32 view .LVU667
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2435              		.loc 1 2311 3 view .LVU668
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2436              		.loc 1 2311 10 is_stmt 0 view .LVU669
 2437 0000 014B     		ldr	r3, .L176
 2438 0002 1868     		ldr	r0, [r3]
 2439              	.LVL173:
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2440              		.loc 1 2313 31 is_stmt 1 view .LVU670
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2441              		.loc 1 2315 2 view .LVU671
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2442              		.loc 1 2316 1 is_stmt 0 view .LVU672
 2443 0004 7047     		bx	lr
 2444              	.L177:
 2445 0006 00BF     		.align	2
 2446              	.L176:
 2447 0008 00000000 		.word	.LANCHOR15
 2448              		.cfi_endproc
 2449              	.LFE22:
 2451              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2452              		.align	1
 2453              		.global	xTaskGetTickCountFromISR
 2454              		.syntax unified
 2455              		.thumb
 2456              		.thumb_func
 2457              		.fpu fpv4-sp-d16
 2459              	xTaskGetTickCountFromISR:
 2460              	.LFB23:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2461              		.loc 1 2320 1 is_stmt 1 view -0
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 0
 2464              		@ frame_needed = 0, uses_anonymous_args = 0
 2465 0000 08B5     		push	{r3, lr}
 2466              	.LCFI25:
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 3, -8
 2469              		.cfi_offset 14, -4
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2470              		.loc 1 2321 1 view .LVU674
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2471              		.loc 1 2322 1 view .LVU675
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2472              		.loc 1 2338 2 view .LVU676
 2473 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2474              	.LVL174:
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2475              		.loc 1 2340 2 view .LVU677
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2476              		.loc 1 2342 3 view .LVU678
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc0mjIFM.s 			page 151


 2477              		.loc 1 2342 11 is_stmt 0 view .LVU679
 2478 0006 014B     		ldr	r3, .L180
 2479 0008 1868     		ldr	r0, [r3]
 2480              	.LVL175:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2481              		.loc 1 2344 2 is_stmt 1 view .LVU680
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2482              		.loc 1 2346 2 view .LVU681
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2483              		.loc 1 2347 1 is_stmt 0 view .LVU682
 2484 000a 08BD     		pop	{r3, pc}
 2485              	.L181:
 2486              		.align	2
 2487              	.L180:
 2488 000c 00000000 		.word	.LANCHOR15
 2489              		.cfi_endproc
 2490              	.LFE23:
 2492              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2493              		.align	1
 2494              		.global	uxTaskGetNumberOfTasks
 2495              		.syntax unified
 2496              		.thumb
 2497              		.thumb_func
 2498              		.fpu fpv4-sp-d16
 2500              	uxTaskGetNumberOfTasks:
 2501              	.LFB24:
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2502              		.loc 1 2351 1 is_stmt 1 view -0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 0
 2505              		@ frame_needed = 0, uses_anonymous_args = 0
 2506              		@ link register save eliminated.
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2507              		.loc 1 2354 2 view .LVU684
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2508              		.loc 1 2354 9 is_stmt 0 view .LVU685
 2509 0000 014B     		ldr	r3, .L183
 2510 0002 1868     		ldr	r0, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2511              		.loc 1 2355 1 view .LVU686
 2512 0004 7047     		bx	lr
 2513              	.L184:
 2514 0006 00BF     		.align	2
 2515              	.L183:
 2516 0008 00000000 		.word	.LANCHOR9
 2517              		.cfi_endproc
 2518              	.LFE24:
 2520              		.section	.text.pcTaskGetName,"ax",%progbits
 2521              		.align	1
 2522              		.global	pcTaskGetName
 2523              		.syntax unified
 2524              		.thumb
 2525              		.thumb_func
 2526              		.fpu fpv4-sp-d16
 2528              	pcTaskGetName:
 2529              	.LVL176:
 2530              	.LFB25:
ARM GAS  /tmp/cc0mjIFM.s 			page 152


2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2531              		.loc 1 2359 1 is_stmt 1 view -0
 2532              		.cfi_startproc
 2533              		@ args = 0, pretend = 0, frame = 0
 2534              		@ frame_needed = 0, uses_anonymous_args = 0
 2535              		@ link register save eliminated.
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2536              		.loc 1 2360 1 view .LVU688
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2537              		.loc 1 2364 2 view .LVU689
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2538              		.loc 1 2364 10 is_stmt 0 view .LVU690
 2539 0000 0346     		mov	r3, r0
 2540 0002 18B1     		cbz	r0, .L189
 2541              	.LVL177:
 2542              	.L186:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2543              		.loc 1 2365 2 is_stmt 1 discriminator 4 view .LVU691
 2544 0004 2BB1     		cbz	r3, .L190
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2545              		.loc 1 2365 23 discriminator 2 view .LVU692
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2546              		.loc 1 2366 2 discriminator 2 view .LVU693
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2547              		.loc 1 2367 1 is_stmt 0 discriminator 2 view .LVU694
 2548 0006 03F13400 		add	r0, r3, #52
 2549 000a 7047     		bx	lr
 2550              	.LVL178:
 2551              	.L189:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2552              		.loc 1 2364 10 discriminator 1 view .LVU695
 2553 000c 054B     		ldr	r3, .L191
 2554 000e 1B68     		ldr	r3, [r3]
 2555              	.LVL179:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2556              		.loc 1 2364 10 discriminator 1 view .LVU696
 2557 0010 F8E7     		b	.L186
 2558              	.LVL180:
 2559              	.L190:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2560              		.loc 1 2365 2 is_stmt 1 view .LVU697
 2561              	.LBB147:
 2562              	.LBI147:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2563              		.loc 2 191 30 view .LVU698
 2564              	.LBB148:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2565              		.loc 2 193 1 view .LVU699
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2566              		.loc 2 195 2 view .LVU700
 2567              		.syntax unified
 2568              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2569 0012 4FF05003 			mov r3, #80												
 2570 0016 83F31188 		msr basepri, r3											
 2571 001a BFF36F8F 		isb														
 2572 001e BFF34F8F 		dsb														
 2573              	
ARM GAS  /tmp/cc0mjIFM.s 			page 153


 2574              	@ 0 "" 2
 2575              	.LVL181:
 2576              		.thumb
 2577              		.syntax unified
 2578              	.L188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2579              		.loc 2 195 2 is_stmt 0 view .LVU701
 2580              	.LBE148:
 2581              	.LBE147:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2582              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU702
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2583              		.loc 1 2365 2 discriminator 1 view .LVU703
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2584              		.loc 1 2365 2 discriminator 1 view .LVU704
 2585 0022 FEE7     		b	.L188
 2586              	.L192:
 2587              		.align	2
 2588              	.L191:
 2589 0024 00000000 		.word	.LANCHOR10
 2590              		.cfi_endproc
 2591              	.LFE25:
 2593              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2594              		.align	1
 2595              		.global	xTaskIncrementTick
 2596              		.syntax unified
 2597              		.thumb
 2598              		.thumb_func
 2599              		.fpu fpv4-sp-d16
 2601              	xTaskIncrementTick:
 2602              	.LFB27:
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2603              		.loc 1 2708 1 view -0
 2604              		.cfi_startproc
 2605              		@ args = 0, pretend = 0, frame = 0
 2606              		@ frame_needed = 0, uses_anonymous_args = 0
 2607 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2608              	.LCFI26:
 2609              		.cfi_def_cfa_offset 24
 2610              		.cfi_offset 3, -24
 2611              		.cfi_offset 4, -20
 2612              		.cfi_offset 5, -16
 2613              		.cfi_offset 6, -12
 2614              		.cfi_offset 7, -8
 2615              		.cfi_offset 14, -4
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2616              		.loc 1 2709 1 view .LVU706
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2617              		.loc 1 2710 1 view .LVU707
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2618              		.loc 1 2711 1 view .LVU708
 2619              	.LVL182:
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2620              		.loc 1 2716 40 view .LVU709
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2621              		.loc 1 2717 2 view .LVU710
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc0mjIFM.s 			page 154


 2622              		.loc 1 2717 27 is_stmt 0 view .LVU711
 2623 0002 3F4B     		ldr	r3, .L216
 2624 0004 1B68     		ldr	r3, [r3]
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2625              		.loc 1 2717 4 view .LVU712
 2626 0006 002B     		cmp	r3, #0
 2627 0008 70D1     		bne	.L194
 2628              	.LBB149:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2629              		.loc 1 2721 3 is_stmt 1 view .LVU713
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2630              		.loc 1 2721 49 is_stmt 0 view .LVU714
 2631 000a 3E4B     		ldr	r3, .L216+4
 2632 000c 1D68     		ldr	r5, [r3]
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2633              		.loc 1 2721 20 view .LVU715
 2634 000e 0135     		adds	r5, r5, #1
 2635              	.LVL183:
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2636              		.loc 1 2725 3 is_stmt 1 view .LVU716
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2637              		.loc 1 2725 14 is_stmt 0 view .LVU717
 2638 0010 1D60     		str	r5, [r3]
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2639              		.loc 1 2727 3 is_stmt 1 view .LVU718
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2640              		.loc 1 2727 5 is_stmt 0 view .LVU719
 2641 0012 C5B9     		cbnz	r5, .L195
 2642              	.LBB150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2643              		.loc 1 2729 4 is_stmt 1 view .LVU720
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2644              		.loc 1 2729 4 view .LVU721
 2645 0014 3C4B     		ldr	r3, .L216+8
 2646 0016 1B68     		ldr	r3, [r3]
 2647 0018 1B68     		ldr	r3, [r3]
 2648 001a 43B1     		cbz	r3, .L196
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2649              		.loc 1 2729 4 view .LVU722
 2650              	.LBB151:
 2651              	.LBI151:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2652              		.loc 2 191 30 view .LVU723
 2653              	.LBB152:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2654              		.loc 2 193 1 view .LVU724
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2655              		.loc 2 195 2 view .LVU725
 2656              		.syntax unified
 2657              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2658 001c 4FF05003 			mov r3, #80												
 2659 0020 83F31188 		msr basepri, r3											
 2660 0024 BFF36F8F 		isb														
 2661 0028 BFF34F8F 		dsb														
 2662              	
 2663              	@ 0 "" 2
 2664              	.LVL184:
ARM GAS  /tmp/cc0mjIFM.s 			page 155


 2665              		.thumb
 2666              		.syntax unified
 2667              	.L197:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2668              		.loc 2 195 2 is_stmt 0 view .LVU726
 2669              	.LBE152:
 2670              	.LBE151:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2671              		.loc 1 2729 4 is_stmt 1 discriminator 1 view .LVU727
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2672              		.loc 1 2729 4 discriminator 1 view .LVU728
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2673              		.loc 1 2729 4 discriminator 1 view .LVU729
 2674 002c FEE7     		b	.L197
 2675              	.L196:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2676              		.loc 1 2729 4 discriminator 2 view .LVU730
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2677              		.loc 1 2729 4 discriminator 2 view .LVU731
 2678 002e 364A     		ldr	r2, .L216+8
 2679 0030 1168     		ldr	r1, [r2]
 2680              	.LVL185:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2681              		.loc 1 2729 4 discriminator 2 view .LVU732
 2682 0032 364B     		ldr	r3, .L216+12
 2683 0034 1868     		ldr	r0, [r3]
 2684 0036 1060     		str	r0, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2685              		.loc 1 2729 4 discriminator 2 view .LVU733
 2686 0038 1960     		str	r1, [r3]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2687              		.loc 1 2729 4 discriminator 2 view .LVU734
 2688 003a 354A     		ldr	r2, .L216+16
 2689 003c 1368     		ldr	r3, [r2]
 2690 003e 0133     		adds	r3, r3, #1
 2691 0040 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2692              		.loc 1 2729 4 discriminator 2 view .LVU735
 2693 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2694              	.LVL186:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2695              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU736
 2696              	.LBE150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2697              		.loc 1 2729 30 is_stmt 1 discriminator 2 view .LVU737
 2698              	.L195:
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2699              		.loc 1 2733 28 view .LVU738
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2700              		.loc 1 2740 3 view .LVU739
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2701              		.loc 1 2740 23 is_stmt 0 view .LVU740
 2702 0046 334B     		ldr	r3, .L216+20
 2703 0048 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2704              		.loc 1 2740 5 view .LVU741
 2705 004a AB42     		cmp	r3, r5
ARM GAS  /tmp/cc0mjIFM.s 			page 156


 2706 004c 41D9     		bls	.L208
 2707              	.LBE149:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2708              		.loc 1 2711 12 view .LVU742
 2709 004e 0027     		movs	r7, #0
 2710              	.LVL187:
 2711              	.L199:
 2712              	.LBB153:
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2713              		.loc 1 2823 4 is_stmt 1 view .LVU743
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2714              		.loc 1 2823 8 is_stmt 0 view .LVU744
 2715 0050 314B     		ldr	r3, .L216+24
 2716 0052 1B68     		ldr	r3, [r3]
 2717 0054 DB6A     		ldr	r3, [r3, #44]
 2718 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2719 005a 9A00     		lsls	r2, r3, #2
 2720 005c 2F4B     		ldr	r3, .L216+28
 2721 005e 9B58     		ldr	r3, [r3, r2]
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2722              		.loc 1 2823 6 view .LVU745
 2723 0060 012B     		cmp	r3, #1
 2724 0062 00D9     		bls	.L205
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2725              		.loc 1 2825 21 view .LVU746
 2726 0064 0127     		movs	r7, #1
 2727              	.LVL188:
 2728              	.L205:
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2729              		.loc 1 2829 29 is_stmt 1 view .LVU747
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2730              		.loc 1 2838 4 view .LVU748
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2731              		.loc 1 2838 21 is_stmt 0 view .LVU749
 2732 0066 2E4B     		ldr	r3, .L216+32
 2733 0068 1B68     		ldr	r3, [r3]
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2734              		.loc 1 2838 6 view .LVU750
 2735 006a 002B     		cmp	r3, #0
 2736 006c 3BD0     		beq	.L213
 2737              	.L206:
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2738              		.loc 1 2844 29 is_stmt 1 view .LVU751
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2739              		.loc 1 2851 4 view .LVU752
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2740              		.loc 1 2851 22 is_stmt 0 view .LVU753
 2741 006e 2D4B     		ldr	r3, .L216+36
 2742 0070 1B68     		ldr	r3, [r3]
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2743              		.loc 1 2851 6 view .LVU754
 2744 0072 002B     		cmp	r3, #0
 2745 0074 41D0     		beq	.L193
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2746              		.loc 1 2853 21 view .LVU755
 2747 0076 0127     		movs	r7, #1
 2748              	.LVL189:
ARM GAS  /tmp/cc0mjIFM.s 			page 157


2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2749              		.loc 1 2853 21 view .LVU756
 2750              	.LBE153:
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2751              		.loc 1 2875 2 is_stmt 1 view .LVU757
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2752              		.loc 1 2875 9 is_stmt 0 view .LVU758
 2753 0078 3FE0     		b	.L193
 2754              	.LVL190:
 2755              	.L209:
 2756              	.LBB154:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2757              		.loc 1 2806 24 view .LVU759
 2758 007a 0127     		movs	r7, #1
 2759              	.LVL191:
 2760              	.L198:
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2761              		.loc 1 2742 4 is_stmt 1 view .LVU760
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2762              		.loc 1 2744 5 view .LVU761
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2763              		.loc 1 2744 9 is_stmt 0 view .LVU762
 2764 007c 224B     		ldr	r3, .L216+8
 2765 007e 1B68     		ldr	r3, [r3]
 2766 0080 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2767              		.loc 1 2744 7 view .LVU763
 2768 0082 43B3     		cbz	r3, .L214
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2769              		.loc 1 2760 6 is_stmt 1 view .LVU764
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2770              		.loc 1 2760 14 is_stmt 0 view .LVU765
 2771 0084 204B     		ldr	r3, .L216+8
 2772 0086 1B68     		ldr	r3, [r3]
 2773 0088 DB68     		ldr	r3, [r3, #12]
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2774              		.loc 1 2760 12 view .LVU766
 2775 008a DC68     		ldr	r4, [r3, #12]
 2776              	.LVL192:
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2777              		.loc 1 2761 6 is_stmt 1 view .LVU767
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2778              		.loc 1 2761 17 is_stmt 0 view .LVU768
 2779 008c 6368     		ldr	r3, [r4, #4]
 2780              	.LVL193:
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2781              		.loc 1 2763 6 is_stmt 1 view .LVU769
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2782              		.loc 1 2763 8 is_stmt 0 view .LVU770
 2783 008e 9D42     		cmp	r5, r3
 2784 0090 26D3     		bcc	.L215
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2785              		.loc 1 2775 31 is_stmt 1 view .LVU771
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2786              		.loc 1 2779 6 view .LVU772
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2787              		.loc 1 2779 15 is_stmt 0 view .LVU773
ARM GAS  /tmp/cc0mjIFM.s 			page 158


 2788 0092 261D     		adds	r6, r4, #4
 2789 0094 3046     		mov	r0, r6
 2790 0096 FFF7FEFF 		bl	uxListRemove
 2791              	.LVL194:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2792              		.loc 1 2783 6 is_stmt 1 view .LVU774
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2793              		.loc 1 2783 10 is_stmt 0 view .LVU775
 2794 009a A36A     		ldr	r3, [r4, #40]
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2795              		.loc 1 2783 8 view .LVU776
 2796 009c 1BB1     		cbz	r3, .L202
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2797              		.loc 1 2785 7 is_stmt 1 view .LVU777
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2798              		.loc 1 2785 16 is_stmt 0 view .LVU778
 2799 009e 04F11800 		add	r0, r4, #24
 2800 00a2 FFF7FEFF 		bl	uxListRemove
 2801              	.LVL195:
 2802              	.L202:
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2803              		.loc 1 2789 31 is_stmt 1 view .LVU779
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2804              		.loc 1 2794 6 view .LVU780
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2805              		.loc 1 2794 6 view .LVU781
 2806 00a6 E36A     		ldr	r3, [r4, #44]
 2807 00a8 0122     		movs	r2, #1
 2808 00aa 9A40     		lsls	r2, r2, r3
 2809 00ac 1E49     		ldr	r1, .L216+40
 2810 00ae 0868     		ldr	r0, [r1]
 2811 00b0 0243     		orrs	r2, r2, r0
 2812 00b2 0A60     		str	r2, [r1]
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2813              		.loc 1 2794 6 view .LVU782
 2814 00b4 03EB8303 		add	r3, r3, r3, lsl #2
 2815 00b8 9A00     		lsls	r2, r3, #2
 2816 00ba 3146     		mov	r1, r6
 2817 00bc 1748     		ldr	r0, .L216+28
 2818 00be 1044     		add	r0, r0, r2
 2819 00c0 FFF7FEFF 		bl	vListInsertEnd
 2820              	.LVL196:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2821              		.loc 1 2794 36 view .LVU783
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2822              		.loc 1 2804 7 view .LVU784
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2823              		.loc 1 2804 16 is_stmt 0 view .LVU785
 2824 00c4 E26A     		ldr	r2, [r4, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2825              		.loc 1 2804 44 view .LVU786
 2826 00c6 144B     		ldr	r3, .L216+24
 2827 00c8 1B68     		ldr	r3, [r3]
 2828 00ca DB6A     		ldr	r3, [r3, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2829              		.loc 1 2804 9 view .LVU787
 2830 00cc 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc0mjIFM.s 			page 159


 2831 00ce D4D2     		bcs	.L209
 2832 00d0 D4E7     		b	.L198
 2833              	.LVL197:
 2834              	.L208:
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2835              		.loc 1 2804 9 view .LVU788
 2836              	.LBE154:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2837              		.loc 1 2711 12 view .LVU789
 2838 00d2 0027     		movs	r7, #0
 2839 00d4 D2E7     		b	.L198
 2840              	.LVL198:
 2841              	.L214:
 2842              	.LBB155:
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2843              		.loc 1 2751 6 is_stmt 1 view .LVU790
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2844              		.loc 1 2751 27 is_stmt 0 view .LVU791
 2845 00d6 0F4B     		ldr	r3, .L216+20
 2846 00d8 4FF0FF32 		mov	r2, #-1
 2847 00dc 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2848              		.loc 1 2752 6 is_stmt 1 view .LVU792
 2849 00de B7E7     		b	.L199
 2850              	.LVL199:
 2851              	.L215:
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2852              		.loc 1 2770 7 view .LVU793
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2853              		.loc 1 2770 28 is_stmt 0 view .LVU794
 2854 00e0 0C4A     		ldr	r2, .L216+20
 2855 00e2 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2856              		.loc 1 2771 7 is_stmt 1 view .LVU795
 2857 00e4 B4E7     		b	.L199
 2858              	.LVL200:
 2859              	.L213:
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2860              		.loc 1 2840 5 view .LVU796
 2861 00e6 FFF7FEFF 		bl	vApplicationTickHook
 2862              	.LVL201:
 2863 00ea C0E7     		b	.L206
 2864              	.LVL202:
 2865              	.L194:
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2866              		.loc 1 2840 5 is_stmt 0 view .LVU797
 2867              	.LBE155:
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2868              		.loc 1 2864 3 is_stmt 1 view .LVU798
 2869 00ec 0C4A     		ldr	r2, .L216+32
 2870 00ee 1368     		ldr	r3, [r2]
 2871 00f0 0133     		adds	r3, r3, #1
 2872 00f2 1360     		str	r3, [r2]
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2873              		.loc 1 2870 4 view .LVU799
 2874 00f4 FFF7FEFF 		bl	vApplicationTickHook
 2875              	.LVL203:
ARM GAS  /tmp/cc0mjIFM.s 			page 160


2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2876              		.loc 1 2711 12 is_stmt 0 view .LVU800
 2877 00f8 0027     		movs	r7, #0
 2878              	.LVL204:
 2879              	.L193:
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2880              		.loc 1 2876 1 view .LVU801
 2881 00fa 3846     		mov	r0, r7
 2882 00fc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2883              	.L217:
 2884 00fe 00BF     		.align	2
 2885              	.L216:
 2886 0100 00000000 		.word	.LANCHOR16
 2887 0104 00000000 		.word	.LANCHOR15
 2888 0108 00000000 		.word	.LANCHOR2
 2889 010c 00000000 		.word	.LANCHOR8
 2890 0110 00000000 		.word	.LANCHOR18
 2891 0114 00000000 		.word	.LANCHOR3
 2892 0118 00000000 		.word	.LANCHOR10
 2893 011c 00000000 		.word	.LANCHOR4
 2894 0120 00000000 		.word	.LANCHOR19
 2895 0124 00000000 		.word	.LANCHOR20
 2896 0128 00000000 		.word	.LANCHOR13
 2897              		.cfi_endproc
 2898              	.LFE27:
 2900              		.section	.text.xTaskResumeAll,"ax",%progbits
 2901              		.align	1
 2902              		.global	xTaskResumeAll
 2903              		.syntax unified
 2904              		.thumb
 2905              		.thumb_func
 2906              		.fpu fpv4-sp-d16
 2908              	xTaskResumeAll:
 2909              	.LFB21:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2910              		.loc 1 2195 1 is_stmt 1 view -0
 2911              		.cfi_startproc
 2912              		@ args = 0, pretend = 0, frame = 0
 2913              		@ frame_needed = 0, uses_anonymous_args = 0
 2914 0000 38B5     		push	{r3, r4, r5, lr}
 2915              	.LCFI27:
 2916              		.cfi_def_cfa_offset 16
 2917              		.cfi_offset 3, -16
 2918              		.cfi_offset 4, -12
 2919              		.cfi_offset 5, -8
 2920              		.cfi_offset 14, -4
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2921              		.loc 1 2196 1 view .LVU803
 2922              	.LVL205:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2923              		.loc 1 2197 1 view .LVU804
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2924              		.loc 1 2201 2 view .LVU805
 2925 0002 354B     		ldr	r3, .L234
 2926 0004 1B68     		ldr	r3, [r3]
 2927 0006 43B9     		cbnz	r3, .L219
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 161


 2928              		.loc 1 2201 2 view .LVU806
 2929              	.LBB156:
 2930              	.LBI156:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2931              		.loc 2 191 30 view .LVU807
 2932              	.LBB157:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2933              		.loc 2 193 1 view .LVU808
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2934              		.loc 2 195 2 view .LVU809
 2935              		.syntax unified
 2936              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2937 0008 4FF05003 			mov r3, #80												
 2938 000c 83F31188 		msr basepri, r3											
 2939 0010 BFF36F8F 		isb														
 2940 0014 BFF34F8F 		dsb														
 2941              	
 2942              	@ 0 "" 2
 2943              	.LVL206:
 2944              		.thumb
 2945              		.syntax unified
 2946              	.L220:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2947              		.loc 2 195 2 is_stmt 0 view .LVU810
 2948              	.LBE157:
 2949              	.LBE156:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2950              		.loc 1 2201 2 is_stmt 1 discriminator 1 view .LVU811
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2951              		.loc 1 2201 2 discriminator 1 view .LVU812
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2952              		.loc 1 2201 2 discriminator 1 view .LVU813
 2953 0018 FEE7     		b	.L220
 2954              	.L219:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2955              		.loc 1 2201 38 discriminator 2 view .LVU814
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2956              		.loc 1 2208 2 discriminator 2 view .LVU815
 2957 001a FFF7FEFF 		bl	vPortEnterCritical
 2958              	.LVL207:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2959              		.loc 1 2210 3 discriminator 2 view .LVU816
 2960 001e 2E4B     		ldr	r3, .L234
 2961 0020 1A68     		ldr	r2, [r3]
 2962 0022 013A     		subs	r2, r2, #1
 2963 0024 1A60     		str	r2, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2964              		.loc 1 2212 3 discriminator 2 view .LVU817
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2965              		.loc 1 2212 28 is_stmt 0 discriminator 2 view .LVU818
 2966 0026 1B68     		ldr	r3, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2967              		.loc 1 2212 5 discriminator 2 view .LVU819
 2968 0028 002B     		cmp	r3, #0
 2969 002a 4FD1     		bne	.L229
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2970              		.loc 1 2214 4 is_stmt 1 view .LVU820
ARM GAS  /tmp/cc0mjIFM.s 			page 162


2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2971              		.loc 1 2214 31 is_stmt 0 view .LVU821
 2972 002c 2B4B     		ldr	r3, .L234+4
 2973 002e 1B68     		ldr	r3, [r3]
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2974              		.loc 1 2214 6 view .LVU822
 2975 0030 0BB9     		cbnz	r3, .L230
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2976              		.loc 1 2197 12 view .LVU823
 2977 0032 0024     		movs	r4, #0
 2978 0034 4BE0     		b	.L221
 2979              	.L230:
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2980              		.loc 1 2196 8 view .LVU824
 2981 0036 0024     		movs	r4, #0
 2982              	.LVL208:
 2983              	.L222:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2984              		.loc 1 2233 31 is_stmt 1 view .LVU825
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2985              		.loc 1 2218 10 view .LVU826
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2986              		.loc 1 2218 12 is_stmt 0 view .LVU827
 2987 0038 294B     		ldr	r3, .L234+8
 2988 003a 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2989              		.loc 1 2218 10 view .LVU828
 2990 003c 1BB3     		cbz	r3, .L232
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2991              		.loc 1 2220 6 is_stmt 1 view .LVU829
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2992              		.loc 1 2220 14 is_stmt 0 view .LVU830
 2993 003e 284B     		ldr	r3, .L234+8
 2994 0040 DB68     		ldr	r3, [r3, #12]
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2995              		.loc 1 2220 12 view .LVU831
 2996 0042 DC68     		ldr	r4, [r3, #12]
 2997              	.LVL209:
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2998              		.loc 1 2221 6 is_stmt 1 view .LVU832
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2999              		.loc 1 2221 15 is_stmt 0 view .LVU833
 3000 0044 04F11800 		add	r0, r4, #24
 3001 0048 FFF7FEFF 		bl	uxListRemove
 3002              	.LVL210:
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3003              		.loc 1 2222 6 is_stmt 1 view .LVU834
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3004              		.loc 1 2222 15 is_stmt 0 view .LVU835
 3005 004c 251D     		adds	r5, r4, #4
 3006 004e 2846     		mov	r0, r5
 3007 0050 FFF7FEFF 		bl	uxListRemove
 3008              	.LVL211:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3009              		.loc 1 2223 6 is_stmt 1 view .LVU836
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3010              		.loc 1 2223 6 view .LVU837
ARM GAS  /tmp/cc0mjIFM.s 			page 163


 3011 0054 E06A     		ldr	r0, [r4, #44]
 3012 0056 0123     		movs	r3, #1
 3013 0058 8340     		lsls	r3, r3, r0
 3014 005a 224A     		ldr	r2, .L234+12
 3015 005c 1168     		ldr	r1, [r2]
 3016 005e 0B43     		orrs	r3, r3, r1
 3017 0060 1360     		str	r3, [r2]
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3018              		.loc 1 2223 6 view .LVU838
 3019 0062 00EB8000 		add	r0, r0, r0, lsl #2
 3020 0066 2946     		mov	r1, r5
 3021 0068 1F4B     		ldr	r3, .L234+16
 3022 006a 03EB8000 		add	r0, r3, r0, lsl #2
 3023 006e FFF7FEFF 		bl	vListInsertEnd
 3024              	.LVL212:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3025              		.loc 1 2223 36 view .LVU839
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3026              		.loc 1 2227 6 view .LVU840
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3027              		.loc 1 2227 15 is_stmt 0 view .LVU841
 3028 0072 E26A     		ldr	r2, [r4, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3029              		.loc 1 2227 43 view .LVU842
 3030 0074 1D4B     		ldr	r3, .L234+20
 3031 0076 1B68     		ldr	r3, [r3]
 3032 0078 DB6A     		ldr	r3, [r3, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3033              		.loc 1 2227 8 view .LVU843
 3034 007a 9A42     		cmp	r2, r3
 3035 007c DCD3     		bcc	.L222
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3036              		.loc 1 2229 7 is_stmt 1 view .LVU844
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3037              		.loc 1 2229 21 is_stmt 0 view .LVU845
 3038 007e 1C4B     		ldr	r3, .L234+24
 3039 0080 0122     		movs	r2, #1
 3040 0082 1A60     		str	r2, [r3]
 3041 0084 D8E7     		b	.L222
 3042              	.L232:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3043              		.loc 1 2237 5 is_stmt 1 view .LVU846
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3044              		.loc 1 2237 7 is_stmt 0 view .LVU847
 3045 0086 0CB1     		cbz	r4, .L225
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3046              		.loc 1 2245 6 is_stmt 1 view .LVU848
 3047 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3048              	.LVL213:
 3049              	.L225:
 3050              	.LBB158:
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3051              		.loc 1 2253 6 view .LVU849
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3052              		.loc 1 2253 17 is_stmt 0 view .LVU850
 3053 008c 194B     		ldr	r3, .L234+28
 3054 008e 1C68     		ldr	r4, [r3]
ARM GAS  /tmp/cc0mjIFM.s 			page 164


 3055              	.LVL214:
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3056              		.loc 1 2255 6 is_stmt 1 view .LVU851
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3057              		.loc 1 2255 8 is_stmt 0 view .LVU852
 3058 0090 84B9     		cbnz	r4, .L228
 3059              	.L226:
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3060              		.loc 1 2274 31 is_stmt 1 view .LVU853
 3061              	.LBE158:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3062              		.loc 1 2278 5 view .LVU854
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3063              		.loc 1 2278 23 is_stmt 0 view .LVU855
 3064 0092 174B     		ldr	r3, .L234+24
 3065 0094 1C68     		ldr	r4, [r3]
 3066              	.LVL215:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3067              		.loc 1 2278 7 view .LVU856
 3068 0096 D4B1     		cbz	r4, .L221
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3069              		.loc 1 2282 7 is_stmt 1 view .LVU857
 3070              	.LVL216:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3071              		.loc 1 2285 6 view .LVU858
 3072 0098 4FF0E023 		mov	r3, #-536813568
 3073 009c 4FF08052 		mov	r2, #268435456
 3074 00a0 C3F8042D 		str	r2, [r3, #3332]
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3075              		.loc 1 2285 6 view .LVU859
 3076              		.syntax unified
 3077              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3078 00a4 BFF34F8F 		dsb
 3079              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3080              		.loc 1 2285 6 view .LVU860
 3081              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3082 00a8 BFF36F8F 		isb
 3083              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3084              		.loc 1 2285 37 view .LVU861
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3085              		.loc 1 2282 23 is_stmt 0 view .LVU862
 3086              		.thumb
 3087              		.syntax unified
 3088 00ac 0124     		movs	r4, #1
 3089 00ae 0EE0     		b	.L221
 3090              	.LVL217:
 3091              	.L227:
 3092              	.LBB159:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3093              		.loc 1 2265 33 is_stmt 1 view .LVU863
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 3094              		.loc 1 2267 8 view .LVU864
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3095              		.loc 1 2268 14 view .LVU865
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 165


 3096              		.loc 1 2268 7 is_stmt 0 view .LVU866
 3097 00b0 013C     		subs	r4, r4, #1
 3098              	.LVL218:
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3099              		.loc 1 2268 7 view .LVU867
 3100 00b2 07D0     		beq	.L233
 3101              	.L228:
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3102              		.loc 1 2257 7 is_stmt 1 view .LVU868
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3103              		.loc 1 2259 8 view .LVU869
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3104              		.loc 1 2259 12 is_stmt 0 view .LVU870
 3105 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3106              	.LVL219:
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3107              		.loc 1 2259 10 view .LVU871
 3108 00b8 0028     		cmp	r0, #0
 3109 00ba F9D0     		beq	.L227
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3110              		.loc 1 2261 9 is_stmt 1 view .LVU872
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3111              		.loc 1 2261 23 is_stmt 0 view .LVU873
 3112 00bc 0C4B     		ldr	r3, .L234+24
 3113 00be 0122     		movs	r2, #1
 3114 00c0 1A60     		str	r2, [r3]
 3115 00c2 F5E7     		b	.L227
 3116              	.L233:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3117              		.loc 1 2270 7 is_stmt 1 view .LVU874
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3118              		.loc 1 2270 20 is_stmt 0 view .LVU875
 3119 00c4 0B4B     		ldr	r3, .L234+28
 3120 00c6 0022     		movs	r2, #0
 3121 00c8 1A60     		str	r2, [r3]
 3122 00ca E2E7     		b	.L226
 3123              	.LVL220:
 3124              	.L229:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3125              		.loc 1 2270 20 view .LVU876
 3126              	.LBE159:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3127              		.loc 1 2197 12 view .LVU877
 3128 00cc 0024     		movs	r4, #0
 3129              	.LVL221:
 3130              	.L221:
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3131              		.loc 1 2295 28 is_stmt 1 view .LVU878
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3132              		.loc 1 2298 2 view .LVU879
 3133 00ce FFF7FEFF 		bl	vPortExitCritical
 3134              	.LVL222:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3135              		.loc 1 2300 2 view .LVU880
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3136              		.loc 1 2301 1 is_stmt 0 view .LVU881
 3137 00d2 2046     		mov	r0, r4
ARM GAS  /tmp/cc0mjIFM.s 			page 166


 3138 00d4 38BD     		pop	{r3, r4, r5, pc}
 3139              	.LVL223:
 3140              	.L235:
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3141              		.loc 1 2301 1 view .LVU882
 3142 00d6 00BF     		.align	2
 3143              	.L234:
 3144 00d8 00000000 		.word	.LANCHOR16
 3145 00dc 00000000 		.word	.LANCHOR9
 3146 00e0 00000000 		.word	.LANCHOR1
 3147 00e4 00000000 		.word	.LANCHOR13
 3148 00e8 00000000 		.word	.LANCHOR4
 3149 00ec 00000000 		.word	.LANCHOR10
 3150 00f0 00000000 		.word	.LANCHOR20
 3151 00f4 00000000 		.word	.LANCHOR19
 3152              		.cfi_endproc
 3153              	.LFE21:
 3155              		.section	.text.vTaskDelay,"ax",%progbits
 3156              		.align	1
 3157              		.global	vTaskDelay
 3158              		.syntax unified
 3159              		.thumb
 3160              		.thumb_func
 3161              		.fpu fpv4-sp-d16
 3163              	vTaskDelay:
 3164              	.LVL224:
 3165              	.LFB10:
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3166              		.loc 1 1342 2 is_stmt 1 view -0
 3167              		.cfi_startproc
 3168              		@ args = 0, pretend = 0, frame = 0
 3169              		@ frame_needed = 0, uses_anonymous_args = 0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3170              		.loc 1 1342 2 is_stmt 0 view .LVU884
 3171 0000 10B5     		push	{r4, lr}
 3172              	.LCFI28:
 3173              		.cfi_def_cfa_offset 8
 3174              		.cfi_offset 4, -8
 3175              		.cfi_offset 14, -4
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3176              		.loc 1 1343 2 is_stmt 1 view .LVU885
 3177              	.LVL225:
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3178              		.loc 1 1346 3 view .LVU886
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3179              		.loc 1 1346 5 is_stmt 0 view .LVU887
 3180 0002 A8B1     		cbz	r0, .L237
 3181 0004 0446     		mov	r4, r0
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3182              		.loc 1 1348 4 is_stmt 1 view .LVU888
 3183 0006 104B     		ldr	r3, .L242
 3184 0008 1B68     		ldr	r3, [r3]
 3185 000a 43B1     		cbz	r3, .L238
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3186              		.loc 1 1348 4 view .LVU889
 3187              	.LBB160:
 3188              	.LBI160:
ARM GAS  /tmp/cc0mjIFM.s 			page 167


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3189              		.loc 2 191 30 view .LVU890
 3190              	.LBB161:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3191              		.loc 2 193 1 view .LVU891
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3192              		.loc 2 195 2 view .LVU892
 3193              		.syntax unified
 3194              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3195 000c 4FF05003 			mov r3, #80												
 3196 0010 83F31188 		msr basepri, r3											
 3197 0014 BFF36F8F 		isb														
 3198 0018 BFF34F8F 		dsb														
 3199              	
 3200              	@ 0 "" 2
 3201              	.LVL226:
 3202              		.thumb
 3203              		.syntax unified
 3204              	.L239:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3205              		.loc 2 195 2 is_stmt 0 view .LVU893
 3206              	.LBE161:
 3207              	.LBE160:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3208              		.loc 1 1348 4 is_stmt 1 discriminator 1 view .LVU894
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3209              		.loc 1 1348 4 discriminator 1 view .LVU895
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3210              		.loc 1 1348 4 discriminator 1 view .LVU896
 3211 001c FEE7     		b	.L239
 3212              	.L238:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3213              		.loc 1 1348 45 discriminator 2 view .LVU897
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3214              		.loc 1 1349 4 discriminator 2 view .LVU898
 3215 001e FFF7FEFF 		bl	vTaskSuspendAll
 3216              	.LVL227:
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3217              		.loc 1 1351 22 discriminator 2 view .LVU899
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3218              		.loc 1 1360 5 discriminator 2 view .LVU900
 3219 0022 0021     		movs	r1, #0
 3220 0024 2046     		mov	r0, r4
 3221 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3222              	.LVL228:
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3223              		.loc 1 1362 4 discriminator 2 view .LVU901
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3224              		.loc 1 1362 22 is_stmt 0 discriminator 2 view .LVU902
 3225 002a FFF7FEFF 		bl	xTaskResumeAll
 3226              	.LVL229:
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3227              		.loc 1 1366 28 is_stmt 1 discriminator 2 view .LVU903
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3228              		.loc 1 1371 3 discriminator 2 view .LVU904
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3229              		.loc 1 1371 5 is_stmt 0 discriminator 2 view .LVU905
ARM GAS  /tmp/cc0mjIFM.s 			page 168


 3230 002e 48B9     		cbnz	r0, .L236
 3231              	.LVL230:
 3232              	.L237:
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3233              		.loc 1 1373 4 is_stmt 1 view .LVU906
 3234 0030 4FF0E023 		mov	r3, #-536813568
 3235 0034 4FF08052 		mov	r2, #268435456
 3236 0038 C3F8042D 		str	r2, [r3, #3332]
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3237              		.loc 1 1373 4 view .LVU907
 3238              		.syntax unified
 3239              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3240 003c BFF34F8F 		dsb
 3241              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3242              		.loc 1 1373 4 view .LVU908
 3243              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3244 0040 BFF36F8F 		isb
 3245              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3246              		.loc 1 1373 26 view .LVU909
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3247              		.loc 1 1377 28 view .LVU910
 3248              		.thumb
 3249              		.syntax unified
 3250              	.L236:
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3251              		.loc 1 1379 2 is_stmt 0 view .LVU911
 3252 0044 10BD     		pop	{r4, pc}
 3253              	.L243:
 3254 0046 00BF     		.align	2
 3255              	.L242:
 3256 0048 00000000 		.word	.LANCHOR16
 3257              		.cfi_endproc
 3258              	.LFE10:
 3260              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3261              		.align	1
 3262              		.global	xTaskCatchUpTicks
 3263              		.syntax unified
 3264              		.thumb
 3265              		.thumb_func
 3266              		.fpu fpv4-sp-d16
 3268              	xTaskCatchUpTicks:
 3269              	.LVL231:
 3270              	.LFB26:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3271              		.loc 1 2610 1 is_stmt 1 view -0
 3272              		.cfi_startproc
 3273              		@ args = 0, pretend = 0, frame = 0
 3274              		@ frame_needed = 0, uses_anonymous_args = 0
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3275              		.loc 1 2611 1 view .LVU913
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3276              		.loc 1 2615 2 view .LVU914
 3277 0000 0B4B     		ldr	r3, .L249
 3278 0002 1B68     		ldr	r3, [r3]
 3279 0004 43B1     		cbz	r3, .L245
ARM GAS  /tmp/cc0mjIFM.s 			page 169


2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3280              		.loc 1 2615 2 view .LVU915
 3281              	.LBB162:
 3282              	.LBI162:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3283              		.loc 2 191 30 view .LVU916
 3284              	.LBB163:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3285              		.loc 2 193 1 view .LVU917
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3286              		.loc 2 195 2 view .LVU918
 3287              		.syntax unified
 3288              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3289 0006 4FF05003 			mov r3, #80												
 3290 000a 83F31188 		msr basepri, r3											
 3291 000e BFF36F8F 		isb														
 3292 0012 BFF34F8F 		dsb														
 3293              	
 3294              	@ 0 "" 2
 3295              	.LVL232:
 3296              		.thumb
 3297              		.syntax unified
 3298              	.L246:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3299              		.loc 2 195 2 is_stmt 0 view .LVU919
 3300              	.LBE163:
 3301              	.LBE162:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3302              		.loc 1 2615 2 is_stmt 1 discriminator 1 view .LVU920
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3303              		.loc 1 2615 2 discriminator 1 view .LVU921
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3304              		.loc 1 2615 2 discriminator 1 view .LVU922
 3305 0016 FEE7     		b	.L246
 3306              	.L245:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3307              		.loc 1 2610 1 is_stmt 0 discriminator 2 view .LVU923
 3308 0018 10B5     		push	{r4, lr}
 3309              	.LCFI29:
 3310              		.cfi_def_cfa_offset 8
 3311              		.cfi_offset 4, -8
 3312              		.cfi_offset 14, -4
 3313 001a 0446     		mov	r4, r0
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3314              		.loc 1 2615 43 is_stmt 1 discriminator 2 view .LVU924
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 3315              		.loc 1 2619 2 discriminator 2 view .LVU925
 3316 001c FFF7FEFF 		bl	vTaskSuspendAll
 3317              	.LVL233:
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3318              		.loc 1 2620 2 discriminator 2 view .LVU926
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3319              		.loc 1 2620 15 is_stmt 0 discriminator 2 view .LVU927
 3320 0020 044B     		ldr	r3, .L249+4
 3321 0022 1868     		ldr	r0, [r3]
 3322 0024 2044     		add	r0, r0, r4
 3323 0026 1860     		str	r0, [r3]
ARM GAS  /tmp/cc0mjIFM.s 			page 170


2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3324              		.loc 1 2621 2 is_stmt 1 discriminator 2 view .LVU928
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3325              		.loc 1 2621 19 is_stmt 0 discriminator 2 view .LVU929
 3326 0028 FFF7FEFF 		bl	xTaskResumeAll
 3327              	.LVL234:
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3328              		.loc 1 2623 2 is_stmt 1 discriminator 2 view .LVU930
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3329              		.loc 1 2624 1 is_stmt 0 discriminator 2 view .LVU931
 3330 002c 10BD     		pop	{r4, pc}
 3331              	.LVL235:
 3332              	.L250:
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3333              		.loc 1 2624 1 discriminator 2 view .LVU932
 3334 002e 00BF     		.align	2
 3335              	.L249:
 3336 0030 00000000 		.word	.LANCHOR16
 3337 0034 00000000 		.word	.LANCHOR19
 3338              		.cfi_endproc
 3339              	.LFE26:
 3341              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3342              		.align	1
 3343              		.global	vTaskSwitchContext
 3344              		.syntax unified
 3345              		.thumb
 3346              		.thumb_func
 3347              		.fpu fpv4-sp-d16
 3349              	vTaskSwitchContext:
 3350              	.LFB28:
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3351              		.loc 1 2990 1 is_stmt 1 view -0
 3352              		.cfi_startproc
 3353              		@ args = 0, pretend = 0, frame = 0
 3354              		@ frame_needed = 0, uses_anonymous_args = 0
 3355              		@ link register save eliminated.
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3356              		.loc 1 2991 2 view .LVU934
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3357              		.loc 1 2991 27 is_stmt 0 view .LVU935
 3358 0000 204B     		ldr	r3, .L258
 3359 0002 1B68     		ldr	r3, [r3]
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3360              		.loc 1 2991 4 view .LVU936
 3361 0004 1BB1     		cbz	r3, .L252
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3362              		.loc 1 2995 3 is_stmt 1 view .LVU937
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3363              		.loc 1 2995 17 is_stmt 0 view .LVU938
 3364 0006 204B     		ldr	r3, .L258+4
 3365 0008 0122     		movs	r2, #1
 3366 000a 1A60     		str	r2, [r3]
 3367 000c 7047     		bx	lr
 3368              	.L252:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3369              		.loc 1 2999 3 is_stmt 1 view .LVU939
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
ARM GAS  /tmp/cc0mjIFM.s 			page 171


 3370              		.loc 1 2999 17 is_stmt 0 view .LVU940
 3371 000e 1E4B     		ldr	r3, .L258+4
 3372 0010 0022     		movs	r2, #0
 3373 0012 1A60     		str	r2, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3374              		.loc 1 3000 27 is_stmt 1 view .LVU941
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3375              		.loc 1 3030 33 view .LVU942
 3376              	.LBB164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3377              		.loc 1 3041 3 view .LVU943
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3378              		.loc 1 3041 3 view .LVU944
 3379 0014 1D4B     		ldr	r3, .L258+8
 3380 0016 1B68     		ldr	r3, [r3]
 3381              	.LVL236:
 3382              	.LBB165:
 3383              	.LBI165:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 3384              		.loc 2 130 59 view .LVU945
 3385              	.LBB166:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3386              		.loc 2 132 2 view .LVU946
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3387              		.loc 2 134 3 view .LVU947
 3388              		.syntax unified
 3389              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3390 0018 B3FA83F3 		clz r3, r3
 3391              	@ 0 "" 2
 3392              	.LVL237:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3393              		.loc 2 134 3 is_stmt 0 view .LVU948
 3394              		.thumb
 3395              		.syntax unified
 3396 001c DBB2     		uxtb	r3, r3
 3397              	.LVL238:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3398              		.loc 2 135 3 is_stmt 1 view .LVU949
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3399              		.loc 2 135 3 is_stmt 0 view .LVU950
 3400              	.LBE166:
 3401              	.LBE165:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3402              		.loc 1 3041 3 view .LVU951
 3403 001e C3F11F03 		rsb	r3, r3, #31
 3404              	.LVL239:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3405              		.loc 1 3041 3 is_stmt 1 view .LVU952
 3406 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3407 0026 8A00     		lsls	r2, r1, #2
 3408 0028 1949     		ldr	r1, .L258+12
 3409 002a 8A58     		ldr	r2, [r1, r2]
 3410 002c 42B9     		cbnz	r2, .L254
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3411              		.loc 1 3041 3 view .LVU953
 3412              	.LBB167:
 3413              	.LBI167:
ARM GAS  /tmp/cc0mjIFM.s 			page 172


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3414              		.loc 2 191 30 view .LVU954
 3415              	.LBB168:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3416              		.loc 2 193 1 view .LVU955
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3417              		.loc 2 195 2 view .LVU956
 3418              		.syntax unified
 3419              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3420 002e 4FF05003 			mov r3, #80												
 3421 0032 83F31188 		msr basepri, r3											
 3422 0036 BFF36F8F 		isb														
 3423 003a BFF34F8F 		dsb														
 3424              	
 3425              	@ 0 "" 2
 3426              	.LVL240:
 3427              		.thumb
 3428              		.syntax unified
 3429              	.L255:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3430              		.loc 2 195 2 is_stmt 0 view .LVU957
 3431              	.LBE168:
 3432              	.LBE167:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3433              		.loc 1 3041 3 is_stmt 1 discriminator 1 view .LVU958
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3434              		.loc 1 3041 3 discriminator 1 view .LVU959
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3435              		.loc 1 3041 3 discriminator 1 view .LVU960
 3436 003e FEE7     		b	.L255
 3437              	.LVL241:
 3438              	.L254:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3439              		.loc 1 3041 3 discriminator 2 view .LVU961
 3440              	.LBB169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3441              		.loc 1 3041 3 discriminator 2 view .LVU962
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3442              		.loc 1 3041 3 discriminator 2 view .LVU963
 3443 0040 1349     		ldr	r1, .L258+12
 3444 0042 03EB8300 		add	r0, r3, r3, lsl #2
 3445 0046 8200     		lsls	r2, r0, #2
 3446 0048 0A44     		add	r2, r2, r1
 3447 004a 5068     		ldr	r0, [r2, #4]
 3448 004c 4068     		ldr	r0, [r0, #4]
 3449 004e 5060     		str	r0, [r2, #4]
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3450              		.loc 1 3041 3 discriminator 2 view .LVU964
 3451 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3452 0054 4FEA8C02 		lsl	r2, ip, #2
 3453 0058 0832     		adds	r2, r2, #8
 3454 005a 1144     		add	r1, r1, r2
 3455 005c 8842     		cmp	r0, r1
 3456 005e 09D0     		beq	.L257
 3457              	.L256:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3458              		.loc 1 3041 3 discriminator 6 view .LVU965
ARM GAS  /tmp/cc0mjIFM.s 			page 173


 3459 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3460              	.LVL242:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3461              		.loc 1 3041 3 is_stmt 0 discriminator 6 view .LVU966
 3462 0064 9A00     		lsls	r2, r3, #2
 3463 0066 0A4B     		ldr	r3, .L258+12
 3464 0068 1344     		add	r3, r3, r2
 3465 006a 5B68     		ldr	r3, [r3, #4]
 3466 006c DA68     		ldr	r2, [r3, #12]
 3467 006e 094B     		ldr	r3, .L258+16
 3468 0070 1A60     		str	r2, [r3]
 3469              	.LBE169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3470              		.loc 1 3041 3 is_stmt 1 discriminator 6 view .LVU967
 3471              	.LBE164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3472              		.loc 1 3041 37 discriminator 6 view .LVU968
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3473              		.loc 1 3042 26 discriminator 6 view .LVU969
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3474              		.loc 1 3061 1 is_stmt 0 discriminator 6 view .LVU970
 3475 0072 7047     		bx	lr
 3476              	.LVL243:
 3477              	.L257:
 3478              	.LBB171:
 3479              	.LBB170:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3480              		.loc 1 3041 3 is_stmt 1 discriminator 4 view .LVU971
 3481 0074 4068     		ldr	r0, [r0, #4]
 3482 0076 6246     		mov	r2, ip
 3483 0078 9100     		lsls	r1, r2, #2
 3484 007a 054A     		ldr	r2, .L258+12
 3485 007c 0A44     		add	r2, r2, r1
 3486 007e 5060     		str	r0, [r2, #4]
 3487 0080 EEE7     		b	.L256
 3488              	.L259:
 3489 0082 00BF     		.align	2
 3490              	.L258:
 3491 0084 00000000 		.word	.LANCHOR16
 3492 0088 00000000 		.word	.LANCHOR20
 3493 008c 00000000 		.word	.LANCHOR13
 3494 0090 00000000 		.word	.LANCHOR4
 3495 0094 00000000 		.word	.LANCHOR10
 3496              	.LBE170:
 3497              	.LBE171:
 3498              		.cfi_endproc
 3499              	.LFE28:
 3501              		.section	.text.vTaskSuspend,"ax",%progbits
 3502              		.align	1
 3503              		.global	vTaskSuspend
 3504              		.syntax unified
 3505              		.thumb
 3506              		.thumb_func
 3507              		.fpu fpv4-sp-d16
 3509              	vTaskSuspend:
 3510              	.LVL244:
 3511              	.LFB14:
ARM GAS  /tmp/cc0mjIFM.s 			page 174


1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3512              		.loc 1 1705 2 view -0
 3513              		.cfi_startproc
 3514              		@ args = 0, pretend = 0, frame = 0
 3515              		@ frame_needed = 0, uses_anonymous_args = 0
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3516              		.loc 1 1705 2 is_stmt 0 view .LVU973
 3517 0000 38B5     		push	{r3, r4, r5, lr}
 3518              	.LCFI30:
 3519              		.cfi_def_cfa_offset 16
 3520              		.cfi_offset 3, -16
 3521              		.cfi_offset 4, -12
 3522              		.cfi_offset 5, -8
 3523              		.cfi_offset 14, -4
 3524 0002 0446     		mov	r4, r0
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3525              		.loc 1 1706 2 is_stmt 1 view .LVU974
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3526              		.loc 1 1708 3 view .LVU975
 3527 0004 FFF7FEFF 		bl	vPortEnterCritical
 3528              	.LVL245:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3529              		.loc 1 1712 4 view .LVU976
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3530              		.loc 1 1712 12 is_stmt 0 view .LVU977
 3531 0008 5CB3     		cbz	r4, .L272
 3532              	.LVL246:
 3533              	.L261:
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3534              		.loc 1 1714 30 is_stmt 1 discriminator 4 view .LVU978
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3535              		.loc 1 1718 4 discriminator 4 view .LVU979
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3536              		.loc 1 1718 8 is_stmt 0 discriminator 4 view .LVU980
 3537 000a 251D     		adds	r5, r4, #4
 3538 000c 2846     		mov	r0, r5
 3539 000e FFF7FEFF 		bl	uxListRemove
 3540              	.LVL247:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3541              		.loc 1 1718 6 discriminator 4 view .LVU981
 3542 0012 68B9     		cbnz	r0, .L262
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3543              		.loc 1 1720 5 is_stmt 1 view .LVU982
 3544 0014 E26A     		ldr	r2, [r4, #44]
 3545 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3546 001a 9B00     		lsls	r3, r3, #2
 3547 001c 2B49     		ldr	r1, .L276
 3548 001e CB58     		ldr	r3, [r1, r3]
 3549 0020 33B9     		cbnz	r3, .L262
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3550              		.loc 1 1720 5 discriminator 1 view .LVU983
 3551 0022 0123     		movs	r3, #1
 3552 0024 9340     		lsls	r3, r3, r2
 3553 0026 2A49     		ldr	r1, .L276+4
 3554 0028 0A68     		ldr	r2, [r1]
 3555 002a 22EA0302 		bic	r2, r2, r3
 3556 002e 0A60     		str	r2, [r1]
ARM GAS  /tmp/cc0mjIFM.s 			page 175


 3557              	.L262:
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3558              		.loc 1 1724 29 view .LVU984
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3559              		.loc 1 1728 4 view .LVU985
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3560              		.loc 1 1728 8 is_stmt 0 view .LVU986
 3561 0030 A36A     		ldr	r3, [r4, #40]
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3562              		.loc 1 1728 6 view .LVU987
 3563 0032 1BB1     		cbz	r3, .L263
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3564              		.loc 1 1730 5 is_stmt 1 view .LVU988
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3565              		.loc 1 1730 14 is_stmt 0 view .LVU989
 3566 0034 04F11800 		add	r0, r4, #24
 3567 0038 FFF7FEFF 		bl	uxListRemove
 3568              	.LVL248:
 3569              	.L263:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3570              		.loc 1 1734 29 is_stmt 1 view .LVU990
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3571              		.loc 1 1737 4 view .LVU991
 3572 003c 2946     		mov	r1, r5
 3573 003e 2548     		ldr	r0, .L276+8
 3574 0040 FFF7FEFF 		bl	vListInsertEnd
 3575              	.LVL249:
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3576              		.loc 1 1741 5 view .LVU992
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3577              		.loc 1 1741 14 is_stmt 0 view .LVU993
 3578 0044 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3579 0048 DBB2     		uxtb	r3, r3
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3580              		.loc 1 1741 7 view .LVU994
 3581 004a 012B     		cmp	r3, #1
 3582 004c 0CD0     		beq	.L273
 3583              	.L264:
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3584              		.loc 1 1750 3 is_stmt 1 view .LVU995
 3585 004e FFF7FEFF 		bl	vPortExitCritical
 3586              	.LVL250:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3587              		.loc 1 1752 3 view .LVU996
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3588              		.loc 1 1752 25 is_stmt 0 view .LVU997
 3589 0052 214B     		ldr	r3, .L276+12
 3590 0054 1B68     		ldr	r3, [r3]
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3591              		.loc 1 1752 5 view .LVU998
 3592 0056 5BB9     		cbnz	r3, .L274
 3593              	.L265:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3594              		.loc 1 1764 28 is_stmt 1 view .LVU999
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3595              		.loc 1 1767 3 view .LVU1000
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc0mjIFM.s 			page 176


 3596              		.loc 1 1767 13 is_stmt 0 view .LVU1001
 3597 0058 204B     		ldr	r3, .L276+16
 3598 005a 1B68     		ldr	r3, [r3]
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3599              		.loc 1 1767 5 view .LVU1002
 3600 005c A342     		cmp	r3, r4
 3601 005e 0ED0     		beq	.L275
 3602              	.L260:
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3603              		.loc 1 1798 2 view .LVU1003
 3604 0060 38BD     		pop	{r3, r4, r5, pc}
 3605              	.LVL251:
 3606              	.L272:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3607              		.loc 1 1712 12 discriminator 1 view .LVU1004
 3608 0062 1E4B     		ldr	r3, .L276+16
 3609 0064 1C68     		ldr	r4, [r3]
 3610              	.LVL252:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3611              		.loc 1 1712 12 discriminator 1 view .LVU1005
 3612 0066 D0E7     		b	.L261
 3613              	.LVL253:
 3614              	.L273:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3615              		.loc 1 1745 6 is_stmt 1 view .LVU1006
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3616              		.loc 1 1745 27 is_stmt 0 view .LVU1007
 3617 0068 0023     		movs	r3, #0
 3618 006a 84F85030 		strb	r3, [r4, #80]
 3619 006e EEE7     		b	.L264
 3620              	.L274:
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3621              		.loc 1 1756 4 is_stmt 1 view .LVU1008
 3622 0070 FFF7FEFF 		bl	vPortEnterCritical
 3623              	.LVL254:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3624              		.loc 1 1758 5 view .LVU1009
 3625 0074 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3626              	.LVL255:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3627              		.loc 1 1760 4 view .LVU1010
 3628 0078 FFF7FEFF 		bl	vPortExitCritical
 3629              	.LVL256:
 3630 007c ECE7     		b	.L265
 3631              	.L275:
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3632              		.loc 1 1769 4 view .LVU1011
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3633              		.loc 1 1769 26 is_stmt 0 view .LVU1012
 3634 007e 164B     		ldr	r3, .L276+12
 3635 0080 1B68     		ldr	r3, [r3]
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3636              		.loc 1 1769 6 view .LVU1013
 3637 0082 B3B1     		cbz	r3, .L267
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3638              		.loc 1 1772 5 is_stmt 1 view .LVU1014
 3639 0084 164B     		ldr	r3, .L276+20
ARM GAS  /tmp/cc0mjIFM.s 			page 177


 3640 0086 1B68     		ldr	r3, [r3]
 3641 0088 43B1     		cbz	r3, .L268
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3642              		.loc 1 1772 5 view .LVU1015
 3643              	.LBB172:
 3644              	.LBI172:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3645              		.loc 2 191 30 view .LVU1016
 3646              	.LBB173:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3647              		.loc 2 193 1 view .LVU1017
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3648              		.loc 2 195 2 view .LVU1018
 3649              		.syntax unified
 3650              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3651 008a 4FF05003 			mov r3, #80												
 3652 008e 83F31188 		msr basepri, r3											
 3653 0092 BFF36F8F 		isb														
 3654 0096 BFF34F8F 		dsb														
 3655              	
 3656              	@ 0 "" 2
 3657              	.LVL257:
 3658              		.thumb
 3659              		.syntax unified
 3660              	.L269:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3661              		.loc 2 195 2 is_stmt 0 view .LVU1019
 3662              	.LBE173:
 3663              	.LBE172:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3664              		.loc 1 1772 5 is_stmt 1 discriminator 1 view .LVU1020
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3665              		.loc 1 1772 5 discriminator 1 view .LVU1021
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3666              		.loc 1 1772 5 discriminator 1 view .LVU1022
 3667 009a FEE7     		b	.L269
 3668              	.L268:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3669              		.loc 1 1772 46 discriminator 2 view .LVU1023
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3670              		.loc 1 1773 5 discriminator 2 view .LVU1024
 3671 009c 4FF0E023 		mov	r3, #-536813568
 3672 00a0 4FF08052 		mov	r2, #268435456
 3673 00a4 C3F8042D 		str	r2, [r3, #3332]
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3674              		.loc 1 1773 5 discriminator 2 view .LVU1025
 3675              		.syntax unified
 3676              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3677 00a8 BFF34F8F 		dsb
 3678              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3679              		.loc 1 1773 5 discriminator 2 view .LVU1026
 3680              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3681 00ac BFF36F8F 		isb
 3682              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3683              		.loc 1 1773 27 discriminator 2 view .LVU1027
ARM GAS  /tmp/cc0mjIFM.s 			page 178


 3684              		.thumb
 3685              		.syntax unified
 3686 00b0 D6E7     		b	.L260
 3687              	.L267:
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3688              		.loc 1 1780 5 view .LVU1028
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3689              		.loc 1 1780 9 is_stmt 0 view .LVU1029
 3690 00b2 084B     		ldr	r3, .L276+8
 3691 00b4 1A68     		ldr	r2, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3692              		.loc 1 1780 56 view .LVU1030
 3693 00b6 0B4B     		ldr	r3, .L276+24
 3694 00b8 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3695              		.loc 1 1780 7 view .LVU1031
 3696 00ba 9A42     		cmp	r2, r3
 3697 00bc 03D1     		bne	.L270
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3698              		.loc 1 1786 6 is_stmt 1 view .LVU1032
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3699              		.loc 1 1786 19 is_stmt 0 view .LVU1033
 3700 00be 074B     		ldr	r3, .L276+16
 3701 00c0 0022     		movs	r2, #0
 3702 00c2 1A60     		str	r2, [r3]
 3703 00c4 CCE7     		b	.L260
 3704              	.L270:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3705              		.loc 1 1790 6 is_stmt 1 view .LVU1034
 3706 00c6 FFF7FEFF 		bl	vTaskSwitchContext
 3707              	.LVL258:
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3708              		.loc 1 1796 28 view .LVU1035
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3709              		.loc 1 1798 2 is_stmt 0 view .LVU1036
 3710 00ca C9E7     		b	.L260
 3711              	.L277:
 3712              		.align	2
 3713              	.L276:
 3714 00cc 00000000 		.word	.LANCHOR4
 3715 00d0 00000000 		.word	.LANCHOR13
 3716 00d4 00000000 		.word	.LANCHOR0
 3717 00d8 00000000 		.word	.LANCHOR11
 3718 00dc 00000000 		.word	.LANCHOR10
 3719 00e0 00000000 		.word	.LANCHOR16
 3720 00e4 00000000 		.word	.LANCHOR9
 3721              		.cfi_endproc
 3722              	.LFE14:
 3724              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3725              		.align	1
 3726              		.global	vTaskPlaceOnEventList
 3727              		.syntax unified
 3728              		.thumb
 3729              		.thumb_func
 3730              		.fpu fpv4-sp-d16
 3732              	vTaskPlaceOnEventList:
 3733              	.LVL259:
ARM GAS  /tmp/cc0mjIFM.s 			page 179


 3734              	.LFB29:
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3735              		.loc 1 3065 1 is_stmt 1 view -0
 3736              		.cfi_startproc
 3737              		@ args = 0, pretend = 0, frame = 0
 3738              		@ frame_needed = 0, uses_anonymous_args = 0
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3739              		.loc 1 3066 2 view .LVU1038
 3740 0000 58B1     		cbz	r0, .L283
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3741              		.loc 1 3065 1 is_stmt 0 discriminator 2 view .LVU1039
 3742 0002 10B5     		push	{r4, lr}
 3743              	.LCFI31:
 3744              		.cfi_def_cfa_offset 8
 3745              		.cfi_offset 4, -8
 3746              		.cfi_offset 14, -4
 3747 0004 0C46     		mov	r4, r1
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3748              		.loc 1 3066 29 is_stmt 1 discriminator 2 view .LVU1040
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3749              		.loc 1 3075 2 discriminator 2 view .LVU1041
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3750              		.loc 1 3075 43 is_stmt 0 discriminator 2 view .LVU1042
 3751 0006 094A     		ldr	r2, .L284
 3752 0008 1168     		ldr	r1, [r2]
 3753              	.LVL260:
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3754              		.loc 1 3075 2 discriminator 2 view .LVU1043
 3755 000a 1831     		adds	r1, r1, #24
 3756 000c FFF7FEFF 		bl	vListInsert
 3757              	.LVL261:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3758              		.loc 1 3077 2 is_stmt 1 discriminator 2 view .LVU1044
 3759 0010 0121     		movs	r1, #1
 3760 0012 2046     		mov	r0, r4
 3761 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3762              	.LVL262:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3763              		.loc 1 3078 1 is_stmt 0 discriminator 2 view .LVU1045
 3764 0018 10BD     		pop	{r4, pc}
 3765              	.LVL263:
 3766              	.L283:
 3767              	.LCFI32:
 3768              		.cfi_def_cfa_offset 0
 3769              		.cfi_restore 4
 3770              		.cfi_restore 14
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3771              		.loc 1 3066 2 is_stmt 1 view .LVU1046
 3772              	.LBB174:
 3773              	.LBI174:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3774              		.loc 2 191 30 view .LVU1047
 3775              	.LBB175:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3776              		.loc 2 193 1 view .LVU1048
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3777              		.loc 2 195 2 view .LVU1049
ARM GAS  /tmp/cc0mjIFM.s 			page 180


 3778              		.syntax unified
 3779              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3780 001a 4FF05003 			mov r3, #80												
 3781 001e 83F31188 		msr basepri, r3											
 3782 0022 BFF36F8F 		isb														
 3783 0026 BFF34F8F 		dsb														
 3784              	
 3785              	@ 0 "" 2
 3786              	.LVL264:
 3787              		.thumb
 3788              		.syntax unified
 3789              	.L280:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3790              		.loc 2 195 2 is_stmt 0 view .LVU1050
 3791              	.LBE175:
 3792              	.LBE174:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3793              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU1051
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3794              		.loc 1 3066 2 discriminator 1 view .LVU1052
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3795              		.loc 1 3066 2 discriminator 1 view .LVU1053
 3796 002a FEE7     		b	.L280
 3797              	.L285:
 3798              		.align	2
 3799              	.L284:
 3800 002c 00000000 		.word	.LANCHOR10
 3801              		.cfi_endproc
 3802              	.LFE29:
 3804              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3805              		.align	1
 3806              		.global	vTaskPlaceOnUnorderedEventList
 3807              		.syntax unified
 3808              		.thumb
 3809              		.thumb_func
 3810              		.fpu fpv4-sp-d16
 3812              	vTaskPlaceOnUnorderedEventList:
 3813              	.LVL265:
 3814              	.LFB30:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3815              		.loc 1 3082 1 view -0
 3816              		.cfi_startproc
 3817              		@ args = 0, pretend = 0, frame = 0
 3818              		@ frame_needed = 0, uses_anonymous_args = 0
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3819              		.loc 1 3083 2 view .LVU1055
 3820 0000 70B1     		cbz	r0, .L293
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3821              		.loc 1 3082 1 is_stmt 0 discriminator 2 view .LVU1056
 3822 0002 10B5     		push	{r4, lr}
 3823              	.LCFI33:
 3824              		.cfi_def_cfa_offset 8
 3825              		.cfi_offset 4, -8
 3826              		.cfi_offset 14, -4
 3827 0004 1446     		mov	r4, r2
 3828 0006 0246     		mov	r2, r0
 3829              	.LVL266:
ARM GAS  /tmp/cc0mjIFM.s 			page 181


3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3830              		.loc 1 3083 29 is_stmt 1 discriminator 2 view .LVU1057
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3831              		.loc 1 3087 2 discriminator 2 view .LVU1058
 3832 0008 114B     		ldr	r3, .L294
 3833 000a 1B68     		ldr	r3, [r3]
 3834 000c 8BB9     		cbnz	r3, .L289
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3835              		.loc 1 3087 2 view .LVU1059
 3836              	.LBB176:
 3837              	.LBI176:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3838              		.loc 2 191 30 view .LVU1060
 3839              	.LBB177:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3840              		.loc 2 193 1 view .LVU1061
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3841              		.loc 2 195 2 view .LVU1062
 3842              		.syntax unified
 3843              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3844 000e 4FF05003 			mov r3, #80												
 3845 0012 83F31188 		msr basepri, r3											
 3846 0016 BFF36F8F 		isb														
 3847 001a BFF34F8F 		dsb														
 3848              	
 3849              	@ 0 "" 2
 3850              	.LVL267:
 3851              		.thumb
 3852              		.syntax unified
 3853              	.L290:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3854              		.loc 2 195 2 is_stmt 0 view .LVU1063
 3855              	.LBE177:
 3856              	.LBE176:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3857              		.loc 1 3087 2 is_stmt 1 discriminator 2 view .LVU1064
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3858              		.loc 1 3087 2 discriminator 2 view .LVU1065
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3859              		.loc 1 3087 2 discriminator 2 view .LVU1066
 3860 001e FEE7     		b	.L290
 3861              	.LVL268:
 3862              	.L293:
 3863              	.LCFI34:
 3864              		.cfi_def_cfa_offset 0
 3865              		.cfi_restore 4
 3866              		.cfi_restore 14
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3867              		.loc 1 3083 2 view .LVU1067
 3868              	.LBB178:
 3869              	.LBI178:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3870              		.loc 2 191 30 view .LVU1068
 3871              	.LBB179:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3872              		.loc 2 193 1 view .LVU1069
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/cc0mjIFM.s 			page 182


 3873              		.loc 2 195 2 view .LVU1070
 3874              		.syntax unified
 3875              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3876 0020 4FF05003 			mov r3, #80												
 3877 0024 83F31188 		msr basepri, r3											
 3878 0028 BFF36F8F 		isb														
 3879 002c BFF34F8F 		dsb														
 3880              	
 3881              	@ 0 "" 2
 3882              	.LVL269:
 3883              		.thumb
 3884              		.syntax unified
 3885              	.L288:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3886              		.loc 2 195 2 is_stmt 0 view .LVU1071
 3887              	.LBE179:
 3888              	.LBE178:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3889              		.loc 1 3083 2 is_stmt 1 discriminator 1 view .LVU1072
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3890              		.loc 1 3083 2 discriminator 1 view .LVU1073
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3891              		.loc 1 3083 2 discriminator 1 view .LVU1074
 3892 0030 FEE7     		b	.L288
 3893              	.LVL270:
 3894              	.L289:
 3895              	.LCFI35:
 3896              		.cfi_def_cfa_offset 8
 3897              		.cfi_offset 4, -8
 3898              		.cfi_offset 14, -4
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3899              		.loc 1 3087 43 discriminator 2 view .LVU1075
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3900              		.loc 1 3092 2 discriminator 2 view .LVU1076
 3901 0032 084B     		ldr	r3, .L294+4
 3902 0034 1868     		ldr	r0, [r3]
 3903              	.LVL271:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3904              		.loc 1 3092 2 is_stmt 0 discriminator 2 view .LVU1077
 3905 0036 41F00041 		orr	r1, r1, #-2147483648
 3906              	.LVL272:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3907              		.loc 1 3092 2 discriminator 2 view .LVU1078
 3908 003a 8161     		str	r1, [r0, #24]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3909              		.loc 1 3099 2 is_stmt 1 discriminator 2 view .LVU1079
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3910              		.loc 1 3099 46 is_stmt 0 discriminator 2 view .LVU1080
 3911 003c 1968     		ldr	r1, [r3]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3912              		.loc 1 3099 2 discriminator 2 view .LVU1081
 3913 003e 1831     		adds	r1, r1, #24
 3914 0040 1046     		mov	r0, r2
 3915 0042 FFF7FEFF 		bl	vListInsertEnd
 3916              	.LVL273:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3917              		.loc 1 3101 2 is_stmt 1 discriminator 2 view .LVU1082
ARM GAS  /tmp/cc0mjIFM.s 			page 183


 3918 0046 0121     		movs	r1, #1
 3919 0048 2046     		mov	r0, r4
 3920 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3921              	.LVL274:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3922              		.loc 1 3102 1 is_stmt 0 discriminator 2 view .LVU1083
 3923 004e 10BD     		pop	{r4, pc}
 3924              	.LVL275:
 3925              	.L295:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3926              		.loc 1 3102 1 discriminator 2 view .LVU1084
 3927              		.align	2
 3928              	.L294:
 3929 0050 00000000 		.word	.LANCHOR16
 3930 0054 00000000 		.word	.LANCHOR10
 3931              		.cfi_endproc
 3932              	.LFE30:
 3934              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3935              		.align	1
 3936              		.global	xTaskRemoveFromEventList
 3937              		.syntax unified
 3938              		.thumb
 3939              		.thumb_func
 3940              		.fpu fpv4-sp-d16
 3942              	xTaskRemoveFromEventList:
 3943              	.LVL276:
 3944              	.LFB31:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3945              		.loc 1 3139 1 is_stmt 1 view -0
 3946              		.cfi_startproc
 3947              		@ args = 0, pretend = 0, frame = 0
 3948              		@ frame_needed = 0, uses_anonymous_args = 0
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3949              		.loc 1 3139 1 is_stmt 0 view .LVU1086
 3950 0000 38B5     		push	{r3, r4, r5, lr}
 3951              	.LCFI36:
 3952              		.cfi_def_cfa_offset 16
 3953              		.cfi_offset 3, -16
 3954              		.cfi_offset 4, -12
 3955              		.cfi_offset 5, -8
 3956              		.cfi_offset 14, -4
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3957              		.loc 1 3140 1 is_stmt 1 view .LVU1087
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3958              		.loc 1 3141 1 view .LVU1088
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3959              		.loc 1 3156 2 view .LVU1089
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3960              		.loc 1 3156 19 is_stmt 0 view .LVU1090
 3961 0002 C368     		ldr	r3, [r0, #12]
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3962              		.loc 1 3156 17 view .LVU1091
 3963 0004 DC68     		ldr	r4, [r3, #12]
 3964              	.LVL277:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3965              		.loc 1 3157 2 is_stmt 1 view .LVU1092
 3966 0006 24B3     		cbz	r4, .L304
ARM GAS  /tmp/cc0mjIFM.s 			page 184


3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3967              		.loc 1 3157 32 discriminator 2 view .LVU1093
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3968              		.loc 1 3158 2 discriminator 2 view .LVU1094
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3969              		.loc 1 3158 11 is_stmt 0 discriminator 2 view .LVU1095
 3970 0008 04F11805 		add	r5, r4, #24
 3971 000c 2846     		mov	r0, r5
 3972              	.LVL278:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3973              		.loc 1 3158 11 discriminator 2 view .LVU1096
 3974 000e FFF7FEFF 		bl	uxListRemove
 3975              	.LVL279:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3976              		.loc 1 3160 2 is_stmt 1 discriminator 2 view .LVU1097
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3977              		.loc 1 3160 27 is_stmt 0 discriminator 2 view .LVU1098
 3978 0012 184B     		ldr	r3, .L305
 3979 0014 1B68     		ldr	r3, [r3]
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3980              		.loc 1 3160 4 discriminator 2 view .LVU1099
 3981 0016 2BBB     		cbnz	r3, .L299
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3982              		.loc 1 3162 3 is_stmt 1 view .LVU1100
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3983              		.loc 1 3162 12 is_stmt 0 view .LVU1101
 3984 0018 251D     		adds	r5, r4, #4
 3985 001a 2846     		mov	r0, r5
 3986 001c FFF7FEFF 		bl	uxListRemove
 3987              	.LVL280:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3988              		.loc 1 3163 3 is_stmt 1 view .LVU1102
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3989              		.loc 1 3163 3 view .LVU1103
 3990 0020 E06A     		ldr	r0, [r4, #44]
 3991 0022 0123     		movs	r3, #1
 3992 0024 8340     		lsls	r3, r3, r0
 3993 0026 144A     		ldr	r2, .L305+4
 3994 0028 1168     		ldr	r1, [r2]
 3995 002a 0B43     		orrs	r3, r3, r1
 3996 002c 1360     		str	r3, [r2]
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3997              		.loc 1 3163 3 view .LVU1104
 3998 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3999 0032 2946     		mov	r1, r5
 4000 0034 114B     		ldr	r3, .L305+8
 4001 0036 03EB8000 		add	r0, r3, r0, lsl #2
 4002 003a FFF7FEFF 		bl	vListInsertEnd
 4003              	.LVL281:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4004              		.loc 1 3163 42 view .LVU1105
 4005              	.L300:
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4006              		.loc 1 3186 2 view .LVU1106
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4007              		.loc 1 3186 20 is_stmt 0 view .LVU1107
 4008 003e E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cc0mjIFM.s 			page 185


3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4009              		.loc 1 3186 47 view .LVU1108
 4010 0040 0F4B     		ldr	r3, .L305+12
 4011 0042 1B68     		ldr	r3, [r3]
 4012 0044 DB6A     		ldr	r3, [r3, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4013              		.loc 1 3186 4 view .LVU1109
 4014 0046 9A42     		cmp	r2, r3
 4015 0048 11D9     		bls	.L302
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4016              		.loc 1 3191 3 is_stmt 1 view .LVU1110
 4017              	.LVL282:
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4018              		.loc 1 3195 3 view .LVU1111
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4019              		.loc 1 3195 17 is_stmt 0 view .LVU1112
 4020 004a 0120     		movs	r0, #1
 4021 004c 0D4B     		ldr	r3, .L305+16
 4022 004e 1860     		str	r0, [r3]
 4023              	.LVL283:
 4024              	.L296:
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4025              		.loc 1 3203 1 view .LVU1113
 4026 0050 38BD     		pop	{r3, r4, r5, pc}
 4027              	.LVL284:
 4028              	.L304:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4029              		.loc 1 3157 2 is_stmt 1 view .LVU1114
 4030              	.LBB180:
 4031              	.LBI180:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4032              		.loc 2 191 30 view .LVU1115
 4033              	.LBB181:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4034              		.loc 2 193 1 view .LVU1116
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4035              		.loc 2 195 2 view .LVU1117
 4036              		.syntax unified
 4037              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4038 0052 4FF05003 			mov r3, #80												
 4039 0056 83F31188 		msr basepri, r3											
 4040 005a BFF36F8F 		isb														
 4041 005e BFF34F8F 		dsb														
 4042              	
 4043              	@ 0 "" 2
 4044              	.LVL285:
 4045              		.thumb
 4046              		.syntax unified
 4047              	.L298:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4048              		.loc 2 195 2 is_stmt 0 view .LVU1118
 4049              	.LBE181:
 4050              	.LBE180:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4051              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU1119
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4052              		.loc 1 3157 2 discriminator 1 view .LVU1120
ARM GAS  /tmp/cc0mjIFM.s 			page 186


3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4053              		.loc 1 3157 2 discriminator 1 view .LVU1121
 4054 0062 FEE7     		b	.L298
 4055              	.LVL286:
 4056              	.L299:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4057              		.loc 1 3183 3 view .LVU1122
 4058 0064 2946     		mov	r1, r5
 4059 0066 0848     		ldr	r0, .L305+20
 4060 0068 FFF7FEFF 		bl	vListInsertEnd
 4061              	.LVL287:
 4062 006c E7E7     		b	.L300
 4063              	.L302:
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4064              		.loc 1 3199 11 is_stmt 0 view .LVU1123
 4065 006e 0020     		movs	r0, #0
 4066              	.LVL288:
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4067              		.loc 1 3202 2 is_stmt 1 view .LVU1124
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4068              		.loc 1 3202 9 is_stmt 0 view .LVU1125
 4069 0070 EEE7     		b	.L296
 4070              	.L306:
 4071 0072 00BF     		.align	2
 4072              	.L305:
 4073 0074 00000000 		.word	.LANCHOR16
 4074 0078 00000000 		.word	.LANCHOR13
 4075 007c 00000000 		.word	.LANCHOR4
 4076 0080 00000000 		.word	.LANCHOR10
 4077 0084 00000000 		.word	.LANCHOR20
 4078 0088 00000000 		.word	.LANCHOR1
 4079              		.cfi_endproc
 4080              	.LFE31:
 4082              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4083              		.align	1
 4084              		.global	vTaskRemoveFromUnorderedEventList
 4085              		.syntax unified
 4086              		.thumb
 4087              		.thumb_func
 4088              		.fpu fpv4-sp-d16
 4090              	vTaskRemoveFromUnorderedEventList:
 4091              	.LVL289:
 4092              	.LFB32:
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4093              		.loc 1 3207 1 is_stmt 1 view -0
 4094              		.cfi_startproc
 4095              		@ args = 0, pretend = 0, frame = 0
 4096              		@ frame_needed = 0, uses_anonymous_args = 0
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4097              		.loc 1 3207 1 is_stmt 0 view .LVU1127
 4098 0000 38B5     		push	{r3, r4, r5, lr}
 4099              	.LCFI37:
 4100              		.cfi_def_cfa_offset 16
 4101              		.cfi_offset 3, -16
 4102              		.cfi_offset 4, -12
 4103              		.cfi_offset 5, -8
 4104              		.cfi_offset 14, -4
ARM GAS  /tmp/cc0mjIFM.s 			page 187


3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4105              		.loc 1 3208 1 is_stmt 1 view .LVU1128
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4106              		.loc 1 3212 2 view .LVU1129
 4107 0002 1C4B     		ldr	r3, .L315
 4108 0004 1B68     		ldr	r3, [r3]
 4109 0006 43B9     		cbnz	r3, .L308
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4110              		.loc 1 3212 2 view .LVU1130
 4111              	.LBB182:
 4112              	.LBI182:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4113              		.loc 2 191 30 view .LVU1131
 4114              	.LBB183:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4115              		.loc 2 193 1 view .LVU1132
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4116              		.loc 2 195 2 view .LVU1133
 4117              		.syntax unified
 4118              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4119 0008 4FF05003 			mov r3, #80												
 4120 000c 83F31188 		msr basepri, r3											
 4121 0010 BFF36F8F 		isb														
 4122 0014 BFF34F8F 		dsb														
 4123              	
 4124              	@ 0 "" 2
 4125              	.LVL290:
 4126              		.thumb
 4127              		.syntax unified
 4128              	.L309:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4129              		.loc 2 195 2 is_stmt 0 view .LVU1134
 4130              	.LBE183:
 4131              	.LBE182:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4132              		.loc 1 3212 2 is_stmt 1 discriminator 1 view .LVU1135
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4133              		.loc 1 3212 2 discriminator 1 view .LVU1136
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4134              		.loc 1 3212 2 discriminator 1 view .LVU1137
 4135 0018 FEE7     		b	.L309
 4136              	.L308:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4137              		.loc 1 3212 49 discriminator 2 view .LVU1138
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4138              		.loc 1 3215 2 discriminator 2 view .LVU1139
 4139 001a 41F00041 		orr	r1, r1, #-2147483648
 4140              	.LVL291:
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4141              		.loc 1 3215 2 is_stmt 0 discriminator 2 view .LVU1140
 4142 001e 0160     		str	r1, [r0]
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4143              		.loc 1 3219 2 is_stmt 1 discriminator 2 view .LVU1141
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4144              		.loc 1 3219 17 is_stmt 0 discriminator 2 view .LVU1142
 4145 0020 C468     		ldr	r4, [r0, #12]
 4146              	.LVL292:
ARM GAS  /tmp/cc0mjIFM.s 			page 188


3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4147              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1143
 4148 0022 F4B1     		cbz	r4, .L314
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4149              		.loc 1 3220 32 discriminator 2 view .LVU1144
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4150              		.loc 1 3221 2 discriminator 2 view .LVU1145
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4151              		.loc 1 3221 11 is_stmt 0 discriminator 2 view .LVU1146
 4152 0024 FFF7FEFF 		bl	uxListRemove
 4153              	.LVL293:
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4154              		.loc 1 3240 2 is_stmt 1 discriminator 2 view .LVU1147
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4155              		.loc 1 3240 11 is_stmt 0 discriminator 2 view .LVU1148
 4156 0028 251D     		adds	r5, r4, #4
 4157 002a 2846     		mov	r0, r5
 4158 002c FFF7FEFF 		bl	uxListRemove
 4159              	.LVL294:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4160              		.loc 1 3241 2 is_stmt 1 discriminator 2 view .LVU1149
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4161              		.loc 1 3241 2 discriminator 2 view .LVU1150
 4162 0030 E06A     		ldr	r0, [r4, #44]
 4163 0032 0123     		movs	r3, #1
 4164 0034 8340     		lsls	r3, r3, r0
 4165 0036 104A     		ldr	r2, .L315+4
 4166 0038 1168     		ldr	r1, [r2]
 4167 003a 0B43     		orrs	r3, r3, r1
 4168 003c 1360     		str	r3, [r2]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4169              		.loc 1 3241 2 discriminator 2 view .LVU1151
 4170 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4171 0042 2946     		mov	r1, r5
 4172 0044 0D4B     		ldr	r3, .L315+8
 4173 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4174 004a FFF7FEFF 		bl	vListInsertEnd
 4175              	.LVL295:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4176              		.loc 1 3241 41 discriminator 2 view .LVU1152
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4177              		.loc 1 3243 2 discriminator 2 view .LVU1153
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4178              		.loc 1 3243 20 is_stmt 0 discriminator 2 view .LVU1154
 4179 004e E26A     		ldr	r2, [r4, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4180              		.loc 1 3243 47 discriminator 2 view .LVU1155
 4181 0050 0B4B     		ldr	r3, .L315+12
 4182 0052 1B68     		ldr	r3, [r3]
 4183 0054 DB6A     		ldr	r3, [r3, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4184              		.loc 1 3243 4 discriminator 2 view .LVU1156
 4185 0056 9A42     		cmp	r2, r3
 4186 0058 02D9     		bls	.L307
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4187              		.loc 1 3249 3 is_stmt 1 view .LVU1157
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc0mjIFM.s 			page 189


 4188              		.loc 1 3249 17 is_stmt 0 view .LVU1158
 4189 005a 0A4B     		ldr	r3, .L315+16
 4190 005c 0122     		movs	r2, #1
 4191 005e 1A60     		str	r2, [r3]
 4192              	.L307:
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4193              		.loc 1 3251 1 view .LVU1159
 4194 0060 38BD     		pop	{r3, r4, r5, pc}
 4195              	.LVL296:
 4196              	.L314:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4197              		.loc 1 3220 2 is_stmt 1 view .LVU1160
 4198              	.LBB184:
 4199              	.LBI184:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4200              		.loc 2 191 30 view .LVU1161
 4201              	.LBB185:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4202              		.loc 2 193 1 view .LVU1162
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4203              		.loc 2 195 2 view .LVU1163
 4204              		.syntax unified
 4205              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4206 0062 4FF05003 			mov r3, #80												
 4207 0066 83F31188 		msr basepri, r3											
 4208 006a BFF36F8F 		isb														
 4209 006e BFF34F8F 		dsb														
 4210              	
 4211              	@ 0 "" 2
 4212              	.LVL297:
 4213              		.thumb
 4214              		.syntax unified
 4215              	.L311:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4216              		.loc 2 195 2 is_stmt 0 view .LVU1164
 4217              	.LBE185:
 4218              	.LBE184:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4219              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1165
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4220              		.loc 1 3220 2 discriminator 2 view .LVU1166
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4221              		.loc 1 3220 2 discriminator 2 view .LVU1167
 4222 0072 FEE7     		b	.L311
 4223              	.L316:
 4224              		.align	2
 4225              	.L315:
 4226 0074 00000000 		.word	.LANCHOR16
 4227 0078 00000000 		.word	.LANCHOR13
 4228 007c 00000000 		.word	.LANCHOR4
 4229 0080 00000000 		.word	.LANCHOR10
 4230 0084 00000000 		.word	.LANCHOR20
 4231              		.cfi_endproc
 4232              	.LFE32:
 4234              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4235              		.align	1
 4236              		.global	vTaskSetTimeOutState
ARM GAS  /tmp/cc0mjIFM.s 			page 190


 4237              		.syntax unified
 4238              		.thumb
 4239              		.thumb_func
 4240              		.fpu fpv4-sp-d16
 4242              	vTaskSetTimeOutState:
 4243              	.LVL298:
 4244              	.LFB33:
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4245              		.loc 1 3255 1 view -0
 4246              		.cfi_startproc
 4247              		@ args = 0, pretend = 0, frame = 0
 4248              		@ frame_needed = 0, uses_anonymous_args = 0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4249              		.loc 1 3256 2 view .LVU1169
 4250 0000 60B1     		cbz	r0, .L322
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4251              		.loc 1 3255 1 is_stmt 0 discriminator 2 view .LVU1170
 4252 0002 10B5     		push	{r4, lr}
 4253              	.LCFI38:
 4254              		.cfi_def_cfa_offset 8
 4255              		.cfi_offset 4, -8
 4256              		.cfi_offset 14, -4
 4257 0004 0446     		mov	r4, r0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4258              		.loc 1 3256 27 is_stmt 1 discriminator 2 view .LVU1171
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4259              		.loc 1 3257 2 discriminator 2 view .LVU1172
 4260 0006 FFF7FEFF 		bl	vPortEnterCritical
 4261              	.LVL299:
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4262              		.loc 1 3259 3 discriminator 2 view .LVU1173
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4263              		.loc 1 3259 29 is_stmt 0 discriminator 2 view .LVU1174
 4264 000a 094B     		ldr	r3, .L323
 4265 000c 1B68     		ldr	r3, [r3]
 4266 000e 2360     		str	r3, [r4]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4267              		.loc 1 3260 3 is_stmt 1 discriminator 2 view .LVU1175
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4268              		.loc 1 3260 30 is_stmt 0 discriminator 2 view .LVU1176
 4269 0010 084B     		ldr	r3, .L323+4
 4270 0012 1B68     		ldr	r3, [r3]
 4271 0014 6360     		str	r3, [r4, #4]
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4272              		.loc 1 3262 2 is_stmt 1 discriminator 2 view .LVU1177
 4273 0016 FFF7FEFF 		bl	vPortExitCritical
 4274              	.LVL300:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4275              		.loc 1 3263 1 is_stmt 0 discriminator 2 view .LVU1178
 4276 001a 10BD     		pop	{r4, pc}
 4277              	.LVL301:
 4278              	.L322:
 4279              	.LCFI39:
 4280              		.cfi_def_cfa_offset 0
 4281              		.cfi_restore 4
 4282              		.cfi_restore 14
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
ARM GAS  /tmp/cc0mjIFM.s 			page 191


 4283              		.loc 1 3256 2 is_stmt 1 view .LVU1179
 4284              	.LBB186:
 4285              	.LBI186:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4286              		.loc 2 191 30 view .LVU1180
 4287              	.LBB187:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4288              		.loc 2 193 1 view .LVU1181
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4289              		.loc 2 195 2 view .LVU1182
 4290              		.syntax unified
 4291              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4292 001c 4FF05003 			mov r3, #80												
 4293 0020 83F31188 		msr basepri, r3											
 4294 0024 BFF36F8F 		isb														
 4295 0028 BFF34F8F 		dsb														
 4296              	
 4297              	@ 0 "" 2
 4298              	.LVL302:
 4299              		.thumb
 4300              		.syntax unified
 4301              	.L319:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4302              		.loc 2 195 2 is_stmt 0 view .LVU1183
 4303              	.LBE187:
 4304              	.LBE186:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4305              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU1184
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4306              		.loc 1 3256 2 discriminator 1 view .LVU1185
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4307              		.loc 1 3256 2 discriminator 1 view .LVU1186
 4308 002c FEE7     		b	.L319
 4309              	.L324:
 4310 002e 00BF     		.align	2
 4311              	.L323:
 4312 0030 00000000 		.word	.LANCHOR18
 4313 0034 00000000 		.word	.LANCHOR15
 4314              		.cfi_endproc
 4315              	.LFE33:
 4317              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4318              		.align	1
 4319              		.global	vTaskInternalSetTimeOutState
 4320              		.syntax unified
 4321              		.thumb
 4322              		.thumb_func
 4323              		.fpu fpv4-sp-d16
 4325              	vTaskInternalSetTimeOutState:
 4326              	.LVL303:
 4327              	.LFB34:
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4328              		.loc 1 3267 1 view -0
 4329              		.cfi_startproc
 4330              		@ args = 0, pretend = 0, frame = 0
 4331              		@ frame_needed = 0, uses_anonymous_args = 0
 4332              		@ link register save eliminated.
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
ARM GAS  /tmp/cc0mjIFM.s 			page 192


 4333              		.loc 1 3269 2 view .LVU1188
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4334              		.loc 1 3269 28 is_stmt 0 view .LVU1189
 4335 0000 034B     		ldr	r3, .L326
 4336 0002 1B68     		ldr	r3, [r3]
 4337 0004 0360     		str	r3, [r0]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4338              		.loc 1 3270 2 is_stmt 1 view .LVU1190
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4339              		.loc 1 3270 29 is_stmt 0 view .LVU1191
 4340 0006 034B     		ldr	r3, .L326+4
 4341 0008 1B68     		ldr	r3, [r3]
 4342 000a 4360     		str	r3, [r0, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4343              		.loc 1 3271 1 view .LVU1192
 4344 000c 7047     		bx	lr
 4345              	.L327:
 4346 000e 00BF     		.align	2
 4347              	.L326:
 4348 0010 00000000 		.word	.LANCHOR18
 4349 0014 00000000 		.word	.LANCHOR15
 4350              		.cfi_endproc
 4351              	.LFE34:
 4353              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4354              		.align	1
 4355              		.global	xTaskCheckForTimeOut
 4356              		.syntax unified
 4357              		.thumb
 4358              		.thumb_func
 4359              		.fpu fpv4-sp-d16
 4361              	xTaskCheckForTimeOut:
 4362              	.LVL304:
 4363              	.LFB35:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4364              		.loc 1 3275 1 is_stmt 1 view -0
 4365              		.cfi_startproc
 4366              		@ args = 0, pretend = 0, frame = 0
 4367              		@ frame_needed = 0, uses_anonymous_args = 0
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4368              		.loc 1 3275 1 is_stmt 0 view .LVU1194
 4369 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4370              	.LCFI40:
 4371              		.cfi_def_cfa_offset 24
 4372              		.cfi_offset 3, -24
 4373              		.cfi_offset 4, -20
 4374              		.cfi_offset 5, -16
 4375              		.cfi_offset 6, -12
 4376              		.cfi_offset 7, -8
 4377              		.cfi_offset 14, -4
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4378              		.loc 1 3276 1 is_stmt 1 view .LVU1195
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4379              		.loc 1 3278 2 view .LVU1196
 4380 0002 C8B1     		cbz	r0, .L339
 4381 0004 0C46     		mov	r4, r1
 4382 0006 0546     		mov	r5, r0
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
ARM GAS  /tmp/cc0mjIFM.s 			page 193


 4383              		.loc 1 3278 27 discriminator 2 view .LVU1197
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4384              		.loc 1 3279 2 discriminator 2 view .LVU1198
 4385 0008 F9B1     		cbz	r1, .L340
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4386              		.loc 1 3279 31 discriminator 2 view .LVU1199
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4387              		.loc 1 3281 2 discriminator 2 view .LVU1200
 4388 000a FFF7FEFF 		bl	vPortEnterCritical
 4389              	.LVL305:
 4390              	.LBB188:
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4391              		.loc 1 3284 3 discriminator 2 view .LVU1201
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4392              		.loc 1 3284 20 is_stmt 0 discriminator 2 view .LVU1202
 4393 000e 1B4B     		ldr	r3, .L342
 4394 0010 1968     		ldr	r1, [r3]
 4395              	.LVL306:
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4396              		.loc 1 3285 3 is_stmt 1 discriminator 2 view .LVU1203
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4397              		.loc 1 3285 62 is_stmt 0 discriminator 2 view .LVU1204
 4398 0012 6B68     		ldr	r3, [r5, #4]
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4399              		.loc 1 3285 20 discriminator 2 view .LVU1205
 4400 0014 C81A     		subs	r0, r1, r3
 4401              	.LVL307:
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4402              		.loc 1 3299 4 is_stmt 1 discriminator 2 view .LVU1206
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4403              		.loc 1 3299 8 is_stmt 0 discriminator 2 view .LVU1207
 4404 0016 2268     		ldr	r2, [r4]
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4405              		.loc 1 3299 6 discriminator 2 view .LVU1208
 4406 0018 B2F1FF3F 		cmp	r2, #-1
 4407 001c 26D0     		beq	.L336
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4408              		.loc 1 3309 3 is_stmt 1 view .LVU1209
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4409              		.loc 1 3309 25 is_stmt 0 view .LVU1210
 4410 001e 184E     		ldr	r6, .L342+4
 4411 0020 3668     		ldr	r6, [r6]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4412              		.loc 1 3309 5 view .LVU1211
 4413 0022 2F68     		ldr	r7, [r5]
 4414 0024 B742     		cmp	r7, r6
 4415 0026 01D0     		beq	.L334
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4416              		.loc 1 3309 56 discriminator 1 view .LVU1212
 4417 0028 8B42     		cmp	r3, r1
 4418 002a 24D9     		bls	.L337
 4419              	.L334:
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4420              		.loc 1 3318 8 is_stmt 1 view .LVU1213
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4421              		.loc 1 3318 10 is_stmt 0 view .LVU1214
 4422 002c 8242     		cmp	r2, r0
ARM GAS  /tmp/cc0mjIFM.s 			page 194


 4423 002e 15D8     		bhi	.L341
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4424              		.loc 1 3327 4 is_stmt 1 view .LVU1215
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4425              		.loc 1 3327 19 is_stmt 0 view .LVU1216
 4426 0030 0023     		movs	r3, #0
 4427 0032 2360     		str	r3, [r4]
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4428              		.loc 1 3328 4 is_stmt 1 view .LVU1217
 4429              	.LVL308:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4430              		.loc 1 3328 12 is_stmt 0 view .LVU1218
 4431 0034 0124     		movs	r4, #1
 4432              	.LVL309:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4433              		.loc 1 3328 12 view .LVU1219
 4434 0036 1AE0     		b	.L333
 4435              	.LVL310:
 4436              	.L339:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4437              		.loc 1 3328 12 view .LVU1220
 4438              	.LBE188:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4439              		.loc 1 3278 2 is_stmt 1 view .LVU1221
 4440              	.LBB189:
 4441              	.LBI189:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4442              		.loc 2 191 30 view .LVU1222
 4443              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4444              		.loc 2 193 1 view .LVU1223
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4445              		.loc 2 195 2 view .LVU1224
 4446              		.syntax unified
 4447              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4448 0038 4FF05003 			mov r3, #80												
 4449 003c 83F31188 		msr basepri, r3											
 4450 0040 BFF36F8F 		isb														
 4451 0044 BFF34F8F 		dsb														
 4452              	
 4453              	@ 0 "" 2
 4454              	.LVL311:
 4455              		.thumb
 4456              		.syntax unified
 4457              	.L330:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4458              		.loc 2 195 2 is_stmt 0 view .LVU1225
 4459              	.LBE190:
 4460              	.LBE189:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4461              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU1226
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4462              		.loc 1 3278 2 discriminator 1 view .LVU1227
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4463              		.loc 1 3278 2 discriminator 1 view .LVU1228
 4464 0048 FEE7     		b	.L330
 4465              	.L340:
ARM GAS  /tmp/cc0mjIFM.s 			page 195


3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4466              		.loc 1 3279 2 view .LVU1229
 4467              	.LBB191:
 4468              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4469              		.loc 2 191 30 view .LVU1230
 4470              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4471              		.loc 2 193 1 view .LVU1231
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4472              		.loc 2 195 2 view .LVU1232
 4473              		.syntax unified
 4474              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4475 004a 4FF05003 			mov r3, #80												
 4476 004e 83F31188 		msr basepri, r3											
 4477 0052 BFF36F8F 		isb														
 4478 0056 BFF34F8F 		dsb														
 4479              	
 4480              	@ 0 "" 2
 4481              	.LVL312:
 4482              		.thumb
 4483              		.syntax unified
 4484              	.L332:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4485              		.loc 2 195 2 is_stmt 0 view .LVU1233
 4486              	.LBE192:
 4487              	.LBE191:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4488              		.loc 1 3279 2 is_stmt 1 discriminator 2 view .LVU1234
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4489              		.loc 1 3279 2 discriminator 2 view .LVU1235
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4490              		.loc 1 3279 2 discriminator 2 view .LVU1236
 4491 005a FEE7     		b	.L332
 4492              	.LVL313:
 4493              	.L341:
 4494              	.LBB193:
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4495              		.loc 1 3321 4 view .LVU1237
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4496              		.loc 1 3321 19 is_stmt 0 view .LVU1238
 4497 005c 5B1A     		subs	r3, r3, r1
 4498 005e 1344     		add	r3, r3, r2
 4499 0060 2360     		str	r3, [r4]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4500              		.loc 1 3322 4 is_stmt 1 view .LVU1239
 4501 0062 2846     		mov	r0, r5
 4502              	.LVL314:
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4503              		.loc 1 3322 4 is_stmt 0 view .LVU1240
 4504 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4505              	.LVL315:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4506              		.loc 1 3323 4 is_stmt 1 view .LVU1241
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4507              		.loc 1 3323 12 is_stmt 0 view .LVU1242
 4508 0068 0024     		movs	r4, #0
ARM GAS  /tmp/cc0mjIFM.s 			page 196


 4509              	.LVL316:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4510              		.loc 1 3323 12 view .LVU1243
 4511 006a 00E0     		b	.L333
 4512              	.LVL317:
 4513              	.L336:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4514              		.loc 1 3304 13 view .LVU1244
 4515 006c 0024     		movs	r4, #0
 4516              	.LVL318:
 4517              	.L333:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4518              		.loc 1 3304 13 view .LVU1245
 4519              	.LBE193:
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4520              		.loc 1 3331 2 is_stmt 1 view .LVU1246
 4521 006e FFF7FEFF 		bl	vPortExitCritical
 4522              	.LVL319:
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4523              		.loc 1 3333 2 view .LVU1247
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4524              		.loc 1 3334 1 is_stmt 0 view .LVU1248
 4525 0072 2046     		mov	r0, r4
 4526 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4527              	.LVL320:
 4528              	.L337:
 4529              	.LBB194:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4530              		.loc 1 3316 12 view .LVU1249
 4531 0076 0124     		movs	r4, #1
 4532              	.LVL321:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4533              		.loc 1 3316 12 view .LVU1250
 4534 0078 F9E7     		b	.L333
 4535              	.L343:
 4536 007a 00BF     		.align	2
 4537              	.L342:
 4538 007c 00000000 		.word	.LANCHOR15
 4539 0080 00000000 		.word	.LANCHOR18
 4540              	.LBE194:
 4541              		.cfi_endproc
 4542              	.LFE35:
 4544              		.section	.text.vTaskMissedYield,"ax",%progbits
 4545              		.align	1
 4546              		.global	vTaskMissedYield
 4547              		.syntax unified
 4548              		.thumb
 4549              		.thumb_func
 4550              		.fpu fpv4-sp-d16
 4552              	vTaskMissedYield:
 4553              	.LFB36:
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4554              		.loc 1 3338 1 is_stmt 1 view -0
 4555              		.cfi_startproc
 4556              		@ args = 0, pretend = 0, frame = 0
 4557              		@ frame_needed = 0, uses_anonymous_args = 0
 4558              		@ link register save eliminated.
ARM GAS  /tmp/cc0mjIFM.s 			page 197


3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4559              		.loc 1 3339 2 view .LVU1252
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4560              		.loc 1 3339 16 is_stmt 0 view .LVU1253
 4561 0000 014B     		ldr	r3, .L345
 4562 0002 0122     		movs	r2, #1
 4563 0004 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4564              		.loc 1 3340 1 view .LVU1254
 4565 0006 7047     		bx	lr
 4566              	.L346:
 4567              		.align	2
 4568              	.L345:
 4569 0008 00000000 		.word	.LANCHOR20
 4570              		.cfi_endproc
 4571              	.LFE36:
 4573              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4574              		.align	1
 4575              		.global	xTaskGetCurrentTaskHandle
 4576              		.syntax unified
 4577              		.thumb
 4578              		.thumb_func
 4579              		.fpu fpv4-sp-d16
 4581              	xTaskGetCurrentTaskHandle:
 4582              	.LFB42:
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4583              		.loc 1 3970 2 is_stmt 1 view -0
 4584              		.cfi_startproc
 4585              		@ args = 0, pretend = 0, frame = 0
 4586              		@ frame_needed = 0, uses_anonymous_args = 0
 4587              		@ link register save eliminated.
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4588              		.loc 1 3971 2 view .LVU1256
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4589              		.loc 1 3976 3 view .LVU1257
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4590              		.loc 1 3976 11 is_stmt 0 view .LVU1258
 4591 0000 014B     		ldr	r3, .L348
 4592 0002 1868     		ldr	r0, [r3]
 4593              	.LVL322:
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4594              		.loc 1 3978 3 is_stmt 1 view .LVU1259
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4595              		.loc 1 3979 2 is_stmt 0 view .LVU1260
 4596 0004 7047     		bx	lr
 4597              	.L349:
 4598 0006 00BF     		.align	2
 4599              	.L348:
 4600 0008 00000000 		.word	.LANCHOR10
 4601              		.cfi_endproc
 4602              	.LFE42:
 4604              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4605              		.align	1
 4606              		.global	xTaskGetSchedulerState
 4607              		.syntax unified
 4608              		.thumb
 4609              		.thumb_func
ARM GAS  /tmp/cc0mjIFM.s 			page 198


 4610              		.fpu fpv4-sp-d16
 4612              	xTaskGetSchedulerState:
 4613              	.LFB43:
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4614              		.loc 1 3987 2 is_stmt 1 view -0
 4615              		.cfi_startproc
 4616              		@ args = 0, pretend = 0, frame = 0
 4617              		@ frame_needed = 0, uses_anonymous_args = 0
 4618              		@ link register save eliminated.
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4619              		.loc 1 3988 2 view .LVU1262
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4620              		.loc 1 3990 3 view .LVU1263
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4621              		.loc 1 3990 25 is_stmt 0 view .LVU1264
 4622 0000 054B     		ldr	r3, .L355
 4623 0002 1B68     		ldr	r3, [r3]
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4624              		.loc 1 3990 5 view .LVU1265
 4625 0004 33B1     		cbz	r3, .L352
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4626              		.loc 1 3996 4 is_stmt 1 view .LVU1266
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4627              		.loc 1 3996 29 is_stmt 0 view .LVU1267
 4628 0006 054B     		ldr	r3, .L355+4
 4629 0008 1B68     		ldr	r3, [r3]
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4630              		.loc 1 3996 6 view .LVU1268
 4631 000a 0BB1     		cbz	r3, .L354
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4632              		.loc 1 4002 13 view .LVU1269
 4633 000c 0020     		movs	r0, #0
 4634              	.LVL323:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4635              		.loc 1 4006 3 is_stmt 1 view .LVU1270
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4636              		.loc 1 4007 2 is_stmt 0 view .LVU1271
 4637 000e 7047     		bx	lr
 4638              	.LVL324:
 4639              	.L354:
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4640              		.loc 1 3998 13 view .LVU1272
 4641 0010 0220     		movs	r0, #2
 4642 0012 7047     		bx	lr
 4643              	.L352:
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4644              		.loc 1 3992 12 view .LVU1273
 4645 0014 0120     		movs	r0, #1
 4646 0016 7047     		bx	lr
 4647              	.L356:
 4648              		.align	2
 4649              	.L355:
 4650 0018 00000000 		.word	.LANCHOR11
 4651 001c 00000000 		.word	.LANCHOR16
 4652              		.cfi_endproc
 4653              	.LFE43:
 4655              		.section	.text.xTaskPriorityInherit,"ax",%progbits
ARM GAS  /tmp/cc0mjIFM.s 			page 199


 4656              		.align	1
 4657              		.global	xTaskPriorityInherit
 4658              		.syntax unified
 4659              		.thumb
 4660              		.thumb_func
 4661              		.fpu fpv4-sp-d16
 4663              	xTaskPriorityInherit:
 4664              	.LVL325:
 4665              	.LFB44:
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4666              		.loc 1 4015 2 is_stmt 1 view -0
 4667              		.cfi_startproc
 4668              		@ args = 0, pretend = 0, frame = 0
 4669              		@ frame_needed = 0, uses_anonymous_args = 0
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4670              		.loc 1 4016 2 view .LVU1275
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4671              		.loc 1 4017 2 view .LVU1276
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4672              		.loc 1 4022 3 view .LVU1277
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4673              		.loc 1 4022 5 is_stmt 0 view .LVU1278
 4674 0000 0028     		cmp	r0, #0
 4675 0002 49D0     		beq	.L363
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4676              		.loc 1 4015 2 view .LVU1279
 4677 0004 38B5     		push	{r3, r4, r5, lr}
 4678              	.LCFI41:
 4679              		.cfi_def_cfa_offset 16
 4680              		.cfi_offset 3, -16
 4681              		.cfi_offset 4, -12
 4682              		.cfi_offset 5, -8
 4683              		.cfi_offset 14, -4
 4684 0006 0446     		mov	r4, r0
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4685              		.loc 1 4027 4 is_stmt 1 view .LVU1280
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4686              		.loc 1 4027 24 is_stmt 0 view .LVU1281
 4687 0008 C36A     		ldr	r3, [r0, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4688              		.loc 1 4027 51 view .LVU1282
 4689 000a 254A     		ldr	r2, .L370
 4690 000c 1268     		ldr	r2, [r2]
 4691 000e D26A     		ldr	r2, [r2, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4692              		.loc 1 4027 6 view .LVU1283
 4693 0010 9342     		cmp	r3, r2
 4694 0012 39D2     		bcs	.L359
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4695              		.loc 1 4032 5 is_stmt 1 view .LVU1284
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4696              		.loc 1 4032 11 is_stmt 0 view .LVU1285
 4697 0014 8269     		ldr	r2, [r0, #24]
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4698              		.loc 1 4032 7 view .LVU1286
 4699 0016 002A     		cmp	r2, #0
 4700 0018 05DB     		blt	.L360
ARM GAS  /tmp/cc0mjIFM.s 			page 200


4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4701              		.loc 1 4034 6 is_stmt 1 view .LVU1287
 4702 001a 214A     		ldr	r2, .L370
 4703 001c 1268     		ldr	r2, [r2]
 4704 001e D26A     		ldr	r2, [r2, #44]
 4705 0020 C2F10702 		rsb	r2, r2, #7
 4706 0024 8261     		str	r2, [r0, #24]
 4707              	.L360:
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4708              		.loc 1 4038 30 view .LVU1288
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4709              		.loc 1 4043 5 view .LVU1289
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4710              		.loc 1 4043 9 is_stmt 0 view .LVU1290
 4711 0026 6169     		ldr	r1, [r4, #20]
 4712 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4713 002c 1D4A     		ldr	r2, .L370+4
 4714 002e 02EB8303 		add	r3, r2, r3, lsl #2
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4715              		.loc 1 4043 7 view .LVU1291
 4716 0032 9942     		cmp	r1, r3
 4717 0034 05D0     		beq	.L369
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4718              		.loc 1 4064 6 is_stmt 1 view .LVU1292
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4719              		.loc 1 4064 49 is_stmt 0 view .LVU1293
 4720 0036 1A4B     		ldr	r3, .L370
 4721 0038 1B68     		ldr	r3, [r3]
 4722 003a DB6A     		ldr	r3, [r3, #44]
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4723              		.loc 1 4064 35 view .LVU1294
 4724 003c E362     		str	r3, [r4, #44]
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4725              		.loc 1 4070 13 view .LVU1295
 4726 003e 0120     		movs	r0, #1
 4727              	.LVL326:
 4728              	.L357:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4729              		.loc 1 4097 2 view .LVU1296
 4730 0040 38BD     		pop	{r3, r4, r5, pc}
 4731              	.LVL327:
 4732              	.L369:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4733              		.loc 1 4045 6 is_stmt 1 view .LVU1297
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4734              		.loc 1 4045 10 is_stmt 0 view .LVU1298
 4735 0042 251D     		adds	r5, r4, #4
 4736 0044 2846     		mov	r0, r5
 4737              	.LVL328:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4738              		.loc 1 4045 10 view .LVU1299
 4739 0046 FFF7FEFF 		bl	uxListRemove
 4740              	.LVL329:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4741              		.loc 1 4045 8 view .LVU1300
 4742 004a 40B9     		cbnz	r0, .L362
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc0mjIFM.s 			page 201


 4743              		.loc 1 4050 7 is_stmt 1 view .LVU1301
 4744 004c E26A     		ldr	r2, [r4, #44]
 4745 004e 0123     		movs	r3, #1
 4746 0050 03FA02F2 		lsl	r2, r3, r2
 4747 0054 1449     		ldr	r1, .L370+8
 4748 0056 0B68     		ldr	r3, [r1]
 4749 0058 23EA0203 		bic	r3, r3, r2
 4750 005c 0B60     		str	r3, [r1]
 4751              	.L362:
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4752              		.loc 1 4054 31 view .LVU1302
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4753              		.loc 1 4058 6 view .LVU1303
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4754              		.loc 1 4058 49 is_stmt 0 view .LVU1304
 4755 005e 104B     		ldr	r3, .L370
 4756 0060 1B68     		ldr	r3, [r3]
 4757 0062 D86A     		ldr	r0, [r3, #44]
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4758              		.loc 1 4058 35 view .LVU1305
 4759 0064 E062     		str	r0, [r4, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4760              		.loc 1 4059 6 is_stmt 1 view .LVU1306
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4761              		.loc 1 4059 6 view .LVU1307
 4762 0066 0124     		movs	r4, #1
 4763              	.LVL330:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4764              		.loc 1 4059 6 is_stmt 0 view .LVU1308
 4765 0068 04FA00F3 		lsl	r3, r4, r0
 4766 006c 0E4A     		ldr	r2, .L370+8
 4767 006e 1168     		ldr	r1, [r2]
 4768 0070 0B43     		orrs	r3, r3, r1
 4769 0072 1360     		str	r3, [r2]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4770              		.loc 1 4059 6 is_stmt 1 view .LVU1309
 4771 0074 00EB8000 		add	r0, r0, r0, lsl #2
 4772 0078 2946     		mov	r1, r5
 4773 007a 0A4B     		ldr	r3, .L370+4
 4774 007c 03EB8000 		add	r0, r3, r0, lsl #2
 4775 0080 FFF7FEFF 		bl	vListInsertEnd
 4776              	.LVL331:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4777              		.loc 1 4059 47 view .LVU1310
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4778              		.loc 1 4070 13 is_stmt 0 view .LVU1311
 4779 0084 2046     		mov	r0, r4
 4780 0086 DBE7     		b	.L357
 4781              	.LVL332:
 4782              	.L359:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4783              		.loc 1 4074 5 is_stmt 1 view .LVU1312
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4784              		.loc 1 4074 25 is_stmt 0 view .LVU1313
 4785 0088 426C     		ldr	r2, [r0, #68]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4786              		.loc 1 4074 56 view .LVU1314
ARM GAS  /tmp/cc0mjIFM.s 			page 202


 4787 008a 054B     		ldr	r3, .L370
 4788 008c 1B68     		ldr	r3, [r3]
 4789 008e DB6A     		ldr	r3, [r3, #44]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4790              		.loc 1 4074 7 view .LVU1315
 4791 0090 9A42     		cmp	r2, r3
 4792 0092 03D3     		bcc	.L364
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4793              		.loc 1 4017 13 view .LVU1316
 4794 0094 0020     		movs	r0, #0
 4795              	.LVL333:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4796              		.loc 1 4017 13 view .LVU1317
 4797 0096 D3E7     		b	.L357
 4798              	.LVL334:
 4799              	.L363:
 4800              	.LCFI42:
 4801              		.cfi_def_cfa_offset 0
 4802              		.cfi_restore 3
 4803              		.cfi_restore 4
 4804              		.cfi_restore 5
 4805              		.cfi_restore 14
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4806              		.loc 1 4017 13 view .LVU1318
 4807 0098 0020     		movs	r0, #0
 4808              	.LVL335:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4809              		.loc 1 4097 2 view .LVU1319
 4810 009a 7047     		bx	lr
 4811              	.LVL336:
 4812              	.L364:
 4813              	.LCFI43:
 4814              		.cfi_def_cfa_offset 16
 4815              		.cfi_offset 3, -16
 4816              		.cfi_offset 4, -12
 4817              		.cfi_offset 5, -8
 4818              		.cfi_offset 14, -4
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4819              		.loc 1 4083 14 view .LVU1320
 4820 009c 0120     		movs	r0, #1
 4821              	.LVL337:
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4822              		.loc 1 4093 28 is_stmt 1 view .LVU1321
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4823              		.loc 1 4096 3 view .LVU1322
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4824              		.loc 1 4096 10 is_stmt 0 view .LVU1323
 4825 009e CFE7     		b	.L357
 4826              	.L371:
 4827              		.align	2
 4828              	.L370:
 4829 00a0 00000000 		.word	.LANCHOR10
 4830 00a4 00000000 		.word	.LANCHOR4
 4831 00a8 00000000 		.word	.LANCHOR13
 4832              		.cfi_endproc
 4833              	.LFE44:
 4835              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
ARM GAS  /tmp/cc0mjIFM.s 			page 203


 4836              		.align	1
 4837              		.global	xTaskPriorityDisinherit
 4838              		.syntax unified
 4839              		.thumb
 4840              		.thumb_func
 4841              		.fpu fpv4-sp-d16
 4843              	xTaskPriorityDisinherit:
 4844              	.LVL338:
 4845              	.LFB45:
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4846              		.loc 1 4105 2 is_stmt 1 view -0
 4847              		.cfi_startproc
 4848              		@ args = 0, pretend = 0, frame = 0
 4849              		@ frame_needed = 0, uses_anonymous_args = 0
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4850              		.loc 1 4106 2 view .LVU1325
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4851              		.loc 1 4107 2 view .LVU1326
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4852              		.loc 1 4109 3 view .LVU1327
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4853              		.loc 1 4109 5 is_stmt 0 view .LVU1328
 4854 0000 0028     		cmp	r0, #0
 4855 0002 4CD0     		beq	.L379
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4856              		.loc 1 4105 2 view .LVU1329
 4857 0004 38B5     		push	{r3, r4, r5, lr}
 4858              	.LCFI44:
 4859              		.cfi_def_cfa_offset 16
 4860              		.cfi_offset 3, -16
 4861              		.cfi_offset 4, -12
 4862              		.cfi_offset 5, -8
 4863              		.cfi_offset 14, -4
 4864 0006 0446     		mov	r4, r0
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4865              		.loc 1 4115 4 is_stmt 1 view .LVU1330
 4866 0008 274B     		ldr	r3, .L387
 4867 000a 1B68     		ldr	r3, [r3]
 4868 000c 8342     		cmp	r3, r0
 4869 000e 08D0     		beq	.L374
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4870              		.loc 1 4115 4 view .LVU1331
 4871              	.LBB195:
 4872              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4873              		.loc 2 191 30 view .LVU1332
 4874              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4875              		.loc 2 193 1 view .LVU1333
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4876              		.loc 2 195 2 view .LVU1334
 4877              		.syntax unified
 4878              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4879 0010 4FF05003 			mov r3, #80												
 4880 0014 83F31188 		msr basepri, r3											
 4881 0018 BFF36F8F 		isb														
 4882 001c BFF34F8F 		dsb														
ARM GAS  /tmp/cc0mjIFM.s 			page 204


 4883              	
 4884              	@ 0 "" 2
 4885              	.LVL339:
 4886              		.thumb
 4887              		.syntax unified
 4888              	.L375:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4889              		.loc 2 195 2 is_stmt 0 view .LVU1335
 4890              	.LBE196:
 4891              	.LBE195:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4892              		.loc 1 4115 4 is_stmt 1 discriminator 1 view .LVU1336
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4893              		.loc 1 4115 4 discriminator 1 view .LVU1337
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4894              		.loc 1 4115 4 discriminator 1 view .LVU1338
 4895 0020 FEE7     		b	.L375
 4896              	.L374:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4897              		.loc 1 4115 41 discriminator 2 view .LVU1339
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4898              		.loc 1 4116 4 discriminator 2 view .LVU1340
 4899 0022 836C     		ldr	r3, [r0, #72]
 4900 0024 43B9     		cbnz	r3, .L376
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4901              		.loc 1 4116 4 view .LVU1341
 4902              	.LBB197:
 4903              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4904              		.loc 2 191 30 view .LVU1342
 4905              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4906              		.loc 2 193 1 view .LVU1343
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4907              		.loc 2 195 2 view .LVU1344
 4908              		.syntax unified
 4909              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4910 0026 4FF05003 			mov r3, #80												
 4911 002a 83F31188 		msr basepri, r3											
 4912 002e BFF36F8F 		isb														
 4913 0032 BFF34F8F 		dsb														
 4914              	
 4915              	@ 0 "" 2
 4916              	.LVL340:
 4917              		.thumb
 4918              		.syntax unified
 4919              	.L377:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4920              		.loc 2 195 2 is_stmt 0 view .LVU1345
 4921              	.LBE198:
 4922              	.LBE197:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4923              		.loc 1 4116 4 is_stmt 1 discriminator 2 view .LVU1346
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4924              		.loc 1 4116 4 discriminator 2 view .LVU1347
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4925              		.loc 1 4116 4 discriminator 2 view .LVU1348
ARM GAS  /tmp/cc0mjIFM.s 			page 205


 4926 0036 FEE7     		b	.L377
 4927              	.L376:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4928              		.loc 1 4116 40 discriminator 2 view .LVU1349
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4929              		.loc 1 4117 4 discriminator 2 view .LVU1350
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4930              		.loc 1 4117 28 is_stmt 0 discriminator 2 view .LVU1351
 4931 0038 013B     		subs	r3, r3, #1
 4932 003a 8364     		str	r3, [r0, #72]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4933              		.loc 1 4121 4 is_stmt 1 discriminator 2 view .LVU1352
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4934              		.loc 1 4121 13 is_stmt 0 discriminator 2 view .LVU1353
 4935 003c C16A     		ldr	r1, [r0, #44]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4936              		.loc 1 4121 34 discriminator 2 view .LVU1354
 4937 003e 426C     		ldr	r2, [r0, #68]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4938              		.loc 1 4121 6 discriminator 2 view .LVU1355
 4939 0040 9142     		cmp	r1, r2
 4940 0042 2ED0     		beq	.L380
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4941              		.loc 1 4124 5 is_stmt 1 view .LVU1356
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4942              		.loc 1 4124 7 is_stmt 0 view .LVU1357
 4943 0044 0BB1     		cbz	r3, .L386
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4944              		.loc 1 4107 13 view .LVU1358
 4945 0046 0020     		movs	r0, #0
 4946              	.LVL341:
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4947              		.loc 1 4173 28 is_stmt 1 view .LVU1359
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4948              		.loc 1 4176 3 view .LVU1360
 4949              	.L372:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4950              		.loc 1 4177 2 is_stmt 0 view .LVU1361
 4951 0048 38BD     		pop	{r3, r4, r5, pc}
 4952              	.LVL342:
 4953              	.L386:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4954              		.loc 1 4131 6 is_stmt 1 view .LVU1362
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4955              		.loc 1 4131 10 is_stmt 0 view .LVU1363
 4956 004a 051D     		adds	r5, r0, #4
 4957 004c 2846     		mov	r0, r5
 4958              	.LVL343:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4959              		.loc 1 4131 10 view .LVU1364
 4960 004e FFF7FEFF 		bl	uxListRemove
 4961              	.LVL344:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4962              		.loc 1 4131 8 view .LVU1365
 4963 0052 70B9     		cbnz	r0, .L378
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4964              		.loc 1 4133 7 is_stmt 1 view .LVU1366
ARM GAS  /tmp/cc0mjIFM.s 			page 206


 4965 0054 E26A     		ldr	r2, [r4, #44]
 4966 0056 02EB8203 		add	r3, r2, r2, lsl #2
 4967 005a 9B00     		lsls	r3, r3, #2
 4968 005c 1349     		ldr	r1, .L387+4
 4969 005e CB58     		ldr	r3, [r1, r3]
 4970 0060 3BB9     		cbnz	r3, .L378
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4971              		.loc 1 4133 7 discriminator 1 view .LVU1367
 4972 0062 0123     		movs	r3, #1
 4973 0064 03FA02F2 		lsl	r2, r3, r2
 4974 0068 1149     		ldr	r1, .L387+8
 4975 006a 0B68     		ldr	r3, [r1]
 4976 006c 23EA0203 		bic	r3, r3, r2
 4977 0070 0B60     		str	r3, [r1]
 4978              	.L378:
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4979              		.loc 1 4137 31 view .LVU1368
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4980              		.loc 1 4142 67 view .LVU1369
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4981              		.loc 1 4143 6 view .LVU1370
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4982              		.loc 1 4143 31 is_stmt 0 view .LVU1371
 4983 0072 606C     		ldr	r0, [r4, #68]
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4984              		.loc 1 4143 24 view .LVU1372
 4985 0074 E062     		str	r0, [r4, #44]
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4986              		.loc 1 4148 6 is_stmt 1 view .LVU1373
 4987 0076 C0F10703 		rsb	r3, r0, #7
 4988 007a A361     		str	r3, [r4, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4989              		.loc 1 4149 6 view .LVU1374
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4990              		.loc 1 4149 6 view .LVU1375
 4991 007c 0124     		movs	r4, #1
 4992              	.LVL345:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4993              		.loc 1 4149 6 is_stmt 0 view .LVU1376
 4994 007e 04FA00F3 		lsl	r3, r4, r0
 4995 0082 0B4A     		ldr	r2, .L387+8
 4996 0084 1168     		ldr	r1, [r2]
 4997 0086 0B43     		orrs	r3, r3, r1
 4998 0088 1360     		str	r3, [r2]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4999              		.loc 1 4149 6 is_stmt 1 view .LVU1377
 5000 008a 00EB8000 		add	r0, r0, r0, lsl #2
 5001 008e 2946     		mov	r1, r5
 5002 0090 064B     		ldr	r3, .L387+4
 5003 0092 03EB8000 		add	r0, r3, r0, lsl #2
 5004 0096 FFF7FEFF 		bl	vListInsertEnd
 5005              	.LVL346:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5006              		.loc 1 4149 36 view .LVU1378
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5007              		.loc 1 4159 6 view .LVU1379
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc0mjIFM.s 			page 207


 5008              		.loc 1 4159 14 is_stmt 0 view .LVU1380
 5009 009a 2046     		mov	r0, r4
 5010 009c D4E7     		b	.L372
 5011              	.LVL347:
 5012              	.L379:
 5013              	.LCFI45:
 5014              		.cfi_def_cfa_offset 0
 5015              		.cfi_restore 3
 5016              		.cfi_restore 4
 5017              		.cfi_restore 5
 5018              		.cfi_restore 14
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5019              		.loc 1 4107 13 view .LVU1381
 5020 009e 0020     		movs	r0, #0
 5021              	.LVL348:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5022              		.loc 1 4177 2 view .LVU1382
 5023 00a0 7047     		bx	lr
 5024              	.LVL349:
 5025              	.L380:
 5026              	.LCFI46:
 5027              		.cfi_def_cfa_offset 16
 5028              		.cfi_offset 3, -16
 5029              		.cfi_offset 4, -12
 5030              		.cfi_offset 5, -8
 5031              		.cfi_offset 14, -4
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5032              		.loc 1 4107 13 view .LVU1383
 5033 00a2 0020     		movs	r0, #0
 5034              	.LVL350:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5035              		.loc 1 4107 13 view .LVU1384
 5036 00a4 D0E7     		b	.L372
 5037              	.L388:
 5038 00a6 00BF     		.align	2
 5039              	.L387:
 5040 00a8 00000000 		.word	.LANCHOR10
 5041 00ac 00000000 		.word	.LANCHOR4
 5042 00b0 00000000 		.word	.LANCHOR13
 5043              		.cfi_endproc
 5044              	.LFE45:
 5046              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 5047              		.align	1
 5048              		.global	vTaskPriorityDisinheritAfterTimeout
 5049              		.syntax unified
 5050              		.thumb
 5051              		.thumb_func
 5052              		.fpu fpv4-sp-d16
 5054              	vTaskPriorityDisinheritAfterTimeout:
 5055              	.LVL351:
 5056              	.LFB46:
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5057              		.loc 1 4185 2 is_stmt 1 view -0
 5058              		.cfi_startproc
 5059              		@ args = 0, pretend = 0, frame = 0
 5060              		@ frame_needed = 0, uses_anonymous_args = 0
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
ARM GAS  /tmp/cc0mjIFM.s 			page 208


 5061              		.loc 1 4186 2 view .LVU1386
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 5062              		.loc 1 4187 2 view .LVU1387
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5063              		.loc 1 4188 2 view .LVU1388
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5064              		.loc 1 4190 3 view .LVU1389
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5065              		.loc 1 4190 5 is_stmt 0 view .LVU1390
 5066 0000 0028     		cmp	r0, #0
 5067 0002 50D0     		beq	.L399
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5068              		.loc 1 4185 2 view .LVU1391
 5069 0004 38B5     		push	{r3, r4, r5, lr}
 5070              	.LCFI47:
 5071              		.cfi_def_cfa_offset 16
 5072              		.cfi_offset 3, -16
 5073              		.cfi_offset 4, -12
 5074              		.cfi_offset 5, -8
 5075              		.cfi_offset 14, -4
 5076 0006 0446     		mov	r4, r0
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5077              		.loc 1 4194 4 is_stmt 1 view .LVU1392
 5078 0008 836C     		ldr	r3, [r0, #72]
 5079 000a 43B9     		cbnz	r3, .L391
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5080              		.loc 1 4194 4 view .LVU1393
 5081              	.LBB199:
 5082              	.LBI199:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5083              		.loc 2 191 30 view .LVU1394
 5084              	.LBB200:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5085              		.loc 2 193 1 view .LVU1395
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5086              		.loc 2 195 2 view .LVU1396
 5087              		.syntax unified
 5088              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5089 000c 4FF05003 			mov r3, #80												
 5090 0010 83F31188 		msr basepri, r3											
 5091 0014 BFF36F8F 		isb														
 5092 0018 BFF34F8F 		dsb														
 5093              	
 5094              	@ 0 "" 2
 5095              	.LVL352:
 5096              		.thumb
 5097              		.syntax unified
 5098              	.L392:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5099              		.loc 2 195 2 is_stmt 0 view .LVU1397
 5100              	.LBE200:
 5101              	.LBE199:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5102              		.loc 1 4194 4 is_stmt 1 discriminator 1 view .LVU1398
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5103              		.loc 1 4194 4 discriminator 1 view .LVU1399
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 209


 5104              		.loc 1 4194 4 discriminator 1 view .LVU1400
 5105 001c FEE7     		b	.L392
 5106              	.L391:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5107              		.loc 1 4194 40 discriminator 2 view .LVU1401
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5108              		.loc 1 4200 4 discriminator 2 view .LVU1402
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5109              		.loc 1 4200 13 is_stmt 0 discriminator 2 view .LVU1403
 5110 001e 426C     		ldr	r2, [r0, #68]
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5111              		.loc 1 4200 6 discriminator 2 view .LVU1404
 5112 0020 8A42     		cmp	r2, r1
 5113 0022 00D2     		bcs	.L393
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5114              		.loc 1 4202 21 view .LVU1405
 5115 0024 0A46     		mov	r2, r1
 5116              	.L393:
 5117              	.LVL353:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5118              		.loc 1 4210 4 is_stmt 1 view .LVU1406
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5119              		.loc 1 4210 13 is_stmt 0 view .LVU1407
 5120 0026 E16A     		ldr	r1, [r4, #44]
 5121              	.LVL354:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5122              		.loc 1 4210 6 view .LVU1408
 5123 0028 9142     		cmp	r1, r2
 5124 002a 01D0     		beq	.L389
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5125              		.loc 1 4216 5 is_stmt 1 view .LVU1409
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5126              		.loc 1 4216 7 is_stmt 0 view .LVU1410
 5127 002c 012B     		cmp	r3, #1
 5128 002e 00D0     		beq	.L402
 5129              	.LVL355:
 5130              	.L389:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5131              		.loc 1 4282 2 view .LVU1411
 5132 0030 38BD     		pop	{r3, r4, r5, pc}
 5133              	.LVL356:
 5134              	.L402:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5135              		.loc 1 4221 6 is_stmt 1 view .LVU1412
 5136 0032 1D4B     		ldr	r3, .L404
 5137 0034 1B68     		ldr	r3, [r3]
 5138 0036 A342     		cmp	r3, r4
 5139 0038 2CD0     		beq	.L403
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5140              		.loc 1 4221 43 discriminator 2 view .LVU1413
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5141              		.loc 1 4226 67 discriminator 2 view .LVU1414
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 5142              		.loc 1 4227 6 discriminator 2 view .LVU1415
 5143              	.LVL357:
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5144              		.loc 1 4228 6 discriminator 2 view .LVU1416
ARM GAS  /tmp/cc0mjIFM.s 			page 210


4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5145              		.loc 1 4228 24 is_stmt 0 discriminator 2 view .LVU1417
 5146 003a E262     		str	r2, [r4, #44]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5147              		.loc 1 4232 6 is_stmt 1 discriminator 2 view .LVU1418
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5148              		.loc 1 4232 12 is_stmt 0 discriminator 2 view .LVU1419
 5149 003c A369     		ldr	r3, [r4, #24]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5150              		.loc 1 4232 8 discriminator 2 view .LVU1420
 5151 003e 002B     		cmp	r3, #0
 5152 0040 02DB     		blt	.L396
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5153              		.loc 1 4234 7 is_stmt 1 view .LVU1421
 5154 0042 C2F10702 		rsb	r2, r2, #7
 5155              	.LVL358:
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5156              		.loc 1 4234 7 is_stmt 0 view .LVU1422
 5157 0046 A261     		str	r2, [r4, #24]
 5158              	.L396:
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5159              		.loc 1 4238 31 is_stmt 1 view .LVU1423
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5160              		.loc 1 4247 6 view .LVU1424
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5161              		.loc 1 4247 10 is_stmt 0 view .LVU1425
 5162 0048 6269     		ldr	r2, [r4, #20]
 5163 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5164              	.LVL359:
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5165              		.loc 1 4247 10 view .LVU1426
 5166 004e 174B     		ldr	r3, .L404+4
 5167 0050 03EB8101 		add	r1, r3, r1, lsl #2
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5168              		.loc 1 4247 8 view .LVU1427
 5169 0054 8A42     		cmp	r2, r1
 5170 0056 EBD1     		bne	.L389
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5171              		.loc 1 4249 7 is_stmt 1 view .LVU1428
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5172              		.loc 1 4249 11 is_stmt 0 view .LVU1429
 5173 0058 251D     		adds	r5, r4, #4
 5174 005a 2846     		mov	r0, r5
 5175              	.LVL360:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5176              		.loc 1 4249 11 view .LVU1430
 5177 005c FFF7FEFF 		bl	uxListRemove
 5178              	.LVL361:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5179              		.loc 1 4249 9 view .LVU1431
 5180 0060 40B9     		cbnz	r0, .L397
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5181              		.loc 1 4254 8 is_stmt 1 view .LVU1432
 5182 0062 E26A     		ldr	r2, [r4, #44]
 5183 0064 0123     		movs	r3, #1
 5184 0066 03FA02F2 		lsl	r2, r3, r2
 5185 006a 1149     		ldr	r1, .L404+8
ARM GAS  /tmp/cc0mjIFM.s 			page 211


 5186 006c 0B68     		ldr	r3, [r1]
 5187 006e 23EA0203 		bic	r3, r3, r2
 5188 0072 0B60     		str	r3, [r1]
 5189              	.L397:
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5190              		.loc 1 4258 32 view .LVU1433
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5191              		.loc 1 4261 7 view .LVU1434
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5192              		.loc 1 4261 7 view .LVU1435
 5193 0074 E06A     		ldr	r0, [r4, #44]
 5194 0076 0123     		movs	r3, #1
 5195 0078 8340     		lsls	r3, r3, r0
 5196 007a 0D4A     		ldr	r2, .L404+8
 5197 007c 1168     		ldr	r1, [r2]
 5198 007e 0B43     		orrs	r3, r3, r1
 5199 0080 1360     		str	r3, [r2]
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5200              		.loc 1 4261 7 view .LVU1436
 5201 0082 00EB8000 		add	r0, r0, r0, lsl #2
 5202 0086 2946     		mov	r1, r5
 5203 0088 084B     		ldr	r3, .L404+4
 5204 008a 03EB8000 		add	r0, r3, r0, lsl #2
 5205 008e FFF7FEFF 		bl	vListInsertEnd
 5206              	.LVL362:
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5207              		.loc 1 4261 37 view .LVU1437
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5208              		.loc 1 4280 28 view .LVU1438
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5209              		.loc 1 4282 2 is_stmt 0 view .LVU1439
 5210 0092 CDE7     		b	.L389
 5211              	.LVL363:
 5212              	.L403:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5213              		.loc 1 4221 6 is_stmt 1 view .LVU1440
 5214              	.LBB201:
 5215              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5216              		.loc 2 191 30 view .LVU1441
 5217              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5218              		.loc 2 193 1 view .LVU1442
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5219              		.loc 2 195 2 view .LVU1443
 5220              		.syntax unified
 5221              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5222 0094 4FF05003 			mov r3, #80												
 5223 0098 83F31188 		msr basepri, r3											
 5224 009c BFF36F8F 		isb														
 5225 00a0 BFF34F8F 		dsb														
 5226              	
 5227              	@ 0 "" 2
 5228              	.LVL364:
 5229              		.thumb
 5230              		.syntax unified
 5231              	.L395:
ARM GAS  /tmp/cc0mjIFM.s 			page 212


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5232              		.loc 2 195 2 is_stmt 0 view .LVU1444
 5233              	.LBE202:
 5234              	.LBE201:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5235              		.loc 1 4221 6 is_stmt 1 discriminator 2 view .LVU1445
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5236              		.loc 1 4221 6 discriminator 2 view .LVU1446
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5237              		.loc 1 4221 6 discriminator 2 view .LVU1447
 5238 00a4 FEE7     		b	.L395
 5239              	.LVL365:
 5240              	.L399:
 5241              	.LCFI48:
 5242              		.cfi_def_cfa_offset 0
 5243              		.cfi_restore 3
 5244              		.cfi_restore 4
 5245              		.cfi_restore 5
 5246              		.cfi_restore 14
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5247              		.loc 1 4221 6 is_stmt 0 discriminator 2 view .LVU1448
 5248 00a6 7047     		bx	lr
 5249              	.L405:
 5250              		.align	2
 5251              	.L404:
 5252 00a8 00000000 		.word	.LANCHOR10
 5253 00ac 00000000 		.word	.LANCHOR4
 5254 00b0 00000000 		.word	.LANCHOR13
 5255              		.cfi_endproc
 5256              	.LFE46:
 5258              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5259              		.align	1
 5260              		.global	uxTaskResetEventItemValue
 5261              		.syntax unified
 5262              		.thumb
 5263              		.thumb_func
 5264              		.fpu fpv4-sp-d16
 5266              	uxTaskResetEventItemValue:
 5267              	.LFB47:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5268              		.loc 1 4603 1 is_stmt 1 view -0
 5269              		.cfi_startproc
 5270              		@ args = 0, pretend = 0, frame = 0
 5271              		@ frame_needed = 0, uses_anonymous_args = 0
 5272              		@ link register save eliminated.
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5273              		.loc 1 4604 1 view .LVU1450
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5274              		.loc 1 4606 2 view .LVU1451
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5275              		.loc 1 4606 13 is_stmt 0 view .LVU1452
 5276 0000 044A     		ldr	r2, .L407
 5277 0002 1368     		ldr	r3, [r2]
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5278              		.loc 1 4606 11 view .LVU1453
 5279 0004 9869     		ldr	r0, [r3, #24]
 5280              	.LVL366:
ARM GAS  /tmp/cc0mjIFM.s 			page 213


4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5281              		.loc 1 4610 2 is_stmt 1 view .LVU1454
 5282 0006 1368     		ldr	r3, [r2]
 5283 0008 DB6A     		ldr	r3, [r3, #44]
 5284 000a 1268     		ldr	r2, [r2]
 5285 000c C3F10703 		rsb	r3, r3, #7
 5286 0010 9361     		str	r3, [r2, #24]
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5287              		.loc 1 4612 2 view .LVU1455
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5288              		.loc 1 4613 1 is_stmt 0 view .LVU1456
 5289 0012 7047     		bx	lr
 5290              	.L408:
 5291              		.align	2
 5292              	.L407:
 5293 0014 00000000 		.word	.LANCHOR10
 5294              		.cfi_endproc
 5295              	.LFE47:
 5297              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5298              		.align	1
 5299              		.global	pvTaskIncrementMutexHeldCount
 5300              		.syntax unified
 5301              		.thumb
 5302              		.thumb_func
 5303              		.fpu fpv4-sp-d16
 5305              	pvTaskIncrementMutexHeldCount:
 5306              	.LFB48:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5307              		.loc 1 4619 2 is_stmt 1 view -0
 5308              		.cfi_startproc
 5309              		@ args = 0, pretend = 0, frame = 0
 5310              		@ frame_needed = 0, uses_anonymous_args = 0
 5311              		@ link register save eliminated.
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5312              		.loc 1 4622 3 view .LVU1458
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5313              		.loc 1 4622 20 is_stmt 0 view .LVU1459
 5314 0000 054B     		ldr	r3, .L411
 5315 0002 1B68     		ldr	r3, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5316              		.loc 1 4622 5 view .LVU1460
 5317 0004 23B1     		cbz	r3, .L410
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5318              		.loc 1 4624 4 is_stmt 1 view .LVU1461
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5319              		.loc 1 4624 18 is_stmt 0 view .LVU1462
 5320 0006 044B     		ldr	r3, .L411
 5321 0008 1A68     		ldr	r2, [r3]
 5322 000a 936C     		ldr	r3, [r2, #72]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5323              		.loc 1 4624 35 view .LVU1463
 5324 000c 0133     		adds	r3, r3, #1
 5325 000e 9364     		str	r3, [r2, #72]
 5326              	.L410:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5327              		.loc 1 4627 3 is_stmt 1 view .LVU1464
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc0mjIFM.s 			page 214


 5328              		.loc 1 4627 10 is_stmt 0 view .LVU1465
 5329 0010 014B     		ldr	r3, .L411
 5330 0012 1868     		ldr	r0, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5331              		.loc 1 4628 2 view .LVU1466
 5332 0014 7047     		bx	lr
 5333              	.L412:
 5334 0016 00BF     		.align	2
 5335              	.L411:
 5336 0018 00000000 		.word	.LANCHOR10
 5337              		.cfi_endproc
 5338              	.LFE48:
 5340              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5341              		.align	1
 5342              		.global	ulTaskNotifyTake
 5343              		.syntax unified
 5344              		.thumb
 5345              		.thumb_func
 5346              		.fpu fpv4-sp-d16
 5348              	ulTaskNotifyTake:
 5349              	.LVL367:
 5350              	.LFB49:
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5351              		.loc 1 4636 2 is_stmt 1 view -0
 5352              		.cfi_startproc
 5353              		@ args = 0, pretend = 0, frame = 0
 5354              		@ frame_needed = 0, uses_anonymous_args = 0
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5355              		.loc 1 4636 2 is_stmt 0 view .LVU1468
 5356 0000 38B5     		push	{r3, r4, r5, lr}
 5357              	.LCFI49:
 5358              		.cfi_def_cfa_offset 16
 5359              		.cfi_offset 3, -16
 5360              		.cfi_offset 4, -12
 5361              		.cfi_offset 5, -8
 5362              		.cfi_offset 14, -4
 5363 0002 0546     		mov	r5, r0
 5364 0004 0C46     		mov	r4, r1
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5365              		.loc 1 4637 2 is_stmt 1 view .LVU1469
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5366              		.loc 1 4639 3 view .LVU1470
 5367 0006 FFF7FEFF 		bl	vPortEnterCritical
 5368              	.LVL368:
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5369              		.loc 1 4642 4 view .LVU1471
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5370              		.loc 1 4642 20 is_stmt 0 view .LVU1472
 5371 000a 1A4B     		ldr	r3, .L419
 5372 000c 1B68     		ldr	r3, [r3]
 5373 000e DB6C     		ldr	r3, [r3, #76]
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5374              		.loc 1 4642 6 view .LVU1473
 5375 0010 2BB9     		cbnz	r3, .L414
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5376              		.loc 1 4645 5 is_stmt 1 view .LVU1474
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc0mjIFM.s 			page 215


 5377              		.loc 1 4645 17 is_stmt 0 view .LVU1475
 5378 0012 184B     		ldr	r3, .L419
 5379 0014 1B68     		ldr	r3, [r3]
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5380              		.loc 1 4645 33 view .LVU1476
 5381 0016 0122     		movs	r2, #1
 5382 0018 83F85020 		strb	r2, [r3, #80]
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5383              		.loc 1 4647 5 is_stmt 1 view .LVU1477
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5384              		.loc 1 4647 7 is_stmt 0 view .LVU1478
 5385 001c ACB9     		cbnz	r4, .L418
 5386              	.L414:
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5387              		.loc 1 4665 29 is_stmt 1 view .LVU1479
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5388              		.loc 1 4668 3 view .LVU1480
 5389 001e FFF7FEFF 		bl	vPortExitCritical
 5390              	.LVL369:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5391              		.loc 1 4670 3 view .LVU1481
 5392 0022 FFF7FEFF 		bl	vPortEnterCritical
 5393              	.LVL370:
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5394              		.loc 1 4672 27 view .LVU1482
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5395              		.loc 1 4673 4 view .LVU1483
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5396              		.loc 1 4673 27 is_stmt 0 view .LVU1484
 5397 0026 134B     		ldr	r3, .L419
 5398 0028 1B68     		ldr	r3, [r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5399              		.loc 1 4673 13 view .LVU1485
 5400 002a DC6C     		ldr	r4, [r3, #76]
 5401              	.LVL371:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5402              		.loc 1 4675 4 is_stmt 1 view .LVU1486
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5403              		.loc 1 4675 6 is_stmt 0 view .LVU1487
 5404 002c 24B1     		cbz	r4, .L415
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5405              		.loc 1 4677 5 is_stmt 1 view .LVU1488
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5406              		.loc 1 4677 7 is_stmt 0 view .LVU1489
 5407 002e DDB1     		cbz	r5, .L416
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5408              		.loc 1 4679 6 is_stmt 1 view .LVU1490
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5409              		.loc 1 4679 18 is_stmt 0 view .LVU1491
 5410 0030 104B     		ldr	r3, .L419
 5411 0032 1B68     		ldr	r3, [r3]
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5412              		.loc 1 4679 36 view .LVU1492
 5413 0034 0022     		movs	r2, #0
 5414 0036 DA64     		str	r2, [r3, #76]
 5415              	.L415:
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc0mjIFM.s 			page 216


 5416              		.loc 1 4688 29 is_stmt 1 view .LVU1493
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5417              		.loc 1 4691 4 view .LVU1494
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5418              		.loc 1 4691 16 is_stmt 0 view .LVU1495
 5419 0038 0E4B     		ldr	r3, .L419
 5420 003a 1B68     		ldr	r3, [r3]
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5421              		.loc 1 4691 32 view .LVU1496
 5422 003c 0022     		movs	r2, #0
 5423 003e 83F85020 		strb	r2, [r3, #80]
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5424              		.loc 1 4693 3 is_stmt 1 view .LVU1497
 5425 0042 FFF7FEFF 		bl	vPortExitCritical
 5426              	.LVL372:
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5427              		.loc 1 4695 3 view .LVU1498
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5428              		.loc 1 4696 2 is_stmt 0 view .LVU1499
 5429 0046 2046     		mov	r0, r4
 5430 0048 38BD     		pop	{r3, r4, r5, pc}
 5431              	.LVL373:
 5432              	.L418:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5433              		.loc 1 4649 6 is_stmt 1 view .LVU1500
 5434 004a 1146     		mov	r1, r2
 5435 004c 2046     		mov	r0, r4
 5436 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5437              	.LVL374:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5438              		.loc 1 4650 35 view .LVU1501
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5439              		.loc 1 4656 6 view .LVU1502
 5440 0052 4FF0E023 		mov	r3, #-536813568
 5441 0056 4FF08052 		mov	r2, #268435456
 5442 005a C3F8042D 		str	r2, [r3, #3332]
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5443              		.loc 1 4656 6 view .LVU1503
 5444              		.syntax unified
 5445              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5446 005e BFF34F8F 		dsb
 5447              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5448              		.loc 1 4656 6 view .LVU1504
 5449              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5450 0062 BFF36F8F 		isb
 5451              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5452              		.loc 1 4656 28 view .LVU1505
 5453              		.thumb
 5454              		.syntax unified
 5455 0066 DAE7     		b	.L414
 5456              	.LVL375:
 5457              	.L416:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5458              		.loc 1 4683 6 view .LVU1506
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc0mjIFM.s 			page 217


 5459              		.loc 1 4683 18 is_stmt 0 view .LVU1507
 5460 0068 024B     		ldr	r3, .L419
 5461 006a 1B68     		ldr	r3, [r3]
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5462              		.loc 1 4683 47 view .LVU1508
 5463 006c 621E     		subs	r2, r4, #1
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5464              		.loc 1 4683 36 view .LVU1509
 5465 006e DA64     		str	r2, [r3, #76]
 5466 0070 E2E7     		b	.L415
 5467              	.L420:
 5468 0072 00BF     		.align	2
 5469              	.L419:
 5470 0074 00000000 		.word	.LANCHOR10
 5471              		.cfi_endproc
 5472              	.LFE49:
 5474              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5475              		.align	1
 5476              		.global	xTaskNotifyWait
 5477              		.syntax unified
 5478              		.thumb
 5479              		.thumb_func
 5480              		.fpu fpv4-sp-d16
 5482              	xTaskNotifyWait:
 5483              	.LVL376:
 5484              	.LFB50:
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5485              		.loc 1 4704 2 is_stmt 1 view -0
 5486              		.cfi_startproc
 5487              		@ args = 0, pretend = 0, frame = 0
 5488              		@ frame_needed = 0, uses_anonymous_args = 0
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5489              		.loc 1 4704 2 is_stmt 0 view .LVU1511
 5490 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5491              	.LCFI50:
 5492              		.cfi_def_cfa_offset 24
 5493              		.cfi_offset 3, -24
 5494              		.cfi_offset 4, -20
 5495              		.cfi_offset 5, -16
 5496              		.cfi_offset 6, -12
 5497              		.cfi_offset 7, -8
 5498              		.cfi_offset 14, -4
 5499 0002 0646     		mov	r6, r0
 5500 0004 0F46     		mov	r7, r1
 5501 0006 1446     		mov	r4, r2
 5502 0008 1D46     		mov	r5, r3
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5503              		.loc 1 4705 2 is_stmt 1 view .LVU1512
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5504              		.loc 1 4707 3 view .LVU1513
 5505 000a FFF7FEFF 		bl	vPortEnterCritical
 5506              	.LVL377:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5507              		.loc 1 4710 4 view .LVU1514
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5508              		.loc 1 4710 20 is_stmt 0 view .LVU1515
 5509 000e 214B     		ldr	r3, .L429
ARM GAS  /tmp/cc0mjIFM.s 			page 218


 5510 0010 1B68     		ldr	r3, [r3]
 5511 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5512 0016 D2B2     		uxtb	r2, r2
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5513              		.loc 1 4710 6 view .LVU1516
 5514 0018 022A     		cmp	r2, #2
 5515 001a 0AD0     		beq	.L422
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5516              		.loc 1 4715 5 is_stmt 1 view .LVU1517
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5517              		.loc 1 4715 35 is_stmt 0 view .LVU1518
 5518 001c 1D4B     		ldr	r3, .L429
 5519 001e 1A68     		ldr	r2, [r3]
 5520 0020 D06C     		ldr	r0, [r2, #76]
 5521 0022 20EA0606 		bic	r6, r0, r6
 5522              	.LVL378:
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5523              		.loc 1 4715 35 view .LVU1519
 5524 0026 D664     		str	r6, [r2, #76]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5525              		.loc 1 4718 5 is_stmt 1 view .LVU1520
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5526              		.loc 1 4718 17 is_stmt 0 view .LVU1521
 5527 0028 1B68     		ldr	r3, [r3]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5528              		.loc 1 4718 33 view .LVU1522
 5529 002a 0122     		movs	r2, #1
 5530 002c 83F85020 		strb	r2, [r3, #80]
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5531              		.loc 1 4720 5 is_stmt 1 view .LVU1523
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5532              		.loc 1 4720 7 is_stmt 0 view .LVU1524
 5533 0030 CDB9     		cbnz	r5, .L427
 5534              	.L422:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5535              		.loc 1 4738 29 is_stmt 1 view .LVU1525
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5536              		.loc 1 4741 3 view .LVU1526
 5537 0032 FFF7FEFF 		bl	vPortExitCritical
 5538              	.LVL379:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5539              		.loc 1 4743 3 view .LVU1527
 5540 0036 FFF7FEFF 		bl	vPortEnterCritical
 5541              	.LVL380:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5542              		.loc 1 4745 27 view .LVU1528
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5543              		.loc 1 4747 4 view .LVU1529
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5544              		.loc 1 4747 6 is_stmt 0 view .LVU1530
 5545 003a 1CB1     		cbz	r4, .L423
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5546              		.loc 1 4751 5 is_stmt 1 view .LVU1531
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5547              		.loc 1 4751 41 is_stmt 0 view .LVU1532
 5548 003c 154B     		ldr	r3, .L429
 5549 003e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc0mjIFM.s 			page 219


 5550 0040 DB6C     		ldr	r3, [r3, #76]
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5551              		.loc 1 4751 27 view .LVU1533
 5552 0042 2360     		str	r3, [r4]
 5553              	.L423:
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5554              		.loc 1 4758 4 is_stmt 1 view .LVU1534
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5555              		.loc 1 4758 20 is_stmt 0 view .LVU1535
 5556 0044 134B     		ldr	r3, .L429
 5557 0046 1B68     		ldr	r3, [r3]
 5558 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5559 004c DBB2     		uxtb	r3, r3
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5560              		.loc 1 4758 6 view .LVU1536
 5561 004e 022B     		cmp	r3, #2
 5562 0050 18D0     		beq	.L428
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5563              		.loc 1 4761 13 view .LVU1537
 5564 0052 0024     		movs	r4, #0
 5565              	.LVL381:
 5566              	.L424:
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5567              		.loc 1 4771 4 is_stmt 1 view .LVU1538
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5568              		.loc 1 4771 16 is_stmt 0 view .LVU1539
 5569 0054 0F4B     		ldr	r3, .L429
 5570 0056 1B68     		ldr	r3, [r3]
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5571              		.loc 1 4771 32 view .LVU1540
 5572 0058 0022     		movs	r2, #0
 5573 005a 83F85020 		strb	r2, [r3, #80]
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5574              		.loc 1 4773 3 is_stmt 1 view .LVU1541
 5575 005e FFF7FEFF 		bl	vPortExitCritical
 5576              	.LVL382:
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5577              		.loc 1 4775 3 view .LVU1542
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5578              		.loc 1 4776 2 is_stmt 0 view .LVU1543
 5579 0062 2046     		mov	r0, r4
 5580 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5581              	.LVL383:
 5582              	.L427:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5583              		.loc 1 4722 6 is_stmt 1 view .LVU1544
 5584 0066 1146     		mov	r1, r2
 5585 0068 2846     		mov	r0, r5
 5586 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5587              	.LVL384:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5588              		.loc 1 4723 35 view .LVU1545
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5589              		.loc 1 4729 6 view .LVU1546
 5590 006e 4FF0E023 		mov	r3, #-536813568
 5591 0072 4FF08052 		mov	r2, #268435456
 5592 0076 C3F8042D 		str	r2, [r3, #3332]
ARM GAS  /tmp/cc0mjIFM.s 			page 220


4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5593              		.loc 1 4729 6 view .LVU1547
 5594              		.syntax unified
 5595              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5596 007a BFF34F8F 		dsb
 5597              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5598              		.loc 1 4729 6 view .LVU1548
 5599              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5600 007e BFF36F8F 		isb
 5601              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5602              		.loc 1 4729 28 view .LVU1549
 5603              		.thumb
 5604              		.syntax unified
 5605 0082 D6E7     		b	.L422
 5606              	.L428:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5607              		.loc 1 4767 5 view .LVU1550
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5608              		.loc 1 4767 35 is_stmt 0 view .LVU1551
 5609 0084 034B     		ldr	r3, .L429
 5610 0086 1B68     		ldr	r3, [r3]
 5611 0088 D96C     		ldr	r1, [r3, #76]
 5612 008a 21EA0707 		bic	r7, r1, r7
 5613              	.LVL385:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5614              		.loc 1 4767 35 view .LVU1552
 5615 008e DF64     		str	r7, [r3, #76]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5616              		.loc 1 4768 5 is_stmt 1 view .LVU1553
 5617              	.LVL386:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5618              		.loc 1 4768 13 is_stmt 0 view .LVU1554
 5619 0090 0124     		movs	r4, #1
 5620              	.LVL387:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5621              		.loc 1 4768 13 view .LVU1555
 5622 0092 DFE7     		b	.L424
 5623              	.L430:
 5624              		.align	2
 5625              	.L429:
 5626 0094 00000000 		.word	.LANCHOR10
 5627              		.cfi_endproc
 5628              	.LFE50:
 5630              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5631              		.align	1
 5632              		.global	xTaskGenericNotify
 5633              		.syntax unified
 5634              		.thumb
 5635              		.thumb_func
 5636              		.fpu fpv4-sp-d16
 5638              	xTaskGenericNotify:
 5639              	.LVL388:
 5640              	.LFB51:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5641              		.loc 1 4784 2 is_stmt 1 view -0
ARM GAS  /tmp/cc0mjIFM.s 			page 221


 5642              		.cfi_startproc
 5643              		@ args = 0, pretend = 0, frame = 0
 5644              		@ frame_needed = 0, uses_anonymous_args = 0
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5645              		.loc 1 4784 2 is_stmt 0 view .LVU1557
 5646 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5647              	.LCFI51:
 5648              		.cfi_def_cfa_offset 24
 5649              		.cfi_offset 3, -24
 5650              		.cfi_offset 4, -20
 5651              		.cfi_offset 5, -16
 5652              		.cfi_offset 6, -12
 5653              		.cfi_offset 7, -8
 5654              		.cfi_offset 14, -4
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5655              		.loc 1 4785 2 is_stmt 1 view .LVU1558
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5656              		.loc 1 4786 2 view .LVU1559
 5657              	.LVL389:
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5658              		.loc 1 4787 2 view .LVU1560
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5659              		.loc 1 4789 3 view .LVU1561
 5660 0002 A8B1     		cbz	r0, .L450
 5661 0004 0F46     		mov	r7, r1
 5662 0006 1446     		mov	r4, r2
 5663 0008 1D46     		mov	r5, r3
 5664 000a 0646     		mov	r6, r0
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5665              		.loc 1 4789 32 discriminator 2 view .LVU1562
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5666              		.loc 1 4790 3 discriminator 2 view .LVU1563
 5667              	.LVL390:
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5668              		.loc 1 4792 3 discriminator 2 view .LVU1564
 5669 000c FFF7FEFF 		bl	vPortEnterCritical
 5670              	.LVL391:
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5671              		.loc 1 4794 4 discriminator 2 view .LVU1565
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5672              		.loc 1 4794 6 is_stmt 0 discriminator 2 view .LVU1566
 5673 0010 0DB1     		cbz	r5, .L434
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5674              		.loc 1 4796 5 is_stmt 1 view .LVU1567
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5675              		.loc 1 4796 42 is_stmt 0 view .LVU1568
 5676 0012 F36C     		ldr	r3, [r6, #76]
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5677              		.loc 1 4796 35 view .LVU1569
 5678 0014 2B60     		str	r3, [r5]
 5679              	.L434:
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5680              		.loc 1 4799 4 is_stmt 1 view .LVU1570
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5681              		.loc 1 4799 26 is_stmt 0 view .LVU1571
 5682 0016 96F85030 		ldrb	r3, [r6, #80]	@ zero_extendqisi2
 5683 001a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc0mjIFM.s 			page 222


 5684              	.LVL392:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5685              		.loc 1 4801 4 is_stmt 1 view .LVU1572
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5686              		.loc 1 4801 25 is_stmt 0 view .LVU1573
 5687 001c 0222     		movs	r2, #2
 5688 001e 86F85020 		strb	r2, [r6, #80]
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5689              		.loc 1 4803 4 is_stmt 1 view .LVU1574
 5690 0022 042C     		cmp	r4, #4
 5691 0024 1FD8     		bhi	.L435
 5692 0026 DFE804F0 		tbb	[pc, r4]
 5693              	.L437:
 5694 002a 2B       		.byte	(.L446-.L437)/2
 5695 002b 0C       		.byte	(.L440-.L437)/2
 5696 002c 11       		.byte	(.L439-.L437)/2
 5697 002d 16       		.byte	(.L438-.L437)/2
 5698 002e 19       		.byte	(.L436-.L437)/2
 5699              	.LVL393:
 5700 002f 00       		.p2align 1
 5701              	.L450:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5702              		.loc 1 4789 3 view .LVU1575
 5703              	.LBB203:
 5704              	.LBI203:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5705              		.loc 2 191 30 view .LVU1576
 5706              	.LBB204:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5707              		.loc 2 193 1 view .LVU1577
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5708              		.loc 2 195 2 view .LVU1578
 5709              		.syntax unified
 5710              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5711 0030 4FF05003 			mov r3, #80												
 5712 0034 83F31188 		msr basepri, r3											
 5713 0038 BFF36F8F 		isb														
 5714 003c BFF34F8F 		dsb														
 5715              	
 5716              	@ 0 "" 2
 5717              	.LVL394:
 5718              		.thumb
 5719              		.syntax unified
 5720              	.L433:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5721              		.loc 2 195 2 is_stmt 0 view .LVU1579
 5722              	.LBE204:
 5723              	.LBE203:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5724              		.loc 1 4789 3 is_stmt 1 discriminator 1 view .LVU1580
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5725              		.loc 1 4789 3 discriminator 1 view .LVU1581
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5726              		.loc 1 4789 3 discriminator 1 view .LVU1582
 5727 0040 FEE7     		b	.L433
 5728              	.LVL395:
 5729              	.L440:
ARM GAS  /tmp/cc0mjIFM.s 			page 223


4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5730              		.loc 1 4806 6 view .LVU1583
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5731              		.loc 1 4806 29 is_stmt 0 view .LVU1584
 5732 0042 F26C     		ldr	r2, [r6, #76]
 5733 0044 1743     		orrs	r7, r7, r2
 5734              	.LVL396:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5735              		.loc 1 4806 29 view .LVU1585
 5736 0046 F764     		str	r7, [r6, #76]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5737              		.loc 1 4807 6 is_stmt 1 view .LVU1586
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5738              		.loc 1 4786 13 is_stmt 0 view .LVU1587
 5739 0048 0124     		movs	r4, #1
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5740              		.loc 1 4807 6 view .LVU1588
 5741 004a 1AE0     		b	.L441
 5742              	.LVL397:
 5743              	.L439:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5744              		.loc 1 4810 6 is_stmt 1 view .LVU1589
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5745              		.loc 1 4810 13 is_stmt 0 view .LVU1590
 5746 004c F26C     		ldr	r2, [r6, #76]
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5747              		.loc 1 4810 32 view .LVU1591
 5748 004e 0132     		adds	r2, r2, #1
 5749 0050 F264     		str	r2, [r6, #76]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5750              		.loc 1 4811 6 is_stmt 1 view .LVU1592
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5751              		.loc 1 4786 13 is_stmt 0 view .LVU1593
 5752 0052 0124     		movs	r4, #1
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5753              		.loc 1 4811 6 view .LVU1594
 5754 0054 15E0     		b	.L441
 5755              	.L438:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5756              		.loc 1 4814 6 is_stmt 1 view .LVU1595
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5757              		.loc 1 4814 29 is_stmt 0 view .LVU1596
 5758 0056 F764     		str	r7, [r6, #76]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5759              		.loc 1 4815 6 is_stmt 1 view .LVU1597
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5760              		.loc 1 4786 13 is_stmt 0 view .LVU1598
 5761 0058 0124     		movs	r4, #1
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5762              		.loc 1 4815 6 view .LVU1599
 5763 005a 12E0     		b	.L441
 5764              	.L436:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5765              		.loc 1 4818 6 is_stmt 1 view .LVU1600
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5766              		.loc 1 4818 8 is_stmt 0 view .LVU1601
 5767 005c 022B     		cmp	r3, #2
ARM GAS  /tmp/cc0mjIFM.s 			page 224


 5768 005e 16D0     		beq	.L447
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5769              		.loc 1 4820 7 is_stmt 1 view .LVU1602
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5770              		.loc 1 4820 30 is_stmt 0 view .LVU1603
 5771 0060 F764     		str	r7, [r6, #76]
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5772              		.loc 1 4786 13 view .LVU1604
 5773 0062 0124     		movs	r4, #1
 5774 0064 0DE0     		b	.L441
 5775              	.L435:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5776              		.loc 1 4838 6 is_stmt 1 view .LVU1605
 5777 0066 F26C     		ldr	r2, [r6, #76]
 5778 0068 B2F1FF3F 		cmp	r2, #-1
 5779 006c 11D0     		beq	.L448
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5780              		.loc 1 4838 6 view .LVU1606
 5781              	.LBB205:
 5782              	.LBI205:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5783              		.loc 2 191 30 view .LVU1607
 5784              	.LBB206:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5785              		.loc 2 193 1 view .LVU1608
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5786              		.loc 2 195 2 view .LVU1609
 5787              		.syntax unified
 5788              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5789 006e 4FF05003 			mov r3, #80												
 5790 0072 83F31188 		msr basepri, r3											
 5791 0076 BFF36F8F 		isb														
 5792 007a BFF34F8F 		dsb														
 5793              	
 5794              	@ 0 "" 2
 5795              	.LVL398:
 5796              		.thumb
 5797              		.syntax unified
 5798              	.L442:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5799              		.loc 2 195 2 is_stmt 0 view .LVU1610
 5800              	.LBE206:
 5801              	.LBE205:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5802              		.loc 1 4838 6 is_stmt 1 discriminator 2 view .LVU1611
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5803              		.loc 1 4838 6 discriminator 2 view .LVU1612
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5804              		.loc 1 4838 6 discriminator 2 view .LVU1613
 5805 007e FEE7     		b	.L442
 5806              	.LVL399:
 5807              	.L446:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5808              		.loc 1 4801 25 is_stmt 0 view .LVU1614
 5809 0080 0124     		movs	r4, #1
 5810              	.LVL400:
 5811              	.L441:
ARM GAS  /tmp/cc0mjIFM.s 			page 225


4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5812              		.loc 1 4843 22 is_stmt 1 view .LVU1615
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5813              		.loc 1 4847 4 view .LVU1616
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5814              		.loc 1 4847 6 is_stmt 0 view .LVU1617
 5815 0082 012B     		cmp	r3, #1
 5816 0084 07D0     		beq	.L451
 5817              	.LVL401:
 5818              	.L443:
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5819              		.loc 1 4884 29 is_stmt 1 view .LVU1618
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5820              		.loc 1 4887 3 view .LVU1619
 5821 0086 FFF7FEFF 		bl	vPortExitCritical
 5822              	.LVL402:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5823              		.loc 1 4889 3 view .LVU1620
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5824              		.loc 1 4890 2 is_stmt 0 view .LVU1621
 5825 008a 2046     		mov	r0, r4
 5826 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5827              	.LVL403:
 5828              	.L447:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5829              		.loc 1 4825 15 view .LVU1622
 5830 008e 0024     		movs	r4, #0
 5831 0090 F7E7     		b	.L441
 5832              	.L448:
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5833              		.loc 1 4786 13 view .LVU1623
 5834 0092 0124     		movs	r4, #1
 5835 0094 F5E7     		b	.L441
 5836              	.LVL404:
 5837              	.L451:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5838              		.loc 1 4849 5 is_stmt 1 view .LVU1624
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5839              		.loc 1 4849 14 is_stmt 0 view .LVU1625
 5840 0096 351D     		adds	r5, r6, #4
 5841              	.LVL405:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5842              		.loc 1 4849 14 view .LVU1626
 5843 0098 2846     		mov	r0, r5
 5844 009a FFF7FEFF 		bl	uxListRemove
 5845              	.LVL406:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5846              		.loc 1 4850 5 is_stmt 1 view .LVU1627
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5847              		.loc 1 4850 5 view .LVU1628
 5848 009e F06A     		ldr	r0, [r6, #44]
 5849 00a0 0123     		movs	r3, #1
 5850 00a2 8340     		lsls	r3, r3, r0
 5851 00a4 134A     		ldr	r2, .L452
 5852 00a6 1168     		ldr	r1, [r2]
 5853 00a8 0B43     		orrs	r3, r3, r1
 5854 00aa 1360     		str	r3, [r2]
ARM GAS  /tmp/cc0mjIFM.s 			page 226


4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5855              		.loc 1 4850 5 view .LVU1629
 5856 00ac 00EB8000 		add	r0, r0, r0, lsl #2
 5857 00b0 2946     		mov	r1, r5
 5858 00b2 114B     		ldr	r3, .L452+4
 5859 00b4 03EB8000 		add	r0, r3, r0, lsl #2
 5860 00b8 FFF7FEFF 		bl	vListInsertEnd
 5861              	.LVL407:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5862              		.loc 1 4850 35 view .LVU1630
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5863              		.loc 1 4853 5 view .LVU1631
 5864 00bc B36A     		ldr	r3, [r6, #40]
 5865 00be 43B1     		cbz	r3, .L444
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5866              		.loc 1 4853 5 view .LVU1632
 5867              	.LBB207:
 5868              	.LBI207:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5869              		.loc 2 191 30 view .LVU1633
 5870              	.LBB208:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5871              		.loc 2 193 1 view .LVU1634
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5872              		.loc 2 195 2 view .LVU1635
 5873              		.syntax unified
 5874              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5875 00c0 4FF05003 			mov r3, #80												
 5876 00c4 83F31188 		msr basepri, r3											
 5877 00c8 BFF36F8F 		isb														
 5878 00cc BFF34F8F 		dsb														
 5879              	
 5880              	@ 0 "" 2
 5881              	.LVL408:
 5882              		.thumb
 5883              		.syntax unified
 5884              	.L445:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5885              		.loc 2 195 2 is_stmt 0 view .LVU1636
 5886              	.LBE208:
 5887              	.LBE207:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5888              		.loc 1 4853 5 is_stmt 1 discriminator 3 view .LVU1637
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5889              		.loc 1 4853 5 discriminator 3 view .LVU1638
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5890              		.loc 1 4853 5 discriminator 3 view .LVU1639
 5891 00d0 FEE7     		b	.L445
 5892              	.L444:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5893              		.loc 1 4853 82 discriminator 2 view .LVU1640
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5894              		.loc 1 4871 5 discriminator 2 view .LVU1641
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5895              		.loc 1 4871 14 is_stmt 0 discriminator 2 view .LVU1642
 5896 00d2 F26A     		ldr	r2, [r6, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc0mjIFM.s 			page 227


 5897              		.loc 1 4871 41 discriminator 2 view .LVU1643
 5898 00d4 094B     		ldr	r3, .L452+8
 5899 00d6 1B68     		ldr	r3, [r3]
 5900 00d8 DB6A     		ldr	r3, [r3, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5901              		.loc 1 4871 7 discriminator 2 view .LVU1644
 5902 00da 9A42     		cmp	r2, r3
 5903 00dc D3D9     		bls	.L443
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5904              		.loc 1 4875 6 is_stmt 1 view .LVU1645
 5905 00de 4FF0E023 		mov	r3, #-536813568
 5906 00e2 4FF08052 		mov	r2, #268435456
 5907 00e6 C3F8042D 		str	r2, [r3, #3332]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5908              		.loc 1 4875 6 view .LVU1646
 5909              		.syntax unified
 5910              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5911 00ea BFF34F8F 		dsb
 5912              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5913              		.loc 1 4875 6 view .LVU1647
 5914              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5915 00ee BFF36F8F 		isb
 5916              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5917              		.loc 1 4875 37 view .LVU1648
 5918              		.thumb
 5919              		.syntax unified
 5920 00f2 C8E7     		b	.L443
 5921              	.L453:
 5922              		.align	2
 5923              	.L452:
 5924 00f4 00000000 		.word	.LANCHOR13
 5925 00f8 00000000 		.word	.LANCHOR4
 5926 00fc 00000000 		.word	.LANCHOR10
 5927              		.cfi_endproc
 5928              	.LFE51:
 5930              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5931              		.align	1
 5932              		.global	xTaskGenericNotifyFromISR
 5933              		.syntax unified
 5934              		.thumb
 5935              		.thumb_func
 5936              		.fpu fpv4-sp-d16
 5938              	xTaskGenericNotifyFromISR:
 5939              	.LVL409:
 5940              	.LFB52:
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5941              		.loc 1 4898 2 view -0
 5942              		.cfi_startproc
 5943              		@ args = 4, pretend = 0, frame = 0
 5944              		@ frame_needed = 0, uses_anonymous_args = 0
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5945              		.loc 1 4899 2 view .LVU1650
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5946              		.loc 1 4900 2 view .LVU1651
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
ARM GAS  /tmp/cc0mjIFM.s 			page 228


 5947              		.loc 1 4901 2 view .LVU1652
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5948              		.loc 1 4902 2 view .LVU1653
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5949              		.loc 1 4904 3 view .LVU1654
 5950 0000 08B3     		cbz	r0, .L477
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5951              		.loc 1 4898 2 is_stmt 0 discriminator 2 view .LVU1655
 5952 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5953              	.LCFI52:
 5954              		.cfi_def_cfa_offset 24
 5955              		.cfi_offset 4, -24
 5956              		.cfi_offset 5, -20
 5957              		.cfi_offset 6, -16
 5958              		.cfi_offset 7, -12
 5959              		.cfi_offset 8, -8
 5960              		.cfi_offset 14, -4
 5961 0006 0E46     		mov	r6, r1
 5962 0008 1446     		mov	r4, r2
 5963 000a 1D46     		mov	r5, r3
 5964 000c 0746     		mov	r7, r0
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5965              		.loc 1 4904 32 is_stmt 1 discriminator 2 view .LVU1656
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5966              		.loc 1 4922 3 discriminator 2 view .LVU1657
 5967 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5968              	.LVL410:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5969              		.loc 1 4924 3 discriminator 2 view .LVU1658
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5970              		.loc 1 4926 3 discriminator 2 view .LVU1659
 5971              	.LBB209:
 5972              	.LBI209:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5973              		.loc 2 207 34 discriminator 2 view .LVU1660
 5974              	.LBB210:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5975              		.loc 2 209 1 discriminator 2 view .LVU1661
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5976              		.loc 2 211 2 discriminator 2 view .LVU1662
 5977              		.syntax unified
 5978              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5979 0012 EFF31188 			mrs r8, basepri											
 5980 0016 4FF05003 		mov r3, #80												
 5981 001a 83F31188 		msr basepri, r3											
 5982 001e BFF36F8F 		isb														
 5983 0022 BFF34F8F 		dsb														
 5984              	
 5985              	@ 0 "" 2
 5986              	.LVL411:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5987              		.loc 2 223 2 discriminator 2 view .LVU1663
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5988              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1664
 5989              		.thumb
 5990              		.syntax unified
 5991              	.LBE210:
ARM GAS  /tmp/cc0mjIFM.s 			page 229


 5992              	.LBE209:
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5993              		.loc 1 4928 4 is_stmt 1 discriminator 2 view .LVU1665
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5994              		.loc 1 4928 6 is_stmt 0 discriminator 2 view .LVU1666
 5995 0026 0DB1     		cbz	r5, .L457
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5996              		.loc 1 4930 5 is_stmt 1 view .LVU1667
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5997              		.loc 1 4930 42 is_stmt 0 view .LVU1668
 5998 0028 FB6C     		ldr	r3, [r7, #76]
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5999              		.loc 1 4930 35 view .LVU1669
 6000 002a 2B60     		str	r3, [r5]
 6001              	.L457:
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6002              		.loc 1 4933 4 is_stmt 1 view .LVU1670
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6003              		.loc 1 4933 26 is_stmt 0 view .LVU1671
 6004 002c 97F85030 		ldrb	r3, [r7, #80]	@ zero_extendqisi2
 6005 0030 DBB2     		uxtb	r3, r3
 6006              	.LVL412:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6007              		.loc 1 4934 4 is_stmt 1 view .LVU1672
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6008              		.loc 1 4934 25 is_stmt 0 view .LVU1673
 6009 0032 0222     		movs	r2, #2
 6010 0034 87F85020 		strb	r2, [r7, #80]
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6011              		.loc 1 4936 4 is_stmt 1 view .LVU1674
 6012 0038 042C     		cmp	r4, #4
 6013 003a 1FD8     		bhi	.L458
 6014 003c DFE804F0 		tbb	[pc, r4]
 6015              	.L460:
 6016 0040 2B       		.byte	(.L472-.L460)/2
 6017 0041 0C       		.byte	(.L463-.L460)/2
 6018 0042 11       		.byte	(.L462-.L460)/2
 6019 0043 16       		.byte	(.L461-.L460)/2
 6020 0044 19       		.byte	(.L459-.L460)/2
 6021              	.LVL413:
 6022 0045 00       		.p2align 1
 6023              	.L477:
 6024              	.LCFI53:
 6025              		.cfi_def_cfa_offset 0
 6026              		.cfi_restore 4
 6027              		.cfi_restore 5
 6028              		.cfi_restore 6
 6029              		.cfi_restore 7
 6030              		.cfi_restore 8
 6031              		.cfi_restore 14
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6032              		.loc 1 4904 3 view .LVU1675
 6033              	.LBB211:
 6034              	.LBI211:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6035              		.loc 2 191 30 view .LVU1676
 6036              	.LBB212:
ARM GAS  /tmp/cc0mjIFM.s 			page 230


 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6037              		.loc 2 193 1 view .LVU1677
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6038              		.loc 2 195 2 view .LVU1678
 6039              		.syntax unified
 6040              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6041 0046 4FF05003 			mov r3, #80												
 6042 004a 83F31188 		msr basepri, r3											
 6043 004e BFF36F8F 		isb														
 6044 0052 BFF34F8F 		dsb														
 6045              	
 6046              	@ 0 "" 2
 6047              	.LVL414:
 6048              		.thumb
 6049              		.syntax unified
 6050              	.L456:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6051              		.loc 2 195 2 is_stmt 0 view .LVU1679
 6052              	.LBE212:
 6053              	.LBE211:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6054              		.loc 1 4904 3 is_stmt 1 discriminator 1 view .LVU1680
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6055              		.loc 1 4904 3 discriminator 1 view .LVU1681
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6056              		.loc 1 4904 3 discriminator 1 view .LVU1682
 6057 0056 FEE7     		b	.L456
 6058              	.LVL415:
 6059              	.L463:
 6060              	.LCFI54:
 6061              		.cfi_def_cfa_offset 24
 6062              		.cfi_offset 4, -24
 6063              		.cfi_offset 5, -20
 6064              		.cfi_offset 6, -16
 6065              		.cfi_offset 7, -12
 6066              		.cfi_offset 8, -8
 6067              		.cfi_offset 14, -4
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6068              		.loc 1 4939 6 view .LVU1683
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6069              		.loc 1 4939 29 is_stmt 0 view .LVU1684
 6070 0058 FA6C     		ldr	r2, [r7, #76]
 6071 005a 1643     		orrs	r6, r6, r2
 6072              	.LVL416:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6073              		.loc 1 4939 29 view .LVU1685
 6074 005c FE64     		str	r6, [r7, #76]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6075              		.loc 1 4940 6 is_stmt 1 view .LVU1686
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6076              		.loc 1 4901 13 is_stmt 0 view .LVU1687
 6077 005e 0124     		movs	r4, #1
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6078              		.loc 1 4940 6 view .LVU1688
 6079 0060 1AE0     		b	.L464
 6080              	.LVL417:
 6081              	.L462:
ARM GAS  /tmp/cc0mjIFM.s 			page 231


4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6082              		.loc 1 4943 6 is_stmt 1 view .LVU1689
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6083              		.loc 1 4943 13 is_stmt 0 view .LVU1690
 6084 0062 FA6C     		ldr	r2, [r7, #76]
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6085              		.loc 1 4943 32 view .LVU1691
 6086 0064 0132     		adds	r2, r2, #1
 6087 0066 FA64     		str	r2, [r7, #76]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6088              		.loc 1 4944 6 is_stmt 1 view .LVU1692
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6089              		.loc 1 4901 13 is_stmt 0 view .LVU1693
 6090 0068 0124     		movs	r4, #1
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6091              		.loc 1 4944 6 view .LVU1694
 6092 006a 15E0     		b	.L464
 6093              	.L461:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6094              		.loc 1 4947 6 is_stmt 1 view .LVU1695
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6095              		.loc 1 4947 29 is_stmt 0 view .LVU1696
 6096 006c FE64     		str	r6, [r7, #76]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6097              		.loc 1 4948 6 is_stmt 1 view .LVU1697
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6098              		.loc 1 4901 13 is_stmt 0 view .LVU1698
 6099 006e 0124     		movs	r4, #1
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6100              		.loc 1 4948 6 view .LVU1699
 6101 0070 12E0     		b	.L464
 6102              	.L459:
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6103              		.loc 1 4951 6 is_stmt 1 view .LVU1700
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6104              		.loc 1 4951 8 is_stmt 0 view .LVU1701
 6105 0072 022B     		cmp	r3, #2
 6106 0074 17D0     		beq	.L473
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6107              		.loc 1 4953 7 is_stmt 1 view .LVU1702
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6108              		.loc 1 4953 30 is_stmt 0 view .LVU1703
 6109 0076 FE64     		str	r6, [r7, #76]
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6110              		.loc 1 4901 13 view .LVU1704
 6111 0078 0124     		movs	r4, #1
 6112 007a 0DE0     		b	.L464
 6113              	.L458:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6114              		.loc 1 4971 6 is_stmt 1 view .LVU1705
 6115 007c FA6C     		ldr	r2, [r7, #76]
 6116 007e B2F1FF3F 		cmp	r2, #-1
 6117 0082 12D0     		beq	.L474
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6118              		.loc 1 4971 6 view .LVU1706
 6119              	.LBB213:
 6120              	.LBI213:
ARM GAS  /tmp/cc0mjIFM.s 			page 232


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6121              		.loc 2 191 30 view .LVU1707
 6122              	.LBB214:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6123              		.loc 2 193 1 view .LVU1708
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6124              		.loc 2 195 2 view .LVU1709
 6125              		.syntax unified
 6126              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6127 0084 4FF05003 			mov r3, #80												
 6128 0088 83F31188 		msr basepri, r3											
 6129 008c BFF36F8F 		isb														
 6130 0090 BFF34F8F 		dsb														
 6131              	
 6132              	@ 0 "" 2
 6133              	.LVL418:
 6134              		.thumb
 6135              		.syntax unified
 6136              	.L465:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6137              		.loc 2 195 2 is_stmt 0 view .LVU1710
 6138              	.LBE214:
 6139              	.LBE213:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6140              		.loc 1 4971 6 is_stmt 1 discriminator 2 view .LVU1711
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6141              		.loc 1 4971 6 discriminator 2 view .LVU1712
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6142              		.loc 1 4971 6 discriminator 2 view .LVU1713
 6143 0094 FEE7     		b	.L465
 6144              	.LVL419:
 6145              	.L472:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6146              		.loc 1 4934 25 is_stmt 0 view .LVU1714
 6147 0096 0124     		movs	r4, #1
 6148              	.LVL420:
 6149              	.L464:
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6150              		.loc 1 4975 31 is_stmt 1 view .LVU1715
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6151              		.loc 1 4979 4 view .LVU1716
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6152              		.loc 1 4979 6 is_stmt 0 view .LVU1717
 6153 0098 012B     		cmp	r3, #1
 6154 009a 08D0     		beq	.L478
 6155              	.LVL421:
 6156              	.L466:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6157              		.loc 1 5012 30 is_stmt 1 view .LVU1718
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6158              		.loc 1 5016 3 view .LVU1719
 6159              	.LBB215:
 6160              	.LBI215:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6161              		.loc 2 227 30 view .LVU1720
 6162              	.LBB216:
 6163              		.loc 2 229 2 view .LVU1721
ARM GAS  /tmp/cc0mjIFM.s 			page 233


 6164              		.syntax unified
 6165              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6166 009c 88F31188 			msr basepri, r8	
 6167              	@ 0 "" 2
 6168              	.LVL422:
 6169              		.loc 2 229 2 is_stmt 0 view .LVU1722
 6170              		.thumb
 6171              		.syntax unified
 6172              	.LBE216:
 6173              	.LBE215:
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6174              		.loc 1 5018 3 is_stmt 1 view .LVU1723
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6175              		.loc 1 5019 2 is_stmt 0 view .LVU1724
 6176 00a0 2046     		mov	r0, r4
 6177 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6178              	.LVL423:
 6179              	.L473:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6180              		.loc 1 4958 15 view .LVU1725
 6181 00a6 0024     		movs	r4, #0
 6182 00a8 F6E7     		b	.L464
 6183              	.L474:
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6184              		.loc 1 4901 13 view .LVU1726
 6185 00aa 0124     		movs	r4, #1
 6186 00ac F4E7     		b	.L464
 6187              	.LVL424:
 6188              	.L478:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6189              		.loc 1 4982 5 is_stmt 1 view .LVU1727
 6190 00ae BB6A     		ldr	r3, [r7, #40]
 6191              	.LVL425:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6192              		.loc 1 4982 5 is_stmt 0 view .LVU1728
 6193 00b0 43B1     		cbz	r3, .L467
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6194              		.loc 1 4982 5 is_stmt 1 view .LVU1729
 6195              	.LBB217:
 6196              	.LBI217:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6197              		.loc 2 191 30 view .LVU1730
 6198              	.LBB218:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6199              		.loc 2 193 1 view .LVU1731
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6200              		.loc 2 195 2 view .LVU1732
 6201              		.syntax unified
 6202              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6203 00b2 4FF05003 			mov r3, #80												
 6204 00b6 83F31188 		msr basepri, r3											
 6205 00ba BFF36F8F 		isb														
 6206 00be BFF34F8F 		dsb														
 6207              	
 6208              	@ 0 "" 2
 6209              	.LVL426:
 6210              		.thumb
ARM GAS  /tmp/cc0mjIFM.s 			page 234


 6211              		.syntax unified
 6212              	.L468:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6213              		.loc 2 195 2 is_stmt 0 view .LVU1733
 6214              	.LBE218:
 6215              	.LBE217:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6216              		.loc 1 4982 5 is_stmt 1 discriminator 3 view .LVU1734
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6217              		.loc 1 4982 5 discriminator 3 view .LVU1735
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6218              		.loc 1 4982 5 discriminator 3 view .LVU1736
 6219 00c2 FEE7     		b	.L468
 6220              	.L467:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6221              		.loc 1 4982 82 discriminator 2 view .LVU1737
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6222              		.loc 1 4984 5 discriminator 2 view .LVU1738
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6223              		.loc 1 4984 30 is_stmt 0 discriminator 2 view .LVU1739
 6224 00c4 154B     		ldr	r3, .L479
 6225 00c6 1B68     		ldr	r3, [r3]
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6226              		.loc 1 4984 7 discriminator 2 view .LVU1740
 6227 00c8 0BBB     		cbnz	r3, .L469
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6228              		.loc 1 4986 6 is_stmt 1 view .LVU1741
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6229              		.loc 1 4986 15 is_stmt 0 view .LVU1742
 6230 00ca 3D1D     		adds	r5, r7, #4
 6231              	.LVL427:
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6232              		.loc 1 4986 15 view .LVU1743
 6233 00cc 2846     		mov	r0, r5
 6234 00ce FFF7FEFF 		bl	uxListRemove
 6235              	.LVL428:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6236              		.loc 1 4987 6 is_stmt 1 view .LVU1744
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6237              		.loc 1 4987 6 view .LVU1745
 6238 00d2 F86A     		ldr	r0, [r7, #44]
 6239 00d4 0123     		movs	r3, #1
 6240 00d6 8340     		lsls	r3, r3, r0
 6241 00d8 114A     		ldr	r2, .L479+4
 6242 00da 1168     		ldr	r1, [r2]
 6243 00dc 0B43     		orrs	r3, r3, r1
 6244 00de 1360     		str	r3, [r2]
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6245              		.loc 1 4987 6 view .LVU1746
 6246 00e0 00EB8000 		add	r0, r0, r0, lsl #2
 6247 00e4 2946     		mov	r1, r5
 6248 00e6 0F4B     		ldr	r3, .L479+8
 6249 00e8 03EB8000 		add	r0, r3, r0, lsl #2
 6250 00ec FFF7FEFF 		bl	vListInsertEnd
 6251              	.LVL429:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6252              		.loc 1 4987 36 view .LVU1747
ARM GAS  /tmp/cc0mjIFM.s 			page 235


 6253              	.L470:
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6254              		.loc 1 4996 5 view .LVU1748
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6255              		.loc 1 4996 14 is_stmt 0 view .LVU1749
 6256 00f0 FA6A     		ldr	r2, [r7, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6257              		.loc 1 4996 41 view .LVU1750
 6258 00f2 0D4B     		ldr	r3, .L479+12
 6259 00f4 1B68     		ldr	r3, [r3]
 6260 00f6 DB6A     		ldr	r3, [r3, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6261              		.loc 1 4996 7 view .LVU1751
 6262 00f8 9A42     		cmp	r2, r3
 6263 00fa CFD9     		bls	.L466
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6264              		.loc 1 5000 6 is_stmt 1 view .LVU1752
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6265              		.loc 1 5000 8 is_stmt 0 view .LVU1753
 6266 00fc 069B     		ldr	r3, [sp, #24]
 6267 00fe 13B1     		cbz	r3, .L471
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6268              		.loc 1 5002 7 is_stmt 1 view .LVU1754
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6269              		.loc 1 5002 34 is_stmt 0 view .LVU1755
 6270 0100 0123     		movs	r3, #1
 6271 0102 069A     		ldr	r2, [sp, #24]
 6272 0104 1360     		str	r3, [r2]
 6273              	.L471:
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6274              		.loc 1 5008 6 is_stmt 1 view .LVU1756
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6275              		.loc 1 5008 20 is_stmt 0 view .LVU1757
 6276 0106 094B     		ldr	r3, .L479+16
 6277 0108 0122     		movs	r2, #1
 6278 010a 1A60     		str	r2, [r3]
 6279 010c C6E7     		b	.L466
 6280              	.LVL430:
 6281              	.L469:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6282              		.loc 1 4993 6 is_stmt 1 view .LVU1758
 6283 010e 07F11801 		add	r1, r7, #24
 6284 0112 0748     		ldr	r0, .L479+20
 6285 0114 FFF7FEFF 		bl	vListInsertEnd
 6286              	.LVL431:
 6287 0118 EAE7     		b	.L470
 6288              	.L480:
 6289 011a 00BF     		.align	2
 6290              	.L479:
 6291 011c 00000000 		.word	.LANCHOR16
 6292 0120 00000000 		.word	.LANCHOR13
 6293 0124 00000000 		.word	.LANCHOR4
 6294 0128 00000000 		.word	.LANCHOR10
 6295 012c 00000000 		.word	.LANCHOR20
 6296 0130 00000000 		.word	.LANCHOR1
 6297              		.cfi_endproc
 6298              	.LFE52:
ARM GAS  /tmp/cc0mjIFM.s 			page 236


 6300              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6301              		.align	1
 6302              		.global	vTaskNotifyGiveFromISR
 6303              		.syntax unified
 6304              		.thumb
 6305              		.thumb_func
 6306              		.fpu fpv4-sp-d16
 6308              	vTaskNotifyGiveFromISR:
 6309              	.LVL432:
 6310              	.LFB53:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6311              		.loc 1 5027 2 view -0
 6312              		.cfi_startproc
 6313              		@ args = 0, pretend = 0, frame = 0
 6314              		@ frame_needed = 0, uses_anonymous_args = 0
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6315              		.loc 1 5027 2 is_stmt 0 view .LVU1760
 6316 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6317              	.LCFI55:
 6318              		.cfi_def_cfa_offset 24
 6319              		.cfi_offset 3, -24
 6320              		.cfi_offset 4, -20
 6321              		.cfi_offset 5, -16
 6322              		.cfi_offset 6, -12
 6323              		.cfi_offset 7, -8
 6324              		.cfi_offset 14, -4
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6325              		.loc 1 5028 2 is_stmt 1 view .LVU1761
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6326              		.loc 1 5029 2 view .LVU1762
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6327              		.loc 1 5030 2 view .LVU1763
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6328              		.loc 1 5032 3 view .LVU1764
 6329 0002 D8B1     		cbz	r0, .L491
 6330 0004 0D46     		mov	r5, r1
 6331 0006 0446     		mov	r4, r0
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6332              		.loc 1 5032 32 discriminator 2 view .LVU1765
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6333              		.loc 1 5050 3 discriminator 2 view .LVU1766
 6334 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6335              	.LVL433:
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6336              		.loc 1 5052 3 discriminator 2 view .LVU1767
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6337              		.loc 1 5054 3 discriminator 2 view .LVU1768
 6338              	.LBB219:
 6339              	.LBI219:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6340              		.loc 2 207 34 discriminator 2 view .LVU1769
 6341              	.LBB220:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6342              		.loc 2 209 1 discriminator 2 view .LVU1770
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6343              		.loc 2 211 2 discriminator 2 view .LVU1771
 6344              		.syntax unified
ARM GAS  /tmp/cc0mjIFM.s 			page 237


 6345              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6346 000c EFF31186 			mrs r6, basepri											
 6347 0010 4FF05003 		mov r3, #80												
 6348 0014 83F31188 		msr basepri, r3											
 6349 0018 BFF36F8F 		isb														
 6350 001c BFF34F8F 		dsb														
 6351              	
 6352              	@ 0 "" 2
 6353              	.LVL434:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6354              		.loc 2 223 2 discriminator 2 view .LVU1772
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6355              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1773
 6356              		.thumb
 6357              		.syntax unified
 6358              	.LBE220:
 6359              	.LBE219:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6360              		.loc 1 5056 4 is_stmt 1 discriminator 2 view .LVU1774
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6361              		.loc 1 5056 26 is_stmt 0 discriminator 2 view .LVU1775
 6362 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6363 0024 DBB2     		uxtb	r3, r3
 6364              	.LVL435:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6365              		.loc 1 5057 4 is_stmt 1 discriminator 2 view .LVU1776
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6366              		.loc 1 5057 25 is_stmt 0 discriminator 2 view .LVU1777
 6367 0026 0222     		movs	r2, #2
 6368 0028 84F85020 		strb	r2, [r4, #80]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6369              		.loc 1 5061 4 is_stmt 1 discriminator 2 view .LVU1778
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6370              		.loc 1 5061 11 is_stmt 0 discriminator 2 view .LVU1779
 6371 002c E26C     		ldr	r2, [r4, #76]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6372              		.loc 1 5061 30 discriminator 2 view .LVU1780
 6373 002e 0132     		adds	r2, r2, #1
 6374 0030 E264     		str	r2, [r4, #76]
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6375              		.loc 1 5063 36 is_stmt 1 discriminator 2 view .LVU1781
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6376              		.loc 1 5067 4 discriminator 2 view .LVU1782
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6377              		.loc 1 5067 6 is_stmt 0 discriminator 2 view .LVU1783
 6378 0032 012B     		cmp	r3, #1
 6379 0034 0BD0     		beq	.L492
 6380              	.LVL436:
 6381              	.L484:
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6382              		.loc 1 5100 30 is_stmt 1 view .LVU1784
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6383              		.loc 1 5104 3 view .LVU1785
 6384              	.LBB221:
 6385              	.LBI221:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6386              		.loc 2 227 30 view .LVU1786
ARM GAS  /tmp/cc0mjIFM.s 			page 238


 6387              	.LBB222:
 6388              		.loc 2 229 2 view .LVU1787
 6389              		.syntax unified
 6390              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6391 0036 86F31188 			msr basepri, r6	
 6392              	@ 0 "" 2
 6393              	.LVL437:
 6394              		.loc 2 229 2 is_stmt 0 view .LVU1788
 6395              		.thumb
 6396              		.syntax unified
 6397              	.LBE222:
 6398              	.LBE221:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6399              		.loc 1 5105 2 view .LVU1789
 6400 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6401              	.LVL438:
 6402              	.L491:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6403              		.loc 1 5032 3 is_stmt 1 view .LVU1790
 6404              	.LBB223:
 6405              	.LBI223:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6406              		.loc 2 191 30 view .LVU1791
 6407              	.LBB224:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6408              		.loc 2 193 1 view .LVU1792
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6409              		.loc 2 195 2 view .LVU1793
 6410              		.syntax unified
 6411              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6412 003c 4FF05003 			mov r3, #80												
 6413 0040 83F31188 		msr basepri, r3											
 6414 0044 BFF36F8F 		isb														
 6415 0048 BFF34F8F 		dsb														
 6416              	
 6417              	@ 0 "" 2
 6418              	.LVL439:
 6419              		.thumb
 6420              		.syntax unified
 6421              	.L483:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6422              		.loc 2 195 2 is_stmt 0 view .LVU1794
 6423              	.LBE224:
 6424              	.LBE223:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6425              		.loc 1 5032 3 is_stmt 1 discriminator 1 view .LVU1795
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6426              		.loc 1 5032 3 discriminator 1 view .LVU1796
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6427              		.loc 1 5032 3 discriminator 1 view .LVU1797
 6428 004c FEE7     		b	.L483
 6429              	.LVL440:
 6430              	.L492:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6431              		.loc 1 5070 5 view .LVU1798
 6432 004e A36A     		ldr	r3, [r4, #40]
 6433              	.LVL441:
ARM GAS  /tmp/cc0mjIFM.s 			page 239


5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6434              		.loc 1 5070 5 is_stmt 0 view .LVU1799
 6435 0050 43B1     		cbz	r3, .L485
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6436              		.loc 1 5070 5 is_stmt 1 view .LVU1800
 6437              	.LBB225:
 6438              	.LBI225:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6439              		.loc 2 191 30 view .LVU1801
 6440              	.LBB226:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6441              		.loc 2 193 1 view .LVU1802
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6442              		.loc 2 195 2 view .LVU1803
 6443              		.syntax unified
 6444              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6445 0052 4FF05003 			mov r3, #80												
 6446 0056 83F31188 		msr basepri, r3											
 6447 005a BFF36F8F 		isb														
 6448 005e BFF34F8F 		dsb														
 6449              	
 6450              	@ 0 "" 2
 6451              	.LVL442:
 6452              		.thumb
 6453              		.syntax unified
 6454              	.L486:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6455              		.loc 2 195 2 is_stmt 0 view .LVU1804
 6456              	.LBE226:
 6457              	.LBE225:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6458              		.loc 1 5070 5 is_stmt 1 discriminator 2 view .LVU1805
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6459              		.loc 1 5070 5 discriminator 2 view .LVU1806
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6460              		.loc 1 5070 5 discriminator 2 view .LVU1807
 6461 0062 FEE7     		b	.L486
 6462              	.L485:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6463              		.loc 1 5070 82 discriminator 2 view .LVU1808
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6464              		.loc 1 5072 5 discriminator 2 view .LVU1809
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6465              		.loc 1 5072 30 is_stmt 0 discriminator 2 view .LVU1810
 6466 0064 144B     		ldr	r3, .L493
 6467 0066 1B68     		ldr	r3, [r3]
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6468              		.loc 1 5072 7 discriminator 2 view .LVU1811
 6469 0068 FBB9     		cbnz	r3, .L487
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6470              		.loc 1 5074 6 is_stmt 1 view .LVU1812
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6471              		.loc 1 5074 15 is_stmt 0 view .LVU1813
 6472 006a 271D     		adds	r7, r4, #4
 6473 006c 3846     		mov	r0, r7
 6474 006e FFF7FEFF 		bl	uxListRemove
 6475              	.LVL443:
ARM GAS  /tmp/cc0mjIFM.s 			page 240


5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6476              		.loc 1 5075 6 is_stmt 1 view .LVU1814
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6477              		.loc 1 5075 6 view .LVU1815
 6478 0072 E06A     		ldr	r0, [r4, #44]
 6479 0074 0123     		movs	r3, #1
 6480 0076 8340     		lsls	r3, r3, r0
 6481 0078 104A     		ldr	r2, .L493+4
 6482 007a 1168     		ldr	r1, [r2]
 6483 007c 0B43     		orrs	r3, r3, r1
 6484 007e 1360     		str	r3, [r2]
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6485              		.loc 1 5075 6 view .LVU1816
 6486 0080 00EB8000 		add	r0, r0, r0, lsl #2
 6487 0084 3946     		mov	r1, r7
 6488 0086 0E4B     		ldr	r3, .L493+8
 6489 0088 03EB8000 		add	r0, r3, r0, lsl #2
 6490 008c FFF7FEFF 		bl	vListInsertEnd
 6491              	.LVL444:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6492              		.loc 1 5075 36 view .LVU1817
 6493              	.L488:
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6494              		.loc 1 5084 5 view .LVU1818
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6495              		.loc 1 5084 14 is_stmt 0 view .LVU1819
 6496 0090 E26A     		ldr	r2, [r4, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6497              		.loc 1 5084 41 view .LVU1820
 6498 0092 0C4B     		ldr	r3, .L493+12
 6499 0094 1B68     		ldr	r3, [r3]
 6500 0096 DB6A     		ldr	r3, [r3, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6501              		.loc 1 5084 7 view .LVU1821
 6502 0098 9A42     		cmp	r2, r3
 6503 009a CCD9     		bls	.L484
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6504              		.loc 1 5088 6 is_stmt 1 view .LVU1822
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6505              		.loc 1 5088 8 is_stmt 0 view .LVU1823
 6506 009c 0DB1     		cbz	r5, .L489
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6507              		.loc 1 5090 7 is_stmt 1 view .LVU1824
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6508              		.loc 1 5090 34 is_stmt 0 view .LVU1825
 6509 009e 0123     		movs	r3, #1
 6510 00a0 2B60     		str	r3, [r5]
 6511              	.L489:
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6512              		.loc 1 5096 6 is_stmt 1 view .LVU1826
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6513              		.loc 1 5096 20 is_stmt 0 view .LVU1827
 6514 00a2 094B     		ldr	r3, .L493+16
 6515 00a4 0122     		movs	r2, #1
 6516 00a6 1A60     		str	r2, [r3]
 6517 00a8 C5E7     		b	.L484
 6518              	.L487:
ARM GAS  /tmp/cc0mjIFM.s 			page 241


5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6519              		.loc 1 5081 6 is_stmt 1 view .LVU1828
 6520 00aa 04F11801 		add	r1, r4, #24
 6521 00ae 0748     		ldr	r0, .L493+20
 6522 00b0 FFF7FEFF 		bl	vListInsertEnd
 6523              	.LVL445:
 6524 00b4 ECE7     		b	.L488
 6525              	.L494:
 6526 00b6 00BF     		.align	2
 6527              	.L493:
 6528 00b8 00000000 		.word	.LANCHOR16
 6529 00bc 00000000 		.word	.LANCHOR13
 6530 00c0 00000000 		.word	.LANCHOR4
 6531 00c4 00000000 		.word	.LANCHOR10
 6532 00c8 00000000 		.word	.LANCHOR20
 6533 00cc 00000000 		.word	.LANCHOR1
 6534              		.cfi_endproc
 6535              	.LFE53:
 6537              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6538              		.align	1
 6539              		.global	xTaskNotifyStateClear
 6540              		.syntax unified
 6541              		.thumb
 6542              		.thumb_func
 6543              		.fpu fpv4-sp-d16
 6545              	xTaskNotifyStateClear:
 6546              	.LVL446:
 6547              	.LFB54:
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6548              		.loc 1 5113 2 view -0
 6549              		.cfi_startproc
 6550              		@ args = 0, pretend = 0, frame = 0
 6551              		@ frame_needed = 0, uses_anonymous_args = 0
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6552              		.loc 1 5113 2 is_stmt 0 view .LVU1830
 6553 0000 10B5     		push	{r4, lr}
 6554              	.LCFI56:
 6555              		.cfi_def_cfa_offset 8
 6556              		.cfi_offset 4, -8
 6557              		.cfi_offset 14, -4
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6558              		.loc 1 5114 2 is_stmt 1 view .LVU1831
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6559              		.loc 1 5115 2 view .LVU1832
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6560              		.loc 1 5119 3 view .LVU1833
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6561              		.loc 1 5119 11 is_stmt 0 view .LVU1834
 6562 0002 0446     		mov	r4, r0
 6563 0004 58B1     		cbz	r0, .L500
 6564              	.LVL447:
 6565              	.L496:
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6566              		.loc 1 5121 3 is_stmt 1 discriminator 4 view .LVU1835
 6567 0006 FFF7FEFF 		bl	vPortEnterCritical
 6568              	.LVL448:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc0mjIFM.s 			page 242


 6569              		.loc 1 5123 4 discriminator 4 view .LVU1836
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6570              		.loc 1 5123 13 is_stmt 0 discriminator 4 view .LVU1837
 6571 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6572 000e DBB2     		uxtb	r3, r3
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6573              		.loc 1 5123 6 discriminator 4 view .LVU1838
 6574 0010 022B     		cmp	r3, #2
 6575 0012 07D0     		beq	.L501
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6576              		.loc 1 5130 13 view .LVU1839
 6577 0014 0024     		movs	r4, #0
 6578              	.LVL449:
 6579              	.L497:
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6580              		.loc 1 5133 3 is_stmt 1 view .LVU1840
 6581 0016 FFF7FEFF 		bl	vPortExitCritical
 6582              	.LVL450:
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6583              		.loc 1 5135 3 view .LVU1841
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6584              		.loc 1 5136 2 is_stmt 0 view .LVU1842
 6585 001a 2046     		mov	r0, r4
 6586 001c 10BD     		pop	{r4, pc}
 6587              	.LVL451:
 6588              	.L500:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6589              		.loc 1 5119 11 discriminator 1 view .LVU1843
 6590 001e 044B     		ldr	r3, .L502
 6591 0020 1C68     		ldr	r4, [r3]
 6592              	.LVL452:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6593              		.loc 1 5119 11 discriminator 1 view .LVU1844
 6594 0022 F0E7     		b	.L496
 6595              	.LVL453:
 6596              	.L501:
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6597              		.loc 1 5125 5 is_stmt 1 view .LVU1845
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6598              		.loc 1 5125 26 is_stmt 0 view .LVU1846
 6599 0024 0023     		movs	r3, #0
 6600 0026 84F85030 		strb	r3, [r4, #80]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6601              		.loc 1 5126 5 is_stmt 1 view .LVU1847
 6602              	.LVL454:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6603              		.loc 1 5126 13 is_stmt 0 view .LVU1848
 6604 002a 0124     		movs	r4, #1
 6605              	.LVL455:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6606              		.loc 1 5126 13 view .LVU1849
 6607 002c F3E7     		b	.L497
 6608              	.L503:
 6609 002e 00BF     		.align	2
 6610              	.L502:
 6611 0030 00000000 		.word	.LANCHOR10
 6612              		.cfi_endproc
ARM GAS  /tmp/cc0mjIFM.s 			page 243


 6613              	.LFE54:
 6615              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 6616              		.align	1
 6617              		.global	ulTaskNotifyValueClear
 6618              		.syntax unified
 6619              		.thumb
 6620              		.thumb_func
 6621              		.fpu fpv4-sp-d16
 6623              	ulTaskNotifyValueClear:
 6624              	.LVL456:
 6625              	.LFB55:
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6626              		.loc 1 5144 2 is_stmt 1 view -0
 6627              		.cfi_startproc
 6628              		@ args = 0, pretend = 0, frame = 0
 6629              		@ frame_needed = 0, uses_anonymous_args = 0
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6630              		.loc 1 5144 2 is_stmt 0 view .LVU1851
 6631 0000 70B5     		push	{r4, r5, r6, lr}
 6632              	.LCFI57:
 6633              		.cfi_def_cfa_offset 16
 6634              		.cfi_offset 4, -16
 6635              		.cfi_offset 5, -12
 6636              		.cfi_offset 6, -8
 6637              		.cfi_offset 14, -4
 6638 0002 0C46     		mov	r4, r1
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 6639              		.loc 1 5145 2 is_stmt 1 view .LVU1852
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6640              		.loc 1 5146 2 view .LVU1853
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6641              		.loc 1 5150 3 view .LVU1854
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6642              		.loc 1 5150 11 is_stmt 0 view .LVU1855
 6643 0004 0546     		mov	r5, r0
 6644 0006 60B1     		cbz	r0, .L507
 6645              	.LVL457:
 6646              	.L505:
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6647              		.loc 1 5152 3 is_stmt 1 discriminator 4 view .LVU1856
 6648 0008 FFF7FEFF 		bl	vPortEnterCritical
 6649              	.LVL458:
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6650              		.loc 1 5156 4 discriminator 4 view .LVU1857
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6651              		.loc 1 5156 27 is_stmt 0 discriminator 4 view .LVU1858
 6652 000c 064B     		ldr	r3, .L508
 6653 000e 1B68     		ldr	r3, [r3]
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6654              		.loc 1 5156 13 discriminator 4 view .LVU1859
 6655 0010 DE6C     		ldr	r6, [r3, #76]
 6656              	.LVL459:
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6657              		.loc 1 5157 4 is_stmt 1 discriminator 4 view .LVU1860
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6658              		.loc 1 5157 27 is_stmt 0 discriminator 4 view .LVU1861
 6659 0012 EB6C     		ldr	r3, [r5, #76]
ARM GAS  /tmp/cc0mjIFM.s 			page 244


 6660 0014 23EA0403 		bic	r3, r3, r4
 6661 0018 EB64     		str	r3, [r5, #76]
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6662              		.loc 1 5159 3 is_stmt 1 discriminator 4 view .LVU1862
 6663 001a FFF7FEFF 		bl	vPortExitCritical
 6664              	.LVL460:
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6665              		.loc 1 5161 3 discriminator 4 view .LVU1863
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6666              		.loc 1 5162 2 is_stmt 0 discriminator 4 view .LVU1864
 6667 001e 3046     		mov	r0, r6
 6668 0020 70BD     		pop	{r4, r5, r6, pc}
 6669              	.LVL461:
 6670              	.L507:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6671              		.loc 1 5150 11 discriminator 1 view .LVU1865
 6672 0022 014B     		ldr	r3, .L508
 6673 0024 1D68     		ldr	r5, [r3]
 6674              	.LVL462:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6675              		.loc 1 5150 11 discriminator 1 view .LVU1866
 6676 0026 EFE7     		b	.L505
 6677              	.L509:
 6678              		.align	2
 6679              	.L508:
 6680 0028 00000000 		.word	.LANCHOR10
 6681              		.cfi_endproc
 6682              	.LFE55:
 6684              		.global	pxCurrentTCB
 6685              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6686              		.align	2
 6687              		.set	.LANCHOR10,. + 0
 6690              	pxCurrentTCB:
 6691 0000 00000000 		.space	4
 6692              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6693              		.align	2
 6694              		.set	.LANCHOR2,. + 0
 6697              	pxDelayedTaskList:
 6698 0000 00000000 		.space	4
 6699              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6700              		.align	2
 6701              		.set	.LANCHOR8,. + 0
 6704              	pxOverflowDelayedTaskList:
 6705 0000 00000000 		.space	4
 6706              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6707              		.align	2
 6708              		.set	.LANCHOR4,. + 0
 6711              	pxReadyTasksLists:
 6712 0000 00000000 		.space	140
 6712      00000000 
 6712      00000000 
 6712      00000000 
 6712      00000000 
 6713              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6714              		.align	2
 6715              		.set	.LANCHOR9,. + 0
 6718              	uxCurrentNumberOfTasks:
ARM GAS  /tmp/cc0mjIFM.s 			page 245


 6719 0000 00000000 		.space	4
 6720              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6721              		.align	2
 6722              		.set	.LANCHOR14,. + 0
 6725              	uxDeletedTasksWaitingCleanUp:
 6726 0000 00000000 		.space	4
 6727              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6728              		.align	2
 6729              		.set	.LANCHOR16,. + 0
 6732              	uxSchedulerSuspended:
 6733 0000 00000000 		.space	4
 6734              		.section	.bss.uxTaskNumber,"aw",%nobits
 6735              		.align	2
 6736              		.set	.LANCHOR12,. + 0
 6739              	uxTaskNumber:
 6740 0000 00000000 		.space	4
 6741              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6742              		.align	2
 6743              		.set	.LANCHOR13,. + 0
 6746              	uxTopReadyPriority:
 6747 0000 00000000 		.space	4
 6748              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6749              		.align	2
 6750              		.set	.LANCHOR5,. + 0
 6753              	xDelayedTaskList1:
 6754 0000 00000000 		.space	20
 6754      00000000 
 6754      00000000 
 6754      00000000 
 6754      00000000 
 6755              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6756              		.align	2
 6757              		.set	.LANCHOR6,. + 0
 6760              	xDelayedTaskList2:
 6761 0000 00000000 		.space	20
 6761      00000000 
 6761      00000000 
 6761      00000000 
 6761      00000000 
 6762              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6763              		.align	2
 6764              		.set	.LANCHOR17,. + 0
 6767              	xIdleTaskHandle:
 6768 0000 00000000 		.space	4
 6769              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6770              		.align	2
 6771              		.set	.LANCHOR3,. + 0
 6774              	xNextTaskUnblockTime:
 6775 0000 00000000 		.space	4
 6776              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6777              		.align	2
 6778              		.set	.LANCHOR18,. + 0
 6781              	xNumOfOverflows:
 6782 0000 00000000 		.space	4
 6783              		.section	.bss.xPendedTicks,"aw",%nobits
 6784              		.align	2
 6785              		.set	.LANCHOR19,. + 0
ARM GAS  /tmp/cc0mjIFM.s 			page 246


 6788              	xPendedTicks:
 6789 0000 00000000 		.space	4
 6790              		.section	.bss.xPendingReadyList,"aw",%nobits
 6791              		.align	2
 6792              		.set	.LANCHOR1,. + 0
 6795              	xPendingReadyList:
 6796 0000 00000000 		.space	20
 6796      00000000 
 6796      00000000 
 6796      00000000 
 6796      00000000 
 6797              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6798              		.align	2
 6799              		.set	.LANCHOR11,. + 0
 6802              	xSchedulerRunning:
 6803 0000 00000000 		.space	4
 6804              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6805              		.align	2
 6806              		.set	.LANCHOR0,. + 0
 6809              	xSuspendedTaskList:
 6810 0000 00000000 		.space	20
 6810      00000000 
 6810      00000000 
 6810      00000000 
 6810      00000000 
 6811              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6812              		.align	2
 6813              		.set	.LANCHOR7,. + 0
 6816              	xTasksWaitingTermination:
 6817 0000 00000000 		.space	20
 6817      00000000 
 6817      00000000 
 6817      00000000 
 6817      00000000 
 6818              		.section	.bss.xTickCount,"aw",%nobits
 6819              		.align	2
 6820              		.set	.LANCHOR15,. + 0
 6823              	xTickCount:
 6824 0000 00000000 		.space	4
 6825              		.section	.bss.xYieldPending,"aw",%nobits
 6826              		.align	2
 6827              		.set	.LANCHOR20,. + 0
 6830              	xYieldPending:
 6831 0000 00000000 		.space	4
 6832              		.text
 6833              	.Letext0:
 6834              		.file 3 "/home/akinya/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/10.2.1/include/stddef.h"
 6835              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 6836              		.file 5 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 6837              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6838              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6839              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6840              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6841              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cc0mjIFM.s 			page 247


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cc0mjIFM.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/cc0mjIFM.s:25     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/cc0mjIFM.s:115    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/cc0mjIFM.s:121    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cc0mjIFM.s:127    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cc0mjIFM.s:170    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/cc0mjIFM.s:176    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/cc0mjIFM.s:182    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/cc0mjIFM.s:342    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/cc0mjIFM.s:348    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/cc0mjIFM.s:423    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/cc0mjIFM.s:435    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/cc0mjIFM.s:441    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/cc0mjIFM.s:577    .text.prvAddNewTaskToReadyList:0000000000000090 $d
     /tmp/cc0mjIFM.s:587    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/cc0mjIFM.s:593    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/cc0mjIFM.s:671    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/cc0mjIFM.s:677    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/cc0mjIFM.s:754    .text.prvCheckTasksWaitingTermination:0000000000000040 $d
     /tmp/cc0mjIFM.s:761    .text.prvIdleTask:0000000000000000 $t
     /tmp/cc0mjIFM.s:767    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cc0mjIFM.s:816    .text.prvIdleTask:0000000000000024 $d
     /tmp/cc0mjIFM.s:821    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cc0mjIFM.s:827    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cc0mjIFM.s:947    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/cc0mjIFM.s:958    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/cc0mjIFM.s:965    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/cc0mjIFM.s:1130   .text.xTaskCreate:0000000000000000 $t
     /tmp/cc0mjIFM.s:1137   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cc0mjIFM.s:1262   .text.vTaskDelete:0000000000000000 $t
     /tmp/cc0mjIFM.s:1269   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cc0mjIFM.s:1455   .text.vTaskDelete:00000000000000bc $d
     /tmp/cc0mjIFM.s:1468   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cc0mjIFM.s:1475   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cc0mjIFM.s:1521   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cc0mjIFM.s:1526   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cc0mjIFM.s:1533   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cc0mjIFM.s:1614   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/cc0mjIFM.s:1619   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cc0mjIFM.s:1626   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cc0mjIFM.s:1871   .text.vTaskPrioritySet:00000000000000dc $d
     /tmp/cc0mjIFM.s:1878   .text.vTaskResume:0000000000000000 $t
     /tmp/cc0mjIFM.s:1885   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cc0mjIFM.s:2016   .text.vTaskResume:000000000000007c $d
     /tmp/cc0mjIFM.s:2023   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cc0mjIFM.s:2030   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cc0mjIFM.s:2201   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/cc0mjIFM.s:2210   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/cc0mjIFM.s:2214   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cc0mjIFM.s:2221   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cc0mjIFM.s:2323   .text.vTaskStartScheduler:000000000000005c $d
     /tmp/cc0mjIFM.s:2333   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cc0mjIFM.s:2340   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cc0mjIFM.s:2383   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/cc0mjIFM.s:2388   .text.vTaskSuspendAll:0000000000000000 $t
ARM GAS  /tmp/cc0mjIFM.s 			page 248


     /tmp/cc0mjIFM.s:2395   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cc0mjIFM.s:2414   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cc0mjIFM.s:2419   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cc0mjIFM.s:2426   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cc0mjIFM.s:2447   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cc0mjIFM.s:2452   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/cc0mjIFM.s:2459   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cc0mjIFM.s:2488   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/cc0mjIFM.s:2493   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cc0mjIFM.s:2500   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cc0mjIFM.s:2516   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cc0mjIFM.s:2521   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cc0mjIFM.s:2528   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cc0mjIFM.s:2589   .text.pcTaskGetName:0000000000000024 $d
     /tmp/cc0mjIFM.s:2594   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cc0mjIFM.s:2601   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cc0mjIFM.s:2886   .text.xTaskIncrementTick:0000000000000100 $d
     /tmp/cc0mjIFM.s:2901   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cc0mjIFM.s:2908   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cc0mjIFM.s:3144   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/cc0mjIFM.s:3156   .text.vTaskDelay:0000000000000000 $t
     /tmp/cc0mjIFM.s:3163   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cc0mjIFM.s:3256   .text.vTaskDelay:0000000000000048 $d
     /tmp/cc0mjIFM.s:3261   .text.xTaskCatchUpTicks:0000000000000000 $t
     /tmp/cc0mjIFM.s:3268   .text.xTaskCatchUpTicks:0000000000000000 xTaskCatchUpTicks
     /tmp/cc0mjIFM.s:3336   .text.xTaskCatchUpTicks:0000000000000030 $d
     /tmp/cc0mjIFM.s:3342   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cc0mjIFM.s:3349   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cc0mjIFM.s:3491   .text.vTaskSwitchContext:0000000000000084 $d
     /tmp/cc0mjIFM.s:3502   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cc0mjIFM.s:3509   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cc0mjIFM.s:3714   .text.vTaskSuspend:00000000000000cc $d
     /tmp/cc0mjIFM.s:3725   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cc0mjIFM.s:3732   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cc0mjIFM.s:3800   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/cc0mjIFM.s:3805   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cc0mjIFM.s:3812   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cc0mjIFM.s:3929   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/cc0mjIFM.s:3935   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cc0mjIFM.s:3942   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cc0mjIFM.s:4073   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/cc0mjIFM.s:4083   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cc0mjIFM.s:4090   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/cc0mjIFM.s:4226   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/cc0mjIFM.s:4235   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/cc0mjIFM.s:4242   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cc0mjIFM.s:4312   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/cc0mjIFM.s:4318   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/cc0mjIFM.s:4325   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/cc0mjIFM.s:4348   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/cc0mjIFM.s:4354   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cc0mjIFM.s:4361   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cc0mjIFM.s:4538   .text.xTaskCheckForTimeOut:000000000000007c $d
     /tmp/cc0mjIFM.s:4545   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cc0mjIFM.s:4552   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cc0mjIFM.s:4569   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cc0mjIFM.s:4574   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
ARM GAS  /tmp/cc0mjIFM.s 			page 249


     /tmp/cc0mjIFM.s:4581   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cc0mjIFM.s:4600   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/cc0mjIFM.s:4605   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/cc0mjIFM.s:4612   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cc0mjIFM.s:4650   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/cc0mjIFM.s:4656   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/cc0mjIFM.s:4663   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/cc0mjIFM.s:4829   .text.xTaskPriorityInherit:00000000000000a0 $d
     /tmp/cc0mjIFM.s:4836   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/cc0mjIFM.s:4843   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cc0mjIFM.s:5040   .text.xTaskPriorityDisinherit:00000000000000a8 $d
     /tmp/cc0mjIFM.s:5047   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/cc0mjIFM.s:5054   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/cc0mjIFM.s:5252   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000a8 $d
     /tmp/cc0mjIFM.s:5259   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cc0mjIFM.s:5266   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cc0mjIFM.s:5293   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cc0mjIFM.s:5298   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cc0mjIFM.s:5305   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cc0mjIFM.s:5336   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/cc0mjIFM.s:5341   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cc0mjIFM.s:5348   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cc0mjIFM.s:5470   .text.ulTaskNotifyTake:0000000000000074 $d
     /tmp/cc0mjIFM.s:5475   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cc0mjIFM.s:5482   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cc0mjIFM.s:5626   .text.xTaskNotifyWait:0000000000000094 $d
     /tmp/cc0mjIFM.s:5631   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cc0mjIFM.s:5638   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cc0mjIFM.s:5694   .text.xTaskGenericNotify:000000000000002a $d
     /tmp/cc0mjIFM.s:5924   .text.xTaskGenericNotify:00000000000000f4 $d
     /tmp/cc0mjIFM.s:5931   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cc0mjIFM.s:5938   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cc0mjIFM.s:6016   .text.xTaskGenericNotifyFromISR:0000000000000040 $d
     /tmp/cc0mjIFM.s:6291   .text.xTaskGenericNotifyFromISR:000000000000011c $d
     /tmp/cc0mjIFM.s:6301   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cc0mjIFM.s:6308   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cc0mjIFM.s:6528   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/cc0mjIFM.s:6538   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cc0mjIFM.s:6545   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cc0mjIFM.s:6611   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/cc0mjIFM.s:6616   .text.ulTaskNotifyValueClear:0000000000000000 $t
     /tmp/cc0mjIFM.s:6623   .text.ulTaskNotifyValueClear:0000000000000000 ulTaskNotifyValueClear
     /tmp/cc0mjIFM.s:6680   .text.ulTaskNotifyValueClear:0000000000000028 $d
     /tmp/cc0mjIFM.s:6690   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cc0mjIFM.s:6686   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/cc0mjIFM.s:6693   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cc0mjIFM.s:6697   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cc0mjIFM.s:6700   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cc0mjIFM.s:6704   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cc0mjIFM.s:6707   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cc0mjIFM.s:6711   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cc0mjIFM.s:6714   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cc0mjIFM.s:6718   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cc0mjIFM.s:6721   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cc0mjIFM.s:6725   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cc0mjIFM.s:6728   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cc0mjIFM.s:6732   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
ARM GAS  /tmp/cc0mjIFM.s 			page 250


     /tmp/cc0mjIFM.s:6735   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cc0mjIFM.s:6739   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/cc0mjIFM.s:6742   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cc0mjIFM.s:6746   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cc0mjIFM.s:6749   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cc0mjIFM.s:6753   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/cc0mjIFM.s:6756   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cc0mjIFM.s:6760   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cc0mjIFM.s:6763   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/cc0mjIFM.s:6767   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/cc0mjIFM.s:6770   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/cc0mjIFM.s:6774   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cc0mjIFM.s:6777   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cc0mjIFM.s:6781   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/cc0mjIFM.s:6784   .bss.xPendedTicks:0000000000000000 $d
     /tmp/cc0mjIFM.s:6788   .bss.xPendedTicks:0000000000000000 xPendedTicks
     /tmp/cc0mjIFM.s:6791   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cc0mjIFM.s:6795   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cc0mjIFM.s:6798   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cc0mjIFM.s:6802   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cc0mjIFM.s:6805   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cc0mjIFM.s:6809   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/cc0mjIFM.s:6812   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cc0mjIFM.s:6816   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cc0mjIFM.s:6819   .bss.xTickCount:0000000000000000 $d
     /tmp/cc0mjIFM.s:6823   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cc0mjIFM.s:6826   .bss.xYieldPending:0000000000000000 $d
     /tmp/cc0mjIFM.s:6830   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/cc0mjIFM.s:5700   .text.xTaskGenericNotify:000000000000002f $d
     /tmp/cc0mjIFM.s:5700   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/cc0mjIFM.s:6022   .text.xTaskGenericNotifyFromISR:0000000000000045 $d
     /tmp/cc0mjIFM.s:6022   .text.xTaskGenericNotifyFromISR:0000000000000046 $t

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
vApplicationTickHook
