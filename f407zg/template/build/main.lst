ARM GAS  /tmp/ccEJs1BT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB319:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** #include "fsmc.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include <stdio.h>
  30:Core/Src/main.c **** #include <string.h>
ARM GAS  /tmp/ccEJs1BT.s 			page 2


  31:Core/Src/main.c **** #include "lvgl.h"
  32:Core/Src/main.c **** #include "GT9147.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** #define LVGL_TICK 	5
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  /tmp/ccEJs1BT.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_DMA_Init();
  96:Core/Src/main.c ****   MX_USART1_UART_Init();
  97:Core/Src/main.c ****   MX_FSMC_Init();
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  99:Core/Src/main.c ****   lv_init();
 100:Core/Src/main.c ****   lv_port_disp_init();        // 显示器初始化
 101:Core/Src/main.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
 102:Core/Src/main.c ****   //lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   lv_example_animimg_1();
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Infinite loop */
 108:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 109:Core/Src/main.c ****   while (1)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     lv_tick_inc(LVGL_TICK);
 112:Core/Src/main.c **** 		lv_task_handler();
 113:Core/Src/main.c ****     HAL_Delay(LVGL_TICK);
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 133:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 134:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 135:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/ccEJs1BT.s 			page 4


 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****     Error_Handler();
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 153:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* USER CODE END 4 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /**
 170:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** void Error_Handler(void)
 174:Core/Src/main.c **** {
  29              		.loc 1 174 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 175:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 176:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 177:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 177 3 view .LVU1
  36              	.LBB6:
  37              	.LBI6:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  /tmp/ccEJs1BT.s 			page 5


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccEJs1BT.s 			page 6


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccEJs1BT.s 			page 7


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE7:
  50              	.LBE6:
 178:Core/Src/main.c ****   while (1)
  51              		.loc 1 178 3 discriminator 1 view .LVU4
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****   }
  52              		.loc 1 180 3 discriminator 1 view .LVU5
 178:Core/Src/main.c ****   while (1)
  53              		.loc 1 178 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE319:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB318:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 126 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 80
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 95B0     		sub	sp, sp, #84
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 88
ARM GAS  /tmp/ccEJs1BT.s 			page 8


 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 127 3 view .LVU8
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 127 22 is_stmt 0 view .LVU9
  81 0004 3022     		movs	r2, #48
  82 0006 0021     		movs	r1, #0
  83 0008 08A8     		add	r0, sp, #32
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 128:Core/Src/main.c **** 
  86              		.loc 1 128 3 is_stmt 1 view .LVU10
 128:Core/Src/main.c **** 
  87              		.loc 1 128 22 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0393     		str	r3, [sp, #12]
  90 0012 0493     		str	r3, [sp, #16]
  91 0014 0593     		str	r3, [sp, #20]
  92 0016 0693     		str	r3, [sp, #24]
  93 0018 0793     		str	r3, [sp, #28]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  94              		.loc 1 132 3 is_stmt 1 view .LVU12
  95              	.LBB8:
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  96              		.loc 1 132 3 view .LVU13
  97 001a 0193     		str	r3, [sp, #4]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  98              		.loc 1 132 3 view .LVU14
  99 001c 1F4A     		ldr	r2, .L9
 100 001e 116C     		ldr	r1, [r2, #64]
 101 0020 41F08051 		orr	r1, r1, #268435456
 102 0024 1164     		str	r1, [r2, #64]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 103              		.loc 1 132 3 view .LVU15
 104 0026 126C     		ldr	r2, [r2, #64]
 105 0028 02F08052 		and	r2, r2, #268435456
 106 002c 0192     		str	r2, [sp, #4]
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 107              		.loc 1 132 3 view .LVU16
 108 002e 019A     		ldr	r2, [sp, #4]
 109              	.LBE8:
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 110              		.loc 1 132 3 view .LVU17
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 111              		.loc 1 133 3 view .LVU18
 112              	.LBB9:
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 113              		.loc 1 133 3 view .LVU19
 114 0030 0293     		str	r3, [sp, #8]
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 115              		.loc 1 133 3 view .LVU20
 116 0032 1B4A     		ldr	r2, .L9+4
 117 0034 1168     		ldr	r1, [r2]
 118 0036 41F48041 		orr	r1, r1, #16384
 119 003a 1160     		str	r1, [r2]
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120              		.loc 1 133 3 view .LVU21
 121 003c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccEJs1BT.s 			page 9


 122 003e 02F48042 		and	r2, r2, #16384
 123 0042 0292     		str	r2, [sp, #8]
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 124              		.loc 1 133 3 view .LVU22
 125 0044 029A     		ldr	r2, [sp, #8]
 126              	.LBE9:
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 127              		.loc 1 133 3 view .LVU23
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 128              		.loc 1 137 3 view .LVU24
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129              		.loc 1 137 36 is_stmt 0 view .LVU25
 130 0046 0222     		movs	r2, #2
 131 0048 0892     		str	r2, [sp, #32]
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 132              		.loc 1 138 3 is_stmt 1 view .LVU26
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 133              		.loc 1 138 30 is_stmt 0 view .LVU27
 134 004a 0121     		movs	r1, #1
 135 004c 0B91     		str	r1, [sp, #44]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 136              		.loc 1 139 3 is_stmt 1 view .LVU28
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137              		.loc 1 139 41 is_stmt 0 view .LVU29
 138 004e 1021     		movs	r1, #16
 139 0050 0C91     		str	r1, [sp, #48]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 140              		.loc 1 140 3 is_stmt 1 view .LVU30
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 141              		.loc 1 140 34 is_stmt 0 view .LVU31
 142 0052 0E92     		str	r2, [sp, #56]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 143              		.loc 1 141 3 is_stmt 1 view .LVU32
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 144              		.loc 1 141 35 is_stmt 0 view .LVU33
 145 0054 0F93     		str	r3, [sp, #60]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 146              		.loc 1 142 3 is_stmt 1 view .LVU34
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 147              		.loc 1 142 30 is_stmt 0 view .LVU35
 148 0056 0823     		movs	r3, #8
 149 0058 1093     		str	r3, [sp, #64]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 150              		.loc 1 143 3 is_stmt 1 view .LVU36
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 151              		.loc 1 143 30 is_stmt 0 view .LVU37
 152 005a A823     		movs	r3, #168
 153 005c 1193     		str	r3, [sp, #68]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 154              		.loc 1 144 3 is_stmt 1 view .LVU38
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 155              		.loc 1 144 30 is_stmt 0 view .LVU39
 156 005e 1292     		str	r2, [sp, #72]
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157              		.loc 1 145 3 is_stmt 1 view .LVU40
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158              		.loc 1 145 30 is_stmt 0 view .LVU41
ARM GAS  /tmp/ccEJs1BT.s 			page 10


 159 0060 0423     		movs	r3, #4
 160 0062 1393     		str	r3, [sp, #76]
 146:Core/Src/main.c ****   {
 161              		.loc 1 146 3 is_stmt 1 view .LVU42
 146:Core/Src/main.c ****   {
 162              		.loc 1 146 7 is_stmt 0 view .LVU43
 163 0064 08A8     		add	r0, sp, #32
 164 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 165              	.LVL1:
 146:Core/Src/main.c ****   {
 166              		.loc 1 146 6 view .LVU44
 167 006a 98B9     		cbnz	r0, .L7
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168              		.loc 1 152 3 is_stmt 1 view .LVU45
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169              		.loc 1 152 31 is_stmt 0 view .LVU46
 170 006c 0F23     		movs	r3, #15
 171 006e 0393     		str	r3, [sp, #12]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172              		.loc 1 154 3 is_stmt 1 view .LVU47
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 173              		.loc 1 154 34 is_stmt 0 view .LVU48
 174 0070 0223     		movs	r3, #2
 175 0072 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 176              		.loc 1 155 3 is_stmt 1 view .LVU49
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 177              		.loc 1 155 35 is_stmt 0 view .LVU50
 178 0074 0023     		movs	r3, #0
 179 0076 0593     		str	r3, [sp, #20]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 180              		.loc 1 156 3 is_stmt 1 view .LVU51
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 181              		.loc 1 156 36 is_stmt 0 view .LVU52
 182 0078 4FF4A053 		mov	r3, #5120
 183 007c 0693     		str	r3, [sp, #24]
 157:Core/Src/main.c **** 
 184              		.loc 1 157 3 is_stmt 1 view .LVU53
 157:Core/Src/main.c **** 
 185              		.loc 1 157 36 is_stmt 0 view .LVU54
 186 007e 4FF48053 		mov	r3, #4096
 187 0082 0793     		str	r3, [sp, #28]
 159:Core/Src/main.c ****   {
 188              		.loc 1 159 3 is_stmt 1 view .LVU55
 159:Core/Src/main.c ****   {
 189              		.loc 1 159 7 is_stmt 0 view .LVU56
 190 0084 0521     		movs	r1, #5
 191 0086 03A8     		add	r0, sp, #12
 192 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 193              	.LVL2:
 159:Core/Src/main.c ****   {
 194              		.loc 1 159 6 view .LVU57
 195 008c 20B9     		cbnz	r0, .L8
 163:Core/Src/main.c **** 
 196              		.loc 1 163 1 view .LVU58
 197 008e 15B0     		add	sp, sp, #84
 198              	.LCFI2:
ARM GAS  /tmp/ccEJs1BT.s 			page 11


 199              		.cfi_remember_state
 200              		.cfi_def_cfa_offset 4
 201              		@ sp needed
 202 0090 5DF804FB 		ldr	pc, [sp], #4
 203              	.L7:
 204              	.LCFI3:
 205              		.cfi_restore_state
 148:Core/Src/main.c ****   }
 206              		.loc 1 148 5 is_stmt 1 view .LVU59
 207 0094 FFF7FEFF 		bl	Error_Handler
 208              	.LVL3:
 209              	.L8:
 161:Core/Src/main.c ****   }
 210              		.loc 1 161 5 view .LVU60
 211 0098 FFF7FEFF 		bl	Error_Handler
 212              	.LVL4:
 213              	.L10:
 214              		.align	2
 215              	.L9:
 216 009c 00380240 		.word	1073887232
 217 00a0 00700040 		.word	1073770496
 218              		.cfi_endproc
 219              	.LFE318:
 221              		.section	.text.main,"ax",%progbits
 222              		.align	1
 223              		.global	main
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	main:
 230              	.LFB317:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 231              		.loc 1 72 1 view -0
 232              		.cfi_startproc
 233              		@ Volatile: function does not return.
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI4:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
  80:Core/Src/main.c **** 
 241              		.loc 1 80 3 view .LVU62
 242 0002 FFF7FEFF 		bl	HAL_Init
 243              	.LVL5:
  87:Core/Src/main.c **** 
 244              		.loc 1 87 3 view .LVU63
 245 0006 FFF7FEFF 		bl	SystemClock_Config
 246              	.LVL6:
  94:Core/Src/main.c ****   MX_DMA_Init();
 247              		.loc 1 94 3 view .LVU64
 248 000a FFF7FEFF 		bl	MX_GPIO_Init
 249              	.LVL7:
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
 250              		.loc 1 95 3 view .LVU65
ARM GAS  /tmp/ccEJs1BT.s 			page 12


 251 000e FFF7FEFF 		bl	MX_DMA_Init
 252              	.LVL8:
  96:Core/Src/main.c ****   MX_FSMC_Init();
 253              		.loc 1 96 3 view .LVU66
 254 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 255              	.LVL9:
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 256              		.loc 1 97 3 view .LVU67
 257 0016 FFF7FEFF 		bl	MX_FSMC_Init
 258              	.LVL10:
  99:Core/Src/main.c ****   lv_port_disp_init();        // 显示器初始化
 259              		.loc 1 99 3 view .LVU68
 260 001a FFF7FEFF 		bl	lv_init
 261              	.LVL11:
 100:Core/Src/main.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
 262              		.loc 1 100 3 view .LVU69
 263 001e FFF7FEFF 		bl	lv_port_disp_init
 264              	.LVL12:
 101:Core/Src/main.c ****   //lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
 265              		.loc 1 101 3 view .LVU70
 266 0022 FFF7FEFF 		bl	lv_port_indev_init
 267              	.LVL13:
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 268              		.loc 1 104 3 view .LVU71
 269 0026 FFF7FEFF 		bl	lv_example_animimg_1
 270              	.LVL14:
 271              	.L12:
 109:Core/Src/main.c ****   {
 272              		.loc 1 109 3 discriminator 1 view .LVU72
 111:Core/Src/main.c **** 		lv_task_handler();
 273              		.loc 1 111 5 discriminator 1 view .LVU73
 274 002a 0520     		movs	r0, #5
 275 002c FFF7FEFF 		bl	lv_tick_inc
 276              	.LVL15:
 112:Core/Src/main.c ****     HAL_Delay(LVGL_TICK);
 277              		.loc 1 112 3 discriminator 1 view .LVU74
 278              	.LBB10:
 279              	.LBI10:
 280              		.file 3 "Middlewares/lvgl/src/lv_api_map.h"
   1:Middlewares/lvgl/src/lv_api_map.h **** /**
   2:Middlewares/lvgl/src/lv_api_map.h ****  * @file lv_api_map.h
   3:Middlewares/lvgl/src/lv_api_map.h ****  *
   4:Middlewares/lvgl/src/lv_api_map.h ****  */
   5:Middlewares/lvgl/src/lv_api_map.h **** 
   6:Middlewares/lvgl/src/lv_api_map.h **** #ifndef LV_API_MAP_H
   7:Middlewares/lvgl/src/lv_api_map.h **** #define LV_API_MAP_H
   8:Middlewares/lvgl/src/lv_api_map.h **** 
   9:Middlewares/lvgl/src/lv_api_map.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/lv_api_map.h **** extern "C" {
  11:Middlewares/lvgl/src/lv_api_map.h **** #endif
  12:Middlewares/lvgl/src/lv_api_map.h **** 
  13:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  14:Middlewares/lvgl/src/lv_api_map.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  16:Middlewares/lvgl/src/lv_api_map.h **** #include "../lvgl.h"
  17:Middlewares/lvgl/src/lv_api_map.h **** 
  18:Middlewares/lvgl/src/lv_api_map.h **** /*********************
ARM GAS  /tmp/ccEJs1BT.s 			page 13


  19:Middlewares/lvgl/src/lv_api_map.h ****  *      DEFINES
  20:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  21:Middlewares/lvgl/src/lv_api_map.h **** 
  22:Middlewares/lvgl/src/lv_api_map.h **** #define LV_NO_TASK_READY        LV_NO_TIMER_READY
  23:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_REL      LV_INDEV_STATE_RELEASED
  24:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_PR       LV_INDEV_STATE_PRESSED
  25:Middlewares/lvgl/src/lv_api_map.h **** #define LV_OBJ_FLAG_SNAPABLE    LV_OBJ_FLAG_SNAPPABLE   /*Fixed typo*/
  26:Middlewares/lvgl/src/lv_api_map.h **** 
  27:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  28:Middlewares/lvgl/src/lv_api_map.h ****  *      TYPEDEFS
  29:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  30:Middlewares/lvgl/src/lv_api_map.h **** 
  31:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  32:Middlewares/lvgl/src/lv_api_map.h ****  * GLOBAL PROTOTYPES
  33:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  34:Middlewares/lvgl/src/lv_api_map.h **** 
  35:Middlewares/lvgl/src/lv_api_map.h **** static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)
 281              		.loc 3 35 51 discriminator 1 view .LVU75
 282              	.LBB11:
  36:Middlewares/lvgl/src/lv_api_map.h **** {
  37:Middlewares/lvgl/src/lv_api_map.h ****     return lv_timer_handler();
 283              		.loc 3 37 5 discriminator 1 view .LVU76
 284              		.loc 3 37 12 is_stmt 0 discriminator 1 view .LVU77
 285 0030 FFF7FEFF 		bl	lv_timer_handler
 286              	.LVL16:
 287              	.LBE11:
 288              	.LBE10:
 113:Core/Src/main.c ****     /* USER CODE END WHILE */
 289              		.loc 1 113 5 is_stmt 1 discriminator 1 view .LVU78
 290 0034 0520     		movs	r0, #5
 291 0036 FFF7FEFF 		bl	HAL_Delay
 292              	.LVL17:
 109:Core/Src/main.c ****   {
 293              		.loc 1 109 9 discriminator 1 view .LVU79
 294 003a F6E7     		b	.L12
 295              		.cfi_endproc
 296              	.LFE317:
 298              		.text
 299              	.Letext0:
 300              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 301              		.file 5 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 302              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 303              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 304              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 305              		.file 9 "Middlewares/lvgl/src/misc/lv_timer.h"
 306              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 307              		.file 11 "Core/Inc/gpio.h"
 308              		.file 12 "Core/Inc/dma.h"
 309              		.file 13 "Core/Inc/usart.h"
 310              		.file 14 "Core/Inc/fsmc.h"
 311              		.file 15 "Middlewares/lvgl/src/core/lv_obj.h"
 312              		.file 16 "Middlewares/lvgl/src/hal/lv_hal_tick.h"
 313              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 314              		.file 18 "<built-in>"
ARM GAS  /tmp/ccEJs1BT.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEJs1BT.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccEJs1BT.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccEJs1BT.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEJs1BT.s:66     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEJs1BT.s:216    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccEJs1BT.s:222    .text.main:0000000000000000 $t
     /tmp/ccEJs1BT.s:229    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_FSMC_Init
lv_init
lv_port_disp_init
lv_port_indev_init
lv_example_animimg_1
lv_tick_inc
lv_timer_handler
HAL_Delay
