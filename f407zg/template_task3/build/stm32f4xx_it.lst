ARM GAS  /tmp/ccUuUXss.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB235:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccUuUXss.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc2;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc3;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_dac1;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  64:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  65:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim14;
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  70:Core/Src/stm32f4xx_it.c **** 
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** /**
  75:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  76:Core/Src/stm32f4xx_it.c ****   */
  77:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  78:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 78 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccUuUXss.s 			page 3


  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 83 3 discriminator 1 view .LVU1
  84:Core/Src/stm32f4xx_it.c ****   {
  85:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 85 3 discriminator 1 view .LVU2
  83:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 83 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE235:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB236:
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32f4xx_it.c **** }
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c **** /**
  90:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  91:Core/Src/stm32f4xx_it.c ****   */
  92:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  93:Core/Src/stm32f4xx_it.c **** {
  53              		.loc 1 93 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c **** 
  96:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   while (1)
  60              		.loc 1 97 3 discriminator 1 view .LVU5
  98:Core/Src/stm32f4xx_it.c ****   {
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****   }
  61              		.loc 1 101 3 discriminator 1 view .LVU6
  97:Core/Src/stm32f4xx_it.c ****   {
  62              		.loc 1 97 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE236:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
ARM GAS  /tmp/ccUuUXss.s 			page 4


  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB237:
 102:Core/Src/stm32f4xx_it.c **** }
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c **** /**
 105:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 106:Core/Src/stm32f4xx_it.c ****   */
 107:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 108:Core/Src/stm32f4xx_it.c **** {
  77              		.loc 1 108 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 112 3 discriminator 1 view .LVU9
 113:Core/Src/stm32f4xx_it.c ****   {
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****   }
  85              		.loc 1 116 3 discriminator 1 view .LVU10
 112:Core/Src/stm32f4xx_it.c ****   {
  86              		.loc 1 112 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE237:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB238:
 117:Core/Src/stm32f4xx_it.c **** }
 118:Core/Src/stm32f4xx_it.c **** 
 119:Core/Src/stm32f4xx_it.c **** /**
 120:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 121:Core/Src/stm32f4xx_it.c ****   */
 122:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 123:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 123 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccUuUXss.s 			page 5


 126:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 127 3 discriminator 1 view .LVU13
 128:Core/Src/stm32f4xx_it.c ****   {
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****   }
 109              		.loc 1 131 3 discriminator 1 view .LVU14
 127:Core/Src/stm32f4xx_it.c ****   {
 110              		.loc 1 127 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE238:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB239:
 132:Core/Src/stm32f4xx_it.c **** }
 133:Core/Src/stm32f4xx_it.c **** 
 134:Core/Src/stm32f4xx_it.c **** /**
 135:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 136:Core/Src/stm32f4xx_it.c ****   */
 137:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 138:Core/Src/stm32f4xx_it.c **** {
 125              		.loc 1 138 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 142 3 discriminator 1 view .LVU17
 143:Core/Src/stm32f4xx_it.c ****   {
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****   }
 133              		.loc 1 146 3 discriminator 1 view .LVU18
 142:Core/Src/stm32f4xx_it.c ****   {
 134              		.loc 1 142 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE239:
 139              		.section	.text.DebugMon_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	DebugMon_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
ARM GAS  /tmp/ccUuUXss.s 			page 6


 145              		.fpu fpv4-sp-d16
 147              	DebugMon_Handler:
 148              	.LFB240:
 147:Core/Src/stm32f4xx_it.c **** }
 148:Core/Src/stm32f4xx_it.c **** 
 149:Core/Src/stm32f4xx_it.c **** /**
 150:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 151:Core/Src/stm32f4xx_it.c ****   */
 152:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 153:Core/Src/stm32f4xx_it.c **** {
 149              		.loc 1 153 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 160:Core/Src/stm32f4xx_it.c **** }
 154              		.loc 1 160 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE240:
 159              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 160              		.align	1
 161              		.global	DMA1_Stream5_IRQHandler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DMA1_Stream5_IRQHandler:
 168              	.LFB241:
 161:Core/Src/stm32f4xx_it.c **** 
 162:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 163:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 164:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 165:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 166:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 167:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c **** /**
 170:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 171:Core/Src/stm32f4xx_it.c ****   */
 172:Core/Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 173:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 173 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI0:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
ARM GAS  /tmp/ccUuUXss.s 			page 7


 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 177:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1);
 178              		.loc 1 177 3 view .LVU23
 179 0002 0248     		ldr	r0, .L14
 180 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 181              	.LVL0:
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** }
 182              		.loc 1 181 1 is_stmt 0 view .LVU24
 183 0008 08BD     		pop	{r3, pc}
 184              	.L15:
 185 000a 00BF     		.align	2
 186              	.L14:
 187 000c 00000000 		.word	hdma_dac1
 188              		.cfi_endproc
 189              	.LFE241:
 191              		.section	.text.USART1_IRQHandler,"ax",%progbits
 192              		.align	1
 193              		.global	USART1_IRQHandler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	USART1_IRQHandler:
 200              	.LFB242:
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c **** /**
 184:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 185:Core/Src/stm32f4xx_it.c ****   */
 186:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 187:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 187 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 189:Core/Src/stm32f4xx_it.c **** 
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 210              		.loc 1 191 3 view .LVU26
 211 0002 0248     		ldr	r0, .L18
 212 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 213              	.LVL1:
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 193:Core/Src/stm32f4xx_it.c **** 
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** }
 214              		.loc 1 195 1 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccUuUXss.s 			page 8


 215 0008 08BD     		pop	{r3, pc}
 216              	.L19:
 217 000a 00BF     		.align	2
 218              	.L18:
 219 000c 00000000 		.word	huart1
 220              		.cfi_endproc
 221              	.LFE242:
 223              		.section	.text.TIM8_TRG_COM_TIM14_IRQHandler,"ax",%progbits
 224              		.align	1
 225              		.global	TIM8_TRG_COM_TIM14_IRQHandler
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	TIM8_TRG_COM_TIM14_IRQHandler:
 232              	.LFB243:
 196:Core/Src/stm32f4xx_it.c **** 
 197:Core/Src/stm32f4xx_it.c **** /**
 198:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM8 trigger and commutation interrupts and TIM14 global interrupt
 199:Core/Src/stm32f4xx_it.c ****   */
 200:Core/Src/stm32f4xx_it.c **** void TIM8_TRG_COM_TIM14_IRQHandler(void)
 201:Core/Src/stm32f4xx_it.c **** {
 233              		.loc 1 201 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI2:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 0 */
 203:Core/Src/stm32f4xx_it.c **** 
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 0 */
 205:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim14);
 242              		.loc 1 205 3 view .LVU29
 243 0002 0248     		ldr	r0, .L22
 244 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 245              	.LVL2:
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_TRG_COM_TIM14_IRQn 1 */
 207:Core/Src/stm32f4xx_it.c **** 
 208:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_TRG_COM_TIM14_IRQn 1 */
 209:Core/Src/stm32f4xx_it.c **** }
 246              		.loc 1 209 1 is_stmt 0 view .LVU30
 247 0008 08BD     		pop	{r3, pc}
 248              	.L23:
 249 000a 00BF     		.align	2
 250              	.L22:
 251 000c 00000000 		.word	htim14
 252              		.cfi_endproc
 253              	.LFE243:
 255              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 256              		.align	1
 257              		.global	DMA2_Stream0_IRQHandler
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
ARM GAS  /tmp/ccUuUXss.s 			page 9


 261              		.fpu fpv4-sp-d16
 263              	DMA2_Stream0_IRQHandler:
 264              	.LFB244:
 210:Core/Src/stm32f4xx_it.c **** 
 211:Core/Src/stm32f4xx_it.c **** /**
 212:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 213:Core/Src/stm32f4xx_it.c ****   */
 214:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 215:Core/Src/stm32f4xx_it.c **** {
 265              		.loc 1 215 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI3:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 219:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 274              		.loc 1 219 3 view .LVU32
 275 0002 0248     		ldr	r0, .L26
 276 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 277              	.LVL3:
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 221:Core/Src/stm32f4xx_it.c **** 
 222:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 223:Core/Src/stm32f4xx_it.c **** }
 278              		.loc 1 223 1 is_stmt 0 view .LVU33
 279 0008 08BD     		pop	{r3, pc}
 280              	.L27:
 281 000a 00BF     		.align	2
 282              	.L26:
 283 000c 00000000 		.word	hdma_adc1
 284              		.cfi_endproc
 285              	.LFE244:
 287              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 288              		.align	1
 289              		.global	DMA2_Stream1_IRQHandler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	DMA2_Stream1_IRQHandler:
 296              	.LFB245:
 224:Core/Src/stm32f4xx_it.c **** 
 225:Core/Src/stm32f4xx_it.c **** /**
 226:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 227:Core/Src/stm32f4xx_it.c ****   */
 228:Core/Src/stm32f4xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 229:Core/Src/stm32f4xx_it.c **** {
 297              		.loc 1 229 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUuUXss.s 			page 10


 301 0000 08B5     		push	{r3, lr}
 302              	.LCFI4:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 233:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc3);
 306              		.loc 1 233 3 view .LVU35
 307 0002 0248     		ldr	r0, .L30
 308 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 309              	.LVL4:
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 235:Core/Src/stm32f4xx_it.c **** 
 236:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 237:Core/Src/stm32f4xx_it.c **** }
 310              		.loc 1 237 1 is_stmt 0 view .LVU36
 311 0008 08BD     		pop	{r3, pc}
 312              	.L31:
 313 000a 00BF     		.align	2
 314              	.L30:
 315 000c 00000000 		.word	hdma_adc3
 316              		.cfi_endproc
 317              	.LFE245:
 319              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 320              		.align	1
 321              		.global	DMA2_Stream2_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	DMA2_Stream2_IRQHandler:
 328              	.LFB246:
 238:Core/Src/stm32f4xx_it.c **** 
 239:Core/Src/stm32f4xx_it.c **** /**
 240:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 241:Core/Src/stm32f4xx_it.c ****   */
 242:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 243:Core/Src/stm32f4xx_it.c **** {
 329              		.loc 1 243 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI5:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 245:Core/Src/stm32f4xx_it.c **** 
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 247:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc2);
 338              		.loc 1 247 3 view .LVU38
 339 0002 0248     		ldr	r0, .L34
 340 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 341              	.LVL5:
ARM GAS  /tmp/ccUuUXss.s 			page 11


 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 249:Core/Src/stm32f4xx_it.c **** 
 250:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 251:Core/Src/stm32f4xx_it.c **** }
 342              		.loc 1 251 1 is_stmt 0 view .LVU39
 343 0008 08BD     		pop	{r3, pc}
 344              	.L35:
 345 000a 00BF     		.align	2
 346              	.L34:
 347 000c 00000000 		.word	hdma_adc2
 348              		.cfi_endproc
 349              	.LFE246:
 351              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 352              		.align	1
 353              		.global	DMA2_Stream7_IRQHandler
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv4-sp-d16
 359              	DMA2_Stream7_IRQHandler:
 360              	.LFB247:
 252:Core/Src/stm32f4xx_it.c **** 
 253:Core/Src/stm32f4xx_it.c **** /**
 254:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 255:Core/Src/stm32f4xx_it.c ****   */
 256:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 257:Core/Src/stm32f4xx_it.c **** {
 361              		.loc 1 257 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI6:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 259:Core/Src/stm32f4xx_it.c **** 
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 261:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 370              		.loc 1 261 3 view .LVU41
 371 0002 0248     		ldr	r0, .L38
 372 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 373              	.LVL6:
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 263:Core/Src/stm32f4xx_it.c **** 
 264:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 265:Core/Src/stm32f4xx_it.c **** }
 374              		.loc 1 265 1 is_stmt 0 view .LVU42
 375 0008 08BD     		pop	{r3, pc}
 376              	.L39:
 377 000a 00BF     		.align	2
 378              	.L38:
 379 000c 00000000 		.word	hdma_usart1_tx
 380              		.cfi_endproc
 381              	.LFE247:
 383              		.text
ARM GAS  /tmp/ccUuUXss.s 			page 12


 384              	.Letext0:
 385              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 386              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 387              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 388              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 389              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 390              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 391              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccUuUXss.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccUuUXss.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccUuUXss.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccUuUXss.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccUuUXss.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccUuUXss.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccUuUXss.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccUuUXss.s:92     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccUuUXss.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccUuUXss.s:116    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccUuUXss.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccUuUXss.s:140    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccUuUXss.s:147    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccUuUXss.s:160    .text.DMA1_Stream5_IRQHandler:0000000000000000 $t
     /tmp/ccUuUXss.s:167    .text.DMA1_Stream5_IRQHandler:0000000000000000 DMA1_Stream5_IRQHandler
     /tmp/ccUuUXss.s:187    .text.DMA1_Stream5_IRQHandler:000000000000000c $d
     /tmp/ccUuUXss.s:192    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccUuUXss.s:199    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccUuUXss.s:219    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccUuUXss.s:224    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000000000000 $t
     /tmp/ccUuUXss.s:231    .text.TIM8_TRG_COM_TIM14_IRQHandler:0000000000000000 TIM8_TRG_COM_TIM14_IRQHandler
     /tmp/ccUuUXss.s:251    .text.TIM8_TRG_COM_TIM14_IRQHandler:000000000000000c $d
     /tmp/ccUuUXss.s:256    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccUuUXss.s:263    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccUuUXss.s:283    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccUuUXss.s:288    .text.DMA2_Stream1_IRQHandler:0000000000000000 $t
     /tmp/ccUuUXss.s:295    .text.DMA2_Stream1_IRQHandler:0000000000000000 DMA2_Stream1_IRQHandler
     /tmp/ccUuUXss.s:315    .text.DMA2_Stream1_IRQHandler:000000000000000c $d
     /tmp/ccUuUXss.s:320    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccUuUXss.s:327    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccUuUXss.s:347    .text.DMA2_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccUuUXss.s:352    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccUuUXss.s:359    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccUuUXss.s:379    .text.DMA2_Stream7_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_dac1
HAL_UART_IRQHandler
huart1
HAL_TIM_IRQHandler
htim14
hdma_adc1
hdma_adc3
hdma_adc2
hdma_usart1_tx
