ARM GAS  /tmp/ccHbuOPN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"lvgl_app.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.slider_y_event_cb,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	slider_y_event_cb:
  26              	.LVL0:
  27              	.LFB188:
  28              		.file 1 "Core/Src/lvgl_app.c"
   1:Core/Src/lvgl_app.c **** #include "lvgl_app.h"
   2:Core/Src/lvgl_app.c **** #include <stdio.h>
   3:Core/Src/lvgl_app.c **** 
   4:Core/Src/lvgl_app.c **** lv_obj_t * wave_chart;
   5:Core/Src/lvgl_app.c **** lv_chart_series_t * wave_ser ;
   6:Core/Src/lvgl_app.c **** 
   7:Core/Src/lvgl_app.c **** static void slider_x_event_cb(lv_event_t * e)
   8:Core/Src/lvgl_app.c **** {
   9:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  10:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  11:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  12:Core/Src/lvgl_app.c **** }
  13:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
  14:Core/Src/lvgl_app.c **** {
  29              		.loc 1 14 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 14 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  15:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  39              		.loc 1 15 5 is_stmt 1 view .LVU2
  40              		.loc 1 15 22 is_stmt 0 view .LVU3
  41 0002 FFF7FEFF 		bl	lv_event_get_target
  42              	.LVL1:
  16:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
ARM GAS  /tmp/ccHbuOPN.s 			page 2


  43              		.loc 1 16 5 is_stmt 1 view .LVU4
  44              	.LBB14:
  45              	.LBI14:
  46              		.file 2 "Middlewares/lvgl/src/widgets/lv_slider.h"
   1:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
   2:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:Middlewares/lvgl/src/widgets/lv_slider.h ****  *
   4:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
   5:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   6:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:Middlewares/lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:Middlewares/lvgl/src/widgets/lv_slider.h **** 
   9:Middlewares/lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  12:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  13:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  14:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  16:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  18:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  20:Middlewares/lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:Middlewares/lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:Middlewares/lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:Middlewares/lvgl/src/widgets/lv_slider.h **** #endif
  24:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  25:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:Middlewares/lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  28:Middlewares/lvgl/src/widgets/lv_slider.h **** /*********************
  29:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:Middlewares/lvgl/src/widgets/lv_slider.h ****  *********************/
  31:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  32:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  33:Middlewares/lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  35:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  36:Middlewares/lvgl/src/widgets/lv_slider.h **** enum {
  37:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:Middlewares/lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:Middlewares/lvgl/src/widgets/lv_slider.h **** };
  41:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  43:Middlewares/lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:Middlewares/lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:Middlewares/lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:Middlewares/lvgl/src/widgets/lv_slider.h **** }lv_slider_t;
  51:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  52:Middlewares/lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:Middlewares/lvgl/src/widgets/lv_slider.h **** 
ARM GAS  /tmp/ccHbuOPN.s 			page 3


  54:Middlewares/lvgl/src/widgets/lv_slider.h **** /**********************
  55:Middlewares/lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  56:Middlewares/lvgl/src/widgets/lv_slider.h ****  **********************/
  57:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  58:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  59:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Create a slider objects
  60:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  61:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  62:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  63:Middlewares/lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  64:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  65:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
  66:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Setter functions
  67:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
  68:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  69:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  70:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  71:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  72:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  73:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  74:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  75:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  76:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  77:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  78:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  79:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  80:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  81:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  82:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  83:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  84:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  85:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  86:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  87:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  88:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  89:Middlewares/lvgl/src/widgets/lv_slider.h **** }
  90:Middlewares/lvgl/src/widgets/lv_slider.h **** 
  91:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
  92:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
  93:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
  94:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
  95:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
  96:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
  98:Middlewares/lvgl/src/widgets/lv_slider.h **** {
  99:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 100:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 101:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 102:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 103:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 104:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 105:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 106:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 107:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 108:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 109:Middlewares/lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 110:Middlewares/lvgl/src/widgets/lv_slider.h **** }
ARM GAS  /tmp/ccHbuOPN.s 			page 4


 111:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 112:Middlewares/lvgl/src/widgets/lv_slider.h **** /*=====================
 113:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Getter functions
 114:Middlewares/lvgl/src/widgets/lv_slider.h ****  *====================*/
 115:Middlewares/lvgl/src/widgets/lv_slider.h **** 
 116:Middlewares/lvgl/src/widgets/lv_slider.h **** /**
 117:Middlewares/lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 118:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 119:Middlewares/lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 120:Middlewares/lvgl/src/widgets/lv_slider.h ****  */
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
  47              		.loc 2 121 23 view .LVU5
  48              	.LBB15:
 122:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 123:Middlewares/lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
  49              		.loc 2 123 5 view .LVU6
  50              		.loc 2 123 12 is_stmt 0 view .LVU7
  51 0006 FFF7FEFF 		bl	lv_bar_get_value
  52              	.LVL2:
  53              		.loc 2 123 12 view .LVU8
  54              	.LBE15:
  55              	.LBE14:
  17:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_y(wave_chart, v);
  56              		.loc 1 17 5 is_stmt 1 view .LVU9
  57 000a 81B2     		uxth	r1, r0
  58 000c 024B     		ldr	r3, .L3
  59 000e 1868     		ldr	r0, [r3]
  60              	.LVL3:
  61              		.loc 1 17 5 is_stmt 0 view .LVU10
  62 0010 FFF7FEFF 		bl	lv_chart_set_zoom_y
  63              	.LVL4:
  18:Core/Src/lvgl_app.c **** }
  64              		.loc 1 18 1 view .LVU11
  65 0014 08BD     		pop	{r3, pc}
  66              	.L4:
  67 0016 00BF     		.align	2
  68              	.L3:
  69 0018 00000000 		.word	.LANCHOR0
  70              		.cfi_endproc
  71              	.LFE188:
  73              		.section	.text.slider_x_event_cb,"ax",%progbits
  74              		.align	1
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	slider_x_event_cb:
  81              	.LVL5:
  82              	.LFB187:
   8:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  83              		.loc 1 8 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
   8:Core/Src/lvgl_app.c ****     lv_obj_t * obj = lv_event_get_target(e);
  87              		.loc 1 8 1 is_stmt 0 view .LVU13
  88 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccHbuOPN.s 			page 5


  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
   9:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  93              		.loc 1 9 5 is_stmt 1 view .LVU14
   9:Core/Src/lvgl_app.c ****     int32_t v = lv_slider_get_value(obj);
  94              		.loc 1 9 22 is_stmt 0 view .LVU15
  95 0002 FFF7FEFF 		bl	lv_event_get_target
  96              	.LVL6:
  10:Core/Src/lvgl_app.c ****     lv_chart_set_zoom_x(wave_chart, v);
  97              		.loc 1 10 5 is_stmt 1 view .LVU16
  98              	.LBB16:
  99              	.LBI16:
 121:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 100              		.loc 2 121 23 view .LVU17
 101              	.LBB17:
 102              		.loc 2 123 5 view .LVU18
 103              		.loc 2 123 12 is_stmt 0 view .LVU19
 104 0006 FFF7FEFF 		bl	lv_bar_get_value
 105              	.LVL7:
 106              		.loc 2 123 12 view .LVU20
 107              	.LBE17:
 108              	.LBE16:
  11:Core/Src/lvgl_app.c **** }
 109              		.loc 1 11 5 is_stmt 1 view .LVU21
 110 000a 81B2     		uxth	r1, r0
 111 000c 024B     		ldr	r3, .L7
 112 000e 1868     		ldr	r0, [r3]
 113              	.LVL8:
  11:Core/Src/lvgl_app.c **** }
 114              		.loc 1 11 5 is_stmt 0 view .LVU22
 115 0010 FFF7FEFF 		bl	lv_chart_set_zoom_x
 116              	.LVL9:
  12:Core/Src/lvgl_app.c **** static void slider_y_event_cb(lv_event_t * e)
 117              		.loc 1 12 1 view .LVU23
 118 0014 08BD     		pop	{r3, pc}
 119              	.L8:
 120 0016 00BF     		.align	2
 121              	.L7:
 122 0018 00000000 		.word	.LANCHOR0
 123              		.cfi_endproc
 124              	.LFE187:
 126              		.section	.rodata.event_handler.str1.4,"aMS",%progbits,1
 127              		.align	2
 128              	.LC0:
 129 0000 636C6963 		.ascii	"clicked\015\000"
 129      6B65640D 
 129      00
 130 0009 000000   		.align	2
 131              	.LC1:
 132 000c 746F6767 		.ascii	"toggled\015\000"
 132      6C65640D 
 132      00
 133              		.section	.text.event_handler,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
ARM GAS  /tmp/ccHbuOPN.s 			page 6


 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	event_handler:
 141              	.LVL10:
 142              	.LFB190:
  19:Core/Src/lvgl_app.c **** void wave_chart_init(void)
  20:Core/Src/lvgl_app.c **** {
  21:Core/Src/lvgl_app.c ****     /*Create a chart*/
  22:Core/Src/lvgl_app.c ****     wave_chart = lv_chart_create(lv_scr_act());
  23:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 640, 330);
  24:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
  25:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 3300);
  26:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 640);
  27:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
  28:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
  29:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
  30:Core/Src/lvgl_app.c ****     lv_obj_set_style_size(wave_chart, 0, LV_PART_INDICATOR);
  31:Core/Src/lvgl_app.c **** 
  32:Core/Src/lvgl_app.c **** 
  33:Core/Src/lvgl_app.c ****     wave_ser = lv_chart_add_series(wave_chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_AXIS_PRIMA
  34:Core/Src/lvgl_app.c **** 
  35:Core/Src/lvgl_app.c ****     // uint32_t pcnt = sizeof(ecg_sample) / sizeof(ecg_sample[0]);
  36:Core/Src/lvgl_app.c ****     // lv_chart_set_point_count(chart, pcnt);
  37:Core/Src/lvgl_app.c ****     // lv_chart_set_ext_y_array(chart, ser, (lv_coord_t *)ecg_sample);
  38:Core/Src/lvgl_app.c **** 
  39:Core/Src/lvgl_app.c ****     lv_obj_t * slider;
  40:Core/Src/lvgl_app.c ****     slider = lv_slider_create(lv_scr_act());
  41:Core/Src/lvgl_app.c ****     lv_slider_set_range(slider, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  42:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(slider, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  43:Core/Src/lvgl_app.c ****     lv_obj_set_size(slider, 600, 10);
  44:Core/Src/lvgl_app.c ****     lv_obj_align_to(slider, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
  45:Core/Src/lvgl_app.c **** 
  46:Core/Src/lvgl_app.c ****     slider = lv_slider_create(lv_scr_act());
  47:Core/Src/lvgl_app.c ****     lv_slider_set_range(slider, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
  48:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(slider, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
  49:Core/Src/lvgl_app.c ****     lv_obj_set_size(slider, 10, 290);
  50:Core/Src/lvgl_app.c ****     lv_obj_align_to(slider, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 20, 0);
  51:Core/Src/lvgl_app.c **** }
  52:Core/Src/lvgl_app.c **** 
  53:Core/Src/lvgl_app.c **** uint8_t waveStopFlg=0;
  54:Core/Src/lvgl_app.c **** static void event_handler(lv_event_t * e)
  55:Core/Src/lvgl_app.c **** {
 143              		.loc 1 55 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		.loc 1 55 1 is_stmt 0 view .LVU25
 148 0000 08B5     		push	{r3, lr}
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 3, -8
 152              		.cfi_offset 14, -4
  56:Core/Src/lvgl_app.c ****     lv_event_code_t code = lv_event_get_code(e);
 153              		.loc 1 56 5 is_stmt 1 view .LVU26
 154              		.loc 1 56 28 is_stmt 0 view .LVU27
 155 0002 FFF7FEFF 		bl	lv_event_get_code
ARM GAS  /tmp/ccHbuOPN.s 			page 7


 156              	.LVL11:
  57:Core/Src/lvgl_app.c **** 
  58:Core/Src/lvgl_app.c ****     if(code == LV_EVENT_CLICKED) {
 157              		.loc 1 58 5 is_stmt 1 view .LVU28
 158              		.loc 1 58 7 is_stmt 0 view .LVU29
 159 0006 0728     		cmp	r0, #7
 160 0008 02D0     		beq	.L14
  59:Core/Src/lvgl_app.c ****         LV_LOG_USER("Clicked");
  60:Core/Src/lvgl_app.c ****         printf("clicked\r\n");
  61:Core/Src/lvgl_app.c ****         
  62:Core/Src/lvgl_app.c ****     }
  63:Core/Src/lvgl_app.c ****     else if(code == LV_EVENT_VALUE_CHANGED) {
 161              		.loc 1 63 10 is_stmt 1 view .LVU30
 162              		.loc 1 63 12 is_stmt 0 view .LVU31
 163 000a 1C28     		cmp	r0, #28
 164 000c 04D0     		beq	.L15
 165              	.LVL12:
 166              	.L9:
  64:Core/Src/lvgl_app.c ****         LV_LOG_USER("Toggled");
  65:Core/Src/lvgl_app.c ****         printf("toggled\r\n");
  66:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
  67:Core/Src/lvgl_app.c ****             waveStopFlg=0;
  68:Core/Src/lvgl_app.c ****         }else{
  69:Core/Src/lvgl_app.c ****             waveStopFlg=1;
  70:Core/Src/lvgl_app.c ****         }
  71:Core/Src/lvgl_app.c ****     }
  72:Core/Src/lvgl_app.c **** }
 167              		.loc 1 72 1 view .LVU32
 168 000e 08BD     		pop	{r3, pc}
 169              	.LVL13:
 170              	.L14:
  59:Core/Src/lvgl_app.c ****         LV_LOG_USER("Clicked");
 171              		.loc 1 59 31 is_stmt 1 view .LVU33
  60:Core/Src/lvgl_app.c ****         
 172              		.loc 1 60 9 view .LVU34
 173 0010 0948     		ldr	r0, .L17
 174              	.LVL14:
  60:Core/Src/lvgl_app.c ****         
 175              		.loc 1 60 9 is_stmt 0 view .LVU35
 176 0012 FFF7FEFF 		bl	puts
 177              	.LVL15:
 178 0016 FAE7     		b	.L9
 179              	.LVL16:
 180              	.L15:
  64:Core/Src/lvgl_app.c ****         LV_LOG_USER("Toggled");
 181              		.loc 1 64 31 is_stmt 1 view .LVU36
  65:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
 182              		.loc 1 65 9 view .LVU37
 183 0018 0848     		ldr	r0, .L17+4
 184              	.LVL17:
  65:Core/Src/lvgl_app.c ****         if(waveStopFlg==1){
 185              		.loc 1 65 9 is_stmt 0 view .LVU38
 186 001a FFF7FEFF 		bl	puts
 187              	.LVL18:
  66:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 188              		.loc 1 66 9 is_stmt 1 view .LVU39
  66:Core/Src/lvgl_app.c ****             waveStopFlg=0;
ARM GAS  /tmp/ccHbuOPN.s 			page 8


 189              		.loc 1 66 23 is_stmt 0 view .LVU40
 190 001e 084B     		ldr	r3, .L17+8
 191 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  66:Core/Src/lvgl_app.c ****             waveStopFlg=0;
 192              		.loc 1 66 11 view .LVU41
 193 0022 012B     		cmp	r3, #1
 194 0024 03D0     		beq	.L16
  69:Core/Src/lvgl_app.c ****         }
 195              		.loc 1 69 13 is_stmt 1 view .LVU42
  69:Core/Src/lvgl_app.c ****         }
 196              		.loc 1 69 24 is_stmt 0 view .LVU43
 197 0026 064B     		ldr	r3, .L17+8
 198 0028 0122     		movs	r2, #1
 199 002a 1A70     		strb	r2, [r3]
 200              		.loc 1 72 1 view .LVU44
 201 002c EFE7     		b	.L9
 202              	.L16:
  67:Core/Src/lvgl_app.c ****         }else{
 203              		.loc 1 67 13 is_stmt 1 view .LVU45
  67:Core/Src/lvgl_app.c ****         }else{
 204              		.loc 1 67 24 is_stmt 0 view .LVU46
 205 002e 044B     		ldr	r3, .L17+8
 206 0030 0022     		movs	r2, #0
 207 0032 1A70     		strb	r2, [r3]
 208 0034 EBE7     		b	.L9
 209              	.L18:
 210 0036 00BF     		.align	2
 211              	.L17:
 212 0038 00000000 		.word	.LC0
 213 003c 0C000000 		.word	.LC1
 214 0040 00000000 		.word	.LANCHOR1
 215              		.cfi_endproc
 216              	.LFE190:
 218              		.section	.text.wave_chart_init,"ax",%progbits
 219              		.align	1
 220              		.global	wave_chart_init
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	wave_chart_init:
 227              	.LFB189:
  20:Core/Src/lvgl_app.c ****     /*Create a chart*/
 228              		.loc 1 20 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 233              	.LCFI3:
 234              		.cfi_def_cfa_offset 20
 235              		.cfi_offset 4, -20
 236              		.cfi_offset 5, -16
 237              		.cfi_offset 6, -12
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 85B0     		sub	sp, sp, #20
 241              	.LCFI4:
ARM GAS  /tmp/ccHbuOPN.s 			page 9


 242              		.cfi_def_cfa_offset 40
  22:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 640, 330);
 243              		.loc 1 22 5 view .LVU48
 244              	.LBB30:
 245              	.LBI30:
 246              		.file 3 "Middlewares/lvgl/src/core/lv_disp.h"
   1:Middlewares/lvgl/src/core/lv_disp.h **** /**
   2:Middlewares/lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:Middlewares/lvgl/src/core/lv_disp.h ****  *
   4:Middlewares/lvgl/src/core/lv_disp.h ****  */
   5:Middlewares/lvgl/src/core/lv_disp.h **** 
   6:Middlewares/lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:Middlewares/lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:Middlewares/lvgl/src/core/lv_disp.h **** 
   9:Middlewares/lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_disp.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_disp.h **** #endif
  12:Middlewares/lvgl/src/core/lv_disp.h **** 
  13:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:Middlewares/lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:Middlewares/lvgl/src/core/lv_disp.h **** 
  20:Middlewares/lvgl/src/core/lv_disp.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_disp.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_disp.h **** 
  24:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_disp.h **** 
  28:Middlewares/lvgl/src/core/lv_disp.h **** typedef enum {
  29:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:Middlewares/lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:Middlewares/lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:Middlewares/lvgl/src/core/lv_disp.h **** 
  41:Middlewares/lvgl/src/core/lv_disp.h **** /**********************
  42:Middlewares/lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:Middlewares/lvgl/src/core/lv_disp.h ****  **********************/
  44:Middlewares/lvgl/src/core/lv_disp.h **** 
  45:Middlewares/lvgl/src/core/lv_disp.h **** /**
  46:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  49:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:Middlewares/lvgl/src/core/lv_disp.h ****  */
  51:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
ARM GAS  /tmp/ccHbuOPN.s 			page 10


  52:Middlewares/lvgl/src/core/lv_disp.h **** 
  53:Middlewares/lvgl/src/core/lv_disp.h **** /**
  54:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:Middlewares/lvgl/src/core/lv_disp.h ****  * screen)
  57:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:Middlewares/lvgl/src/core/lv_disp.h ****  */
  59:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:Middlewares/lvgl/src/core/lv_disp.h **** 
  61:Middlewares/lvgl/src/core/lv_disp.h **** /**
  62:Middlewares/lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:Middlewares/lvgl/src/core/lv_disp.h ****  */
  65:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:Middlewares/lvgl/src/core/lv_disp.h **** 
  67:Middlewares/lvgl/src/core/lv_disp.h **** /**
  68:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object  (transparent screen sized lv_obj)
  71:Middlewares/lvgl/src/core/lv_disp.h ****  */
  72:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:Middlewares/lvgl/src/core/lv_disp.h **** 
  74:Middlewares/lvgl/src/core/lv_disp.h **** /**
  75:Middlewares/lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:Middlewares/lvgl/src/core/lv_disp.h ****  * layer)
  77:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer  should be get. (NULL to use the default screen)
  78:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object  (transparent screen sized lv_obj)
  79:Middlewares/lvgl/src/core/lv_disp.h ****  */
  80:Middlewares/lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:Middlewares/lvgl/src/core/lv_disp.h **** 
  82:Middlewares/lvgl/src/core/lv_disp.h **** /**
  83:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  84:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  85:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  86:Middlewares/lvgl/src/core/lv_disp.h ****  */
  87:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  88:Middlewares/lvgl/src/core/lv_disp.h **** 
  89:Middlewares/lvgl/src/core/lv_disp.h **** /**
  90:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  91:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  92:Middlewares/lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  93:Middlewares/lvgl/src/core/lv_disp.h ****  */
  94:Middlewares/lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  95:Middlewares/lvgl/src/core/lv_disp.h **** 
  96:Middlewares/lvgl/src/core/lv_disp.h **** /**
  97:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  98:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  99:Middlewares/lvgl/src/core/lv_disp.h ****  * @param color color of the background
 100:Middlewares/lvgl/src/core/lv_disp.h ****  */
 101:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 102:Middlewares/lvgl/src/core/lv_disp.h **** 
 103:Middlewares/lvgl/src/core/lv_disp.h **** /**
 104:Middlewares/lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 105:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 106:Middlewares/lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 107:Middlewares/lvgl/src/core/lv_disp.h ****  */
 108:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
ARM GAS  /tmp/ccHbuOPN.s 			page 11


 109:Middlewares/lvgl/src/core/lv_disp.h **** 
 110:Middlewares/lvgl/src/core/lv_disp.h **** /**
 111:Middlewares/lvgl/src/core/lv_disp.h ****  * Opacity of the background
 112:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 113:Middlewares/lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 114:Middlewares/lvgl/src/core/lv_disp.h ****  */
 115:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 116:Middlewares/lvgl/src/core/lv_disp.h **** 
 117:Middlewares/lvgl/src/core/lv_disp.h **** /**
 118:Middlewares/lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 119:Middlewares/lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 120:Middlewares/lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 121:Middlewares/lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 122:Middlewares/lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 123:Middlewares/lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 124:Middlewares/lvgl/src/core/lv_disp.h ****  */
 125:Middlewares/lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 126:Middlewares/lvgl/src/core/lv_disp.h **** 
 127:Middlewares/lvgl/src/core/lv_disp.h **** /**
 128:Middlewares/lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 129:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to get the overall smallest inactivity)
 130:Middlewares/lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 131:Middlewares/lvgl/src/core/lv_disp.h ****  */
 132:Middlewares/lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 133:Middlewares/lvgl/src/core/lv_disp.h **** 
 134:Middlewares/lvgl/src/core/lv_disp.h **** /**
 135:Middlewares/lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 136:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 137:Middlewares/lvgl/src/core/lv_disp.h ****  */
 138:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 139:Middlewares/lvgl/src/core/lv_disp.h **** 
 140:Middlewares/lvgl/src/core/lv_disp.h **** /**
 141:Middlewares/lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 142:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to an display (NULL to use the default display)
 143:Middlewares/lvgl/src/core/lv_disp.h ****  */
 144:Middlewares/lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 145:Middlewares/lvgl/src/core/lv_disp.h **** 
 146:Middlewares/lvgl/src/core/lv_disp.h **** /**
 147:Middlewares/lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 148:Middlewares/lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 149:Middlewares/lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 150:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 151:Middlewares/lvgl/src/core/lv_disp.h ****  */
 152:Middlewares/lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 153:Middlewares/lvgl/src/core/lv_disp.h **** 
 154:Middlewares/lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 155:Middlewares/lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 156:Middlewares/lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 157:Middlewares/lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 158:Middlewares/lvgl/src/core/lv_disp.h **** 
 159:Middlewares/lvgl/src/core/lv_disp.h **** /**
 160:Middlewares/lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 161:Middlewares/lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 162:Middlewares/lvgl/src/core/lv_disp.h ****  */
 163:Middlewares/lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 247              		.loc 3 163 26 view .LVU49
 248              	.LBB31:
ARM GAS  /tmp/ccHbuOPN.s 			page 12


 164:Middlewares/lvgl/src/core/lv_disp.h **** {
 165:Middlewares/lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 249              		.loc 3 165 5 view .LVU50
 250              		.loc 3 165 12 is_stmt 0 view .LVU51
 251 0004 FFF7FEFF 		bl	lv_disp_get_default
 252              	.LVL19:
 253 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 254              	.LVL20:
 255              	.LBE31:
 256              	.LBE30:
  22:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 640, 330);
 257              		.loc 1 22 18 view .LVU52
 258 000c FFF7FEFF 		bl	lv_chart_create
 259              	.LVL21:
  22:Core/Src/lvgl_app.c ****     lv_obj_set_size(wave_chart, 640, 330);
 260              		.loc 1 22 16 view .LVU53
 261 0010 484C     		ldr	r4, .L21
 262 0012 2060     		str	r0, [r4]
  23:Core/Src/lvgl_app.c ****     lv_obj_align(wave_chart, LV_ALIGN_TOP_LEFT, 50, 0);
 263              		.loc 1 23 5 is_stmt 1 view .LVU54
 264 0014 4FF4A572 		mov	r2, #330
 265 0018 4FF42071 		mov	r1, #640
 266 001c FFF7FEFF 		bl	lv_obj_set_size
 267              	.LVL22:
  24:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 0, 3300);
 268              		.loc 1 24 5 view .LVU55
 269 0020 0023     		movs	r3, #0
 270 0022 3222     		movs	r2, #50
 271 0024 0121     		movs	r1, #1
 272 0026 2068     		ldr	r0, [r4]
 273 0028 FFF7FEFF 		bl	lv_obj_align
 274              	.LVL23:
  25:Core/Src/lvgl_app.c ****     lv_chart_set_range(wave_chart, LV_CHART_AXIS_PRIMARY_X, 0, 640);
 275              		.loc 1 25 5 view .LVU56
 276 002c 40F6E443 		movw	r3, #3300
 277 0030 0022     		movs	r2, #0
 278 0032 1146     		mov	r1, r2
 279 0034 2068     		ldr	r0, [r4]
 280 0036 FFF7FEFF 		bl	lv_chart_set_range
 281              	.LVL24:
  26:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 20);
 282              		.loc 1 26 5 view .LVU57
 283 003a 4FF42073 		mov	r3, #640
 284 003e 0022     		movs	r2, #0
 285 0040 0221     		movs	r1, #2
 286 0042 2068     		ldr	r0, [r4]
 287 0044 FFF7FEFF 		bl	lv_chart_set_range
 288              	.LVL25:
  27:Core/Src/lvgl_app.c ****     lv_chart_set_axis_tick(wave_chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 60);
 289              		.loc 1 27 5 view .LVU58
 290 0048 1426     		movs	r6, #20
 291 004a 0396     		str	r6, [sp, #12]
 292 004c 0127     		movs	r7, #1
 293 004e 0297     		str	r7, [sp, #8]
 294 0050 0197     		str	r7, [sp, #4]
 295 0052 0525     		movs	r5, #5
 296 0054 0095     		str	r5, [sp]
ARM GAS  /tmp/ccHbuOPN.s 			page 13


 297 0056 2B46     		mov	r3, r5
 298 0058 2A46     		mov	r2, r5
 299 005a 0221     		movs	r1, #2
 300 005c 2068     		ldr	r0, [r4]
 301 005e FFF7FEFF 		bl	lv_chart_set_axis_tick
 302              	.LVL26:
  28:Core/Src/lvgl_app.c ****     /*Do not display points on the data*/
 303              		.loc 1 28 5 view .LVU59
 304 0062 3C23     		movs	r3, #60
 305 0064 0393     		str	r3, [sp, #12]
 306 0066 0297     		str	r7, [sp, #8]
 307 0068 0195     		str	r5, [sp, #4]
 308 006a 0623     		movs	r3, #6
 309 006c 0093     		str	r3, [sp]
 310 006e 2B46     		mov	r3, r5
 311 0070 0A22     		movs	r2, #10
 312 0072 0021     		movs	r1, #0
 313 0074 2068     		ldr	r0, [r4]
 314 0076 FFF7FEFF 		bl	lv_chart_set_axis_tick
 315              	.LVL27:
  30:Core/Src/lvgl_app.c **** 
 316              		.loc 1 30 5 view .LVU60
 317 007a 2568     		ldr	r5, [r4]
 318              	.LVL28:
 319              	.LBB32:
 320              	.LBI32:
 321              		.file 4 "Middlewares/lvgl/src/core/lv_obj_style.h"
   1:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:Middlewares/lvgl/src/core/lv_obj_style.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:Middlewares/lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:Middlewares/lvgl/src/core/lv_obj_style.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:Middlewares/lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  20:Middlewares/lvgl/src/core/lv_obj_style.h **** /*********************
  21:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      DEFINES
  22:Middlewares/lvgl/src/core/lv_obj_style.h ****  *********************/
  23:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  24:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  25:Middlewares/lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  27:Middlewares/lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:Middlewares/lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  30:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef enum {
ARM GAS  /tmp/ccHbuOPN.s 			page 14


  31:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:Middlewares/lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:Middlewares/lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  39:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t selector :24;
  42:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_local :1;
  43:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans :1;
  44:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_t;
  45:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  46:Middlewares/lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:Middlewares/lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:Middlewares/lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:Middlewares/lvgl/src/core/lv_obj_style.h ****     void * user_data;
  54:Middlewares/lvgl/src/core/lv_obj_style.h **** #endif
  55:Middlewares/lvgl/src/core/lv_obj_style.h **** }_lv_obj_style_transition_dsc_t;
  56:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  57:Middlewares/lvgl/src/core/lv_obj_style.h **** /**********************
  58:Middlewares/lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:Middlewares/lvgl/src/core/lv_obj_style.h ****  **********************/
  60:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  61:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  62:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  65:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  67:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  68:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  75:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  77:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  78:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  79:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  86:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:Middlewares/lvgl/src/core/lv_obj_style.h **** 
ARM GAS  /tmp/ccHbuOPN.s 			page 15


  88:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  89:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
  92:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:Middlewares/lvgl/src/core/lv_obj_style.h **** {
  94:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
  95:Middlewares/lvgl/src/core/lv_obj_style.h **** }
  96:Middlewares/lvgl/src/core/lv_obj_style.h **** 
  97:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
  98:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 102:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 104:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 105:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
 111:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 112:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 114:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 115:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:Middlewares/lvgl/src/core/lv_obj_style.h ****  * or any other style change happens.
 117:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 119:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 121:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 122:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:Middlewares/lvgl/src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:Middlewares/lvgl/src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 131:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 133:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 134:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 136:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      a part to which the property should be added
 137:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     a state to which the property should be added
 138:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      the property
 139:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 140:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 142:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t
 144:Middlewares/lvgl/src/core/lv_obj_style.h **** 
ARM GAS  /tmp/ccHbuOPN.s 			page 16


 145:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 146:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 147:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 148:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part      the part of the object which style property should be removed.
 149:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state     the state from which the property should be removed.
 150:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 151:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 152:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 153:Middlewares/lvgl/src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 154:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 155:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 156:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to create a style tarnsition
 157:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 158:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param part
 159:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param prev_state
 160:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param new_state
 161:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param tr
 162:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 163:Middlewares/lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 164:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 165:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 166:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 167:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj
 168:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state1
 169:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param state2
 170:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @return
 171:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 172:Middlewares/lvgl/src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 173:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 174:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 175:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 176:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 177:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 178:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 179:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 180:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 181:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 182:Middlewares/lvgl/src/core/lv_obj_style.h **** /**
 183:Middlewares/lvgl/src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 184:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 185:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param time      time of fade
 186:Middlewares/lvgl/src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 187:Middlewares/lvgl/src/core/lv_obj_style.h ****  */
 188:Middlewares/lvgl/src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 189:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 190:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 191:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 192:Middlewares/lvgl/src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 193:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 194:Middlewares/lvgl/src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
 195:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 196:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 197:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 198:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 199:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 200:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 201:Middlewares/lvgl/src/core/lv_obj_style.h **** }
ARM GAS  /tmp/ccHbuOPN.s 			page 17


 202:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 203:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 204:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 205:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 206:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 207:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 208:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 209:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 210:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 211:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 212:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 213:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_sel
 214:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_row(obj, value, selector);
 215:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_pad_column(obj, value, selector);
 216:Middlewares/lvgl/src/core/lv_obj_style.h **** }
 217:Middlewares/lvgl/src/core/lv_obj_style.h **** 
 218:Middlewares/lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_set_style_size(struct _lv_obj_t * obj,  lv_coord_t value, lv_style_select
 322              		.loc 4 218 20 view .LVU61
 323              	.LBB33:
 219:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_width(obj, value, selector);
 324              		.loc 4 219 5 view .LVU62
 325 007c 4FF40032 		mov	r2, #131072
 326 0080 0021     		movs	r1, #0
 327 0082 2846     		mov	r0, r5
 328 0084 FFF7FEFF 		bl	lv_obj_set_style_width
 329              	.LVL29:
 220:Middlewares/lvgl/src/core/lv_obj_style.h ****     lv_obj_set_style_height(obj, value, selector);
 330              		.loc 4 220 5 view .LVU63
 331 0088 4FF40032 		mov	r2, #131072
 332 008c 0021     		movs	r1, #0
 333 008e 2846     		mov	r0, r5
 334 0090 FFF7FEFF 		bl	lv_obj_set_style_height
 335              	.LVL30:
 336              		.loc 4 220 5 is_stmt 0 view .LVU64
 337              	.LBE33:
 338              	.LBE32:
  33:Core/Src/lvgl_app.c **** 
 339              		.loc 1 33 5 is_stmt 1 view .LVU65
  33:Core/Src/lvgl_app.c **** 
 340              		.loc 1 33 16 is_stmt 0 view .LVU66
 341 0094 2568     		ldr	r5, [r4]
 342 0096 0020     		movs	r0, #0
 343 0098 FFF7FEFF 		bl	lv_palette_main
 344              	.LVL31:
 345 009c 0146     		mov	r1, r0	@ movhi
 346 009e 0022     		movs	r2, #0
 347 00a0 2846     		mov	r0, r5
 348 00a2 FFF7FEFF 		bl	lv_chart_add_series
 349              	.LVL32:
  33:Core/Src/lvgl_app.c **** 
 350              		.loc 1 33 14 view .LVU67
 351 00a6 244B     		ldr	r3, .L21+4
 352 00a8 1860     		str	r0, [r3]
  39:Core/Src/lvgl_app.c ****     slider = lv_slider_create(lv_scr_act());
 353              		.loc 1 39 5 is_stmt 1 view .LVU68
  40:Core/Src/lvgl_app.c ****     lv_slider_set_range(slider, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 354              		.loc 1 40 5 view .LVU69
ARM GAS  /tmp/ccHbuOPN.s 			page 18


 355              	.LBB34:
 356              	.LBI34:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 357              		.loc 3 163 26 view .LVU70
 358              	.LBB35:
 359              		.loc 3 165 5 view .LVU71
 360              		.loc 3 165 12 is_stmt 0 view .LVU72
 361 00aa FFF7FEFF 		bl	lv_disp_get_default
 362              	.LVL33:
 363 00ae FFF7FEFF 		bl	lv_disp_get_scr_act
 364              	.LVL34:
 365              	.LBE35:
 366              	.LBE34:
  40:Core/Src/lvgl_app.c ****     lv_slider_set_range(slider, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 367              		.loc 1 40 14 view .LVU73
 368 00b2 FFF7FEFF 		bl	lv_slider_create
 369              	.LVL35:
 370 00b6 0546     		mov	r5, r0
 371              	.LVL36:
  41:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(slider, slider_x_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 372              		.loc 1 41 5 is_stmt 1 view .LVU74
 373              	.LBB36:
 374              	.LBI36:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 375              		.loc 2 97 20 view .LVU75
 376              	.LBB37:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 377              		.loc 2 99 5 view .LVU76
 378 00b8 4FF42062 		mov	r2, #2560
 379 00bc 4FF48071 		mov	r1, #256
 380 00c0 FFF7FEFF 		bl	lv_bar_set_range
 381              	.LVL37:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 382              		.loc 2 99 5 is_stmt 0 view .LVU77
 383              	.LBE37:
 384              	.LBE36:
  42:Core/Src/lvgl_app.c ****     lv_obj_set_size(slider, 600, 10);
 385              		.loc 1 42 5 is_stmt 1 view .LVU78
 386 00c4 0023     		movs	r3, #0
 387 00c6 1C22     		movs	r2, #28
 388 00c8 1C49     		ldr	r1, .L21+8
 389 00ca 2846     		mov	r0, r5
 390 00cc FFF7FEFF 		bl	lv_obj_add_event_cb
 391              	.LVL38:
  43:Core/Src/lvgl_app.c ****     lv_obj_align_to(slider, wave_chart, LV_ALIGN_OUT_BOTTOM_MID, 0, 30);
 392              		.loc 1 43 5 view .LVU79
 393 00d0 0A22     		movs	r2, #10
 394 00d2 4FF41671 		mov	r1, #600
 395 00d6 2846     		mov	r0, r5
 396 00d8 FFF7FEFF 		bl	lv_obj_set_size
 397              	.LVL39:
  44:Core/Src/lvgl_app.c **** 
 398              		.loc 1 44 5 view .LVU80
 399 00dc 1E23     		movs	r3, #30
 400 00de 0093     		str	r3, [sp]
 401 00e0 0023     		movs	r3, #0
 402 00e2 0E22     		movs	r2, #14
ARM GAS  /tmp/ccHbuOPN.s 			page 19


 403 00e4 2168     		ldr	r1, [r4]
 404 00e6 2846     		mov	r0, r5
 405 00e8 FFF7FEFF 		bl	lv_obj_align_to
 406              	.LVL40:
  46:Core/Src/lvgl_app.c ****     lv_slider_set_range(slider, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 407              		.loc 1 46 5 view .LVU81
 408              	.LBB38:
 409              	.LBI38:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 410              		.loc 3 163 26 view .LVU82
 411              	.LBB39:
 412              		.loc 3 165 5 view .LVU83
 413              		.loc 3 165 12 is_stmt 0 view .LVU84
 414 00ec FFF7FEFF 		bl	lv_disp_get_default
 415              	.LVL41:
 416 00f0 FFF7FEFF 		bl	lv_disp_get_scr_act
 417              	.LVL42:
 418              	.LBE39:
 419              	.LBE38:
  46:Core/Src/lvgl_app.c ****     lv_slider_set_range(slider, LV_IMG_ZOOM_NONE, LV_IMG_ZOOM_NONE * 10);
 420              		.loc 1 46 14 view .LVU85
 421 00f4 FFF7FEFF 		bl	lv_slider_create
 422              	.LVL43:
 423 00f8 0546     		mov	r5, r0
 424              	.LVL44:
  47:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(slider, slider_y_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 425              		.loc 1 47 5 is_stmt 1 view .LVU86
 426              	.LBB40:
 427              	.LBI40:
  97:Middlewares/lvgl/src/widgets/lv_slider.h **** {
 428              		.loc 2 97 20 view .LVU87
 429              	.LBB41:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 430              		.loc 2 99 5 view .LVU88
 431 00fa 4FF42062 		mov	r2, #2560
 432 00fe 4FF48071 		mov	r1, #256
 433 0102 FFF7FEFF 		bl	lv_bar_set_range
 434              	.LVL45:
  99:Middlewares/lvgl/src/widgets/lv_slider.h **** }
 435              		.loc 2 99 5 is_stmt 0 view .LVU89
 436              	.LBE41:
 437              	.LBE40:
  48:Core/Src/lvgl_app.c ****     lv_obj_set_size(slider, 10, 290);
 438              		.loc 1 48 5 is_stmt 1 view .LVU90
 439 0106 0023     		movs	r3, #0
 440 0108 1C22     		movs	r2, #28
 441 010a 0D49     		ldr	r1, .L21+12
 442 010c 2846     		mov	r0, r5
 443 010e FFF7FEFF 		bl	lv_obj_add_event_cb
 444              	.LVL46:
  49:Core/Src/lvgl_app.c ****     lv_obj_align_to(slider, wave_chart, LV_ALIGN_OUT_RIGHT_MID, 20, 0);
 445              		.loc 1 49 5 view .LVU91
 446 0112 4FF49172 		mov	r2, #290
 447 0116 0A21     		movs	r1, #10
 448 0118 2846     		mov	r0, r5
 449 011a FFF7FEFF 		bl	lv_obj_set_size
 450              	.LVL47:
ARM GAS  /tmp/ccHbuOPN.s 			page 20


  50:Core/Src/lvgl_app.c **** }
 451              		.loc 1 50 5 view .LVU92
 452 011e 0023     		movs	r3, #0
 453 0120 0093     		str	r3, [sp]
 454 0122 3346     		mov	r3, r6
 455 0124 3246     		mov	r2, r6
 456 0126 2168     		ldr	r1, [r4]
 457 0128 2846     		mov	r0, r5
 458 012a FFF7FEFF 		bl	lv_obj_align_to
 459              	.LVL48:
  51:Core/Src/lvgl_app.c **** 
 460              		.loc 1 51 1 is_stmt 0 view .LVU93
 461 012e 05B0     		add	sp, sp, #20
 462              	.LCFI5:
 463              		.cfi_def_cfa_offset 20
 464              		@ sp needed
 465 0130 F0BD     		pop	{r4, r5, r6, r7, pc}
 466              	.LVL49:
 467              	.L22:
  51:Core/Src/lvgl_app.c **** 
 468              		.loc 1 51 1 view .LVU94
 469 0132 00BF     		.align	2
 470              	.L21:
 471 0134 00000000 		.word	.LANCHOR0
 472 0138 00000000 		.word	.LANCHOR2
 473 013c 00000000 		.word	slider_x_event_cb
 474 0140 00000000 		.word	slider_y_event_cb
 475              		.cfi_endproc
 476              	.LFE189:
 478              		.section	.rodata.wave_btn.str1.4,"aMS",%progbits,1
 479              		.align	2
 480              	.LC2:
 481 0000 42757474 		.ascii	"Button\000"
 481      6F6E00
 482 0007 00       		.align	2
 483              	.LC3:
 484 0008 52756E2F 		.ascii	"Run/Stop\000"
 484      53746F70 
 484      00
 485              		.section	.text.wave_btn,"ax",%progbits
 486              		.align	1
 487              		.global	wave_btn
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv4-sp-d16
 493              	wave_btn:
 494              	.LFB191:
  73:Core/Src/lvgl_app.c **** 
  74:Core/Src/lvgl_app.c **** void wave_btn(void)
  75:Core/Src/lvgl_app.c **** {
 495              		.loc 1 75 1 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 38B5     		push	{r3, r4, r5, lr}
 500              	.LCFI6:
ARM GAS  /tmp/ccHbuOPN.s 			page 21


 501              		.cfi_def_cfa_offset 16
 502              		.cfi_offset 3, -16
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 5, -8
 505              		.cfi_offset 14, -4
  76:Core/Src/lvgl_app.c ****     lv_obj_t * label;
 506              		.loc 1 76 5 view .LVU96
  77:Core/Src/lvgl_app.c **** 
  78:Core/Src/lvgl_app.c ****     lv_obj_t * btn1 = lv_btn_create(lv_scr_act());
 507              		.loc 1 78 5 view .LVU97
 508              	.LBB50:
 509              	.LBI50:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 510              		.loc 3 163 26 view .LVU98
 511              	.LBB51:
 512              		.loc 3 165 5 view .LVU99
 513              		.loc 3 165 12 is_stmt 0 view .LVU100
 514 0002 FFF7FEFF 		bl	lv_disp_get_default
 515              	.LVL50:
 516 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 517              	.LVL51:
 518              	.LBE51:
 519              	.LBE50:
 520              		.loc 1 78 23 view .LVU101
 521 000a FFF7FEFF 		bl	lv_btn_create
 522              	.LVL52:
 523 000e 0446     		mov	r4, r0
 524              	.LVL53:
  79:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn1, event_handler, LV_EVENT_ALL, NULL);
 525              		.loc 1 79 5 is_stmt 1 view .LVU102
 526 0010 214D     		ldr	r5, .L25
 527 0012 0023     		movs	r3, #0
 528 0014 1A46     		mov	r2, r3
 529 0016 2946     		mov	r1, r5
 530 0018 FFF7FEFF 		bl	lv_obj_add_event_cb
 531              	.LVL54:
  80:Core/Src/lvgl_app.c ****     lv_obj_align(btn1, LV_ALIGN_BOTTOM_LEFT, 10, -10);
 532              		.loc 1 80 5 view .LVU103
 533 001c 6FF00903 		mvn	r3, #9
 534 0020 0A22     		movs	r2, #10
 535 0022 0421     		movs	r1, #4
 536 0024 2046     		mov	r0, r4
 537 0026 FFF7FEFF 		bl	lv_obj_align
 538              	.LVL55:
  81:Core/Src/lvgl_app.c **** 
  82:Core/Src/lvgl_app.c ****     label = lv_label_create(btn1);
 539              		.loc 1 82 5 view .LVU104
 540              		.loc 1 82 13 is_stmt 0 view .LVU105
 541 002a 2046     		mov	r0, r4
 542 002c FFF7FEFF 		bl	lv_label_create
 543              	.LVL56:
 544 0030 0446     		mov	r4, r0
 545              	.LVL57:
  83:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Button");
 546              		.loc 1 83 5 is_stmt 1 view .LVU106
 547 0032 1A49     		ldr	r1, .L25+4
 548 0034 FFF7FEFF 		bl	lv_label_set_text
ARM GAS  /tmp/ccHbuOPN.s 			page 22


 549              	.LVL58:
  84:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 550              		.loc 1 84 5 view .LVU107
 551              	.LBB52:
 552              	.LBI52:
 553              		.file 5 "Middlewares/lvgl/src/core/lv_obj_pos.h"
   1:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
   2:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *
   4:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
   5:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   6:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:Middlewares/lvgl/src/core/lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
   9:Middlewares/lvgl/src/core/lv_obj_pos.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/core/lv_obj_pos.h **** extern "C" {
  11:Middlewares/lvgl/src/core/lv_obj_pos.h **** #endif
  12:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  13:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  14:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  16:Middlewares/lvgl/src/core/lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  18:Middlewares/lvgl/src/core/lv_obj_pos.h **** /*********************
  19:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      DEFINES
  20:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *********************/
  21:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  22:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  23:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *      TYPEDEFS
  24:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  25:Middlewares/lvgl/src/core/lv_obj_pos.h **** struct _lv_obj_t;
  26:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  27:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:Middlewares/lvgl/src/core/lv_obj_pos.h **** typedef struct {
  29:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:Middlewares/lvgl/src/core/lv_obj_pos.h ****     void * user_data;
  31:Middlewares/lvgl/src/core/lv_obj_pos.h **** }lv_layout_dsc_t;
  32:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  33:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**********************
  34:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:Middlewares/lvgl/src/core/lv_obj_pos.h ****  **********************/
  36:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  37:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  38:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the relative the position of an object (relative to the parent's top left corner)
  39:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  40:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side of the parent plus the parent's left padding
  41:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top side of the parent  plus the parent's right padding
  42:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  43:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  44:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  45:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  46:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the x coordinate of a object
  47:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  48:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x         new distance from the left side from the parent plus the parent's left padding
  49:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  50:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  51:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
ARM GAS  /tmp/ccHbuOPN.s 			page 23


  52:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  53:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the y coordinate of a object
  54:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  55:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y         new distance from the top of the parent  plus the parent's top padding
  56:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  57:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  58:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  59:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  60:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the size of an object.
  61:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  62:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  63:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  64:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  65:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  66:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  67:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  68:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  69:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  70:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  71:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  72:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  73:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Recalculate the size of the object
  74:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  75:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          true: the size has been changed
  76:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  77:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  78:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  79:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  80:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width of an object
  81:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  82:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the new width
  83:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  84:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  85:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  86:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  87:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  88:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
  89:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
  90:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
  91:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
  92:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height of an object
  93:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
  94:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the new height
  95:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            possible values are:
  96:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:Middlewares/lvgl/src/core/lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 101:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 102:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 103:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 104:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 105:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 106:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 107:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 108:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
ARM GAS  /tmp/ccHbuOPN.s 			page 24


 109:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 110:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 111:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 112:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 113:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 114:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 115:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 116:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 117:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 118:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Set a layout for an object
 119:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object
 120:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 121:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 122:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 123:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 124:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 125:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 126:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to test
 127:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 128:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 129:Middlewares/lvgl/src/core/lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 130:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 131:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 132:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Mark the object for layout update.
 133:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 134:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 135:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 136:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 137:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 138:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Update the layout of an object.
 139:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 140:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 141:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 142:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 143:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 144:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Regsiter a new layout
 145:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param cb        the layout update callback
 146:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 147:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @return          the ID of the new layout
 148:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 149:Middlewares/lvgl/src/core/lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 150:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 151:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 152:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object.
 153:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 154:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 155:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 156:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 157:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 158:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 159:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 160:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Equivalent to:
 161:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 162:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 163:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 164:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 165:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
ARM GAS  /tmp/ccHbuOPN.s 			page 25


 166:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 167:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 168:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 169:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 170:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 171:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to an other object.
 172:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 173:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 174:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 175:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 176:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 177:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 178:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 179:Middlewares/lvgl/src/core/lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 180:Middlewares/lvgl/src/core/lv_obj_pos.h **** 
 181:Middlewares/lvgl/src/core/lv_obj_pos.h **** /**
 182:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * Align an object to the center on its parent.
 183:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @param obj       pointer to an object to align
 184:Middlewares/lvgl/src/core/lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 185:Middlewares/lvgl/src/core/lv_obj_pos.h ****  */
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 554              		.loc 5 186 20 view .LVU108
 555              	.LBB53:
 187:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 188:Middlewares/lvgl/src/core/lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 556              		.loc 5 188 5 view .LVU109
 557 0038 0023     		movs	r3, #0
 558 003a 1A46     		mov	r2, r3
 559 003c 0921     		movs	r1, #9
 560 003e 2046     		mov	r0, r4
 561 0040 FFF7FEFF 		bl	lv_obj_align
 562              	.LVL59:
 563              		.loc 5 188 5 is_stmt 0 view .LVU110
 564              	.LBE53:
 565              	.LBE52:
  85:Core/Src/lvgl_app.c **** 
  86:Core/Src/lvgl_app.c ****     lv_obj_t * btn2 = lv_btn_create(lv_scr_act());
 566              		.loc 1 86 5 is_stmt 1 view .LVU111
 567              	.LBB54:
 568              	.LBI54:
 163:Middlewares/lvgl/src/core/lv_disp.h **** {
 569              		.loc 3 163 26 view .LVU112
 570              	.LBB55:
 571              		.loc 3 165 5 view .LVU113
 572              		.loc 3 165 12 is_stmt 0 view .LVU114
 573 0044 FFF7FEFF 		bl	lv_disp_get_default
 574              	.LVL60:
 575 0048 FFF7FEFF 		bl	lv_disp_get_scr_act
 576              	.LVL61:
 577              	.LBE55:
 578              	.LBE54:
 579              		.loc 1 86 23 view .LVU115
 580 004c FFF7FEFF 		bl	lv_btn_create
 581              	.LVL62:
 582 0050 0446     		mov	r4, r0
 583              	.LVL63:
  87:Core/Src/lvgl_app.c ****     lv_obj_add_event_cb(btn2, event_handler, LV_EVENT_ALL, NULL);
ARM GAS  /tmp/ccHbuOPN.s 			page 26


 584              		.loc 1 87 5 is_stmt 1 view .LVU116
 585 0052 0023     		movs	r3, #0
 586 0054 1A46     		mov	r2, r3
 587 0056 2946     		mov	r1, r5
 588 0058 FFF7FEFF 		bl	lv_obj_add_event_cb
 589              	.LVL64:
  88:Core/Src/lvgl_app.c ****     lv_obj_align(btn2, LV_ALIGN_BOTTOM_LEFT, 120, -10);
 590              		.loc 1 88 5 view .LVU117
 591 005c 6FF00903 		mvn	r3, #9
 592 0060 7822     		movs	r2, #120
 593 0062 0421     		movs	r1, #4
 594 0064 2046     		mov	r0, r4
 595 0066 FFF7FEFF 		bl	lv_obj_align
 596              	.LVL65:
  89:Core/Src/lvgl_app.c ****     lv_obj_add_flag(btn2, LV_OBJ_FLAG_CHECKABLE);
 597              		.loc 1 89 5 view .LVU118
 598 006a 0821     		movs	r1, #8
 599 006c 2046     		mov	r0, r4
 600 006e FFF7FEFF 		bl	lv_obj_add_flag
 601              	.LVL66:
  90:Core/Src/lvgl_app.c ****     lv_obj_set_height(btn2, LV_SIZE_CONTENT);
 602              		.loc 1 90 5 view .LVU119
 603 0072 42F2D171 		movw	r1, #10193
 604 0076 2046     		mov	r0, r4
 605 0078 FFF7FEFF 		bl	lv_obj_set_height
 606              	.LVL67:
  91:Core/Src/lvgl_app.c **** 
  92:Core/Src/lvgl_app.c ****     label = lv_label_create(btn2);
 607              		.loc 1 92 5 view .LVU120
 608              		.loc 1 92 13 is_stmt 0 view .LVU121
 609 007c 2046     		mov	r0, r4
 610 007e FFF7FEFF 		bl	lv_label_create
 611              	.LVL68:
 612 0082 0446     		mov	r4, r0
 613              	.LVL69:
  93:Core/Src/lvgl_app.c ****     lv_label_set_text(label, "Run/Stop");
 614              		.loc 1 93 5 is_stmt 1 view .LVU122
 615 0084 0649     		ldr	r1, .L25+8
 616 0086 FFF7FEFF 		bl	lv_label_set_text
 617              	.LVL70:
  94:Core/Src/lvgl_app.c ****     lv_obj_center(label);
 618              		.loc 1 94 5 view .LVU123
 619              	.LBB56:
 620              	.LBI56:
 186:Middlewares/lvgl/src/core/lv_obj_pos.h **** {
 621              		.loc 5 186 20 view .LVU124
 622              	.LBB57:
 623              		.loc 5 188 5 view .LVU125
 624 008a 0023     		movs	r3, #0
 625 008c 1A46     		mov	r2, r3
 626 008e 0921     		movs	r1, #9
 627 0090 2046     		mov	r0, r4
 628 0092 FFF7FEFF 		bl	lv_obj_align
 629              	.LVL71:
 630              		.loc 5 188 5 is_stmt 0 view .LVU126
 631              	.LBE57:
 632              	.LBE56:
ARM GAS  /tmp/ccHbuOPN.s 			page 27


  95:Core/Src/lvgl_app.c **** }...
 633              		.loc 1 95 1 view .LVU127
 634 0096 38BD     		pop	{r3, r4, r5, pc}
 635              	.LVL72:
 636              	.L26:
 637              		.loc 1 95 1 view .LVU128
 638              		.align	2
 639              	.L25:
 640 0098 00000000 		.word	event_handler
 641 009c 00000000 		.word	.LC2
 642 00a0 08000000 		.word	.LC3
 643              		.cfi_endproc
 644              	.LFE191:
 646              		.global	waveStopFlg
 647              		.global	wave_ser
 648              		.global	wave_chart
 649              		.section	.bss.waveStopFlg,"aw",%nobits
 650              		.set	.LANCHOR1,. + 0
 653              	waveStopFlg:
 654 0000 00       		.space	1
 655              		.section	.bss.wave_chart,"aw",%nobits
 656              		.align	2
 657              		.set	.LANCHOR0,. + 0
 660              	wave_chart:
 661 0000 00000000 		.space	4
 662              		.section	.bss.wave_ser,"aw",%nobits
 663              		.align	2
 664              		.set	.LANCHOR2,. + 0
 667              	wave_ser:
 668 0000 00000000 		.space	4
 669              		.text
 670              	.Letext0:
 671              		.file 6 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 672              		.file 7 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 673              		.file 8 "Middlewares/lvgl/src/misc/lv_ll.h"
 674              		.file 9 "Middlewares/lvgl/src/hal/../misc/lv_color.h"
 675              		.file 10 "Middlewares/lvgl/src/hal/../misc/lv_area.h"
 676              		.file 11 "Middlewares/lvgl/src/core/lv_obj.h"
 677              		.file 12 "Middlewares/lvgl/src/core/lv_group.h"
 678              		.file 13 "Middlewares/lvgl/src/core/../misc/lv_style.h"
 679              		.file 14 "Middlewares/lvgl/src/core/lv_obj_scroll.h"
 680              		.file 15 "Middlewares/lvgl/src/core/lv_obj_class.h"
 681              		.file 16 "Middlewares/lvgl/src/core/lv_event.h"
 682              		.file 17 "Middlewares/lvgl/src/widgets/lv_bar.h"
 683              		.file 18 "Middlewares/lvgl/src/extra/widgets/chart/lv_chart.h"
 684              		.file 19 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 685              		.file 20 "Middlewares/lvgl/src/hal/lv_hal_disp.h"
 686              		.file 21 "Middlewares/lvgl/src/widgets/lv_btn.h"
 687              		.file 22 "Middlewares/lvgl/src/widgets/lv_label.h"
 688              		.file 23 "Middlewares/lvgl/src/core/lv_obj_style_gen.h"
 689              		.file 24 "<built-in>"
ARM GAS  /tmp/ccHbuOPN.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lvgl_app.c
     /tmp/ccHbuOPN.s:18     .text.slider_y_event_cb:0000000000000000 $t
     /tmp/ccHbuOPN.s:25     .text.slider_y_event_cb:0000000000000000 slider_y_event_cb
     /tmp/ccHbuOPN.s:69     .text.slider_y_event_cb:0000000000000018 $d
     /tmp/ccHbuOPN.s:74     .text.slider_x_event_cb:0000000000000000 $t
     /tmp/ccHbuOPN.s:80     .text.slider_x_event_cb:0000000000000000 slider_x_event_cb
     /tmp/ccHbuOPN.s:122    .text.slider_x_event_cb:0000000000000018 $d
     /tmp/ccHbuOPN.s:127    .rodata.event_handler.str1.4:0000000000000000 $d
     /tmp/ccHbuOPN.s:134    .text.event_handler:0000000000000000 $t
     /tmp/ccHbuOPN.s:140    .text.event_handler:0000000000000000 event_handler
     /tmp/ccHbuOPN.s:212    .text.event_handler:0000000000000038 $d
     /tmp/ccHbuOPN.s:219    .text.wave_chart_init:0000000000000000 $t
     /tmp/ccHbuOPN.s:226    .text.wave_chart_init:0000000000000000 wave_chart_init
     /tmp/ccHbuOPN.s:471    .text.wave_chart_init:0000000000000134 $d
     /tmp/ccHbuOPN.s:479    .rodata.wave_btn.str1.4:0000000000000000 $d
     /tmp/ccHbuOPN.s:486    .text.wave_btn:0000000000000000 $t
     /tmp/ccHbuOPN.s:493    .text.wave_btn:0000000000000000 wave_btn
     /tmp/ccHbuOPN.s:640    .text.wave_btn:0000000000000098 $d
     /tmp/ccHbuOPN.s:653    .bss.waveStopFlg:0000000000000000 waveStopFlg
     /tmp/ccHbuOPN.s:667    .bss.wave_ser:0000000000000000 wave_ser
     /tmp/ccHbuOPN.s:660    .bss.wave_chart:0000000000000000 wave_chart
     /tmp/ccHbuOPN.s:654    .bss.waveStopFlg:0000000000000000 $d
     /tmp/ccHbuOPN.s:656    .bss.wave_chart:0000000000000000 $d
     /tmp/ccHbuOPN.s:663    .bss.wave_ser:0000000000000000 $d

UNDEFINED SYMBOLS
lv_event_get_target
lv_bar_get_value
lv_chart_set_zoom_y
lv_chart_set_zoom_x
lv_event_get_code
puts
lv_disp_get_default
lv_disp_get_scr_act
lv_chart_create
lv_obj_set_size
lv_obj_align
lv_chart_set_range
lv_chart_set_axis_tick
lv_obj_set_style_width
lv_obj_set_style_height
lv_palette_main
lv_chart_add_series
lv_slider_create
lv_bar_set_range
lv_obj_add_event_cb
lv_obj_align_to
lv_btn_create
lv_label_create
lv_label_set_text
lv_obj_add_flag
lv_obj_set_height
