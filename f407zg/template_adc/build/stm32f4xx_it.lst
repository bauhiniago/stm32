ARM GAS  /tmp/ccFyheDG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_TIM_PeriodElapsedCallback:
  27              	.LVL0:
  28              	.LFB235:
  29              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  /tmp/ccFyheDG.s 			page 2


  30:Core/Src/stm32f4xx_it.c **** 
  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  60:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  62:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32f4xx_it.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* tim_baseHandle)
  65:Core/Src/stm32f4xx_it.c **** {
  30              		.loc 1 65 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 65 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  66:Core/Src/stm32f4xx_it.c ****     if(tim_baseHandle->Instance == htim2.Instance)
  40              		.loc 1 66 5 is_stmt 1 view .LVU2
  41              		.loc 1 66 22 is_stmt 0 view .LVU3
  42 0002 0268     		ldr	r2, [r0]
  43              		.loc 1 66 41 view .LVU4
  44 0004 034B     		ldr	r3, .L5
  45 0006 1B68     		ldr	r3, [r3]
  46              		.loc 1 66 7 view .LVU5
  47 0008 9A42     		cmp	r2, r3
  48 000a 00D0     		beq	.L4
  49              	.LVL1:
ARM GAS  /tmp/ccFyheDG.s 			page 3


  50              	.L1:
  67:Core/Src/stm32f4xx_it.c ****         TIM2_Callback();
  68:Core/Src/stm32f4xx_it.c **** }
  51              		.loc 1 68 1 view .LVU6
  52 000c 08BD     		pop	{r3, pc}
  53              	.LVL2:
  54              	.L4:
  67:Core/Src/stm32f4xx_it.c ****         TIM2_Callback();
  55              		.loc 1 67 9 is_stmt 1 view .LVU7
  56 000e FFF7FEFF 		bl	TIM2_Callback
  57              	.LVL3:
  58              		.loc 1 68 1 is_stmt 0 view .LVU8
  59 0012 FBE7     		b	.L1
  60              	.L6:
  61              		.align	2
  62              	.L5:
  63 0014 00000000 		.word	htim2
  64              		.cfi_endproc
  65              	.LFE235:
  67              		.section	.text.NMI_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	NMI_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	NMI_Handler:
  76              	.LFB236:
  69:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  70:Core/Src/stm32f4xx_it.c **** 
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** /**
  75:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  76:Core/Src/stm32f4xx_it.c ****   */
  77:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  78:Core/Src/stm32f4xx_it.c **** {
  77              		.loc 1 78 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L8:
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32f4xx_it.c **** 
  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 83 3 discriminator 1 view .LVU10
  84:Core/Src/stm32f4xx_it.c ****   {
  85:Core/Src/stm32f4xx_it.c ****   }
  85              		.loc 1 85 3 discriminator 1 view .LVU11
  83:Core/Src/stm32f4xx_it.c ****   {
  86              		.loc 1 83 9 discriminator 1 view .LVU12
  87 0000 FEE7     		b	.L8
ARM GAS  /tmp/ccFyheDG.s 			page 4


  88              		.cfi_endproc
  89              	.LFE236:
  91              		.section	.text.HardFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	HardFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	HardFault_Handler:
 100              	.LFB237:
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32f4xx_it.c **** }
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c **** /**
  90:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  91:Core/Src/stm32f4xx_it.c ****   */
  92:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  93:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 93 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L10:
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c **** 
  96:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 97 3 discriminator 1 view .LVU14
  98:Core/Src/stm32f4xx_it.c ****   {
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****   }
 109              		.loc 1 101 3 discriminator 1 view .LVU15
  97:Core/Src/stm32f4xx_it.c ****   {
 110              		.loc 1 97 9 discriminator 1 view .LVU16
 111 0000 FEE7     		b	.L10
 112              		.cfi_endproc
 113              	.LFE237:
 115              		.section	.text.MemManage_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	MemManage_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	MemManage_Handler:
 124              	.LFB238:
 102:Core/Src/stm32f4xx_it.c **** }
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c **** /**
 105:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 106:Core/Src/stm32f4xx_it.c ****   */
 107:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 108:Core/Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccFyheDG.s 			page 5


 125              		.loc 1 108 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L12:
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 112 3 discriminator 1 view .LVU18
 113:Core/Src/stm32f4xx_it.c ****   {
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****   }
 133              		.loc 1 116 3 discriminator 1 view .LVU19
 112:Core/Src/stm32f4xx_it.c ****   {
 134              		.loc 1 112 9 discriminator 1 view .LVU20
 135 0000 FEE7     		b	.L12
 136              		.cfi_endproc
 137              	.LFE238:
 139              		.section	.text.BusFault_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	BusFault_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	BusFault_Handler:
 148              	.LFB239:
 117:Core/Src/stm32f4xx_it.c **** }
 118:Core/Src/stm32f4xx_it.c **** 
 119:Core/Src/stm32f4xx_it.c **** /**
 120:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 121:Core/Src/stm32f4xx_it.c ****   */
 122:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 123:Core/Src/stm32f4xx_it.c **** {
 149              		.loc 1 123 1 view -0
 150              		.cfi_startproc
 151              		@ Volatile: function does not return.
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              	.L14:
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c **** 
 126:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   while (1)
 156              		.loc 1 127 3 discriminator 1 view .LVU22
 128:Core/Src/stm32f4xx_it.c ****   {
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****   }
 157              		.loc 1 131 3 discriminator 1 view .LVU23
 127:Core/Src/stm32f4xx_it.c ****   {
 158              		.loc 1 127 9 discriminator 1 view .LVU24
ARM GAS  /tmp/ccFyheDG.s 			page 6


 159 0000 FEE7     		b	.L14
 160              		.cfi_endproc
 161              	.LFE239:
 163              		.section	.text.UsageFault_Handler,"ax",%progbits
 164              		.align	1
 165              		.global	UsageFault_Handler
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	UsageFault_Handler:
 172              	.LFB240:
 132:Core/Src/stm32f4xx_it.c **** }
 133:Core/Src/stm32f4xx_it.c **** 
 134:Core/Src/stm32f4xx_it.c **** /**
 135:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 136:Core/Src/stm32f4xx_it.c ****   */
 137:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 138:Core/Src/stm32f4xx_it.c **** {
 173              		.loc 1 138 1 view -0
 174              		.cfi_startproc
 175              		@ Volatile: function does not return.
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179              	.L16:
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   while (1)
 180              		.loc 1 142 3 discriminator 1 view .LVU26
 143:Core/Src/stm32f4xx_it.c ****   {
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****   }
 181              		.loc 1 146 3 discriminator 1 view .LVU27
 142:Core/Src/stm32f4xx_it.c ****   {
 182              		.loc 1 142 9 discriminator 1 view .LVU28
 183 0000 FEE7     		b	.L16
 184              		.cfi_endproc
 185              	.LFE240:
 187              		.section	.text.SVC_Handler,"ax",%progbits
 188              		.align	1
 189              		.global	SVC_Handler
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv4-sp-d16
 195              	SVC_Handler:
 196              	.LFB241:
 147:Core/Src/stm32f4xx_it.c **** }
 148:Core/Src/stm32f4xx_it.c **** 
 149:Core/Src/stm32f4xx_it.c **** /**
 150:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 151:Core/Src/stm32f4xx_it.c ****   */
 152:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 153:Core/Src/stm32f4xx_it.c **** {
ARM GAS  /tmp/ccFyheDG.s 			page 7


 197              		.loc 1 153 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 160:Core/Src/stm32f4xx_it.c **** }
 202              		.loc 1 160 1 view .LVU30
 203 0000 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE241:
 207              		.section	.text.DebugMon_Handler,"ax",%progbits
 208              		.align	1
 209              		.global	DebugMon_Handler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	DebugMon_Handler:
 216              	.LFB242:
 161:Core/Src/stm32f4xx_it.c **** 
 162:Core/Src/stm32f4xx_it.c **** /**
 163:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 164:Core/Src/stm32f4xx_it.c ****   */
 165:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 166:Core/Src/stm32f4xx_it.c **** {
 217              		.loc 1 166 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 171:Core/Src/stm32f4xx_it.c **** 
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 173:Core/Src/stm32f4xx_it.c **** }
 222              		.loc 1 173 1 view .LVU32
 223 0000 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE242:
 227              		.section	.text.PendSV_Handler,"ax",%progbits
 228              		.align	1
 229              		.global	PendSV_Handler
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	PendSV_Handler:
 236              	.LFB243:
 174:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccFyheDG.s 			page 8


 175:Core/Src/stm32f4xx_it.c **** /**
 176:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 177:Core/Src/stm32f4xx_it.c ****   */
 178:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 179:Core/Src/stm32f4xx_it.c **** {
 237              		.loc 1 179 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 186:Core/Src/stm32f4xx_it.c **** }
 242              		.loc 1 186 1 view .LVU34
 243 0000 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE243:
 247              		.section	.text.SysTick_Handler,"ax",%progbits
 248              		.align	1
 249              		.global	SysTick_Handler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	SysTick_Handler:
 256              	.LFB244:
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c **** /**
 189:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 190:Core/Src/stm32f4xx_it.c ****   */
 191:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 192:Core/Src/stm32f4xx_it.c **** {
 257              		.loc 1 192 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI1:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 194:Core/Src/stm32f4xx_it.c **** 
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 196:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 266              		.loc 1 196 3 view .LVU36
 267 0002 FFF7FEFF 		bl	HAL_IncTick
 268              	.LVL4:
 197:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 198:Core/Src/stm32f4xx_it.c **** 
 199:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 200:Core/Src/stm32f4xx_it.c **** }
 269              		.loc 1 200 1 is_stmt 0 view .LVU37
ARM GAS  /tmp/ccFyheDG.s 			page 9


 270 0006 08BD     		pop	{r3, pc}
 271              		.cfi_endproc
 272              	.LFE244:
 274              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 275              		.align	1
 276              		.global	TIM2_IRQHandler
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	TIM2_IRQHandler:
 283              	.LFB245:
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 203:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 204:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 205:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 206:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 207:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 208:Core/Src/stm32f4xx_it.c **** 
 209:Core/Src/stm32f4xx_it.c **** /**
 210:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 211:Core/Src/stm32f4xx_it.c ****   */
 212:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 213:Core/Src/stm32f4xx_it.c **** {
 284              		.loc 1 213 1 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 08B5     		push	{r3, lr}
 289              	.LCFI2:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 214:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 215:Core/Src/stm32f4xx_it.c **** 
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 217:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 293              		.loc 1 217 3 view .LVU39
 294 0002 0248     		ldr	r0, .L24
 295 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 296              	.LVL5:
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** 
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 221:Core/Src/stm32f4xx_it.c **** }
 297              		.loc 1 221 1 is_stmt 0 view .LVU40
 298 0008 08BD     		pop	{r3, pc}
 299              	.L25:
 300 000a 00BF     		.align	2
 301              	.L24:
 302 000c 00000000 		.word	htim2
 303              		.cfi_endproc
 304              	.LFE245:
 306              		.section	.text.USART1_IRQHandler,"ax",%progbits
 307              		.align	1
 308              		.global	USART1_IRQHandler
ARM GAS  /tmp/ccFyheDG.s 			page 10


 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu fpv4-sp-d16
 314              	USART1_IRQHandler:
 315              	.LFB246:
 222:Core/Src/stm32f4xx_it.c **** 
 223:Core/Src/stm32f4xx_it.c **** /**
 224:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 225:Core/Src/stm32f4xx_it.c ****   */
 226:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 227:Core/Src/stm32f4xx_it.c **** {
 316              		.loc 1 227 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              	.LCFI3:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c **** 
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 325              		.loc 1 231 3 view .LVU42
 326 0002 0248     		ldr	r0, .L28
 327 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 328              	.LVL6:
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** 
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 235:Core/Src/stm32f4xx_it.c **** }
 329              		.loc 1 235 1 is_stmt 0 view .LVU43
 330 0008 08BD     		pop	{r3, pc}
 331              	.L29:
 332 000a 00BF     		.align	2
 333              	.L28:
 334 000c 00000000 		.word	huart1
 335              		.cfi_endproc
 336              	.LFE246:
 338              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 339              		.align	1
 340              		.global	DMA2_Stream0_IRQHandler
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	DMA2_Stream0_IRQHandler:
 347              	.LFB247:
 236:Core/Src/stm32f4xx_it.c **** 
 237:Core/Src/stm32f4xx_it.c **** /**
 238:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 239:Core/Src/stm32f4xx_it.c ****   */
 240:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 241:Core/Src/stm32f4xx_it.c **** {
 348              		.loc 1 241 1 is_stmt 1 view -0
ARM GAS  /tmp/ccFyheDG.s 			page 11


 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              	.LCFI4:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 3, -8
 356              		.cfi_offset 14, -4
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 243:Core/Src/stm32f4xx_it.c **** 
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 245:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 357              		.loc 1 245 3 view .LVU45
 358 0002 0248     		ldr	r0, .L32
 359 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 360              	.LVL7:
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 249:Core/Src/stm32f4xx_it.c **** }
 361              		.loc 1 249 1 is_stmt 0 view .LVU46
 362 0008 08BD     		pop	{r3, pc}
 363              	.L33:
 364 000a 00BF     		.align	2
 365              	.L32:
 366 000c 00000000 		.word	hdma_adc1
 367              		.cfi_endproc
 368              	.LFE247:
 370              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 371              		.align	1
 372              		.global	DMA2_Stream7_IRQHandler
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu fpv4-sp-d16
 378              	DMA2_Stream7_IRQHandler:
 379              	.LFB248:
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c **** /**
 252:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 253:Core/Src/stm32f4xx_it.c ****   */
 254:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 255:Core/Src/stm32f4xx_it.c **** {
 380              		.loc 1 255 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              	.LCFI5:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 3, -8
 388              		.cfi_offset 14, -4
 256:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 257:Core/Src/stm32f4xx_it.c **** 
 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 259:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 389              		.loc 1 259 3 view .LVU48
ARM GAS  /tmp/ccFyheDG.s 			page 12


 390 0002 0248     		ldr	r0, .L36
 391 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 392              	.LVL8:
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 263:Core/Src/stm32f4xx_it.c **** }
 393              		.loc 1 263 1 is_stmt 0 view .LVU49
 394 0008 08BD     		pop	{r3, pc}
 395              	.L37:
 396 000a 00BF     		.align	2
 397              	.L36:
 398 000c 00000000 		.word	hdma_usart1_tx
 399              		.cfi_endproc
 400              	.LFE248:
 402              		.text
 403              	.Letext0:
 404              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 405              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 406              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 407              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 408              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 409              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 410              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 411              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 412              		.file 10 "Core/Inc/main.h"
ARM GAS  /tmp/ccFyheDG.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccFyheDG.s:18     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccFyheDG.s:26     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccFyheDG.s:63     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccFyheDG.s:68     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:75     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccFyheDG.s:92     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:99     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccFyheDG.s:116    .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:123    .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccFyheDG.s:140    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:147    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccFyheDG.s:164    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:171    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccFyheDG.s:188    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:195    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccFyheDG.s:208    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:215    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccFyheDG.s:228    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:235    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccFyheDG.s:248    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccFyheDG.s:255    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccFyheDG.s:275    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccFyheDG.s:282    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccFyheDG.s:302    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/ccFyheDG.s:307    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccFyheDG.s:314    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccFyheDG.s:334    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccFyheDG.s:339    .text.DMA2_Stream0_IRQHandler:0000000000000000 $t
     /tmp/ccFyheDG.s:346    .text.DMA2_Stream0_IRQHandler:0000000000000000 DMA2_Stream0_IRQHandler
     /tmp/ccFyheDG.s:366    .text.DMA2_Stream0_IRQHandler:000000000000000c $d
     /tmp/ccFyheDG.s:371    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccFyheDG.s:378    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccFyheDG.s:398    .text.DMA2_Stream7_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
TIM2_Callback
htim2
HAL_IncTick
HAL_TIM_IRQHandler
HAL_UART_IRQHandler
huart1
HAL_DMA_IRQHandler
hdma_adc1
hdma_usart1_tx
