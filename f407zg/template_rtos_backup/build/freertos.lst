ARM GAS  /tmp/ccvsmoO5.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.section	.rodata.str1.4,"aMS",%progbits,1
  17              		.align	2
  18              	.LC0:
  19 0000 64656661 		.ascii	"defaultTask\000"
  19      756C7454 
  19      61736B00 
  20              		.align	2
  21              	.LC2:
  22 000c 4C454400 		.ascii	"LED\000"
  23              		.text
  24              	.Ltext0:
  25              		.cfi_sections	.debug_frame
  26              		.section	.text.StartDefaultTask,"ax",%progbits
  27              		.align	1
  28              		.global	StartDefaultTask
  29              		.syntax unified
  30              		.thumb
  31              		.thumb_func
  33              	StartDefaultTask:
  34              	.LFB328:
  35              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****   *
  17:Core/Src/freertos.c ****   ******************************************************************************
  18:Core/Src/freertos.c ****   */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccvsmoO5.s 			page 2


  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include "lvgl.h"
  30:Core/Src/freertos.c **** #include "lvgl_app.h"
  31:Core/Src/freertos.c **** #include "spi.h"
  32:Core/Src/freertos.c **** #include <stdio.h>
  33:Core/Src/freertos.c **** #include <string.h>
  34:Core/Src/freertos.c **** /* USER CODE END Includes */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/freertos.c **** #define CS_Disable()   HAL_GPIO_WritePin(CS_GPIO_Port,CS_Pin,GPIO_PIN_SET)
  39:Core/Src/freertos.c **** #define CS_Enable()    HAL_GPIO_WritePin(CS_GPIO_Port,CS_Pin,GPIO_PIN_RESET)
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* 向RC522写入指定地址的数据 */
  43:Core/Src/freertos.c **** void WriteLED(uint8_t ucAddress, uint8_t ucValue)
  44:Core/Src/freertos.c **** { 
  45:Core/Src/freertos.c **** 	uint8_t sentData[2];
  46:Core/Src/freertos.c **** 	sentData[0] = ucAddress;
  47:Core/Src/freertos.c ****   sentData[1] = ucValue;
  48:Core/Src/freertos.c **** 	CS_Enable();
  49:Core/Src/freertos.c **** 	HAL_SPI_Transmit(&hspi2,(uint8_t*)sentData,2,0xFFFF);
  50:Core/Src/freertos.c **** 	CS_Disable();	
  51:Core/Src/freertos.c **** }
  52:Core/Src/freertos.c **** /* USER CODE END PTD */
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  55:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** /* USER CODE END PD */
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  60:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** /* USER CODE END PM */
  63:Core/Src/freertos.c **** 
  64:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  65:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  66:Core/Src/freertos.c **** osThreadId lvglTaskHandle;
  67:Core/Src/freertos.c **** osThreadId LEDTaskHandle;
  68:Core/Src/freertos.c **** extern lv_obj_t * wave_chart;
  69:Core/Src/freertos.c **** extern lv_chart_series_t * wave_ser;
  70:Core/Src/freertos.c **** 
  71:Core/Src/freertos.c **** /* USER CODE END Variables */
  72:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  73:Core/Src/freertos.c **** 
  74:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  76:Core/Src/freertos.c **** void LEDMAT(void){
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c ****   WriteLED(0x00, 0xFF);
ARM GAS  /tmp/ccvsmoO5.s 			page 3


  79:Core/Src/freertos.c ****   WriteLED(0x09, 0x00);
  80:Core/Src/freertos.c ****   WriteLED(0x0F, 0x00);
  81:Core/Src/freertos.c ****   WriteLED(0x0B, 0x07);
  82:Core/Src/freertos.c ****   WriteLED(0x0A, 0x04);
  83:Core/Src/freertos.c ****   WriteLED(0x0C, 0x01);
  84:Core/Src/freertos.c ****   
  85:Core/Src/freertos.c ****   for (;;)
  86:Core/Src/freertos.c ****   {
  87:Core/Src/freertos.c ****     WriteLED(0x01, 0x0F);
  88:Core/Src/freertos.c ****     osDelay(1);
  89:Core/Src/freertos.c ****   }
  90:Core/Src/freertos.c **** }
  91:Core/Src/freertos.c **** 
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c **** void lvgl_init(void){
  94:Core/Src/freertos.c ****   /* lvgl init */
  95:Core/Src/freertos.c ****   lv_init();
  96:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
  97:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
  98:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   wave_chart_init();
 101:Core/Src/freertos.c ****   wave_btn();
 102:Core/Src/freertos.c ****   distortion_list();
 103:Core/Src/freertos.c ****   THD_label();
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c ****   for (;;)
 106:Core/Src/freertos.c ****   {
 107:Core/Src/freertos.c ****     osDelay(LVGL_TICK);
 108:Core/Src/freertos.c ****     lv_task_handler();
 109:Core/Src/freertos.c ****   }
 110:Core/Src/freertos.c **** }
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 117:Core/Src/freertos.c **** 
 118:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
 119:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c **** /* Hook prototypes */
 122:Core/Src/freertos.c **** void vApplicationTickHook(void);
 123:Core/Src/freertos.c **** 
 124:Core/Src/freertos.c **** /* USER CODE BEGIN 3 */
 125:Core/Src/freertos.c **** void vApplicationTickHook( void )
 126:Core/Src/freertos.c **** {
 127:Core/Src/freertos.c ****    /* This function will be called by each tick interrupt if
 128:Core/Src/freertos.c ****    configUSE_TICK_HOOK is set to 1 in FreeRTOSConfig.h. User code can be
 129:Core/Src/freertos.c ****    added here, but the tick hook is called from an interrupt context, so
 130:Core/Src/freertos.c ****    code must not attempt to block, and only the interrupt safe FreeRTOS API
 131:Core/Src/freertos.c ****    functions can be used (those that end in FromISR()). */
 132:Core/Src/freertos.c ****    lv_tick_inc(1);
 133:Core/Src/freertos.c **** }
 134:Core/Src/freertos.c **** /* USER CODE END 3 */
 135:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccvsmoO5.s 			page 4


 136:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
 137:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
 138:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
 139:Core/Src/freertos.c **** 
 140:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
 141:Core/Src/freertos.c **** {
 142:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 143:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 144:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 145:Core/Src/freertos.c ****   /* place for user code */
 146:Core/Src/freertos.c **** }
 147:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 148:Core/Src/freertos.c **** 
 149:Core/Src/freertos.c **** /**
 150:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
 151:Core/Src/freertos.c ****   * @param  None
 152:Core/Src/freertos.c ****   * @retval None
 153:Core/Src/freertos.c ****   */
 154:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 155:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 156:Core/Src/freertos.c ****   
 157:Core/Src/freertos.c ****   /* USER CODE END Init */
 158:Core/Src/freertos.c **** 
 159:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 160:Core/Src/freertos.c ****   /* add mutexes, ... */
 161:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 162:Core/Src/freertos.c **** 
 163:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 164:Core/Src/freertos.c ****   /* add semaphores, ... */
 165:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 166:Core/Src/freertos.c **** 
 167:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 168:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 169:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 170:Core/Src/freertos.c **** 
 171:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 172:Core/Src/freertos.c ****   /* add queues, ... */
 173:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 174:Core/Src/freertos.c **** 
 175:Core/Src/freertos.c ****   /* Create the thread(s) */
 176:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 177:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 178:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 179:Core/Src/freertos.c **** 
 180:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 181:Core/Src/freertos.c **** 
 182:Core/Src/freertos.c ****   /* add threads, ... */
 183:Core/Src/freertos.c ****   // osThreadDef(lvgl, lvgl_init, osPriorityRealtime , 0, 512);
 184:Core/Src/freertos.c ****   // lvglTaskHandle = osThreadCreate(osThread(lvgl), NULL);
 185:Core/Src/freertos.c ****   osThreadDef(LED, LEDMAT, osPriorityNormal , 0, 512);
 186:Core/Src/freertos.c ****   LEDTaskHandle = osThreadCreate(osThread(LED), NULL);
 187:Core/Src/freertos.c **** 
 188:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 189:Core/Src/freertos.c **** 
 190:Core/Src/freertos.c **** }
 191:Core/Src/freertos.c **** 
 192:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
ARM GAS  /tmp/ccvsmoO5.s 			page 5


 193:Core/Src/freertos.c **** /**
 194:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 195:Core/Src/freertos.c ****   * @param  argument: Not used
 196:Core/Src/freertos.c ****   * @retval None
 197:Core/Src/freertos.c ****   */
 198:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 199:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 200:Core/Src/freertos.c **** {
  36              		.loc 1 200 1 view -0
  37              		.cfi_startproc
  38              		@ Volatile: function does not return.
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41              	.LVL0:
  42              		.loc 1 200 1 is_stmt 0 view .LVU1
  43 0000 08B5     		push	{r3, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 3, -8
  47              		.cfi_offset 14, -4
  48              	.LVL1:
  49              	.L2:
 201:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 202:Core/Src/freertos.c ****   /* Infinite loop */
 203:Core/Src/freertos.c ****   for(;;)
  50              		.loc 1 203 3 is_stmt 1 discriminator 1 view .LVU2
 204:Core/Src/freertos.c ****   {
 205:Core/Src/freertos.c ****     //printf("1\r\n");
 206:Core/Src/freertos.c ****     osDelay(1);
  51              		.loc 1 206 5 discriminator 1 view .LVU3
  52 0002 0120     		movs	r0, #1
  53 0004 FFF7FEFF 		bl	osDelay
  54              	.LVL2:
 203:Core/Src/freertos.c ****   {
  55              		.loc 1 203 8 discriminator 1 view .LVU4
  56 0008 FBE7     		b	.L2
  57              		.cfi_endproc
  58              	.LFE328:
  60              		.section	.text.WriteLED,"ax",%progbits
  61              		.align	1
  62              		.global	WriteLED
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	WriteLED:
  68              	.LVL3:
  69              	.LFB322:
  44:Core/Src/freertos.c **** 	uint8_t sentData[2];
  70              		.loc 1 44 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  44:Core/Src/freertos.c **** 	uint8_t sentData[2];
  74              		.loc 1 44 1 is_stmt 0 view .LVU6
  75 0000 10B5     		push	{r4, lr}
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccvsmoO5.s 			page 6


  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 16
  45:Core/Src/freertos.c **** 	sentData[0] = ucAddress;
  83              		.loc 1 45 2 is_stmt 1 view .LVU7
  46:Core/Src/freertos.c ****   sentData[1] = ucValue;
  84              		.loc 1 46 2 view .LVU8
  46:Core/Src/freertos.c ****   sentData[1] = ucValue;
  85              		.loc 1 46 14 is_stmt 0 view .LVU9
  86 0004 8DF80400 		strb	r0, [sp, #4]
  47:Core/Src/freertos.c **** 	CS_Enable();
  87              		.loc 1 47 3 is_stmt 1 view .LVU10
  47:Core/Src/freertos.c **** 	CS_Enable();
  88              		.loc 1 47 15 is_stmt 0 view .LVU11
  89 0008 8DF80510 		strb	r1, [sp, #5]
  48:Core/Src/freertos.c **** 	HAL_SPI_Transmit(&hspi2,(uint8_t*)sentData,2,0xFFFF);
  90              		.loc 1 48 2 is_stmt 1 view .LVU12
  91 000c 094C     		ldr	r4, .L6
  92 000e 0022     		movs	r2, #0
  93 0010 8021     		movs	r1, #128
  94              	.LVL4:
  48:Core/Src/freertos.c **** 	HAL_SPI_Transmit(&hspi2,(uint8_t*)sentData,2,0xFFFF);
  95              		.loc 1 48 2 is_stmt 0 view .LVU13
  96 0012 2046     		mov	r0, r4
  97              	.LVL5:
  48:Core/Src/freertos.c **** 	HAL_SPI_Transmit(&hspi2,(uint8_t*)sentData,2,0xFFFF);
  98              		.loc 1 48 2 view .LVU14
  99 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 100              	.LVL6:
  49:Core/Src/freertos.c **** 	CS_Disable();	
 101              		.loc 1 49 2 is_stmt 1 view .LVU15
 102 0018 4FF6FF73 		movw	r3, #65535
 103 001c 0222     		movs	r2, #2
 104 001e 01A9     		add	r1, sp, #4
 105 0020 0548     		ldr	r0, .L6+4
 106 0022 FFF7FEFF 		bl	HAL_SPI_Transmit
 107              	.LVL7:
  50:Core/Src/freertos.c **** }
 108              		.loc 1 50 2 view .LVU16
 109 0026 0122     		movs	r2, #1
 110 0028 8021     		movs	r1, #128
 111 002a 2046     		mov	r0, r4
 112 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL8:
  51:Core/Src/freertos.c **** /* USER CODE END PTD */
 114              		.loc 1 51 1 is_stmt 0 view .LVU17
 115 0030 02B0     		add	sp, sp, #8
 116              	.LCFI3:
 117              		.cfi_def_cfa_offset 8
 118              		@ sp needed
 119 0032 10BD     		pop	{r4, pc}
 120              	.L7:
 121              		.align	2
 122              	.L6:
 123 0034 00000240 		.word	1073872896
ARM GAS  /tmp/ccvsmoO5.s 			page 7


 124 0038 00000000 		.word	hspi2
 125              		.cfi_endproc
 126              	.LFE322:
 128              		.section	.text.LEDMAT,"ax",%progbits
 129              		.align	1
 130              		.global	LEDMAT
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	LEDMAT:
 136              	.LFB323:
  76:Core/Src/freertos.c **** 
 137              		.loc 1 76 18 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ Volatile: function does not return.
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 08B5     		push	{r3, lr}
 143              	.LCFI4:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 3, -8
 146              		.cfi_offset 14, -4
  78:Core/Src/freertos.c ****   WriteLED(0x09, 0x00);
 147              		.loc 1 78 3 view .LVU19
 148 0002 FF21     		movs	r1, #255
 149 0004 0020     		movs	r0, #0
 150 0006 FFF7FEFF 		bl	WriteLED
 151              	.LVL9:
  79:Core/Src/freertos.c ****   WriteLED(0x0F, 0x00);
 152              		.loc 1 79 3 view .LVU20
 153 000a 0021     		movs	r1, #0
 154 000c 0920     		movs	r0, #9
 155 000e FFF7FEFF 		bl	WriteLED
 156              	.LVL10:
  80:Core/Src/freertos.c ****   WriteLED(0x0B, 0x07);
 157              		.loc 1 80 3 view .LVU21
 158 0012 0021     		movs	r1, #0
 159 0014 0F20     		movs	r0, #15
 160 0016 FFF7FEFF 		bl	WriteLED
 161              	.LVL11:
  81:Core/Src/freertos.c ****   WriteLED(0x0A, 0x04);
 162              		.loc 1 81 3 view .LVU22
 163 001a 0721     		movs	r1, #7
 164 001c 0B20     		movs	r0, #11
 165 001e FFF7FEFF 		bl	WriteLED
 166              	.LVL12:
  82:Core/Src/freertos.c ****   WriteLED(0x0C, 0x01);
 167              		.loc 1 82 3 view .LVU23
 168 0022 0421     		movs	r1, #4
 169 0024 0A20     		movs	r0, #10
 170 0026 FFF7FEFF 		bl	WriteLED
 171              	.LVL13:
  83:Core/Src/freertos.c ****   
 172              		.loc 1 83 3 view .LVU24
 173 002a 0121     		movs	r1, #1
 174 002c 0C20     		movs	r0, #12
 175 002e FFF7FEFF 		bl	WriteLED
ARM GAS  /tmp/ccvsmoO5.s 			page 8


 176              	.LVL14:
 177              	.L9:
  85:Core/Src/freertos.c ****   {
 178              		.loc 1 85 3 discriminator 1 view .LVU25
  87:Core/Src/freertos.c ****     osDelay(1);
 179              		.loc 1 87 5 discriminator 1 view .LVU26
 180 0032 0F21     		movs	r1, #15
 181 0034 0120     		movs	r0, #1
 182 0036 FFF7FEFF 		bl	WriteLED
 183              	.LVL15:
  88:Core/Src/freertos.c ****   }
 184              		.loc 1 88 5 discriminator 1 view .LVU27
 185 003a 0120     		movs	r0, #1
 186 003c FFF7FEFF 		bl	osDelay
 187              	.LVL16:
  85:Core/Src/freertos.c ****   {
 188              		.loc 1 85 9 discriminator 1 view .LVU28
 189 0040 F7E7     		b	.L9
 190              		.cfi_endproc
 191              	.LFE323:
 193              		.section	.text.lvgl_init,"ax",%progbits
 194              		.align	1
 195              		.global	lvgl_init
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	lvgl_init:
 201              	.LFB324:
  93:Core/Src/freertos.c ****   /* lvgl init */
 202              		.loc 1 93 21 view -0
 203              		.cfi_startproc
 204              		@ Volatile: function does not return.
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 08B5     		push	{r3, lr}
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 3, -8
 211              		.cfi_offset 14, -4
  95:Core/Src/freertos.c ****   lv_port_disp_init();        // 显示器初始化
 212              		.loc 1 95 3 view .LVU30
 213 0002 FFF7FEFF 		bl	lv_init
 214              	.LVL17:
  96:Core/Src/freertos.c ****   lv_port_indev_init();       // 输入设备初始化（如果没有实现就注释掉）
 215              		.loc 1 96 3 view .LVU31
 216 0006 FFF7FEFF 		bl	lv_port_disp_init
 217              	.LVL18:
  97:Core/Src/freertos.c ****   // lv_port_fs_init();          // 文件系统设备初始化（如果没有实现就注释掉）
 218              		.loc 1 97 3 view .LVU32
 219 000a FFF7FEFF 		bl	lv_port_indev_init
 220              	.LVL19:
 100:Core/Src/freertos.c ****   wave_btn();
 221              		.loc 1 100 3 view .LVU33
 222 000e FFF7FEFF 		bl	wave_chart_init
 223              	.LVL20:
 101:Core/Src/freertos.c ****   distortion_list();
 224              		.loc 1 101 3 view .LVU34
ARM GAS  /tmp/ccvsmoO5.s 			page 9


 225 0012 FFF7FEFF 		bl	wave_btn
 226              	.LVL21:
 102:Core/Src/freertos.c ****   THD_label();
 227              		.loc 1 102 3 view .LVU35
 228 0016 FFF7FEFF 		bl	distortion_list
 229              	.LVL22:
 103:Core/Src/freertos.c **** 
 230              		.loc 1 103 3 view .LVU36
 231 001a FFF7FEFF 		bl	THD_label
 232              	.LVL23:
 233              	.L12:
 105:Core/Src/freertos.c ****   {
 234              		.loc 1 105 3 discriminator 1 view .LVU37
 107:Core/Src/freertos.c ****     lv_task_handler();
 235              		.loc 1 107 5 discriminator 1 view .LVU38
 236 001e 0520     		movs	r0, #5
 237 0020 FFF7FEFF 		bl	osDelay
 238              	.LVL24:
 108:Core/Src/freertos.c ****   }
 239              		.loc 1 108 5 discriminator 1 view .LVU39
 240              	.LBB4:
 241              	.LBI4:
 242              		.file 2 "Middlewares/lvgl/src/lv_api_map.h"
   1:Middlewares/lvgl/src/lv_api_map.h **** /**
   2:Middlewares/lvgl/src/lv_api_map.h ****  * @file lv_api_map.h
   3:Middlewares/lvgl/src/lv_api_map.h ****  *
   4:Middlewares/lvgl/src/lv_api_map.h ****  */
   5:Middlewares/lvgl/src/lv_api_map.h **** 
   6:Middlewares/lvgl/src/lv_api_map.h **** #ifndef LV_API_MAP_H
   7:Middlewares/lvgl/src/lv_api_map.h **** #define LV_API_MAP_H
   8:Middlewares/lvgl/src/lv_api_map.h **** 
   9:Middlewares/lvgl/src/lv_api_map.h **** #ifdef __cplusplus
  10:Middlewares/lvgl/src/lv_api_map.h **** extern "C" {
  11:Middlewares/lvgl/src/lv_api_map.h **** #endif
  12:Middlewares/lvgl/src/lv_api_map.h **** 
  13:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  14:Middlewares/lvgl/src/lv_api_map.h ****  *      INCLUDES
  15:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  16:Middlewares/lvgl/src/lv_api_map.h **** #include "../lvgl.h"
  17:Middlewares/lvgl/src/lv_api_map.h **** 
  18:Middlewares/lvgl/src/lv_api_map.h **** /*********************
  19:Middlewares/lvgl/src/lv_api_map.h ****  *      DEFINES
  20:Middlewares/lvgl/src/lv_api_map.h ****  *********************/
  21:Middlewares/lvgl/src/lv_api_map.h **** 
  22:Middlewares/lvgl/src/lv_api_map.h **** #define LV_NO_TASK_READY        LV_NO_TIMER_READY
  23:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_REL      LV_INDEV_STATE_RELEASED
  24:Middlewares/lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_PR       LV_INDEV_STATE_PRESSED
  25:Middlewares/lvgl/src/lv_api_map.h **** #define LV_OBJ_FLAG_SNAPABLE    LV_OBJ_FLAG_SNAPPABLE   /*Fixed typo*/
  26:Middlewares/lvgl/src/lv_api_map.h **** 
  27:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  28:Middlewares/lvgl/src/lv_api_map.h ****  *      TYPEDEFS
  29:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  30:Middlewares/lvgl/src/lv_api_map.h **** 
  31:Middlewares/lvgl/src/lv_api_map.h **** /**********************
  32:Middlewares/lvgl/src/lv_api_map.h ****  * GLOBAL PROTOTYPES
  33:Middlewares/lvgl/src/lv_api_map.h ****  **********************/
  34:Middlewares/lvgl/src/lv_api_map.h **** 
ARM GAS  /tmp/ccvsmoO5.s 			page 10


  35:Middlewares/lvgl/src/lv_api_map.h **** static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)
 243              		.loc 2 35 51 discriminator 1 view .LVU40
 244              	.LBB5:
  36:Middlewares/lvgl/src/lv_api_map.h **** {
  37:Middlewares/lvgl/src/lv_api_map.h ****     return lv_timer_handler();
 245              		.loc 2 37 5 discriminator 1 view .LVU41
 246              		.loc 2 37 12 is_stmt 0 discriminator 1 view .LVU42
 247 0024 FFF7FEFF 		bl	lv_timer_handler
 248              	.LVL25:
 249 0028 F9E7     		b	.L12
 250              	.LBE5:
 251              	.LBE4:
 252              		.cfi_endproc
 253              	.LFE324:
 255              		.section	.text.vApplicationTickHook,"ax",%progbits
 256              		.align	1
 257              		.global	vApplicationTickHook
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	vApplicationTickHook:
 263              	.LFB325:
 126:Core/Src/freertos.c ****    /* This function will be called by each tick interrupt if
 264              		.loc 1 126 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI6:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 132:Core/Src/freertos.c **** }
 273              		.loc 1 132 4 view .LVU44
 274 0002 0120     		movs	r0, #1
 275 0004 FFF7FEFF 		bl	lv_tick_inc
 276              	.LVL26:
 133:Core/Src/freertos.c **** /* USER CODE END 3 */
 277              		.loc 1 133 1 is_stmt 0 view .LVU45
 278 0008 08BD     		pop	{r3, pc}
 279              		.cfi_endproc
 280              	.LFE325:
 282              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 283              		.align	1
 284              		.global	vApplicationGetIdleTaskMemory
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	vApplicationGetIdleTaskMemory:
 290              	.LVL27:
 291              	.LFB326:
 141:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 292              		.loc 1 141 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
ARM GAS  /tmp/ccvsmoO5.s 			page 11


 142:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 297              		.loc 1 142 3 view .LVU47
 142:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 298              		.loc 1 142 25 is_stmt 0 view .LVU48
 299 0000 034B     		ldr	r3, .L17
 300 0002 0360     		str	r3, [r0]
 143:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 301              		.loc 1 143 3 is_stmt 1 view .LVU49
 143:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 302              		.loc 1 143 27 is_stmt 0 view .LVU50
 303 0004 034B     		ldr	r3, .L17+4
 304 0006 0B60     		str	r3, [r1]
 144:Core/Src/freertos.c ****   /* place for user code */
 305              		.loc 1 144 3 is_stmt 1 view .LVU51
 144:Core/Src/freertos.c ****   /* place for user code */
 306              		.loc 1 144 25 is_stmt 0 view .LVU52
 307 0008 8023     		movs	r3, #128
 308 000a 1360     		str	r3, [r2]
 146:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 309              		.loc 1 146 1 view .LVU53
 310 000c 7047     		bx	lr
 311              	.L18:
 312 000e 00BF     		.align	2
 313              	.L17:
 314 0010 00000000 		.word	.LANCHOR0
 315 0014 00000000 		.word	.LANCHOR1
 316              		.cfi_endproc
 317              	.LFE326:
 319              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 320              		.align	1
 321              		.global	MX_FREERTOS_Init
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	MX_FREERTOS_Init:
 327              	.LFB327:
 154:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 328              		.loc 1 154 29 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 56
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 10B5     		push	{r4, lr}
 333              	.LCFI7:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 337 0002 8EB0     		sub	sp, sp, #56
 338              	.LCFI8:
 339              		.cfi_def_cfa_offset 64
 177:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 340              		.loc 1 177 3 view .LVU55
 341 0004 124C     		ldr	r4, .L21
 342 0006 0DF11C0C 		add	ip, sp, #28
 343 000a A646     		mov	lr, r4
 344 000c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 345 0010 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 346 0014 9EE80700 		ldm	lr, {r0, r1, r2}
ARM GAS  /tmp/ccvsmoO5.s 			page 12


 347 0018 8CE80700 		stm	ip, {r0, r1, r2}
 178:Core/Src/freertos.c **** 
 348              		.loc 1 178 3 view .LVU56
 178:Core/Src/freertos.c **** 
 349              		.loc 1 178 23 is_stmt 0 view .LVU57
 350 001c 0021     		movs	r1, #0
 351 001e 07A8     		add	r0, sp, #28
 352 0020 FFF7FEFF 		bl	osThreadCreate
 353              	.LVL28:
 178:Core/Src/freertos.c **** 
 354              		.loc 1 178 21 view .LVU58
 355 0024 0B4B     		ldr	r3, .L21+4
 356 0026 1860     		str	r0, [r3]
 185:Core/Src/freertos.c ****   LEDTaskHandle = osThreadCreate(osThread(LED), NULL);
 357              		.loc 1 185 3 is_stmt 1 view .LVU59
 358 0028 EE46     		mov	lr, sp
 359 002a 04F11C0C 		add	ip, r4, #28
 360 002e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 361 0032 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 362 0036 9CE80700 		ldm	ip, {r0, r1, r2}
 363 003a 8EE80700 		stm	lr, {r0, r1, r2}
 186:Core/Src/freertos.c **** 
 364              		.loc 1 186 3 view .LVU60
 186:Core/Src/freertos.c **** 
 365              		.loc 1 186 19 is_stmt 0 view .LVU61
 366 003e 0021     		movs	r1, #0
 367 0040 6846     		mov	r0, sp
 368 0042 FFF7FEFF 		bl	osThreadCreate
 369              	.LVL29:
 186:Core/Src/freertos.c **** 
 370              		.loc 1 186 17 view .LVU62
 371 0046 044B     		ldr	r3, .L21+8
 372 0048 1860     		str	r0, [r3]
 190:Core/Src/freertos.c **** 
 373              		.loc 1 190 1 view .LVU63
 374 004a 0EB0     		add	sp, sp, #56
 375              	.LCFI9:
 376              		.cfi_def_cfa_offset 8
 377              		@ sp needed
 378 004c 10BD     		pop	{r4, pc}
 379              	.L22:
 380 004e 00BF     		.align	2
 381              	.L21:
 382 0050 00000000 		.word	.LANCHOR2
 383 0054 00000000 		.word	.LANCHOR3
 384 0058 00000000 		.word	.LANCHOR4
 385              		.cfi_endproc
 386              	.LFE327:
 388              		.global	defaultTaskHandle
 389              		.global	LEDTaskHandle
 390              		.global	lvglTaskHandle
 391              		.section	.rodata
 392              		.align	2
 393              		.set	.LANCHOR2,. + 0
 394              	.LC4:
 395 0000 00000000 		.word	.LC0
 396 0004 00000000 		.word	StartDefaultTask
ARM GAS  /tmp/ccvsmoO5.s 			page 13


 397 0008 0000     		.short	0
 398 000a 0000     		.space	2
 399 000c 00000000 		.word	0
 400 0010 80000000 		.word	128
 401 0014 00000000 		.word	0
 402 0018 00000000 		.word	0
 403              	.LC5:
 404 001c 0C000000 		.word	.LC2
 405 0020 00000000 		.word	LEDMAT
 406 0024 0000     		.short	0
 407 0026 0000     		.space	2
 408 0028 00000000 		.word	0
 409 002c 00020000 		.word	512
 410 0030 00000000 		.word	0
 411 0034 00000000 		.word	0
 412              		.section	.bss.LEDTaskHandle,"aw",%nobits
 413              		.align	2
 414              		.set	.LANCHOR4,. + 0
 417              	LEDTaskHandle:
 418 0000 00000000 		.space	4
 419              		.section	.bss.defaultTaskHandle,"aw",%nobits
 420              		.align	2
 421              		.set	.LANCHOR3,. + 0
 424              	defaultTaskHandle:
 425 0000 00000000 		.space	4
 426              		.section	.bss.lvglTaskHandle,"aw",%nobits
 427              		.align	2
 430              	lvglTaskHandle:
 431 0000 00000000 		.space	4
 432              		.section	.bss.xIdleStack,"aw",%nobits
 433              		.align	2
 434              		.set	.LANCHOR1,. + 0
 437              	xIdleStack:
 438 0000 00000000 		.space	512
 438      00000000 
 438      00000000 
 438      00000000 
 438      00000000 
 439              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 440              		.align	2
 441              		.set	.LANCHOR0,. + 0
 444              	xIdleTaskTCBBuffer:
 445 0000 00000000 		.space	84
 445      00000000 
 445      00000000 
 445      00000000 
 445      00000000 
 446              		.text
 447              	.Letext0:
 448              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 449              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 450              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 451              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 452              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 453              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 454              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 455              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/ccvsmoO5.s 			page 14


 456              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 457              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 458              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 459              		.file 14 "Middlewares/lvgl/src/core/lv_obj.h"
 460              		.file 15 "Middlewares/lvgl/src/widgets/lv_bar.h"
 461              		.file 16 "Middlewares/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 462              		.file 17 "Core/Inc/spi.h"
 463              		.file 18 "Middlewares/lvgl/src/hal/lv_hal_tick.h"
 464              		.file 19 "Middlewares/lvgl/src/misc/lv_timer.h"
 465              		.file 20 "Core/Inc/lvgl_app.h"
ARM GAS  /tmp/ccvsmoO5.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccvsmoO5.s:17     .rodata.str1.4:0000000000000000 $d
     /tmp/ccvsmoO5.s:27     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccvsmoO5.s:33     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccvsmoO5.s:61     .text.WriteLED:0000000000000000 $t
     /tmp/ccvsmoO5.s:67     .text.WriteLED:0000000000000000 WriteLED
     /tmp/ccvsmoO5.s:123    .text.WriteLED:0000000000000034 $d
     /tmp/ccvsmoO5.s:129    .text.LEDMAT:0000000000000000 $t
     /tmp/ccvsmoO5.s:135    .text.LEDMAT:0000000000000000 LEDMAT
     /tmp/ccvsmoO5.s:194    .text.lvgl_init:0000000000000000 $t
     /tmp/ccvsmoO5.s:200    .text.lvgl_init:0000000000000000 lvgl_init
     /tmp/ccvsmoO5.s:256    .text.vApplicationTickHook:0000000000000000 $t
     /tmp/ccvsmoO5.s:262    .text.vApplicationTickHook:0000000000000000 vApplicationTickHook
     /tmp/ccvsmoO5.s:283    .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccvsmoO5.s:289    .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccvsmoO5.s:314    .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccvsmoO5.s:320    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccvsmoO5.s:326    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccvsmoO5.s:382    .text.MX_FREERTOS_Init:0000000000000050 $d
     /tmp/ccvsmoO5.s:424    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccvsmoO5.s:417    .bss.LEDTaskHandle:0000000000000000 LEDTaskHandle
     /tmp/ccvsmoO5.s:430    .bss.lvglTaskHandle:0000000000000000 lvglTaskHandle
     /tmp/ccvsmoO5.s:392    .rodata:0000000000000000 $d
     /tmp/ccvsmoO5.s:413    .bss.LEDTaskHandle:0000000000000000 $d
     /tmp/ccvsmoO5.s:420    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccvsmoO5.s:427    .bss.lvglTaskHandle:0000000000000000 $d
     /tmp/ccvsmoO5.s:433    .bss.xIdleStack:0000000000000000 $d
     /tmp/ccvsmoO5.s:437    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccvsmoO5.s:440    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/ccvsmoO5.s:444    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer

UNDEFINED SYMBOLS
osDelay
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi2
lv_init
lv_port_disp_init
lv_port_indev_init
wave_chart_init
wave_btn
distortion_list
THD_label
lv_timer_handler
lv_tick_inc
osThreadCreate
