ARM GAS  /tmp/ccX2d7Na.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_USART1_UART_Init:
  25              	.LFB65:
  26              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * @file    usart.c
   4:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/usart.c ****   *          of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/usart.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** /* USART1 init function */
  30:Core/Src/usart.c **** 
  31:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  32:Core/Src/usart.c **** {
ARM GAS  /tmp/ccX2d7Na.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  41:Core/Src/usart.c ****   huart1.Instance = USART1;
  36              		.loc 1 41 3 view .LVU1
  37              		.loc 1 41 19 is_stmt 0 view .LVU2
  38 0002 0A48     		ldr	r0, .L5
  39 0004 0A4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  42:Core/Src/usart.c ****   huart1.Init.BaudRate = 115200;
  41              		.loc 1 42 3 is_stmt 1 view .LVU3
  42              		.loc 1 42 24 is_stmt 0 view .LVU4
  43 0008 4FF4E133 		mov	r3, #115200
  44 000c 4360     		str	r3, [r0, #4]
  43:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  45              		.loc 1 43 3 is_stmt 1 view .LVU5
  46              		.loc 1 43 26 is_stmt 0 view .LVU6
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  44:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 44 3 is_stmt 1 view .LVU7
  50              		.loc 1 44 24 is_stmt 0 view .LVU8
  51 0012 C360     		str	r3, [r0, #12]
  45:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  52              		.loc 1 45 3 is_stmt 1 view .LVU9
  53              		.loc 1 45 22 is_stmt 0 view .LVU10
  54 0014 0361     		str	r3, [r0, #16]
  46:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  55              		.loc 1 46 3 is_stmt 1 view .LVU11
  56              		.loc 1 46 20 is_stmt 0 view .LVU12
  57 0016 0C22     		movs	r2, #12
  58 0018 4261     		str	r2, [r0, #20]
  47:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  59              		.loc 1 47 3 is_stmt 1 view .LVU13
  60              		.loc 1 47 25 is_stmt 0 view .LVU14
  61 001a 8361     		str	r3, [r0, #24]
  48:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  62              		.loc 1 48 3 is_stmt 1 view .LVU15
  63              		.loc 1 48 28 is_stmt 0 view .LVU16
  64 001c C361     		str	r3, [r0, #28]
  49:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  65              		.loc 1 49 3 is_stmt 1 view .LVU17
  66              		.loc 1 49 7 is_stmt 0 view .LVU18
ARM GAS  /tmp/ccX2d7Na.s 			page 3


  67 001e FFF7FEFF 		bl	HAL_UART_Init
  68              	.LVL0:
  69              		.loc 1 49 6 view .LVU19
  70 0022 00B9     		cbnz	r0, .L4
  71              	.L1:
  50:Core/Src/usart.c ****   {
  51:Core/Src/usart.c ****     Error_Handler();
  52:Core/Src/usart.c ****   }
  53:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  54:Core/Src/usart.c **** 
  55:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c **** }
  72              		.loc 1 57 1 view .LVU20
  73 0024 08BD     		pop	{r3, pc}
  74              	.L4:
  51:Core/Src/usart.c ****   }
  75              		.loc 1 51 5 is_stmt 1 view .LVU21
  76 0026 FFF7FEFF 		bl	Error_Handler
  77              	.LVL1:
  78              		.loc 1 57 1 is_stmt 0 view .LVU22
  79 002a FBE7     		b	.L1
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 002c 00000000 		.word	.LANCHOR0
  84 0030 00380140 		.word	1073821696
  85              		.cfi_endproc
  86              	.LFE65:
  88              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  89              		.align	1
  90              		.global	HAL_UART_MspInit
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	HAL_UART_MspInit:
  96              	.LVL2:
  97              	.LFB66:
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  60:Core/Src/usart.c **** {
  98              		.loc 1 60 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 24
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		.loc 1 60 1 is_stmt 0 view .LVU24
 103 0000 10B5     		push	{r4, lr}
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 14, -4
 108 0002 86B0     		sub	sp, sp, #24
 109              	.LCFI2:
 110              		.cfi_def_cfa_offset 32
  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 111              		.loc 1 62 3 is_stmt 1 view .LVU25
ARM GAS  /tmp/ccX2d7Na.s 			page 4


 112              		.loc 1 62 20 is_stmt 0 view .LVU26
 113 0004 0023     		movs	r3, #0
 114 0006 0293     		str	r3, [sp, #8]
 115 0008 0393     		str	r3, [sp, #12]
 116 000a 0493     		str	r3, [sp, #16]
 117 000c 0593     		str	r3, [sp, #20]
  63:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 118              		.loc 1 63 3 is_stmt 1 view .LVU27
 119              		.loc 1 63 16 is_stmt 0 view .LVU28
 120 000e 0268     		ldr	r2, [r0]
 121              		.loc 1 63 5 view .LVU29
 122 0010 1A4B     		ldr	r3, .L11
 123 0012 9A42     		cmp	r2, r3
 124 0014 01D0     		beq	.L10
 125              	.LVL3:
 126              	.L7:
  64:Core/Src/usart.c ****   {
  65:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  66:Core/Src/usart.c **** 
  67:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  68:Core/Src/usart.c ****     /* USART1 clock enable */
  69:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  70:Core/Src/usart.c **** 
  71:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  72:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  73:Core/Src/usart.c ****     PB6     ------> USART1_TX
  74:Core/Src/usart.c ****     PB7     ------> USART1_RX
  75:Core/Src/usart.c ****     */
  76:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  79:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  80:Core/Src/usart.c **** 
  81:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_7;
  82:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  83:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  84:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  85:Core/Src/usart.c **** 
  86:Core/Src/usart.c ****     __HAL_AFIO_REMAP_USART1_ENABLE();
  87:Core/Src/usart.c **** 
  88:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
  89:Core/Src/usart.c **** 
  90:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
  91:Core/Src/usart.c ****   }
  92:Core/Src/usart.c **** }
 127              		.loc 1 92 1 view .LVU30
 128 0016 06B0     		add	sp, sp, #24
 129              	.LCFI3:
 130              		.cfi_remember_state
 131              		.cfi_def_cfa_offset 8
 132              		@ sp needed
 133 0018 10BD     		pop	{r4, pc}
 134              	.LVL4:
 135              	.L10:
 136              	.LCFI4:
 137              		.cfi_restore_state
  69:Core/Src/usart.c **** 
ARM GAS  /tmp/ccX2d7Na.s 			page 5


 138              		.loc 1 69 5 is_stmt 1 view .LVU31
 139              	.LBB2:
  69:Core/Src/usart.c **** 
 140              		.loc 1 69 5 view .LVU32
  69:Core/Src/usart.c **** 
 141              		.loc 1 69 5 view .LVU33
 142 001a 03F55843 		add	r3, r3, #55296
 143 001e 9A69     		ldr	r2, [r3, #24]
 144 0020 42F48042 		orr	r2, r2, #16384
 145 0024 9A61     		str	r2, [r3, #24]
  69:Core/Src/usart.c **** 
 146              		.loc 1 69 5 view .LVU34
 147 0026 9A69     		ldr	r2, [r3, #24]
 148 0028 02F48042 		and	r2, r2, #16384
 149 002c 0092     		str	r2, [sp]
  69:Core/Src/usart.c **** 
 150              		.loc 1 69 5 view .LVU35
 151 002e 009A     		ldr	r2, [sp]
 152              	.LBE2:
  69:Core/Src/usart.c **** 
 153              		.loc 1 69 5 view .LVU36
  71:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 154              		.loc 1 71 5 view .LVU37
 155              	.LBB3:
  71:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 156              		.loc 1 71 5 view .LVU38
  71:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 157              		.loc 1 71 5 view .LVU39
 158 0030 9A69     		ldr	r2, [r3, #24]
 159 0032 42F00802 		orr	r2, r2, #8
 160 0036 9A61     		str	r2, [r3, #24]
  71:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 161              		.loc 1 71 5 view .LVU40
 162 0038 9B69     		ldr	r3, [r3, #24]
 163 003a 03F00803 		and	r3, r3, #8
 164 003e 0193     		str	r3, [sp, #4]
  71:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 165              		.loc 1 71 5 view .LVU41
 166 0040 019B     		ldr	r3, [sp, #4]
 167              	.LBE3:
  71:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 168              		.loc 1 71 5 view .LVU42
  76:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 169              		.loc 1 76 5 view .LVU43
  76:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 170              		.loc 1 76 25 is_stmt 0 view .LVU44
 171 0042 4023     		movs	r3, #64
 172 0044 0293     		str	r3, [sp, #8]
  77:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 173              		.loc 1 77 5 is_stmt 1 view .LVU45
  77:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 174              		.loc 1 77 26 is_stmt 0 view .LVU46
 175 0046 0223     		movs	r3, #2
 176 0048 0393     		str	r3, [sp, #12]
  78:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 177              		.loc 1 78 5 is_stmt 1 view .LVU47
  78:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/ccX2d7Na.s 			page 6


 178              		.loc 1 78 27 is_stmt 0 view .LVU48
 179 004a 0323     		movs	r3, #3
 180 004c 0593     		str	r3, [sp, #20]
  79:Core/Src/usart.c **** 
 181              		.loc 1 79 5 is_stmt 1 view .LVU49
 182 004e 0C4C     		ldr	r4, .L11+4
 183 0050 02A9     		add	r1, sp, #8
 184 0052 2046     		mov	r0, r4
 185              	.LVL5:
  79:Core/Src/usart.c **** 
 186              		.loc 1 79 5 is_stmt 0 view .LVU50
 187 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL6:
  81:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 189              		.loc 1 81 5 is_stmt 1 view .LVU51
  81:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 190              		.loc 1 81 25 is_stmt 0 view .LVU52
 191 0058 8023     		movs	r3, #128
 192 005a 0293     		str	r3, [sp, #8]
  82:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 193              		.loc 1 82 5 is_stmt 1 view .LVU53
  82:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 194              		.loc 1 82 26 is_stmt 0 view .LVU54
 195 005c 0023     		movs	r3, #0
 196 005e 0393     		str	r3, [sp, #12]
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 197              		.loc 1 83 5 is_stmt 1 view .LVU55
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 198              		.loc 1 83 26 is_stmt 0 view .LVU56
 199 0060 0493     		str	r3, [sp, #16]
  84:Core/Src/usart.c **** 
 200              		.loc 1 84 5 is_stmt 1 view .LVU57
 201 0062 02A9     		add	r1, sp, #8
 202 0064 2046     		mov	r0, r4
 203 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 204              	.LVL7:
  86:Core/Src/usart.c **** 
 205              		.loc 1 86 5 view .LVU58
 206              	.LBB4:
  86:Core/Src/usart.c **** 
 207              		.loc 1 86 5 view .LVU59
 208 006a 064A     		ldr	r2, .L11+8
 209 006c 5368     		ldr	r3, [r2, #4]
 210              	.LVL8:
  86:Core/Src/usart.c **** 
 211              		.loc 1 86 5 view .LVU60
  86:Core/Src/usart.c **** 
 212              		.loc 1 86 5 view .LVU61
 213 006e 43F0E063 		orr	r3, r3, #117440512
 214              	.LVL9:
  86:Core/Src/usart.c **** 
 215              		.loc 1 86 5 is_stmt 0 view .LVU62
 216 0072 43F00403 		orr	r3, r3, #4
 217              	.LVL10:
  86:Core/Src/usart.c **** 
 218              		.loc 1 86 5 is_stmt 1 view .LVU63
 219 0076 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccX2d7Na.s 			page 7


 220              	.LBE4:
  86:Core/Src/usart.c **** 
 221              		.loc 1 86 5 view .LVU64
 222              		.loc 1 92 1 is_stmt 0 view .LVU65
 223 0078 CDE7     		b	.L7
 224              	.L12:
 225 007a 00BF     		.align	2
 226              	.L11:
 227 007c 00380140 		.word	1073821696
 228 0080 000C0140 		.word	1073810432
 229 0084 00000140 		.word	1073807360
 230              		.cfi_endproc
 231              	.LFE66:
 233              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_UART_MspDeInit
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	HAL_UART_MspDeInit:
 241              	.LVL11:
 242              	.LFB67:
  93:Core/Src/usart.c **** 
  94:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  95:Core/Src/usart.c **** {
 243              		.loc 1 95 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		.loc 1 95 1 is_stmt 0 view .LVU67
 248 0000 08B5     		push	{r3, lr}
 249              	.LCFI5:
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 3, -8
 252              		.cfi_offset 14, -4
  96:Core/Src/usart.c **** 
  97:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 253              		.loc 1 97 3 is_stmt 1 view .LVU68
 254              		.loc 1 97 16 is_stmt 0 view .LVU69
 255 0002 0268     		ldr	r2, [r0]
 256              		.loc 1 97 5 view .LVU70
 257 0004 064B     		ldr	r3, .L17
 258 0006 9A42     		cmp	r2, r3
 259 0008 00D0     		beq	.L16
 260              	.LVL12:
 261              	.L13:
  98:Core/Src/usart.c ****   {
  99:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
 102:Core/Src/usart.c ****     /* Peripheral clock disable */
 103:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 104:Core/Src/usart.c **** 
 105:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 106:Core/Src/usart.c ****     PB6     ------> USART1_TX
 107:Core/Src/usart.c ****     PB7     ------> USART1_RX
 108:Core/Src/usart.c ****     */
ARM GAS  /tmp/ccX2d7Na.s 			page 8


 109:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 110:Core/Src/usart.c **** 
 111:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 112:Core/Src/usart.c **** 
 113:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 114:Core/Src/usart.c ****   }
 115:Core/Src/usart.c **** }
 262              		.loc 1 115 1 view .LVU71
 263 000a 08BD     		pop	{r3, pc}
 264              	.LVL13:
 265              	.L16:
 103:Core/Src/usart.c **** 
 266              		.loc 1 103 5 is_stmt 1 view .LVU72
 267 000c 054A     		ldr	r2, .L17+4
 268 000e 9369     		ldr	r3, [r2, #24]
 269 0010 23F48043 		bic	r3, r3, #16384
 270 0014 9361     		str	r3, [r2, #24]
 109:Core/Src/usart.c **** 
 271              		.loc 1 109 5 view .LVU73
 272 0016 C021     		movs	r1, #192
 273 0018 0348     		ldr	r0, .L17+8
 274              	.LVL14:
 109:Core/Src/usart.c **** 
 275              		.loc 1 109 5 is_stmt 0 view .LVU74
 276 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 277              	.LVL15:
 278              		.loc 1 115 1 view .LVU75
 279 001e F4E7     		b	.L13
 280              	.L18:
 281              		.align	2
 282              	.L17:
 283 0020 00380140 		.word	1073821696
 284 0024 00100240 		.word	1073876992
 285 0028 000C0140 		.word	1073810432
 286              		.cfi_endproc
 287              	.LFE67:
 289              		.section	.text._write,"ax",%progbits
 290              		.align	1
 291              		.global	_write
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	_write:
 297              	.LVL16:
 298              	.LFB71:
 116:Core/Src/usart.c **** 
 117:Core/Src/usart.c **** /* USER CODE BEGIN 1 */
 118:Core/Src/usart.c **** #if !defined(Printf)
 119:Core/Src/usart.c **** #define Printf
 120:Core/Src/usart.c **** 
 121:Core/Src/usart.c **** #include <stdio.h>
 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c **** int _write(int fd, char *ptr, int len)  
 124:Core/Src/usart.c **** {  
 299              		.loc 1 124 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccX2d7Na.s 			page 9


 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		.loc 1 124 1 is_stmt 0 view .LVU77
 304 0000 10B5     		push	{r4, lr}
 305              	.LCFI6:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 4, -8
 308              		.cfi_offset 14, -4
 309 0002 1446     		mov	r4, r2
 125:Core/Src/usart.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)ptr, len, 0xFFFF);
 310              		.loc 1 125 3 is_stmt 1 view .LVU78
 311 0004 4FF6FF73 		movw	r3, #65535
 312 0008 92B2     		uxth	r2, r2
 313              	.LVL17:
 314              		.loc 1 125 3 is_stmt 0 view .LVU79
 315 000a 0248     		ldr	r0, .L21
 316              	.LVL18:
 317              		.loc 1 125 3 view .LVU80
 318 000c FFF7FEFF 		bl	HAL_UART_Transmit
 319              	.LVL19:
 126:Core/Src/usart.c ****   return len;
 320              		.loc 1 126 3 is_stmt 1 view .LVU81
 127:Core/Src/usart.c **** }
 321              		.loc 1 127 1 is_stmt 0 view .LVU82
 322 0010 2046     		mov	r0, r4
 323 0012 10BD     		pop	{r4, pc}
 324              	.LVL20:
 325              	.L22:
 326              		.loc 1 127 1 view .LVU83
 327              		.align	2
 328              	.L21:
 329 0014 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE71:
 333              		.global	huart1
 334              		.section	.bss.huart1,"aw",%nobits
 335              		.align	2
 336              		.set	.LANCHOR0,. + 0
 339              	huart1:
 340 0000 00000000 		.space	68
 340      00000000 
 340      00000000 
 340      00000000 
 340      00000000 
 341              		.text
 342              	.Letext0:
 343              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 344              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 345              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 346              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 347              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 348              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 349              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 350              		.file 9 "Core/Inc/usart.h"
 351              		.file 10 "Core/Inc/main.h"
ARM GAS  /tmp/ccX2d7Na.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccX2d7Na.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccX2d7Na.s:24     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccX2d7Na.s:83     .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccX2d7Na.s:89     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccX2d7Na.s:95     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccX2d7Na.s:227    .text.HAL_UART_MspInit:000000000000007c $d
     /tmp/ccX2d7Na.s:234    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccX2d7Na.s:240    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccX2d7Na.s:283    .text.HAL_UART_MspDeInit:0000000000000020 $d
     /tmp/ccX2d7Na.s:290    .text._write:0000000000000000 $t
     /tmp/ccX2d7Na.s:296    .text._write:0000000000000000 _write
     /tmp/ccX2d7Na.s:329    .text._write:0000000000000014 $d
     /tmp/ccX2d7Na.s:339    .bss.huart1:0000000000000000 huart1
     /tmp/ccX2d7Na.s:335    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
HAL_UART_Transmit
