ARM GAS  /tmp/cca6cWfI.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_Base_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_TIM_Base_MspInit:
  25              	.LVL0:
  26              	.LFB66:
  27              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /**
   2:Core/Src/tim.c ****   ******************************************************************************
   3:Core/Src/tim.c ****   * @file    tim.c
   4:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/tim.c ****   *          of the TIM instances.
   6:Core/Src/tim.c ****   ******************************************************************************
   7:Core/Src/tim.c ****   * @attention
   8:Core/Src/tim.c ****   *
   9:Core/Src/tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/tim.c ****   *
  12:Core/Src/tim.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/tim.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/tim.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/tim.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** 
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM1 init function */
  30:Core/Src/tim.c **** void MX_TIM1_Init(void)
  31:Core/Src/tim.c **** {
ARM GAS  /tmp/cca6cWfI.s 			page 2


  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  41:Core/Src/tim.c **** 
  42:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  45:Core/Src/tim.c ****   htim1.Instance = TIM1;
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 1440-1;
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  48:Core/Src/tim.c ****   htim1.Init.Period = 1000-1;
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  53:Core/Src/tim.c ****   {
  54:Core/Src/tim.c ****     Error_Handler();
  55:Core/Src/tim.c ****   }
  56:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  58:Core/Src/tim.c ****   {
  59:Core/Src/tim.c ****     Error_Handler();
  60:Core/Src/tim.c ****   }
  61:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  62:Core/Src/tim.c ****   {
  63:Core/Src/tim.c ****     Error_Handler();
  64:Core/Src/tim.c ****   }
  65:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  66:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  67:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  68:Core/Src/tim.c ****   {
  69:Core/Src/tim.c ****     Error_Handler();
  70:Core/Src/tim.c ****   }
  71:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  72:Core/Src/tim.c ****   sConfigOC.Pulse = 100-1;
  73:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  74:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  75:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  76:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  77:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  78:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  79:Core/Src/tim.c ****   {
  80:Core/Src/tim.c ****     Error_Handler();
  81:Core/Src/tim.c ****   }
  82:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  83:Core/Src/tim.c ****   {
  84:Core/Src/tim.c ****     Error_Handler();
  85:Core/Src/tim.c ****   }
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  /tmp/cca6cWfI.s 			page 3


  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  93:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  94:Core/Src/tim.c ****   {
  95:Core/Src/tim.c ****     Error_Handler();
  96:Core/Src/tim.c ****   }
  97:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  98:Core/Src/tim.c ****   
  99:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
 100:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 101:Core/Src/tim.c **** 
 102:Core/Src/tim.c **** }
 103:Core/Src/tim.c **** 
 104:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 105:Core/Src/tim.c **** {
  28              		.loc 1 105 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 106:Core/Src/tim.c **** 
 107:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
  33              		.loc 1 107 3 view .LVU1
  34              		.loc 1 107 20 is_stmt 0 view .LVU2
  35 0000 0268     		ldr	r2, [r0]
  36              		.loc 1 107 5 view .LVU3
  37 0002 094B     		ldr	r3, .L8
  38 0004 9A42     		cmp	r2, r3
  39 0006 00D0     		beq	.L7
  40 0008 7047     		bx	lr
  41              	.L7:
 105:Core/Src/tim.c **** 
  42              		.loc 1 105 1 view .LVU4
  43 000a 82B0     		sub	sp, sp, #8
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
 108:Core/Src/tim.c ****   {
 109:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 112:Core/Src/tim.c ****     /* TIM1 clock enable */
 113:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
  46              		.loc 1 113 5 is_stmt 1 view .LVU5
  47              	.LBB2:
  48              		.loc 1 113 5 view .LVU6
  49              		.loc 1 113 5 view .LVU7
  50 000c 03F56443 		add	r3, r3, #58368
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F40062 		orr	r2, r2, #2048
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 113 5 view .LVU8
  55 0018 9B69     		ldr	r3, [r3, #24]
  56 001a 03F40063 		and	r3, r3, #2048
  57 001e 0193     		str	r3, [sp, #4]
  58              		.loc 1 113 5 view .LVU9
ARM GAS  /tmp/cca6cWfI.s 			page 4


  59 0020 019B     		ldr	r3, [sp, #4]
  60              	.LBE2:
  61              		.loc 1 113 5 view .LVU10
 114:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 115:Core/Src/tim.c **** 
 116:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 117:Core/Src/tim.c ****   }
 118:Core/Src/tim.c **** }
  62              		.loc 1 118 1 is_stmt 0 view .LVU11
  63 0022 02B0     		add	sp, sp, #8
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 0
  66              		@ sp needed
  67 0024 7047     		bx	lr
  68              	.L9:
  69 0026 00BF     		.align	2
  70              	.L8:
  71 0028 002C0140 		.word	1073818624
  72              		.cfi_endproc
  73              	.LFE66:
  75              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  76              		.align	1
  77              		.global	HAL_TIM_MspPostInit
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	HAL_TIM_MspPostInit:
  83              	.LVL1:
  84              	.LFB67:
 119:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 120:Core/Src/tim.c **** {
  85              		.loc 1 120 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 24
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 120 1 is_stmt 0 view .LVU13
  90 0000 00B5     		push	{lr}
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 14, -4
  94 0002 87B0     		sub	sp, sp, #28
  95              	.LCFI3:
  96              		.cfi_def_cfa_offset 32
 121:Core/Src/tim.c **** 
 122:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  97              		.loc 1 122 3 is_stmt 1 view .LVU14
  98              		.loc 1 122 20 is_stmt 0 view .LVU15
  99 0004 0023     		movs	r3, #0
 100 0006 0293     		str	r3, [sp, #8]
 101 0008 0393     		str	r3, [sp, #12]
 102 000a 0493     		str	r3, [sp, #16]
 103 000c 0593     		str	r3, [sp, #20]
 123:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 104              		.loc 1 123 3 is_stmt 1 view .LVU16
 105              		.loc 1 123 15 is_stmt 0 view .LVU17
 106 000e 0268     		ldr	r2, [r0]
 107              		.loc 1 123 5 view .LVU18
ARM GAS  /tmp/cca6cWfI.s 			page 5


 108 0010 0D4B     		ldr	r3, .L14
 109 0012 9A42     		cmp	r2, r3
 110 0014 02D0     		beq	.L13
 111              	.LVL2:
 112              	.L10:
 124:Core/Src/tim.c ****   {
 125:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 126:Core/Src/tim.c **** 
 127:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 128:Core/Src/tim.c **** 
 129:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 130:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 131:Core/Src/tim.c ****     PA8     ------> TIM1_CH1
 132:Core/Src/tim.c ****     PA9     ------> TIM1_CH2
 133:Core/Src/tim.c ****     */
 134:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 135:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 136:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 138:Core/Src/tim.c **** 
 139:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 140:Core/Src/tim.c **** 
 141:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 142:Core/Src/tim.c ****   }
 143:Core/Src/tim.c **** 
 144:Core/Src/tim.c **** }
 113              		.loc 1 144 1 view .LVU19
 114 0016 07B0     		add	sp, sp, #28
 115              	.LCFI4:
 116              		.cfi_remember_state
 117              		.cfi_def_cfa_offset 4
 118              		@ sp needed
 119 0018 5DF804FB 		ldr	pc, [sp], #4
 120              	.LVL3:
 121              	.L13:
 122              	.LCFI5:
 123              		.cfi_restore_state
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 124              		.loc 1 129 5 is_stmt 1 view .LVU20
 125              	.LBB3:
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 126              		.loc 1 129 5 view .LVU21
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 127              		.loc 1 129 5 view .LVU22
 128 001c 03F56443 		add	r3, r3, #58368
 129 0020 9A69     		ldr	r2, [r3, #24]
 130 0022 42F00402 		orr	r2, r2, #4
 131 0026 9A61     		str	r2, [r3, #24]
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 132              		.loc 1 129 5 view .LVU23
 133 0028 9B69     		ldr	r3, [r3, #24]
 134 002a 03F00403 		and	r3, r3, #4
 135 002e 0193     		str	r3, [sp, #4]
 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 136              		.loc 1 129 5 view .LVU24
 137 0030 019B     		ldr	r3, [sp, #4]
 138              	.LBE3:
ARM GAS  /tmp/cca6cWfI.s 			page 6


 129:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 139              		.loc 1 129 5 view .LVU25
 134:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 140              		.loc 1 134 5 view .LVU26
 134:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 141              		.loc 1 134 25 is_stmt 0 view .LVU27
 142 0032 4FF44073 		mov	r3, #768
 143 0036 0293     		str	r3, [sp, #8]
 135:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 144              		.loc 1 135 5 is_stmt 1 view .LVU28
 135:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 145              		.loc 1 135 26 is_stmt 0 view .LVU29
 146 0038 0223     		movs	r3, #2
 147 003a 0393     		str	r3, [sp, #12]
 136:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148              		.loc 1 136 5 is_stmt 1 view .LVU30
 136:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 149              		.loc 1 136 27 is_stmt 0 view .LVU31
 150 003c 0593     		str	r3, [sp, #20]
 137:Core/Src/tim.c **** 
 151              		.loc 1 137 5 is_stmt 1 view .LVU32
 152 003e 02A9     		add	r1, sp, #8
 153 0040 0248     		ldr	r0, .L14+4
 154              	.LVL4:
 137:Core/Src/tim.c **** 
 155              		.loc 1 137 5 is_stmt 0 view .LVU33
 156 0042 FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL5:
 158              		.loc 1 144 1 view .LVU34
 159 0046 E6E7     		b	.L10
 160              	.L15:
 161              		.align	2
 162              	.L14:
 163 0048 002C0140 		.word	1073818624
 164 004c 00080140 		.word	1073809408
 165              		.cfi_endproc
 166              	.LFE67:
 168              		.section	.text.MX_TIM1_Init,"ax",%progbits
 169              		.align	1
 170              		.global	MX_TIM1_Init
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 175              	MX_TIM1_Init:
 176              	.LFB65:
  31:Core/Src/tim.c **** 
 177              		.loc 1 31 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 88
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 10B5     		push	{r4, lr}
 182              	.LCFI6:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 186 0002 96B0     		sub	sp, sp, #88
 187              	.LCFI7:
ARM GAS  /tmp/cca6cWfI.s 			page 7


 188              		.cfi_def_cfa_offset 96
  37:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 189              		.loc 1 37 3 view .LVU36
  37:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 190              		.loc 1 37 26 is_stmt 0 view .LVU37
 191 0004 0024     		movs	r4, #0
 192 0006 1294     		str	r4, [sp, #72]
 193 0008 1394     		str	r4, [sp, #76]
 194 000a 1494     		str	r4, [sp, #80]
 195 000c 1594     		str	r4, [sp, #84]
  38:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 196              		.loc 1 38 3 is_stmt 1 view .LVU38
  38:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 197              		.loc 1 38 27 is_stmt 0 view .LVU39
 198 000e 1094     		str	r4, [sp, #64]
 199 0010 1194     		str	r4, [sp, #68]
  39:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 200              		.loc 1 39 3 is_stmt 1 view .LVU40
  39:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 201              		.loc 1 39 22 is_stmt 0 view .LVU41
 202 0012 0994     		str	r4, [sp, #36]
 203 0014 0A94     		str	r4, [sp, #40]
 204 0016 0B94     		str	r4, [sp, #44]
 205 0018 0C94     		str	r4, [sp, #48]
 206 001a 0D94     		str	r4, [sp, #52]
 207 001c 0E94     		str	r4, [sp, #56]
 208 001e 0F94     		str	r4, [sp, #60]
  40:Core/Src/tim.c **** 
 209              		.loc 1 40 3 is_stmt 1 view .LVU42
  40:Core/Src/tim.c **** 
 210              		.loc 1 40 34 is_stmt 0 view .LVU43
 211 0020 2022     		movs	r2, #32
 212 0022 2146     		mov	r1, r4
 213 0024 01A8     		add	r0, sp, #4
 214 0026 FFF7FEFF 		bl	memset
 215              	.LVL6:
  45:Core/Src/tim.c ****   htim1.Init.Prescaler = 1440-1;
 216              		.loc 1 45 3 is_stmt 1 view .LVU44
  45:Core/Src/tim.c ****   htim1.Init.Prescaler = 1440-1;
 217              		.loc 1 45 18 is_stmt 0 view .LVU45
 218 002a 3348     		ldr	r0, .L32
 219 002c 334B     		ldr	r3, .L32+4
 220 002e 0360     		str	r3, [r0]
  46:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 221              		.loc 1 46 3 is_stmt 1 view .LVU46
  46:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 222              		.loc 1 46 24 is_stmt 0 view .LVU47
 223 0030 40F29F53 		movw	r3, #1439
 224 0034 4360     		str	r3, [r0, #4]
  47:Core/Src/tim.c ****   htim1.Init.Period = 1000-1;
 225              		.loc 1 47 3 is_stmt 1 view .LVU48
  47:Core/Src/tim.c ****   htim1.Init.Period = 1000-1;
 226              		.loc 1 47 26 is_stmt 0 view .LVU49
 227 0036 8460     		str	r4, [r0, #8]
  48:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 228              		.loc 1 48 3 is_stmt 1 view .LVU50
  48:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/cca6cWfI.s 			page 8


 229              		.loc 1 48 21 is_stmt 0 view .LVU51
 230 0038 40F2E733 		movw	r3, #999
 231 003c C360     		str	r3, [r0, #12]
  49:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 232              		.loc 1 49 3 is_stmt 1 view .LVU52
  49:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 233              		.loc 1 49 28 is_stmt 0 view .LVU53
 234 003e 0461     		str	r4, [r0, #16]
  50:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 235              		.loc 1 50 3 is_stmt 1 view .LVU54
  50:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 236              		.loc 1 50 32 is_stmt 0 view .LVU55
 237 0040 4461     		str	r4, [r0, #20]
  51:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 238              		.loc 1 51 3 is_stmt 1 view .LVU56
  51:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 239              		.loc 1 51 32 is_stmt 0 view .LVU57
 240 0042 8461     		str	r4, [r0, #24]
  52:Core/Src/tim.c ****   {
 241              		.loc 1 52 3 is_stmt 1 view .LVU58
  52:Core/Src/tim.c ****   {
 242              		.loc 1 52 7 is_stmt 0 view .LVU59
 243 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 244              	.LVL7:
  52:Core/Src/tim.c ****   {
 245              		.loc 1 52 6 view .LVU60
 246 0048 0028     		cmp	r0, #0
 247 004a 3FD1     		bne	.L25
 248              	.L17:
  56:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 249              		.loc 1 56 3 is_stmt 1 view .LVU61
  56:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 250              		.loc 1 56 34 is_stmt 0 view .LVU62
 251 004c 4FF48053 		mov	r3, #4096
 252 0050 1293     		str	r3, [sp, #72]
  57:Core/Src/tim.c ****   {
 253              		.loc 1 57 3 is_stmt 1 view .LVU63
  57:Core/Src/tim.c ****   {
 254              		.loc 1 57 7 is_stmt 0 view .LVU64
 255 0052 12A9     		add	r1, sp, #72
 256 0054 2848     		ldr	r0, .L32
 257 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 258              	.LVL8:
  57:Core/Src/tim.c ****   {
 259              		.loc 1 57 6 view .LVU65
 260 005a 0028     		cmp	r0, #0
 261 005c 39D1     		bne	.L26
 262              	.L18:
  61:Core/Src/tim.c ****   {
 263              		.loc 1 61 3 is_stmt 1 view .LVU66
  61:Core/Src/tim.c ****   {
 264              		.loc 1 61 7 is_stmt 0 view .LVU67
 265 005e 2648     		ldr	r0, .L32
 266 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 267              	.LVL9:
  61:Core/Src/tim.c ****   {
 268              		.loc 1 61 6 view .LVU68
ARM GAS  /tmp/cca6cWfI.s 			page 9


 269 0064 0028     		cmp	r0, #0
 270 0066 37D1     		bne	.L27
 271              	.L19:
  65:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 272              		.loc 1 65 3 is_stmt 1 view .LVU69
  65:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 273              		.loc 1 65 37 is_stmt 0 view .LVU70
 274 0068 0023     		movs	r3, #0
 275 006a 1093     		str	r3, [sp, #64]
  66:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 276              		.loc 1 66 3 is_stmt 1 view .LVU71
  66:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 277              		.loc 1 66 33 is_stmt 0 view .LVU72
 278 006c 1193     		str	r3, [sp, #68]
  67:Core/Src/tim.c ****   {
 279              		.loc 1 67 3 is_stmt 1 view .LVU73
  67:Core/Src/tim.c ****   {
 280              		.loc 1 67 7 is_stmt 0 view .LVU74
 281 006e 10A9     		add	r1, sp, #64
 282 0070 2148     		ldr	r0, .L32
 283 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 284              	.LVL10:
  67:Core/Src/tim.c ****   {
 285              		.loc 1 67 6 view .LVU75
 286 0076 0028     		cmp	r0, #0
 287 0078 31D1     		bne	.L28
 288              	.L20:
  71:Core/Src/tim.c ****   sConfigOC.Pulse = 100-1;
 289              		.loc 1 71 3 is_stmt 1 view .LVU76
  71:Core/Src/tim.c ****   sConfigOC.Pulse = 100-1;
 290              		.loc 1 71 20 is_stmt 0 view .LVU77
 291 007a 6023     		movs	r3, #96
 292 007c 0993     		str	r3, [sp, #36]
  72:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 293              		.loc 1 72 3 is_stmt 1 view .LVU78
  72:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 294              		.loc 1 72 19 is_stmt 0 view .LVU79
 295 007e 6323     		movs	r3, #99
 296 0080 0A93     		str	r3, [sp, #40]
  73:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 297              		.loc 1 73 3 is_stmt 1 view .LVU80
  73:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 298              		.loc 1 73 24 is_stmt 0 view .LVU81
 299 0082 0022     		movs	r2, #0
 300 0084 0B92     		str	r2, [sp, #44]
  74:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 301              		.loc 1 74 3 is_stmt 1 view .LVU82
  74:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 302              		.loc 1 74 25 is_stmt 0 view .LVU83
 303 0086 0C92     		str	r2, [sp, #48]
  75:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 304              		.loc 1 75 3 is_stmt 1 view .LVU84
  75:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 305              		.loc 1 75 24 is_stmt 0 view .LVU85
 306 0088 0D92     		str	r2, [sp, #52]
  76:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 307              		.loc 1 76 3 is_stmt 1 view .LVU86
ARM GAS  /tmp/cca6cWfI.s 			page 10


  76:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 308              		.loc 1 76 25 is_stmt 0 view .LVU87
 309 008a 0E92     		str	r2, [sp, #56]
  77:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 310              		.loc 1 77 3 is_stmt 1 view .LVU88
  77:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 311              		.loc 1 77 26 is_stmt 0 view .LVU89
 312 008c 0F92     		str	r2, [sp, #60]
  78:Core/Src/tim.c ****   {
 313              		.loc 1 78 3 is_stmt 1 view .LVU90
  78:Core/Src/tim.c ****   {
 314              		.loc 1 78 7 is_stmt 0 view .LVU91
 315 008e 09A9     		add	r1, sp, #36
 316 0090 1948     		ldr	r0, .L32
 317 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 318              	.LVL11:
  78:Core/Src/tim.c ****   {
 319              		.loc 1 78 6 view .LVU92
 320 0096 28BB     		cbnz	r0, .L29
 321              	.L21:
  82:Core/Src/tim.c ****   {
 322              		.loc 1 82 3 is_stmt 1 view .LVU93
  82:Core/Src/tim.c ****   {
 323              		.loc 1 82 7 is_stmt 0 view .LVU94
 324 0098 0422     		movs	r2, #4
 325 009a 09A9     		add	r1, sp, #36
 326 009c 1648     		ldr	r0, .L32
 327 009e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 328              	.LVL12:
  82:Core/Src/tim.c ****   {
 329              		.loc 1 82 6 view .LVU95
 330 00a2 10BB     		cbnz	r0, .L30
 331              	.L22:
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 332              		.loc 1 86 3 is_stmt 1 view .LVU96
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 333              		.loc 1 86 40 is_stmt 0 view .LVU97
 334 00a4 0023     		movs	r3, #0
 335 00a6 0193     		str	r3, [sp, #4]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 336              		.loc 1 87 3 is_stmt 1 view .LVU98
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 337              		.loc 1 87 41 is_stmt 0 view .LVU99
 338 00a8 0293     		str	r3, [sp, #8]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 339              		.loc 1 88 3 is_stmt 1 view .LVU100
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 340              		.loc 1 88 34 is_stmt 0 view .LVU101
 341 00aa 0393     		str	r3, [sp, #12]
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 342              		.loc 1 89 3 is_stmt 1 view .LVU102
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 343              		.loc 1 89 33 is_stmt 0 view .LVU103
 344 00ac 0493     		str	r3, [sp, #16]
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 345              		.loc 1 90 3 is_stmt 1 view .LVU104
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
ARM GAS  /tmp/cca6cWfI.s 			page 11


 346              		.loc 1 90 35 is_stmt 0 view .LVU105
 347 00ae 0593     		str	r3, [sp, #20]
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 348              		.loc 1 91 3 is_stmt 1 view .LVU106
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 349              		.loc 1 91 38 is_stmt 0 view .LVU107
 350 00b0 4FF40052 		mov	r2, #8192
 351 00b4 0692     		str	r2, [sp, #24]
  92:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 352              		.loc 1 92 3 is_stmt 1 view .LVU108
  92:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 353              		.loc 1 92 40 is_stmt 0 view .LVU109
 354 00b6 0893     		str	r3, [sp, #32]
  93:Core/Src/tim.c ****   {
 355              		.loc 1 93 3 is_stmt 1 view .LVU110
  93:Core/Src/tim.c ****   {
 356              		.loc 1 93 7 is_stmt 0 view .LVU111
 357 00b8 01A9     		add	r1, sp, #4
 358 00ba 0F48     		ldr	r0, .L32
 359 00bc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 360              	.LVL13:
  93:Core/Src/tim.c ****   {
 361              		.loc 1 93 6 view .LVU112
 362 00c0 B0B9     		cbnz	r0, .L31
 363              	.L23:
 100:Core/Src/tim.c **** 
 364              		.loc 1 100 3 is_stmt 1 view .LVU113
 365 00c2 0D48     		ldr	r0, .L32
 366 00c4 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 367              	.LVL14:
 102:Core/Src/tim.c **** 
 368              		.loc 1 102 1 is_stmt 0 view .LVU114
 369 00c8 16B0     		add	sp, sp, #88
 370              	.LCFI8:
 371              		.cfi_remember_state
 372              		.cfi_def_cfa_offset 8
 373              		@ sp needed
 374 00ca 10BD     		pop	{r4, pc}
 375              	.L25:
 376              	.LCFI9:
 377              		.cfi_restore_state
  54:Core/Src/tim.c ****   }
 378              		.loc 1 54 5 is_stmt 1 view .LVU115
 379 00cc FFF7FEFF 		bl	Error_Handler
 380              	.LVL15:
 381 00d0 BCE7     		b	.L17
 382              	.L26:
  59:Core/Src/tim.c ****   }
 383              		.loc 1 59 5 view .LVU116
 384 00d2 FFF7FEFF 		bl	Error_Handler
 385              	.LVL16:
 386 00d6 C2E7     		b	.L18
 387              	.L27:
  63:Core/Src/tim.c ****   }
 388              		.loc 1 63 5 view .LVU117
 389 00d8 FFF7FEFF 		bl	Error_Handler
 390              	.LVL17:
ARM GAS  /tmp/cca6cWfI.s 			page 12


 391 00dc C4E7     		b	.L19
 392              	.L28:
  69:Core/Src/tim.c ****   }
 393              		.loc 1 69 5 view .LVU118
 394 00de FFF7FEFF 		bl	Error_Handler
 395              	.LVL18:
 396 00e2 CAE7     		b	.L20
 397              	.L29:
  80:Core/Src/tim.c ****   }
 398              		.loc 1 80 5 view .LVU119
 399 00e4 FFF7FEFF 		bl	Error_Handler
 400              	.LVL19:
 401 00e8 D6E7     		b	.L21
 402              	.L30:
  84:Core/Src/tim.c ****   }
 403              		.loc 1 84 5 view .LVU120
 404 00ea FFF7FEFF 		bl	Error_Handler
 405              	.LVL20:
 406 00ee D9E7     		b	.L22
 407              	.L31:
  95:Core/Src/tim.c ****   }
 408              		.loc 1 95 5 view .LVU121
 409 00f0 FFF7FEFF 		bl	Error_Handler
 410              	.LVL21:
 411 00f4 E5E7     		b	.L23
 412              	.L33:
 413 00f6 00BF     		.align	2
 414              	.L32:
 415 00f8 00000000 		.word	.LANCHOR0
 416 00fc 002C0140 		.word	1073818624
 417              		.cfi_endproc
 418              	.LFE65:
 420              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 421              		.align	1
 422              		.global	HAL_TIM_Base_MspDeInit
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 427              	HAL_TIM_Base_MspDeInit:
 428              	.LVL22:
 429              	.LFB68:
 145:Core/Src/tim.c **** 
 146:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 147:Core/Src/tim.c **** {
 430              		.loc 1 147 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 148:Core/Src/tim.c **** 
 149:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 435              		.loc 1 149 3 view .LVU123
 436              		.loc 1 149 20 is_stmt 0 view .LVU124
 437 0000 0268     		ldr	r2, [r0]
 438              		.loc 1 149 5 view .LVU125
 439 0002 054B     		ldr	r3, .L37
 440 0004 9A42     		cmp	r2, r3
ARM GAS  /tmp/cca6cWfI.s 			page 13


 441 0006 00D0     		beq	.L36
 442              	.L34:
 150:Core/Src/tim.c ****   {
 151:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 152:Core/Src/tim.c **** 
 153:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 154:Core/Src/tim.c ****     /* Peripheral clock disable */
 155:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 156:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 157:Core/Src/tim.c **** 
 158:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 159:Core/Src/tim.c ****   }
 160:Core/Src/tim.c **** }
 443              		.loc 1 160 1 view .LVU126
 444 0008 7047     		bx	lr
 445              	.L36:
 155:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 446              		.loc 1 155 5 is_stmt 1 view .LVU127
 447 000a 044A     		ldr	r2, .L37+4
 448 000c 9369     		ldr	r3, [r2, #24]
 449 000e 23F40063 		bic	r3, r3, #2048
 450 0012 9361     		str	r3, [r2, #24]
 451              		.loc 1 160 1 is_stmt 0 view .LVU128
 452 0014 F8E7     		b	.L34
 453              	.L38:
 454 0016 00BF     		.align	2
 455              	.L37:
 456 0018 002C0140 		.word	1073818624
 457 001c 00100240 		.word	1073876992
 458              		.cfi_endproc
 459              	.LFE68:
 461              		.global	htim1
 462              		.section	.bss.htim1,"aw",%nobits
 463              		.align	2
 464              		.set	.LANCHOR0,. + 0
 467              	htim1:
 468 0000 00000000 		.space	72
 468      00000000 
 468      00000000 
 468      00000000 
 468      00000000 
 469              		.text
 470              	.Letext0:
 471              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 472              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 473              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 474              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 475              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 476              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 477              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 478              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 479              		.file 10 "Core/Inc/main.h"
 480              		.file 11 "Core/Inc/tim.h"
 481              		.file 12 "<built-in>"
ARM GAS  /tmp/cca6cWfI.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/cca6cWfI.s:18     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/cca6cWfI.s:24     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/cca6cWfI.s:71     .text.HAL_TIM_Base_MspInit:0000000000000028 $d
     /tmp/cca6cWfI.s:76     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/cca6cWfI.s:82     .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/cca6cWfI.s:163    .text.HAL_TIM_MspPostInit:0000000000000048 $d
     /tmp/cca6cWfI.s:169    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cca6cWfI.s:175    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cca6cWfI.s:415    .text.MX_TIM1_Init:00000000000000f8 $d
     /tmp/cca6cWfI.s:421    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/cca6cWfI.s:427    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/cca6cWfI.s:456    .text.HAL_TIM_Base_MspDeInit:0000000000000018 $d
     /tmp/cca6cWfI.s:467    .bss.htim1:0000000000000000 htim1
     /tmp/cca6cWfI.s:463    .bss.htim1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
