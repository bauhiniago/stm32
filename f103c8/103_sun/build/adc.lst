ARM GAS  /tmp/ccRFFjX3.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_ADC1_Init:
  25              	.LFB65:
  26              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * @file    adc.c
   4:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/adc.c ****   *          of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * @attention
   8:Core/Src/adc.c ****   *
   9:Core/Src/adc.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/adc.c ****   * All rights reserved.</center></h2>
  11:Core/Src/adc.c ****   *
  12:Core/Src/adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/adc.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/adc.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** 
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc1;
  28:Core/Src/adc.c **** ADC_HandleTypeDef hadc2;
  29:Core/Src/adc.c **** 
  30:Core/Src/adc.c **** /* ADC1 init function */
  31:Core/Src/adc.c **** void MX_ADC1_Init(void)
  32:Core/Src/adc.c **** {
ARM GAS  /tmp/ccRFFjX3.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 24
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 0 */
  35:Core/Src/adc.c **** 
  36:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 0 */
  37:Core/Src/adc.c **** 
  38:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  38              		.loc 1 38 3 view .LVU1
  39              		.loc 1 38 26 is_stmt 0 view .LVU2
  40 0004 0023     		movs	r3, #0
  41 0006 0193     		str	r3, [sp, #4]
  42 0008 0293     		str	r3, [sp, #8]
  43 000a 0393     		str	r3, [sp, #12]
  39:Core/Src/adc.c **** 
  40:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 1 */
  41:Core/Src/adc.c **** 
  42:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 1 */
  43:Core/Src/adc.c ****   /** Common config
  44:Core/Src/adc.c ****   */
  45:Core/Src/adc.c ****   hadc1.Instance = ADC1;
  44              		.loc 1 45 3 is_stmt 1 view .LVU3
  45              		.loc 1 45 18 is_stmt 0 view .LVU4
  46 000c 1048     		ldr	r0, .L7
  47 000e 114A     		ldr	r2, .L7+4
  48 0010 0260     		str	r2, [r0]
  46:Core/Src/adc.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  49              		.loc 1 46 3 is_stmt 1 view .LVU5
  50              		.loc 1 46 27 is_stmt 0 view .LVU6
  51 0012 8360     		str	r3, [r0, #8]
  47:Core/Src/adc.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
  52              		.loc 1 47 3 is_stmt 1 view .LVU7
  53              		.loc 1 47 33 is_stmt 0 view .LVU8
  54 0014 0373     		strb	r3, [r0, #12]
  48:Core/Src/adc.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  55              		.loc 1 48 3 is_stmt 1 view .LVU9
  56              		.loc 1 48 36 is_stmt 0 view .LVU10
  57 0016 0375     		strb	r3, [r0, #20]
  49:Core/Src/adc.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  58              		.loc 1 49 3 is_stmt 1 view .LVU11
  59              		.loc 1 49 31 is_stmt 0 view .LVU12
  60 0018 4FF46022 		mov	r2, #917504
  61 001c C261     		str	r2, [r0, #28]
  50:Core/Src/adc.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  62              		.loc 1 50 3 is_stmt 1 view .LVU13
  63              		.loc 1 50 24 is_stmt 0 view .LVU14
  64 001e 4360     		str	r3, [r0, #4]
  51:Core/Src/adc.c ****   hadc1.Init.NbrOfConversion = 1;
ARM GAS  /tmp/ccRFFjX3.s 			page 3


  65              		.loc 1 51 3 is_stmt 1 view .LVU15
  66              		.loc 1 51 30 is_stmt 0 view .LVU16
  67 0020 0123     		movs	r3, #1
  68 0022 0361     		str	r3, [r0, #16]
  52:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  69              		.loc 1 52 3 is_stmt 1 view .LVU17
  70              		.loc 1 52 7 is_stmt 0 view .LVU18
  71 0024 FFF7FEFF 		bl	HAL_ADC_Init
  72              	.LVL0:
  73              		.loc 1 52 6 view .LVU19
  74 0028 60B9     		cbnz	r0, .L5
  75              	.L2:
  53:Core/Src/adc.c ****   {
  54:Core/Src/adc.c ****     Error_Handler();
  55:Core/Src/adc.c ****   }
  56:Core/Src/adc.c ****   /** Configure Regular Channel
  57:Core/Src/adc.c ****   */
  58:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
  76              		.loc 1 58 3 is_stmt 1 view .LVU20
  77              		.loc 1 58 19 is_stmt 0 view .LVU21
  78 002a 0023     		movs	r3, #0
  79 002c 0193     		str	r3, [sp, #4]
  59:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  80              		.loc 1 59 3 is_stmt 1 view .LVU22
  81              		.loc 1 59 16 is_stmt 0 view .LVU23
  82 002e 0122     		movs	r2, #1
  83 0030 0292     		str	r2, [sp, #8]
  60:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
  84              		.loc 1 60 3 is_stmt 1 view .LVU24
  85              		.loc 1 60 24 is_stmt 0 view .LVU25
  86 0032 0393     		str	r3, [sp, #12]
  61:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  87              		.loc 1 61 3 is_stmt 1 view .LVU26
  88              		.loc 1 61 7 is_stmt 0 view .LVU27
  89 0034 01A9     		add	r1, sp, #4
  90 0036 0648     		ldr	r0, .L7
  91 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  92              	.LVL1:
  93              		.loc 1 61 6 view .LVU28
  94 003c 28B9     		cbnz	r0, .L6
  95              	.L1:
  62:Core/Src/adc.c ****   {
  63:Core/Src/adc.c ****     Error_Handler();
  64:Core/Src/adc.c ****   }
  65:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_Init 2 */
  66:Core/Src/adc.c **** 
  67:Core/Src/adc.c ****   /* USER CODE END ADC1_Init 2 */
  68:Core/Src/adc.c **** 
  69:Core/Src/adc.c **** }
  96              		.loc 1 69 1 view .LVU29
  97 003e 05B0     		add	sp, sp, #20
  98              	.LCFI2:
  99              		.cfi_remember_state
 100              		.cfi_def_cfa_offset 4
 101              		@ sp needed
 102 0040 5DF804FB 		ldr	pc, [sp], #4
 103              	.L5:
ARM GAS  /tmp/ccRFFjX3.s 			page 4


 104              	.LCFI3:
 105              		.cfi_restore_state
  54:Core/Src/adc.c ****   }
 106              		.loc 1 54 5 is_stmt 1 view .LVU30
 107 0044 FFF7FEFF 		bl	Error_Handler
 108              	.LVL2:
 109 0048 EFE7     		b	.L2
 110              	.L6:
  63:Core/Src/adc.c ****   }
 111              		.loc 1 63 5 view .LVU31
 112 004a FFF7FEFF 		bl	Error_Handler
 113              	.LVL3:
 114              		.loc 1 69 1 is_stmt 0 view .LVU32
 115 004e F6E7     		b	.L1
 116              	.L8:
 117              		.align	2
 118              	.L7:
 119 0050 00000000 		.word	.LANCHOR0
 120 0054 00240140 		.word	1073816576
 121              		.cfi_endproc
 122              	.LFE65:
 124              		.section	.text.MX_ADC2_Init,"ax",%progbits
 125              		.align	1
 126              		.global	MX_ADC2_Init
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 131              	MX_ADC2_Init:
 132              	.LFB66:
  70:Core/Src/adc.c **** /* ADC2 init function */
  71:Core/Src/adc.c **** void MX_ADC2_Init(void)
  72:Core/Src/adc.c **** {
 133              		.loc 1 72 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 16
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 00B5     		push	{lr}
 138              	.LCFI4:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 14, -4
 141 0002 85B0     		sub	sp, sp, #20
 142              	.LCFI5:
 143              		.cfi_def_cfa_offset 24
  73:Core/Src/adc.c **** 
  74:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 0 */
  75:Core/Src/adc.c **** 
  76:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 0 */
  77:Core/Src/adc.c **** 
  78:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 144              		.loc 1 78 3 view .LVU34
 145              		.loc 1 78 26 is_stmt 0 view .LVU35
 146 0004 0023     		movs	r3, #0
 147 0006 0193     		str	r3, [sp, #4]
 148 0008 0293     		str	r3, [sp, #8]
 149 000a 0393     		str	r3, [sp, #12]
  79:Core/Src/adc.c **** 
  80:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 1 */
ARM GAS  /tmp/ccRFFjX3.s 			page 5


  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 1 */
  83:Core/Src/adc.c ****   /** Common config
  84:Core/Src/adc.c ****   */
  85:Core/Src/adc.c ****   hadc2.Instance = ADC2;
 150              		.loc 1 85 3 is_stmt 1 view .LVU36
 151              		.loc 1 85 18 is_stmt 0 view .LVU37
 152 000c 1048     		ldr	r0, .L15
 153 000e 114A     		ldr	r2, .L15+4
 154 0010 0260     		str	r2, [r0]
  86:Core/Src/adc.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 155              		.loc 1 86 3 is_stmt 1 view .LVU38
 156              		.loc 1 86 27 is_stmt 0 view .LVU39
 157 0012 8360     		str	r3, [r0, #8]
  87:Core/Src/adc.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 158              		.loc 1 87 3 is_stmt 1 view .LVU40
 159              		.loc 1 87 33 is_stmt 0 view .LVU41
 160 0014 0373     		strb	r3, [r0, #12]
  88:Core/Src/adc.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 161              		.loc 1 88 3 is_stmt 1 view .LVU42
 162              		.loc 1 88 36 is_stmt 0 view .LVU43
 163 0016 0375     		strb	r3, [r0, #20]
  89:Core/Src/adc.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 164              		.loc 1 89 3 is_stmt 1 view .LVU44
 165              		.loc 1 89 31 is_stmt 0 view .LVU45
 166 0018 4FF46022 		mov	r2, #917504
 167 001c C261     		str	r2, [r0, #28]
  90:Core/Src/adc.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 168              		.loc 1 90 3 is_stmt 1 view .LVU46
 169              		.loc 1 90 24 is_stmt 0 view .LVU47
 170 001e 4360     		str	r3, [r0, #4]
  91:Core/Src/adc.c ****   hadc2.Init.NbrOfConversion = 1;
 171              		.loc 1 91 3 is_stmt 1 view .LVU48
 172              		.loc 1 91 30 is_stmt 0 view .LVU49
 173 0020 0123     		movs	r3, #1
 174 0022 0361     		str	r3, [r0, #16]
  92:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 175              		.loc 1 92 3 is_stmt 1 view .LVU50
 176              		.loc 1 92 7 is_stmt 0 view .LVU51
 177 0024 FFF7FEFF 		bl	HAL_ADC_Init
 178              	.LVL4:
 179              		.loc 1 92 6 view .LVU52
 180 0028 60B9     		cbnz	r0, .L13
 181              	.L10:
  93:Core/Src/adc.c ****   {
  94:Core/Src/adc.c ****     Error_Handler();
  95:Core/Src/adc.c ****   }
  96:Core/Src/adc.c ****   /** Configure Regular Channel
  97:Core/Src/adc.c ****   */
  98:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 182              		.loc 1 98 3 is_stmt 1 view .LVU53
 183              		.loc 1 98 19 is_stmt 0 view .LVU54
 184 002a 0123     		movs	r3, #1
 185 002c 0193     		str	r3, [sp, #4]
  99:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 186              		.loc 1 99 3 is_stmt 1 view .LVU55
 187              		.loc 1 99 16 is_stmt 0 view .LVU56
ARM GAS  /tmp/ccRFFjX3.s 			page 6


 188 002e 0293     		str	r3, [sp, #8]
 100:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 189              		.loc 1 100 3 is_stmt 1 view .LVU57
 190              		.loc 1 100 24 is_stmt 0 view .LVU58
 191 0030 0023     		movs	r3, #0
 192 0032 0393     		str	r3, [sp, #12]
 101:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 193              		.loc 1 101 3 is_stmt 1 view .LVU59
 194              		.loc 1 101 7 is_stmt 0 view .LVU60
 195 0034 01A9     		add	r1, sp, #4
 196 0036 0648     		ldr	r0, .L15
 197 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 198              	.LVL5:
 199              		.loc 1 101 6 view .LVU61
 200 003c 28B9     		cbnz	r0, .L14
 201              	.L9:
 102:Core/Src/adc.c ****   {
 103:Core/Src/adc.c ****     Error_Handler();
 104:Core/Src/adc.c ****   }
 105:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 106:Core/Src/adc.c **** 
 107:Core/Src/adc.c ****   /* USER CODE END ADC2_Init 2 */
 108:Core/Src/adc.c **** 
 109:Core/Src/adc.c **** }
 202              		.loc 1 109 1 view .LVU62
 203 003e 05B0     		add	sp, sp, #20
 204              	.LCFI6:
 205              		.cfi_remember_state
 206              		.cfi_def_cfa_offset 4
 207              		@ sp needed
 208 0040 5DF804FB 		ldr	pc, [sp], #4
 209              	.L13:
 210              	.LCFI7:
 211              		.cfi_restore_state
  94:Core/Src/adc.c ****   }
 212              		.loc 1 94 5 is_stmt 1 view .LVU63
 213 0044 FFF7FEFF 		bl	Error_Handler
 214              	.LVL6:
 215 0048 EFE7     		b	.L10
 216              	.L14:
 103:Core/Src/adc.c ****   }
 217              		.loc 1 103 5 view .LVU64
 218 004a FFF7FEFF 		bl	Error_Handler
 219              	.LVL7:
 220              		.loc 1 109 1 is_stmt 0 view .LVU65
 221 004e F6E7     		b	.L9
 222              	.L16:
 223              		.align	2
 224              	.L15:
 225 0050 00000000 		.word	.LANCHOR1
 226 0054 00280140 		.word	1073817600
 227              		.cfi_endproc
 228              	.LFE66:
 230              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 231              		.align	1
 232              		.global	HAL_ADC_MspInit
 233              		.syntax unified
ARM GAS  /tmp/ccRFFjX3.s 			page 7


 234              		.thumb
 235              		.thumb_func
 237              	HAL_ADC_MspInit:
 238              	.LVL8:
 239              	.LFB67:
 110:Core/Src/adc.c **** 
 111:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 112:Core/Src/adc.c **** {
 240              		.loc 1 112 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 32
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		.loc 1 112 1 is_stmt 0 view .LVU67
 245 0000 00B5     		push	{lr}
 246              	.LCFI8:
 247              		.cfi_def_cfa_offset 4
 248              		.cfi_offset 14, -4
 249 0002 89B0     		sub	sp, sp, #36
 250              	.LCFI9:
 251              		.cfi_def_cfa_offset 40
 113:Core/Src/adc.c **** 
 114:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 252              		.loc 1 114 3 is_stmt 1 view .LVU68
 253              		.loc 1 114 20 is_stmt 0 view .LVU69
 254 0004 0023     		movs	r3, #0
 255 0006 0493     		str	r3, [sp, #16]
 256 0008 0593     		str	r3, [sp, #20]
 257 000a 0693     		str	r3, [sp, #24]
 258 000c 0793     		str	r3, [sp, #28]
 115:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 259              		.loc 1 115 3 is_stmt 1 view .LVU70
 260              		.loc 1 115 15 is_stmt 0 view .LVU71
 261 000e 0368     		ldr	r3, [r0]
 262              		.loc 1 115 5 view .LVU72
 263 0010 204A     		ldr	r2, .L23
 264 0012 9342     		cmp	r3, r2
 265 0014 05D0     		beq	.L21
 116:Core/Src/adc.c ****   {
 117:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 118:Core/Src/adc.c **** 
 119:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
 120:Core/Src/adc.c ****     /* ADC1 clock enable */
 121:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 122:Core/Src/adc.c **** 
 123:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 124:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 125:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 126:Core/Src/adc.c ****     */
 127:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 128:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 129:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 130:Core/Src/adc.c **** 
 131:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 132:Core/Src/adc.c **** 
 133:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 134:Core/Src/adc.c ****   }
 135:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC2)
ARM GAS  /tmp/ccRFFjX3.s 			page 8


 266              		.loc 1 135 8 is_stmt 1 view .LVU73
 267              		.loc 1 135 10 is_stmt 0 view .LVU74
 268 0016 204A     		ldr	r2, .L23+4
 269 0018 9342     		cmp	r3, r2
 270 001a 1ED0     		beq	.L22
 271              	.LVL9:
 272              	.L17:
 136:Core/Src/adc.c ****   {
 137:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 138:Core/Src/adc.c **** 
 139:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 0 */
 140:Core/Src/adc.c ****     /* ADC2 clock enable */
 141:Core/Src/adc.c ****     __HAL_RCC_ADC2_CLK_ENABLE();
 142:Core/Src/adc.c **** 
 143:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 144:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 145:Core/Src/adc.c ****     PA1     ------> ADC2_IN1
 146:Core/Src/adc.c ****     */
 147:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 148:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 149:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 150:Core/Src/adc.c **** 
 151:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 152:Core/Src/adc.c **** 
 153:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 1 */
 154:Core/Src/adc.c ****   }
 155:Core/Src/adc.c **** }
 273              		.loc 1 155 1 view .LVU75
 274 001c 09B0     		add	sp, sp, #36
 275              	.LCFI10:
 276              		.cfi_remember_state
 277              		.cfi_def_cfa_offset 4
 278              		@ sp needed
 279 001e 5DF804FB 		ldr	pc, [sp], #4
 280              	.LVL10:
 281              	.L21:
 282              	.LCFI11:
 283              		.cfi_restore_state
 121:Core/Src/adc.c **** 
 284              		.loc 1 121 5 is_stmt 1 view .LVU76
 285              	.LBB2:
 121:Core/Src/adc.c **** 
 286              		.loc 1 121 5 view .LVU77
 121:Core/Src/adc.c **** 
 287              		.loc 1 121 5 view .LVU78
 288 0022 1E4B     		ldr	r3, .L23+8
 289 0024 9A69     		ldr	r2, [r3, #24]
 290 0026 42F40072 		orr	r2, r2, #512
 291 002a 9A61     		str	r2, [r3, #24]
 121:Core/Src/adc.c **** 
 292              		.loc 1 121 5 view .LVU79
 293 002c 9A69     		ldr	r2, [r3, #24]
 294 002e 02F40072 		and	r2, r2, #512
 295 0032 0092     		str	r2, [sp]
 121:Core/Src/adc.c **** 
 296              		.loc 1 121 5 view .LVU80
 297 0034 009A     		ldr	r2, [sp]
ARM GAS  /tmp/ccRFFjX3.s 			page 9


 298              	.LBE2:
 121:Core/Src/adc.c **** 
 299              		.loc 1 121 5 view .LVU81
 123:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 300              		.loc 1 123 5 view .LVU82
 301              	.LBB3:
 123:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 302              		.loc 1 123 5 view .LVU83
 123:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 303              		.loc 1 123 5 view .LVU84
 304 0036 9A69     		ldr	r2, [r3, #24]
 305 0038 42F00402 		orr	r2, r2, #4
 306 003c 9A61     		str	r2, [r3, #24]
 123:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 307              		.loc 1 123 5 view .LVU85
 308 003e 9B69     		ldr	r3, [r3, #24]
 309 0040 03F00403 		and	r3, r3, #4
 310 0044 0193     		str	r3, [sp, #4]
 123:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 311              		.loc 1 123 5 view .LVU86
 312 0046 019B     		ldr	r3, [sp, #4]
 313              	.LBE3:
 123:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 314              		.loc 1 123 5 view .LVU87
 127:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 315              		.loc 1 127 5 view .LVU88
 127:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 316              		.loc 1 127 25 is_stmt 0 view .LVU89
 317 0048 0123     		movs	r3, #1
 318 004a 0493     		str	r3, [sp, #16]
 128:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 319              		.loc 1 128 5 is_stmt 1 view .LVU90
 128:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 320              		.loc 1 128 26 is_stmt 0 view .LVU91
 321 004c 0323     		movs	r3, #3
 322 004e 0593     		str	r3, [sp, #20]
 129:Core/Src/adc.c **** 
 323              		.loc 1 129 5 is_stmt 1 view .LVU92
 324 0050 04A9     		add	r1, sp, #16
 325 0052 1348     		ldr	r0, .L23+12
 326              	.LVL11:
 129:Core/Src/adc.c **** 
 327              		.loc 1 129 5 is_stmt 0 view .LVU93
 328 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 329              	.LVL12:
 330 0058 E0E7     		b	.L17
 331              	.LVL13:
 332              	.L22:
 141:Core/Src/adc.c **** 
 333              		.loc 1 141 5 is_stmt 1 view .LVU94
 334              	.LBB4:
 141:Core/Src/adc.c **** 
 335              		.loc 1 141 5 view .LVU95
 141:Core/Src/adc.c **** 
 336              		.loc 1 141 5 view .LVU96
 337 005a 104B     		ldr	r3, .L23+8
 338 005c 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccRFFjX3.s 			page 10


 339 005e 42F48062 		orr	r2, r2, #1024
 340 0062 9A61     		str	r2, [r3, #24]
 141:Core/Src/adc.c **** 
 341              		.loc 1 141 5 view .LVU97
 342 0064 9A69     		ldr	r2, [r3, #24]
 343 0066 02F48062 		and	r2, r2, #1024
 344 006a 0292     		str	r2, [sp, #8]
 141:Core/Src/adc.c **** 
 345              		.loc 1 141 5 view .LVU98
 346 006c 029A     		ldr	r2, [sp, #8]
 347              	.LBE4:
 141:Core/Src/adc.c **** 
 348              		.loc 1 141 5 view .LVU99
 143:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 349              		.loc 1 143 5 view .LVU100
 350              	.LBB5:
 143:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 351              		.loc 1 143 5 view .LVU101
 143:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 352              		.loc 1 143 5 view .LVU102
 353 006e 9A69     		ldr	r2, [r3, #24]
 354 0070 42F00402 		orr	r2, r2, #4
 355 0074 9A61     		str	r2, [r3, #24]
 143:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 356              		.loc 1 143 5 view .LVU103
 357 0076 9B69     		ldr	r3, [r3, #24]
 358 0078 03F00403 		and	r3, r3, #4
 359 007c 0393     		str	r3, [sp, #12]
 143:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 360              		.loc 1 143 5 view .LVU104
 361 007e 039B     		ldr	r3, [sp, #12]
 362              	.LBE5:
 143:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 363              		.loc 1 143 5 view .LVU105
 147:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 364              		.loc 1 147 5 view .LVU106
 147:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 365              		.loc 1 147 25 is_stmt 0 view .LVU107
 366 0080 0223     		movs	r3, #2
 367 0082 0493     		str	r3, [sp, #16]
 148:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 368              		.loc 1 148 5 is_stmt 1 view .LVU108
 148:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 369              		.loc 1 148 26 is_stmt 0 view .LVU109
 370 0084 0323     		movs	r3, #3
 371 0086 0593     		str	r3, [sp, #20]
 149:Core/Src/adc.c **** 
 372              		.loc 1 149 5 is_stmt 1 view .LVU110
 373 0088 04A9     		add	r1, sp, #16
 374 008a 0548     		ldr	r0, .L23+12
 375              	.LVL14:
 149:Core/Src/adc.c **** 
 376              		.loc 1 149 5 is_stmt 0 view .LVU111
 377 008c FFF7FEFF 		bl	HAL_GPIO_Init
 378              	.LVL15:
 379              		.loc 1 155 1 view .LVU112
 380 0090 C4E7     		b	.L17
ARM GAS  /tmp/ccRFFjX3.s 			page 11


 381              	.L24:
 382 0092 00BF     		.align	2
 383              	.L23:
 384 0094 00240140 		.word	1073816576
 385 0098 00280140 		.word	1073817600
 386 009c 00100240 		.word	1073876992
 387 00a0 00080140 		.word	1073809408
 388              		.cfi_endproc
 389              	.LFE67:
 391              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 392              		.align	1
 393              		.global	HAL_ADC_MspDeInit
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	HAL_ADC_MspDeInit:
 399              	.LVL16:
 400              	.LFB68:
 156:Core/Src/adc.c **** 
 157:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 158:Core/Src/adc.c **** {
 401              		.loc 1 158 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		.loc 1 158 1 is_stmt 0 view .LVU114
 406 0000 08B5     		push	{r3, lr}
 407              	.LCFI12:
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 3, -8
 410              		.cfi_offset 14, -4
 159:Core/Src/adc.c **** 
 160:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 411              		.loc 1 160 3 is_stmt 1 view .LVU115
 412              		.loc 1 160 15 is_stmt 0 view .LVU116
 413 0002 0368     		ldr	r3, [r0]
 414              		.loc 1 160 5 view .LVU117
 415 0004 0E4A     		ldr	r2, .L31
 416 0006 9342     		cmp	r3, r2
 417 0008 03D0     		beq	.L29
 161:Core/Src/adc.c ****   {
 162:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 163:Core/Src/adc.c **** 
 164:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 165:Core/Src/adc.c ****     /* Peripheral clock disable */
 166:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 167:Core/Src/adc.c **** 
 168:Core/Src/adc.c ****     /**ADC1 GPIO Configuration
 169:Core/Src/adc.c ****     PA0-WKUP     ------> ADC1_IN0
 170:Core/Src/adc.c ****     */
 171:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 172:Core/Src/adc.c **** 
 173:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 174:Core/Src/adc.c **** 
 175:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 176:Core/Src/adc.c ****   }
 177:Core/Src/adc.c ****   else if(adcHandle->Instance==ADC2)
ARM GAS  /tmp/ccRFFjX3.s 			page 12


 418              		.loc 1 177 8 is_stmt 1 view .LVU118
 419              		.loc 1 177 10 is_stmt 0 view .LVU119
 420 000a 0E4A     		ldr	r2, .L31+4
 421 000c 9342     		cmp	r3, r2
 422 000e 0BD0     		beq	.L30
 423              	.LVL17:
 424              	.L25:
 178:Core/Src/adc.c ****   {
 179:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 180:Core/Src/adc.c **** 
 181:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 0 */
 182:Core/Src/adc.c ****     /* Peripheral clock disable */
 183:Core/Src/adc.c ****     __HAL_RCC_ADC2_CLK_DISABLE();
 184:Core/Src/adc.c **** 
 185:Core/Src/adc.c ****     /**ADC2 GPIO Configuration
 186:Core/Src/adc.c ****     PA1     ------> ADC2_IN1
 187:Core/Src/adc.c ****     */
 188:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1);
 189:Core/Src/adc.c **** 
 190:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 191:Core/Src/adc.c **** 
 192:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 1 */
 193:Core/Src/adc.c ****   }
 194:Core/Src/adc.c **** }
 425              		.loc 1 194 1 view .LVU120
 426 0010 08BD     		pop	{r3, pc}
 427              	.LVL18:
 428              	.L29:
 166:Core/Src/adc.c **** 
 429              		.loc 1 166 5 is_stmt 1 view .LVU121
 430 0012 02F56C42 		add	r2, r2, #60416
 431 0016 9369     		ldr	r3, [r2, #24]
 432 0018 23F40073 		bic	r3, r3, #512
 433 001c 9361     		str	r3, [r2, #24]
 171:Core/Src/adc.c **** 
 434              		.loc 1 171 5 view .LVU122
 435 001e 0121     		movs	r1, #1
 436 0020 0948     		ldr	r0, .L31+8
 437              	.LVL19:
 171:Core/Src/adc.c **** 
 438              		.loc 1 171 5 is_stmt 0 view .LVU123
 439 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 440              	.LVL20:
 441 0026 F3E7     		b	.L25
 442              	.LVL21:
 443              	.L30:
 183:Core/Src/adc.c **** 
 444              		.loc 1 183 5 is_stmt 1 view .LVU124
 445 0028 02F56842 		add	r2, r2, #59392
 446 002c 9369     		ldr	r3, [r2, #24]
 447 002e 23F48063 		bic	r3, r3, #1024
 448 0032 9361     		str	r3, [r2, #24]
 188:Core/Src/adc.c **** 
 449              		.loc 1 188 5 view .LVU125
 450 0034 0221     		movs	r1, #2
 451 0036 0448     		ldr	r0, .L31+8
 452              	.LVL22:
ARM GAS  /tmp/ccRFFjX3.s 			page 13


 188:Core/Src/adc.c **** 
 453              		.loc 1 188 5 is_stmt 0 view .LVU126
 454 0038 FFF7FEFF 		bl	HAL_GPIO_DeInit
 455              	.LVL23:
 456              		.loc 1 194 1 view .LVU127
 457 003c E8E7     		b	.L25
 458              	.L32:
 459 003e 00BF     		.align	2
 460              	.L31:
 461 0040 00240140 		.word	1073816576
 462 0044 00280140 		.word	1073817600
 463 0048 00080140 		.word	1073809408
 464              		.cfi_endproc
 465              	.LFE68:
 467              		.global	hadc2
 468              		.global	hadc1
 469              		.section	.bss.hadc1,"aw",%nobits
 470              		.align	2
 471              		.set	.LANCHOR0,. + 0
 474              	hadc1:
 475 0000 00000000 		.space	48
 475      00000000 
 475      00000000 
 475      00000000 
 475      00000000 
 476              		.section	.bss.hadc2,"aw",%nobits
 477              		.align	2
 478              		.set	.LANCHOR1,. + 0
 481              	hadc2:
 482 0000 00000000 		.space	48
 482      00000000 
 482      00000000 
 482      00000000 
 482      00000000 
 483              		.text
 484              	.Letext0:
 485              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 486              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 487              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 488              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 489              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 490              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 491              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 492              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 493              		.file 10 "Core/Inc/adc.h"
 494              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccRFFjX3.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccRFFjX3.s:18     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccRFFjX3.s:24     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccRFFjX3.s:119    .text.MX_ADC1_Init:0000000000000050 $d
     /tmp/ccRFFjX3.s:125    .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccRFFjX3.s:131    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccRFFjX3.s:225    .text.MX_ADC2_Init:0000000000000050 $d
     /tmp/ccRFFjX3.s:231    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccRFFjX3.s:237    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccRFFjX3.s:384    .text.HAL_ADC_MspInit:0000000000000094 $d
     /tmp/ccRFFjX3.s:392    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccRFFjX3.s:398    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccRFFjX3.s:461    .text.HAL_ADC_MspDeInit:0000000000000040 $d
     /tmp/ccRFFjX3.s:481    .bss.hadc2:0000000000000000 hadc2
     /tmp/ccRFFjX3.s:474    .bss.hadc1:0000000000000000 hadc1
     /tmp/ccRFFjX3.s:470    .bss.hadc1:0000000000000000 $d
     /tmp/ccRFFjX3.s:477    .bss.hadc2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
