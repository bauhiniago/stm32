ARM GAS  /tmp/ccTsgCIV.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_i2d
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_dadd
  21              		.global	__aeabi_dsub
  22              		.global	__aeabi_d2uiz
  23              		.section	.text.MG996R,"ax",%progbits
  24              		.align	1
  25              		.global	MG996R
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	MG996R:
  31              	.LVL0:
  32              	.LFB65:
  33              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "adc.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
ARM GAS  /tmp/ccTsgCIV.s 			page 2


  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** double vol[2];
  50:Core/Src/main.c **** uint32_t adc_value[2];
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** void MG996R(uint8_t mode,uint8_t angle){
  34              		.loc 1 56 40 view -0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              		.loc 1 56 40 is_stmt 0 view .LVU1
  39 0000 10B5     		push	{r4, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 4, -8
  43              		.cfi_offset 14, -4
  57:Core/Src/main.c ****   if (mode==0)  
  44              		.loc 1 57 3 is_stmt 1 view .LVU2
  45              		.loc 1 57 6 is_stmt 0 view .LVU3
  46 0002 D8B9     		cbnz	r0, .L2
  58:Core/Src/main.c ****   {
  59:Core/Src/main.c ****     if (angle<=180&&angle>=0)
  47              		.loc 1 59 5 is_stmt 1 view .LVU4
  48              		.loc 1 59 8 is_stmt 0 view .LVU5
  49 0004 B429     		cmp	r1, #180
  50 0006 1BD8     		bhi	.L1
  60:Core/Src/main.c ****     {//112 37
  61:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,angle/180.0*75+37-1);
  51              		.loc 1 61 7 is_stmt 1 view .LVU6
  52 0008 0846     		mov	r0, r1
  53              	.LVL1:
  54              		.loc 1 61 7 is_stmt 0 view .LVU7
ARM GAS  /tmp/ccTsgCIV.s 			page 3


  55 000a FFF7FEFF 		bl	__aeabi_i2d
  56              	.LVL2:
  57              		.loc 1 61 7 view .LVU8
  58 000e 0022     		movs	r2, #0
  59 0010 1B4B     		ldr	r3, .L6+8
  60 0012 FFF7FEFF 		bl	__aeabi_ddiv
  61              	.LVL3:
  62 0016 18A3     		adr	r3, .L6
  63 0018 D3E90023 		ldrd	r2, [r3]
  64 001c FFF7FEFF 		bl	__aeabi_dmul
  65              	.LVL4:
  66 0020 0022     		movs	r2, #0
  67 0022 184B     		ldr	r3, .L6+12
  68 0024 FFF7FEFF 		bl	__aeabi_dadd
  69              	.LVL5:
  70 0028 0022     		movs	r2, #0
  71 002a 174B     		ldr	r3, .L6+16
  72 002c FFF7FEFF 		bl	__aeabi_dsub
  73              	.LVL6:
  74 0030 164B     		ldr	r3, .L6+20
  75 0032 1C68     		ldr	r4, [r3]
  76 0034 FFF7FEFF 		bl	__aeabi_d2uiz
  77              	.LVL7:
  78 0038 6063     		str	r0, [r4, #52]
  79 003a 01E0     		b	.L1
  80              	.LVL8:
  81              	.L2:
  62:Core/Src/main.c ****       //水平舵机
  63:Core/Src/main.c ****     }
  64:Core/Src/main.c ****   }else if(mode==1)
  82              		.loc 1 64 9 is_stmt 1 view .LVU9
  83              		.loc 1 64 11 is_stmt 0 view .LVU10
  84 003c 0128     		cmp	r0, #1
  85 003e 00D0     		beq	.L5
  86              	.LVL9:
  87              	.L1:
  65:Core/Src/main.c ****   {
  66:Core/Src/main.c ****     if (angle<=180&&angle>=0)
  67:Core/Src/main.c ****     {
  68:Core/Src/main.c ****       __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_2,angle/180.0*100+25-1);
  69:Core/Src/main.c ****       //垂直舵机
  70:Core/Src/main.c ****     }
  71:Core/Src/main.c ****   }
  72:Core/Src/main.c ****   
  73:Core/Src/main.c **** }
  88              		.loc 1 73 1 view .LVU11
  89 0040 10BD     		pop	{r4, pc}
  90              	.LVL10:
  91              	.L5:
  66:Core/Src/main.c ****     {
  92              		.loc 1 66 5 is_stmt 1 view .LVU12
  66:Core/Src/main.c ****     {
  93              		.loc 1 66 8 is_stmt 0 view .LVU13
  94 0042 B429     		cmp	r1, #180
  95 0044 FCD8     		bhi	.L1
  68:Core/Src/main.c ****       //垂直舵机
  96              		.loc 1 68 7 is_stmt 1 view .LVU14
ARM GAS  /tmp/ccTsgCIV.s 			page 4


  97 0046 0846     		mov	r0, r1
  98              	.LVL11:
  68:Core/Src/main.c ****       //垂直舵机
  99              		.loc 1 68 7 is_stmt 0 view .LVU15
 100 0048 FFF7FEFF 		bl	__aeabi_i2d
 101              	.LVL12:
  68:Core/Src/main.c ****       //垂直舵机
 102              		.loc 1 68 7 view .LVU16
 103 004c 0022     		movs	r2, #0
 104 004e 0C4B     		ldr	r3, .L6+8
 105 0050 FFF7FEFF 		bl	__aeabi_ddiv
 106              	.LVL13:
 107 0054 0022     		movs	r2, #0
 108 0056 0E4B     		ldr	r3, .L6+24
 109 0058 FFF7FEFF 		bl	__aeabi_dmul
 110              	.LVL14:
 111 005c 0022     		movs	r2, #0
 112 005e 0D4B     		ldr	r3, .L6+28
 113 0060 FFF7FEFF 		bl	__aeabi_dadd
 114              	.LVL15:
 115 0064 0022     		movs	r2, #0
 116 0066 084B     		ldr	r3, .L6+16
 117 0068 FFF7FEFF 		bl	__aeabi_dsub
 118              	.LVL16:
 119 006c 074B     		ldr	r3, .L6+20
 120 006e 1C68     		ldr	r4, [r3]
 121 0070 FFF7FEFF 		bl	__aeabi_d2uiz
 122              	.LVL17:
 123 0074 A063     		str	r0, [r4, #56]
 124              		.loc 1 73 1 view .LVU17
 125 0076 E3E7     		b	.L1
 126              	.L7:
 127              		.align	3
 128              	.L6:
 129 0078 00000000 		.word	0
 130 007c 00C05240 		.word	1079164928
 131 0080 00806640 		.word	1080459264
 132 0084 00804240 		.word	1078099968
 133 0088 0000F03F 		.word	1072693248
 134 008c 00000000 		.word	htim1
 135 0090 00005940 		.word	1079574528
 136 0094 00003940 		.word	1077477376
 137              		.cfi_endproc
 138              	.LFE65:
 140              		.global	__aeabi_ui2d
 141              		.section	.text.GetADC,"ax",%progbits
 142              		.align	1
 143              		.global	GetADC
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	GetADC:
 149              	.LVL18:
 150              	.LFB66:
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** void GetADC(uint8_t channel){
 151              		.loc 1 75 29 is_stmt 1 view -0
ARM GAS  /tmp/ccTsgCIV.s 			page 5


 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 75 29 is_stmt 0 view .LVU19
 156 0000 10B5     		push	{r4, lr}
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
  76:Core/Src/main.c ****   if (channel==0)
 161              		.loc 1 76 3 is_stmt 1 view .LVU20
 162              		.loc 1 76 6 is_stmt 0 view .LVU21
 163 0002 D8B9     		cbnz	r0, .L9
  77:Core/Src/main.c ****   {
  78:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);	                //启动ADC单次转换
 164              		.loc 1 78 5 is_stmt 1 view .LVU22
 165 0004 1E4C     		ldr	r4, .L12+8
 166 0006 2046     		mov	r0, r4
 167              	.LVL19:
 168              		.loc 1 78 5 is_stmt 0 view .LVU23
 169 0008 FFF7FEFF 		bl	HAL_ADC_Start
 170              	.LVL20:
  79:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc1, 50);	//等待ADC转换完成
 171              		.loc 1 79 5 is_stmt 1 view .LVU24
 172 000c 3221     		movs	r1, #50
 173 000e 2046     		mov	r0, r4
 174 0010 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 175              	.LVL21:
  80:Core/Src/main.c ****     adc_value[0] = HAL_ADC_GetValue(&hadc1); 	//读取ADC转换数据
 176              		.loc 1 80 5 view .LVU25
 177              		.loc 1 80 20 is_stmt 0 view .LVU26
 178 0014 2046     		mov	r0, r4
 179 0016 FFF7FEFF 		bl	HAL_ADC_GetValue
 180              	.LVL22:
 181              		.loc 1 80 18 view .LVU27
 182 001a 1A4B     		ldr	r3, .L12+12
 183 001c 1860     		str	r0, [r3]
  81:Core/Src/main.c ****     vol[0] = ((double)adc_value[0]/4096)*3.3;
 184              		.loc 1 81 5 is_stmt 1 view .LVU28
 185              		.loc 1 81 15 is_stmt 0 view .LVU29
 186 001e FFF7FEFF 		bl	__aeabi_ui2d
 187              	.LVL23:
 188              		.loc 1 81 35 view .LVU30
 189 0022 0022     		movs	r2, #0
 190 0024 184B     		ldr	r3, .L12+16
 191 0026 FFF7FEFF 		bl	__aeabi_dmul
 192              	.LVL24:
 193              		.loc 1 81 41 view .LVU31
 194 002a 13A3     		adr	r3, .L12
 195 002c D3E90023 		ldrd	r2, [r3]
 196 0030 FFF7FEFF 		bl	__aeabi_dmul
 197              	.LVL25:
 198              		.loc 1 81 12 view .LVU32
 199 0034 154B     		ldr	r3, .L12+20
 200 0036 C3E90001 		strd	r0, [r3]
 201              	.L8:
  82:Core/Src/main.c ****   }else{
ARM GAS  /tmp/ccTsgCIV.s 			page 6


  83:Core/Src/main.c ****     HAL_ADC_Start(&hadc2);	                //启动ADC单次转换
  84:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, 50);	//等待ADC转换完成
  85:Core/Src/main.c ****     adc_value[1] = HAL_ADC_GetValue(&hadc2); 	//读取ADC转换数据
  86:Core/Src/main.c ****     vol[1] = ((double)adc_value[1]/4096)*3.3;
  87:Core/Src/main.c ****   }
  88:Core/Src/main.c ****   
  89:Core/Src/main.c **** }
 202              		.loc 1 89 1 view .LVU33
 203 003a 10BD     		pop	{r4, pc}
 204              	.LVL26:
 205              	.L9:
  83:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, 50);	//等待ADC转换完成
 206              		.loc 1 83 5 is_stmt 1 view .LVU34
 207 003c 144C     		ldr	r4, .L12+24
 208 003e 2046     		mov	r0, r4
 209              	.LVL27:
  83:Core/Src/main.c ****     HAL_ADC_PollForConversion(&hadc2, 50);	//等待ADC转换完成
 210              		.loc 1 83 5 is_stmt 0 view .LVU35
 211 0040 FFF7FEFF 		bl	HAL_ADC_Start
 212              	.LVL28:
  84:Core/Src/main.c ****     adc_value[1] = HAL_ADC_GetValue(&hadc2); 	//读取ADC转换数据
 213              		.loc 1 84 5 is_stmt 1 view .LVU36
 214 0044 3221     		movs	r1, #50
 215 0046 2046     		mov	r0, r4
 216 0048 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 217              	.LVL29:
  85:Core/Src/main.c ****     vol[1] = ((double)adc_value[1]/4096)*3.3;
 218              		.loc 1 85 5 view .LVU37
  85:Core/Src/main.c ****     vol[1] = ((double)adc_value[1]/4096)*3.3;
 219              		.loc 1 85 20 is_stmt 0 view .LVU38
 220 004c 2046     		mov	r0, r4
 221 004e FFF7FEFF 		bl	HAL_ADC_GetValue
 222              	.LVL30:
  85:Core/Src/main.c ****     vol[1] = ((double)adc_value[1]/4096)*3.3;
 223              		.loc 1 85 18 view .LVU39
 224 0052 0C4B     		ldr	r3, .L12+12
 225 0054 5860     		str	r0, [r3, #4]
  86:Core/Src/main.c ****   }
 226              		.loc 1 86 5 is_stmt 1 view .LVU40
  86:Core/Src/main.c ****   }
 227              		.loc 1 86 15 is_stmt 0 view .LVU41
 228 0056 FFF7FEFF 		bl	__aeabi_ui2d
 229              	.LVL31:
  86:Core/Src/main.c ****   }
 230              		.loc 1 86 35 view .LVU42
 231 005a 0022     		movs	r2, #0
 232 005c 0A4B     		ldr	r3, .L12+16
 233 005e FFF7FEFF 		bl	__aeabi_dmul
 234              	.LVL32:
  86:Core/Src/main.c ****   }
 235              		.loc 1 86 41 view .LVU43
 236 0062 05A3     		adr	r3, .L12
 237 0064 D3E90023 		ldrd	r2, [r3]
 238 0068 FFF7FEFF 		bl	__aeabi_dmul
 239              	.LVL33:
  86:Core/Src/main.c ****   }
 240              		.loc 1 86 12 view .LVU44
ARM GAS  /tmp/ccTsgCIV.s 			page 7


 241 006c 074B     		ldr	r3, .L12+20
 242 006e C3E90201 		strd	r0, [r3, #8]
 243              		.loc 1 89 1 view .LVU45
 244 0072 E2E7     		b	.L8
 245              	.L13:
 246 0074 AFF30080 		.align	3
 247              	.L12:
 248 0078 66666666 		.word	1717986918
 249 007c 66660A40 		.word	1074423398
 250 0080 00000000 		.word	hadc1
 251 0084 00000000 		.word	.LANCHOR0
 252 0088 0000303F 		.word	1060110336
 253 008c 00000000 		.word	.LANCHOR1
 254 0090 00000000 		.word	hadc2
 255              		.cfi_endproc
 256              	.LFE66:
 258              		.section	.text.Error_Handler,"ax",%progbits
 259              		.align	1
 260              		.global	Error_Handler
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	Error_Handler:
 266              	.LFB69:
  90:Core/Src/main.c **** /* USER CODE END PFP */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  93:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE END 0 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /**
  98:Core/Src/main.c ****   * @brief  The application entry point.
  99:Core/Src/main.c ****   * @retval int
 100:Core/Src/main.c ****   */
 101:Core/Src/main.c **** int main(void)
 102:Core/Src/main.c **** {
 103:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END 1 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 110:Core/Src/main.c ****   HAL_Init();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END Init */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Configure the system clock */
 117:Core/Src/main.c ****   SystemClock_Config();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END SysInit */
 122:Core/Src/main.c **** 
ARM GAS  /tmp/ccTsgCIV.s 			page 8


 123:Core/Src/main.c ****   /* Initialize all configured peripherals */
 124:Core/Src/main.c ****   MX_GPIO_Init();
 125:Core/Src/main.c ****   MX_USART1_UART_Init();
 126:Core/Src/main.c ****   MX_TIM1_Init();
 127:Core/Src/main.c ****   MX_ADC1_Init();
 128:Core/Src/main.c ****   MX_ADC2_Init();
 129:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 130:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 131:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_2);
 132:Core/Src/main.c ****   uint16_t time_div=2000;
 133:Core/Src/main.c ****   // MG996R(1,135);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   uint8_t pos_x=90;
 137:Core/Src/main.c ****   uint8_t pos_y=30;/* 30~130 */
 138:Core/Src/main.c ****   MG996R(0,pos_x);
 139:Core/Src/main.c ****   MG996R(1,pos_y);
 140:Core/Src/main.c ****   HAL_Delay(100);
 141:Core/Src/main.c ****   /* USER CODE END 2 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Infinite loop */
 144:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 145:Core/Src/main.c ****   while (1)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     GetADC(0);//x max = 1.79  adcx 变小，posx变大
 148:Core/Src/main.c ****     GetADC(1);//y max = 2.07  adcy 变小，posy变大
 149:Core/Src/main.c ****     if(vol[0]<1.71&&pos_x>0)
 150:Core/Src/main.c ****     {
 151:Core/Src/main.c ****       pos_x--;
 152:Core/Src/main.c ****     }else if(vol[0]>1.80&&pos_x<180){
 153:Core/Src/main.c ****       pos_x++;
 154:Core/Src/main.c ****     }
 155:Core/Src/main.c ****     if(vol[1]<1.95&&pos_y<130)
 156:Core/Src/main.c ****     {
 157:Core/Src/main.c ****       pos_y++;
 158:Core/Src/main.c ****     }else if(vol[1]>2.19&&pos_y>30){
 159:Core/Src/main.c ****       pos_y--;
 160:Core/Src/main.c ****     }
 161:Core/Src/main.c ****     printf("pos_x: %3d adc = %d vol 0 = %.2fV.\n",pos_x,adc_value[0],vol[0]);
 162:Core/Src/main.c ****     printf("pos_y: %3d adc = %d vol 1 = %.2fV.\n",pos_y,adc_value[1],vol[1]);
 163:Core/Src/main.c ****     
 164:Core/Src/main.c ****     MG996R(0,pos_x);
 165:Core/Src/main.c ****     MG996R(1,pos_y);
 166:Core/Src/main.c ****     HAL_Delay(10);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****     //转向测试
 172:Core/Src/main.c ****     // for (size_t i = 0; i < 180; i++)
 173:Core/Src/main.c ****     // {
 174:Core/Src/main.c ****     //   MG996R(0,i);
 175:Core/Src/main.c ****     //   HAL_Delay(10);
 176:Core/Src/main.c ****     // }
 177:Core/Src/main.c ****     // for (size_t i = 180; i > 0; i--)
 178:Core/Src/main.c ****     // {
 179:Core/Src/main.c ****     //   MG996R(0,i);
ARM GAS  /tmp/ccTsgCIV.s 			page 9


 180:Core/Src/main.c ****     //   HAL_Delay(10);
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     // }
 183:Core/Src/main.c ****     // for (size_t i = 30; i <130; i++)
 184:Core/Src/main.c ****     // {
 185:Core/Src/main.c ****     //   MG996R(1,i);
 186:Core/Src/main.c ****     //   HAL_Delay(10);
 187:Core/Src/main.c ****     // }
 188:Core/Src/main.c ****     // for (size_t i = 130; i >30; i--)
 189:Core/Src/main.c ****     // {
 190:Core/Src/main.c ****     //   MG996R(1,i);
 191:Core/Src/main.c ****     //   HAL_Delay(10);
 192:Core/Src/main.c ****     // }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****     
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****     
 198:Core/Src/main.c ****     /* USER CODE END WHILE */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c ****   /* USER CODE END 3 */
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief System Clock Configuration
 207:Core/Src/main.c ****   * @retval None
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c **** void SystemClock_Config(void)
 210:Core/Src/main.c **** {
 211:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 212:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 213:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 216:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 221:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 225:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 232:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 236:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccTsgCIV.s 			page 10


 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 243:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 244:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c **** }
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /* USER CODE END 4 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 256:Core/Src/main.c ****   * @retval None
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c **** void Error_Handler(void)
 259:Core/Src/main.c **** {
 267              		.loc 1 259 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ Volatile: function does not return.
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 260:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 261:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 262:Core/Src/main.c ****   __disable_irq();
 273              		.loc 1 262 3 view .LVU47
 274              	.LBB4:
 275              	.LBI4:
 276              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  /tmp/ccTsgCIV.s 			page 11


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  /tmp/ccTsgCIV.s 			page 12


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccTsgCIV.s 			page 13


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 277              		.loc 2 140 27 view .LVU48
 278              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 279              		.loc 2 142 3 view .LVU49
 280              		.syntax unified
 281              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 282 0000 72B6     		cpsid i
 283              	@ 0 "" 2
 284              		.thumb
 285              		.syntax unified
 286              	.L15:
 287              	.LBE5:
 288              	.LBE4:
 263:Core/Src/main.c ****   while (1)
 289              		.loc 1 263 3 discriminator 1 view .LVU50
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****   }
 290              		.loc 1 265 3 discriminator 1 view .LVU51
 263:Core/Src/main.c ****   while (1)
 291              		.loc 1 263 9 discriminator 1 view .LVU52
 292 0002 FEE7     		b	.L15
 293              		.cfi_endproc
 294              	.LFE69:
 296              		.section	.text.SystemClock_Config,"ax",%progbits
 297              		.align	1
 298              		.global	SystemClock_Config
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	SystemClock_Config:
 304              	.LFB68:
 210:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 305              		.loc 1 210 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 80
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 00B5     		push	{lr}
 310              	.LCFI2:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 14, -4
 313 0002 95B0     		sub	sp, sp, #84
 314              	.LCFI3:
 315              		.cfi_def_cfa_offset 88
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 316              		.loc 1 211 3 view .LVU54
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 317              		.loc 1 211 22 is_stmt 0 view .LVU55
 318 0004 2822     		movs	r2, #40
 319 0006 0021     		movs	r1, #0
 320 0008 0DEB0200 		add	r0, sp, r2
 321 000c FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccTsgCIV.s 			page 14


 322              	.LVL34:
 212:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 323              		.loc 1 212 3 is_stmt 1 view .LVU56
 212:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 324              		.loc 1 212 22 is_stmt 0 view .LVU57
 325 0010 0023     		movs	r3, #0
 326 0012 0593     		str	r3, [sp, #20]
 327 0014 0693     		str	r3, [sp, #24]
 328 0016 0793     		str	r3, [sp, #28]
 329 0018 0893     		str	r3, [sp, #32]
 330 001a 0993     		str	r3, [sp, #36]
 213:Core/Src/main.c **** 
 331              		.loc 1 213 3 is_stmt 1 view .LVU58
 213:Core/Src/main.c **** 
 332              		.loc 1 213 28 is_stmt 0 view .LVU59
 333 001c 0193     		str	r3, [sp, #4]
 334 001e 0293     		str	r3, [sp, #8]
 335 0020 0393     		str	r3, [sp, #12]
 336 0022 0493     		str	r3, [sp, #16]
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 337              		.loc 1 218 3 is_stmt 1 view .LVU60
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 338              		.loc 1 218 36 is_stmt 0 view .LVU61
 339 0024 0122     		movs	r2, #1
 340 0026 0A92     		str	r2, [sp, #40]
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 341              		.loc 1 219 3 is_stmt 1 view .LVU62
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 342              		.loc 1 219 30 is_stmt 0 view .LVU63
 343 0028 4FF48033 		mov	r3, #65536
 344 002c 0B93     		str	r3, [sp, #44]
 220:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 345              		.loc 1 220 3 is_stmt 1 view .LVU64
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 346              		.loc 1 221 3 view .LVU65
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 347              		.loc 1 221 30 is_stmt 0 view .LVU66
 348 002e 0E92     		str	r2, [sp, #56]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 349              		.loc 1 222 3 is_stmt 1 view .LVU67
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 350              		.loc 1 222 34 is_stmt 0 view .LVU68
 351 0030 0222     		movs	r2, #2
 352 0032 1192     		str	r2, [sp, #68]
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 353              		.loc 1 223 3 is_stmt 1 view .LVU69
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 354              		.loc 1 223 35 is_stmt 0 view .LVU70
 355 0034 1293     		str	r3, [sp, #72]
 224:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 356              		.loc 1 224 3 is_stmt 1 view .LVU71
 224:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 357              		.loc 1 224 32 is_stmt 0 view .LVU72
 358 0036 4FF4E013 		mov	r3, #1835008
 359 003a 1393     		str	r3, [sp, #76]
 225:Core/Src/main.c ****   {
 360              		.loc 1 225 3 is_stmt 1 view .LVU73
ARM GAS  /tmp/ccTsgCIV.s 			page 15


 225:Core/Src/main.c ****   {
 361              		.loc 1 225 7 is_stmt 0 view .LVU74
 362 003c 0AA8     		add	r0, sp, #40
 363 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 364              	.LVL35:
 225:Core/Src/main.c ****   {
 365              		.loc 1 225 6 view .LVU75
 366 0042 C8B9     		cbnz	r0, .L21
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 367              		.loc 1 231 3 is_stmt 1 view .LVU76
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 368              		.loc 1 231 31 is_stmt 0 view .LVU77
 369 0044 0F23     		movs	r3, #15
 370 0046 0593     		str	r3, [sp, #20]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 371              		.loc 1 233 3 is_stmt 1 view .LVU78
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 372              		.loc 1 233 34 is_stmt 0 view .LVU79
 373 0048 0221     		movs	r1, #2
 374 004a 0691     		str	r1, [sp, #24]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 375              		.loc 1 234 3 is_stmt 1 view .LVU80
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 376              		.loc 1 234 35 is_stmt 0 view .LVU81
 377 004c 0023     		movs	r3, #0
 378 004e 0793     		str	r3, [sp, #28]
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 379              		.loc 1 235 3 is_stmt 1 view .LVU82
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 380              		.loc 1 235 36 is_stmt 0 view .LVU83
 381 0050 4FF48062 		mov	r2, #1024
 382 0054 0892     		str	r2, [sp, #32]
 236:Core/Src/main.c **** 
 383              		.loc 1 236 3 is_stmt 1 view .LVU84
 236:Core/Src/main.c **** 
 384              		.loc 1 236 36 is_stmt 0 view .LVU85
 385 0056 0993     		str	r3, [sp, #36]
 238:Core/Src/main.c ****   {
 386              		.loc 1 238 3 is_stmt 1 view .LVU86
 238:Core/Src/main.c ****   {
 387              		.loc 1 238 7 is_stmt 0 view .LVU87
 388 0058 05A8     		add	r0, sp, #20
 389 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 390              	.LVL36:
 238:Core/Src/main.c ****   {
 391              		.loc 1 238 6 view .LVU88
 392 005e 68B9     		cbnz	r0, .L22
 242:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 393              		.loc 1 242 3 is_stmt 1 view .LVU89
 242:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 394              		.loc 1 242 38 is_stmt 0 view .LVU90
 395 0060 0223     		movs	r3, #2
 396 0062 0193     		str	r3, [sp, #4]
 243:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 397              		.loc 1 243 3 is_stmt 1 view .LVU91
 243:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 398              		.loc 1 243 35 is_stmt 0 view .LVU92
ARM GAS  /tmp/ccTsgCIV.s 			page 16


 399 0064 4FF40043 		mov	r3, #32768
 400 0068 0393     		str	r3, [sp, #12]
 244:Core/Src/main.c ****   {
 401              		.loc 1 244 3 is_stmt 1 view .LVU93
 244:Core/Src/main.c ****   {
 402              		.loc 1 244 7 is_stmt 0 view .LVU94
 403 006a 01A8     		add	r0, sp, #4
 404 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 405              	.LVL37:
 244:Core/Src/main.c ****   {
 406              		.loc 1 244 6 view .LVU95
 407 0070 30B9     		cbnz	r0, .L23
 248:Core/Src/main.c **** 
 408              		.loc 1 248 1 view .LVU96
 409 0072 15B0     		add	sp, sp, #84
 410              	.LCFI4:
 411              		.cfi_remember_state
 412              		.cfi_def_cfa_offset 4
 413              		@ sp needed
 414 0074 5DF804FB 		ldr	pc, [sp], #4
 415              	.L21:
 416              	.LCFI5:
 417              		.cfi_restore_state
 227:Core/Src/main.c ****   }
 418              		.loc 1 227 5 is_stmt 1 view .LVU97
 419 0078 FFF7FEFF 		bl	Error_Handler
 420              	.LVL38:
 421              	.L22:
 240:Core/Src/main.c ****   }
 422              		.loc 1 240 5 view .LVU98
 423 007c FFF7FEFF 		bl	Error_Handler
 424              	.LVL39:
 425              	.L23:
 246:Core/Src/main.c ****   }
 426              		.loc 1 246 5 view .LVU99
 427 0080 FFF7FEFF 		bl	Error_Handler
 428              	.LVL40:
 429              		.cfi_endproc
 430              	.LFE68:
 432              		.global	__aeabi_dcmplt
 433              		.global	__aeabi_dcmpgt
 434              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 435              		.align	2
 436              	.LC0:
 437 0000 706F735F 		.ascii	"pos_x: %3d adc = %d vol 0 = %.2fV.\012\000"
 437      783A2025 
 437      33642061 
 437      6463203D 
 437      20256420 
 438              		.align	2
 439              	.LC1:
 440 0024 706F735F 		.ascii	"pos_y: %3d adc = %d vol 1 = %.2fV.\012\000"
 440      793A2025 
 440      33642061 
 440      6463203D 
 440      20256420 
 441              		.section	.text.main,"ax",%progbits
ARM GAS  /tmp/ccTsgCIV.s 			page 17


 442              		.align	1
 443              		.global	main
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	main:
 449              	.LFB67:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 450              		.loc 1 102 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 455              	.LCFI6:
 456              		.cfi_def_cfa_offset 28
 457              		.cfi_offset 4, -28
 458              		.cfi_offset 5, -24
 459              		.cfi_offset 6, -20
 460              		.cfi_offset 7, -16
 461              		.cfi_offset 8, -12
 462              		.cfi_offset 9, -8
 463              		.cfi_offset 14, -4
 464 0004 83B0     		sub	sp, sp, #12
 465              	.LCFI7:
 466              		.cfi_def_cfa_offset 40
 110:Core/Src/main.c **** 
 467              		.loc 1 110 3 view .LVU101
 468 0006 FFF7FEFF 		bl	HAL_Init
 469              	.LVL41:
 117:Core/Src/main.c **** 
 470              		.loc 1 117 3 view .LVU102
 471 000a FFF7FEFF 		bl	SystemClock_Config
 472              	.LVL42:
 124:Core/Src/main.c ****   MX_USART1_UART_Init();
 473              		.loc 1 124 3 view .LVU103
 474 000e FFF7FEFF 		bl	MX_GPIO_Init
 475              	.LVL43:
 125:Core/Src/main.c ****   MX_TIM1_Init();
 476              		.loc 1 125 3 view .LVU104
 477 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 478              	.LVL44:
 126:Core/Src/main.c ****   MX_ADC1_Init();
 479              		.loc 1 126 3 view .LVU105
 480 0016 FFF7FEFF 		bl	MX_TIM1_Init
 481              	.LVL45:
 127:Core/Src/main.c ****   MX_ADC2_Init();
 482              		.loc 1 127 3 view .LVU106
 483 001a FFF7FEFF 		bl	MX_ADC1_Init
 484              	.LVL46:
 128:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 485              		.loc 1 128 3 view .LVU107
 486 001e FFF7FEFF 		bl	MX_ADC2_Init
 487              	.LVL47:
 130:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_2);
 488              		.loc 1 130 3 view .LVU108
 489 0022 454C     		ldr	r4, .L39+32
 490 0024 0021     		movs	r1, #0
ARM GAS  /tmp/ccTsgCIV.s 			page 18


 491 0026 2046     		mov	r0, r4
 492 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 493              	.LVL48:
 131:Core/Src/main.c ****   uint16_t time_div=2000;
 494              		.loc 1 131 3 view .LVU109
 495 002c 0421     		movs	r1, #4
 496 002e 2046     		mov	r0, r4
 497 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 498              	.LVL49:
 132:Core/Src/main.c ****   // MG996R(1,135);
 499              		.loc 1 132 3 view .LVU110
 136:Core/Src/main.c ****   uint8_t pos_y=30;/* 30~130 */
 500              		.loc 1 136 3 view .LVU111
 137:Core/Src/main.c ****   MG996R(0,pos_x);
 501              		.loc 1 137 3 view .LVU112
 138:Core/Src/main.c ****   MG996R(1,pos_y);
 502              		.loc 1 138 3 view .LVU113
 503 0034 5A21     		movs	r1, #90
 504 0036 0020     		movs	r0, #0
 505 0038 FFF7FEFF 		bl	MG996R
 506              	.LVL50:
 139:Core/Src/main.c ****   HAL_Delay(100);
 507              		.loc 1 139 3 view .LVU114
 508 003c 1E21     		movs	r1, #30
 509 003e 0120     		movs	r0, #1
 510 0040 FFF7FEFF 		bl	MG996R
 511              	.LVL51:
 140:Core/Src/main.c ****   /* USER CODE END 2 */
 512              		.loc 1 140 3 view .LVU115
 513 0044 6420     		movs	r0, #100
 514 0046 FFF7FEFF 		bl	HAL_Delay
 515              	.LVL52:
 137:Core/Src/main.c ****   MG996R(0,pos_x);
 516              		.loc 1 137 11 is_stmt 0 view .LVU116
 517 004a 1E25     		movs	r5, #30
 136:Core/Src/main.c ****   uint8_t pos_y=30;/* 30~130 */
 518              		.loc 1 136 11 view .LVU117
 519 004c 5A24     		movs	r4, #90
 520 004e 3BE0     		b	.L33
 521              	.LVL53:
 522              	.L25:
 523              	.LBB6:
 152:Core/Src/main.c ****       pos_x++;
 524              		.loc 1 152 11 is_stmt 1 view .LVU118
 152:Core/Src/main.c ****       pos_x++;
 525              		.loc 1 152 13 is_stmt 0 view .LVU119
 526 0050 31A3     		adr	r3, .L39
 527 0052 D3E90023 		ldrd	r2, [r3]
 528 0056 3046     		mov	r0, r6
 529 0058 3946     		mov	r1, r7
 530 005a FFF7FEFF 		bl	__aeabi_dcmpgt
 531              	.LVL54:
 532 005e 18B1     		cbz	r0, .L27
 152:Core/Src/main.c ****       pos_x++;
 533              		.loc 1 152 25 discriminator 1 view .LVU120
 534 0060 B32C     		cmp	r4, #179
 535 0062 01D8     		bhi	.L27
ARM GAS  /tmp/ccTsgCIV.s 			page 19


 153:Core/Src/main.c ****     }
 536              		.loc 1 153 7 is_stmt 1 view .LVU121
 153:Core/Src/main.c ****     }
 537              		.loc 1 153 12 is_stmt 0 view .LVU122
 538 0064 0134     		adds	r4, r4, #1
 539              	.LVL55:
 153:Core/Src/main.c ****     }
 540              		.loc 1 153 12 view .LVU123
 541 0066 E4B2     		uxtb	r4, r4
 542              	.LVL56:
 543              	.L27:
 155:Core/Src/main.c ****     {
 544              		.loc 1 155 5 is_stmt 1 view .LVU124
 155:Core/Src/main.c ****     {
 545              		.loc 1 155 11 is_stmt 0 view .LVU125
 546 0068 344B     		ldr	r3, .L39+36
 547 006a D3E90289 		ldrd	r8, [r3, #8]
 155:Core/Src/main.c ****     {
 548              		.loc 1 155 7 view .LVU126
 549 006e 2CA3     		adr	r3, .L39+8
 550 0070 D3E90023 		ldrd	r2, [r3]
 551 0074 4046     		mov	r0, r8
 552 0076 4946     		mov	r1, r9
 553 0078 FFF7FEFF 		bl	__aeabi_dcmplt
 554              	.LVL57:
 555 007c 0028     		cmp	r0, #0
 556 007e 3AD0     		beq	.L29
 155:Core/Src/main.c ****     {
 557              		.loc 1 155 19 discriminator 1 view .LVU127
 558 0080 812D     		cmp	r5, #129
 559 0082 38D8     		bhi	.L29
 157:Core/Src/main.c ****     }else if(vol[1]>2.19&&pos_y>30){
 560              		.loc 1 157 7 is_stmt 1 view .LVU128
 157:Core/Src/main.c ****     }else if(vol[1]>2.19&&pos_y>30){
 561              		.loc 1 157 12 is_stmt 0 view .LVU129
 562 0084 0135     		adds	r5, r5, #1
 563              	.LVL58:
 157:Core/Src/main.c ****     }else if(vol[1]>2.19&&pos_y>30){
 564              		.loc 1 157 12 view .LVU130
 565 0086 EDB2     		uxtb	r5, r5
 566              	.LVL59:
 567              	.L31:
 161:Core/Src/main.c ****     printf("pos_y: %3d adc = %d vol 1 = %.2fV.\n",pos_y,adc_value[1],vol[1]);
 568              		.loc 1 161 5 is_stmt 1 view .LVU131
 569 0088 DFF8B480 		ldr	r8, .L39+40
 570 008c CDE90067 		strd	r6, [sp]
 571 0090 D8F80020 		ldr	r2, [r8]
 572 0094 2146     		mov	r1, r4
 573 0096 2B48     		ldr	r0, .L39+44
 574 0098 FFF7FEFF 		bl	printf
 575              	.LVL60:
 162:Core/Src/main.c ****     
 576              		.loc 1 162 5 view .LVU132
 577 009c 274B     		ldr	r3, .L39+36
 578 009e D3E90223 		ldrd	r2, [r3, #8]
 579 00a2 CDE90023 		strd	r2, [sp]
 580 00a6 D8F80420 		ldr	r2, [r8, #4]
ARM GAS  /tmp/ccTsgCIV.s 			page 20


 581 00aa 2946     		mov	r1, r5
 582 00ac 2648     		ldr	r0, .L39+48
 583 00ae FFF7FEFF 		bl	printf
 584              	.LVL61:
 164:Core/Src/main.c ****     MG996R(1,pos_y);
 585              		.loc 1 164 5 view .LVU133
 586 00b2 2146     		mov	r1, r4
 587 00b4 0020     		movs	r0, #0
 588 00b6 FFF7FEFF 		bl	MG996R
 589              	.LVL62:
 165:Core/Src/main.c ****     HAL_Delay(10);
 590              		.loc 1 165 5 view .LVU134
 591 00ba 2946     		mov	r1, r5
 592 00bc 0120     		movs	r0, #1
 593 00be FFF7FEFF 		bl	MG996R
 594              	.LVL63:
 166:Core/Src/main.c **** 
 595              		.loc 1 166 5 view .LVU135
 596 00c2 0A20     		movs	r0, #10
 597 00c4 FFF7FEFF 		bl	HAL_Delay
 598              	.LVL64:
 599              	.LBE6:
 145:Core/Src/main.c ****   {
 600              		.loc 1 145 9 view .LVU136
 601              	.L33:
 145:Core/Src/main.c ****   {
 602              		.loc 1 145 3 view .LVU137
 603              	.LBB7:
 147:Core/Src/main.c ****     GetADC(1);//y max = 2.07  adcy 变小，posy变大
 604              		.loc 1 147 5 view .LVU138
 605 00c8 0020     		movs	r0, #0
 606 00ca FFF7FEFF 		bl	GetADC
 607              	.LVL65:
 148:Core/Src/main.c ****     if(vol[0]<1.71&&pos_x>0)
 608              		.loc 1 148 5 view .LVU139
 609 00ce 0120     		movs	r0, #1
 610 00d0 FFF7FEFF 		bl	GetADC
 611              	.LVL66:
 149:Core/Src/main.c ****     {
 612              		.loc 1 149 5 view .LVU140
 149:Core/Src/main.c ****     {
 613              		.loc 1 149 11 is_stmt 0 view .LVU141
 614 00d4 194B     		ldr	r3, .L39+36
 615 00d6 D3E90067 		ldrd	r6, [r3]
 149:Core/Src/main.c ****     {
 616              		.loc 1 149 7 view .LVU142
 617 00da 13A3     		adr	r3, .L39+16
 618 00dc D3E90023 		ldrd	r2, [r3]
 619 00e0 3046     		mov	r0, r6
 620 00e2 3946     		mov	r1, r7
 621 00e4 FFF7FEFF 		bl	__aeabi_dcmplt
 622              	.LVL67:
 623 00e8 0028     		cmp	r0, #0
 624 00ea B1D0     		beq	.L25
 149:Core/Src/main.c ****     {
 625              		.loc 1 149 19 discriminator 1 view .LVU143
 626 00ec 002C     		cmp	r4, #0
ARM GAS  /tmp/ccTsgCIV.s 			page 21


 627 00ee AFD0     		beq	.L25
 151:Core/Src/main.c ****     }else if(vol[0]>1.80&&pos_x<180){
 628              		.loc 1 151 7 is_stmt 1 view .LVU144
 151:Core/Src/main.c ****     }else if(vol[0]>1.80&&pos_x<180){
 629              		.loc 1 151 12 is_stmt 0 view .LVU145
 630 00f0 013C     		subs	r4, r4, #1
 631              	.LVL68:
 151:Core/Src/main.c ****     }else if(vol[0]>1.80&&pos_x<180){
 632              		.loc 1 151 12 view .LVU146
 633 00f2 E4B2     		uxtb	r4, r4
 634              	.LVL69:
 151:Core/Src/main.c ****     }else if(vol[0]>1.80&&pos_x<180){
 635              		.loc 1 151 12 view .LVU147
 636 00f4 B8E7     		b	.L27
 637              	.L29:
 158:Core/Src/main.c ****       pos_y--;
 638              		.loc 1 158 11 is_stmt 1 view .LVU148
 158:Core/Src/main.c ****       pos_y--;
 639              		.loc 1 158 13 is_stmt 0 view .LVU149
 640 00f6 0EA3     		adr	r3, .L39+24
 641 00f8 D3E90023 		ldrd	r2, [r3]
 642 00fc 4046     		mov	r0, r8
 643 00fe 4946     		mov	r1, r9
 644 0100 FFF7FEFF 		bl	__aeabi_dcmpgt
 645              	.LVL70:
 646 0104 0028     		cmp	r0, #0
 647 0106 BFD0     		beq	.L31
 158:Core/Src/main.c ****       pos_y--;
 648              		.loc 1 158 25 discriminator 1 view .LVU150
 649 0108 1E2D     		cmp	r5, #30
 650 010a BDD9     		bls	.L31
 159:Core/Src/main.c ****     }
 651              		.loc 1 159 7 is_stmt 1 view .LVU151
 159:Core/Src/main.c ****     }
 652              		.loc 1 159 12 is_stmt 0 view .LVU152
 653 010c 013D     		subs	r5, r5, #1
 654              	.LVL71:
 159:Core/Src/main.c ****     }
 655              		.loc 1 159 12 view .LVU153
 656 010e EDB2     		uxtb	r5, r5
 657              	.LVL72:
 159:Core/Src/main.c ****     }
 658              		.loc 1 159 12 view .LVU154
 659 0110 BAE7     		b	.L31
 660              	.L40:
 661 0112 00BFAFF3 		.align	3
 661      0080
 662              	.L39:
 663 0118 CDCCCCCC 		.word	-858993459
 664 011c CCCCFC3F 		.word	1073532108
 665 0120 33333333 		.word	858993459
 666 0124 3333FF3F 		.word	1073689395
 667 0128 5C8FC2F5 		.word	-171798692
 668 012c 285CFB3F 		.word	1073437736
 669 0130 85EB51B8 		.word	-1202590843
 670 0134 1E850140 		.word	1073841438
 671 0138 00000000 		.word	htim1
ARM GAS  /tmp/ccTsgCIV.s 			page 22


 672 013c 00000000 		.word	.LANCHOR1
 673 0140 00000000 		.word	.LANCHOR0
 674 0144 00000000 		.word	.LC0
 675 0148 24000000 		.word	.LC1
 676              	.LBE7:
 677              		.cfi_endproc
 678              	.LFE67:
 680              		.global	adc_value
 681              		.global	vol
 682              		.section	.bss.adc_value,"aw",%nobits
 683              		.align	2
 684              		.set	.LANCHOR0,. + 0
 687              	adc_value:
 688 0000 00000000 		.space	8
 688      00000000 
 689              		.section	.bss.vol,"aw",%nobits
 690              		.align	3
 691              		.set	.LANCHOR1,. + 0
 694              	vol:
 695 0000 00000000 		.space	16
 695      00000000 
 695      00000000 
 695      00000000 
 696              		.text
 697              	.Letext0:
 698              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 699              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 700              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 701              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 702              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 703              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 704              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 705              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 706              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 707              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 708              		.file 13 "Core/Inc/adc.h"
 709              		.file 14 "Core/Inc/tim.h"
 710              		.file 15 "<built-in>"
 711              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 712              		.file 17 "Core/Inc/gpio.h"
 713              		.file 18 "Core/Inc/usart.h"
ARM GAS  /tmp/ccTsgCIV.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccTsgCIV.s:24     .text.MG996R:0000000000000000 $t
     /tmp/ccTsgCIV.s:30     .text.MG996R:0000000000000000 MG996R
     /tmp/ccTsgCIV.s:129    .text.MG996R:0000000000000078 $d
     /tmp/ccTsgCIV.s:142    .text.GetADC:0000000000000000 $t
     /tmp/ccTsgCIV.s:148    .text.GetADC:0000000000000000 GetADC
     /tmp/ccTsgCIV.s:248    .text.GetADC:0000000000000078 $d
     /tmp/ccTsgCIV.s:259    .text.Error_Handler:0000000000000000 $t
     /tmp/ccTsgCIV.s:265    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccTsgCIV.s:297    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccTsgCIV.s:303    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccTsgCIV.s:435    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccTsgCIV.s:442    .text.main:0000000000000000 $t
     /tmp/ccTsgCIV.s:448    .text.main:0000000000000000 main
     /tmp/ccTsgCIV.s:663    .text.main:0000000000000118 $d
     /tmp/ccTsgCIV.s:687    .bss.adc_value:0000000000000000 adc_value
     /tmp/ccTsgCIV.s:694    .bss.vol:0000000000000000 vol
     /tmp/ccTsgCIV.s:683    .bss.adc_value:0000000000000000 $d
     /tmp/ccTsgCIV.s:690    .bss.vol:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dadd
__aeabi_dsub
__aeabi_d2uiz
htim1
__aeabi_ui2d
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
hadc2
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_dcmplt
__aeabi_dcmpgt
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_TIM1_Init
MX_ADC1_Init
MX_ADC2_Init
HAL_TIM_PWM_Start
HAL_Delay
printf
