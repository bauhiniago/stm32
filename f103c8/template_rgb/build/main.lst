ARM GAS  /tmp/ccf3tJiT.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_PWM_PulseFinishedCallback,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_PWM_PulseFinishedCallback
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_TIM_PWM_PulseFinishedCallback:
  25              	.LVL0:
  26              	.LFB67:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "sk6812.h"
  30:Core/Src/main.c **** //#include <stdio.h>
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccf3tJiT.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c ****   
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c ****   
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccf3tJiT.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_DMA_Init();
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
  95:Core/Src/main.c ****   MX_TIM2_Init();
  96:Core/Src/main.c ****   MX_TIM1_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c ****   extern uint16_t send_Buf[NUM];
  99:Core/Src/main.c ****   SK_CloseAll();
 100:Core/Src/main.c ****   //HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_1, (uint32_t *)send_Buf, NUM);
 101:Core/Src/main.c ****   
 102:Core/Src/main.c ****   
 103:Core/Src/main.c ****   // for (size_t i = 0; i < 20; i++)
 104:Core/Src/main.c ****   // {
 105:Core/Src/main.c ****   //   send_Buf2[i]=200;
 106:Core/Src/main.c ****   // }
 107:Core/Src/main.c ****   //SK_CloseAll();
 108:Core/Src/main.c **** //     SK_WritePixel(18,255,0,0);
 109:Core/Src/main.c **** //     SK_WritePixel(19,255,0,0);
 110:Core/Src/main.c **** // SK_WritePixel(17,255,0,0);
 111:Core/Src/main.c ****     
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   //__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,800);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   //HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 118:Core/Src/main.c ****   //SK_WritePixel(3,100,0,0);
 119:Core/Src/main.c ****   //SK_WritePixel(19,0,100,0);
 120:Core/Src/main.c ****   //SK_Breathing_RGB();
 121:Core/Src/main.c ****   
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Infinite loop */
 125:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 126:Core/Src/main.c ****   while (1)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     //HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 129:Core/Src/main.c ****     
 130:Core/Src/main.c ****     //HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 131:Core/Src/main.c ****     //HAL_Delay(200)
 132:Core/Src/main.c ****     
 133:Core/Src/main.c ****     //SK_Watering_RGB();
 134:Core/Src/main.c ****     SK_Rainbow(40);
 135:Core/Src/main.c ****     //HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_1, (uint32_t *)send_Buf2,5);
 136:Core/Src/main.c ****     //HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_1, (uint32_t *)send_Buf, NUM);
 137:Core/Src/main.c ****     
 138:Core/Src/main.c ****   //
 139:Core/Src/main.c ****   
 140:Core/Src/main.c ****   //SK_Breathing_RGB();
 141:Core/Src/main.c ****     /* USER CODE END WHILE */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 144:Core/Src/main.c ****   }
 145:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  /tmp/ccf3tJiT.s 			page 4


 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief System Clock Configuration
 150:Core/Src/main.c ****   * @retval None
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** void SystemClock_Config(void)
 153:Core/Src/main.c **** {
 154:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 158:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 187:Core/Src/main.c **** void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 188:Core/Src/main.c **** {
  28              		.loc 1 188 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 189:Core/Src/main.c **** 	//HAL_TIM_PWM_Stop_DMA(&htim2, TIM_CHANNEL_1);
 190:Core/Src/main.c **** }
  33              		.loc 1 190 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE67:
  38              		.section	.text.Error_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	Error_Handler
ARM GAS  /tmp/ccf3tJiT.s 			page 5


  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu softvfp
  46              	Error_Handler:
  47              	.LFB68:
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /* USER CODE END 4 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /**
 195:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** void Error_Handler(void)
 199:Core/Src/main.c **** {
  48              		.loc 1 199 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
 200:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 201:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 202:Core/Src/main.c ****   __disable_irq();
  54              		.loc 1 202 3 view .LVU3
  55              	.LBB4:
  56              	.LBI4:
  57              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/ccf3tJiT.s 			page 6


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/ccf3tJiT.s 			page 7


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  58              		.loc 2 140 27 view .LVU4
  59              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccf3tJiT.s 			page 8


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  60              		.loc 2 142 3 view .LVU5
  61              		.syntax unified
  62              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  63 0000 72B6     		cpsid i
  64              	@ 0 "" 2
  65              		.thumb
  66              		.syntax unified
  67              	.L3:
  68              	.LBE5:
  69              	.LBE4:
 203:Core/Src/main.c ****   while (1)
  70              		.loc 1 203 3 discriminator 1 view .LVU6
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****   }
  71              		.loc 1 205 3 discriminator 1 view .LVU7
 203:Core/Src/main.c ****   while (1)
  72              		.loc 1 203 9 discriminator 1 view .LVU8
  73 0002 FEE7     		b	.L3
  74              		.cfi_endproc
  75              	.LFE68:
  77              		.section	.text.SystemClock_Config,"ax",%progbits
  78              		.align	1
  79              		.global	SystemClock_Config
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	SystemClock_Config:
  86              	.LFB66:
 153:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  87              		.loc 1 153 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 64
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 00B5     		push	{lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 14, -4
  95 0002 91B0     		sub	sp, sp, #68
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 72
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  98              		.loc 1 154 3 view .LVU10
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  99              		.loc 1 154 22 is_stmt 0 view .LVU11
 100 0004 2822     		movs	r2, #40
 101 0006 0021     		movs	r1, #0
 102 0008 06A8     		add	r0, sp, #24
 103 000a FFF7FEFF 		bl	memset
 104              	.LVL1:
 155:Core/Src/main.c **** 
 105              		.loc 1 155 3 is_stmt 1 view .LVU12
 155:Core/Src/main.c **** 
 106              		.loc 1 155 22 is_stmt 0 view .LVU13
 107 000e 0023     		movs	r3, #0
 108 0010 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccf3tJiT.s 			page 9


 109 0012 0293     		str	r3, [sp, #8]
 110 0014 0393     		str	r3, [sp, #12]
 111 0016 0493     		str	r3, [sp, #16]
 112 0018 0593     		str	r3, [sp, #20]
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 113              		.loc 1 160 3 is_stmt 1 view .LVU14
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 114              		.loc 1 160 36 is_stmt 0 view .LVU15
 115 001a 0122     		movs	r2, #1
 116 001c 0692     		str	r2, [sp, #24]
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 117              		.loc 1 161 3 is_stmt 1 view .LVU16
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 118              		.loc 1 161 30 is_stmt 0 view .LVU17
 119 001e 4FF48033 		mov	r3, #65536
 120 0022 0793     		str	r3, [sp, #28]
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 121              		.loc 1 162 3 is_stmt 1 view .LVU18
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 122              		.loc 1 163 3 view .LVU19
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 123              		.loc 1 163 30 is_stmt 0 view .LVU20
 124 0024 0A92     		str	r2, [sp, #40]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 125              		.loc 1 164 3 is_stmt 1 view .LVU21
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 126              		.loc 1 164 34 is_stmt 0 view .LVU22
 127 0026 0222     		movs	r2, #2
 128 0028 0D92     		str	r2, [sp, #52]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 129              		.loc 1 165 3 is_stmt 1 view .LVU23
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 130              		.loc 1 165 35 is_stmt 0 view .LVU24
 131 002a 0E93     		str	r3, [sp, #56]
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 132              		.loc 1 166 3 is_stmt 1 view .LVU25
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133              		.loc 1 166 32 is_stmt 0 view .LVU26
 134 002c 4FF4E013 		mov	r3, #1835008
 135 0030 0F93     		str	r3, [sp, #60]
 167:Core/Src/main.c ****   {
 136              		.loc 1 167 3 is_stmt 1 view .LVU27
 167:Core/Src/main.c ****   {
 137              		.loc 1 167 7 is_stmt 0 view .LVU28
 138 0032 06A8     		add	r0, sp, #24
 139 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 140              	.LVL2:
 167:Core/Src/main.c ****   {
 141              		.loc 1 167 6 view .LVU29
 142 0038 80B9     		cbnz	r0, .L8
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143              		.loc 1 173 3 is_stmt 1 view .LVU30
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 144              		.loc 1 173 31 is_stmt 0 view .LVU31
 145 003a 0F23     		movs	r3, #15
 146 003c 0193     		str	r3, [sp, #4]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccf3tJiT.s 			page 10


 147              		.loc 1 175 3 is_stmt 1 view .LVU32
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148              		.loc 1 175 34 is_stmt 0 view .LVU33
 149 003e 0221     		movs	r1, #2
 150 0040 0291     		str	r1, [sp, #8]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151              		.loc 1 176 3 is_stmt 1 view .LVU34
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 152              		.loc 1 176 35 is_stmt 0 view .LVU35
 153 0042 0023     		movs	r3, #0
 154 0044 0393     		str	r3, [sp, #12]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155              		.loc 1 177 3 is_stmt 1 view .LVU36
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 156              		.loc 1 177 36 is_stmt 0 view .LVU37
 157 0046 4FF48062 		mov	r2, #1024
 158 004a 0492     		str	r2, [sp, #16]
 178:Core/Src/main.c **** 
 159              		.loc 1 178 3 is_stmt 1 view .LVU38
 178:Core/Src/main.c **** 
 160              		.loc 1 178 36 is_stmt 0 view .LVU39
 161 004c 0593     		str	r3, [sp, #20]
 180:Core/Src/main.c ****   {
 162              		.loc 1 180 3 is_stmt 1 view .LVU40
 180:Core/Src/main.c ****   {
 163              		.loc 1 180 7 is_stmt 0 view .LVU41
 164 004e 01A8     		add	r0, sp, #4
 165 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 166              	.LVL3:
 180:Core/Src/main.c ****   {
 167              		.loc 1 180 6 view .LVU42
 168 0054 20B9     		cbnz	r0, .L9
 184:Core/Src/main.c **** 
 169              		.loc 1 184 1 view .LVU43
 170 0056 11B0     		add	sp, sp, #68
 171              	.LCFI2:
 172              		.cfi_remember_state
 173              		.cfi_def_cfa_offset 4
 174              		@ sp needed
 175 0058 5DF804FB 		ldr	pc, [sp], #4
 176              	.L8:
 177              	.LCFI3:
 178              		.cfi_restore_state
 169:Core/Src/main.c ****   }
 179              		.loc 1 169 5 is_stmt 1 view .LVU44
 180 005c FFF7FEFF 		bl	Error_Handler
 181              	.LVL4:
 182              	.L9:
 182:Core/Src/main.c ****   }
 183              		.loc 1 182 5 view .LVU45
 184 0060 FFF7FEFF 		bl	Error_Handler
 185              	.LVL5:
 186              		.cfi_endproc
 187              	.LFE66:
 189              		.section	.text.main,"ax",%progbits
 190              		.align	1
 191              		.global	main
ARM GAS  /tmp/ccf3tJiT.s 			page 11


 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	main:
 198              	.LFB65:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 199              		.loc 1 70 1 view -0
 200              		.cfi_startproc
 201              		@ Volatile: function does not return.
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI4:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 209              		.loc 1 78 3 view .LVU47
 210 0002 FFF7FEFF 		bl	HAL_Init
 211              	.LVL6:
  85:Core/Src/main.c **** 
 212              		.loc 1 85 3 view .LVU48
 213 0006 FFF7FEFF 		bl	SystemClock_Config
 214              	.LVL7:
  92:Core/Src/main.c ****   MX_DMA_Init();
 215              		.loc 1 92 3 view .LVU49
 216 000a FFF7FEFF 		bl	MX_GPIO_Init
 217              	.LVL8:
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
 218              		.loc 1 93 3 view .LVU50
 219 000e FFF7FEFF 		bl	MX_DMA_Init
 220              	.LVL9:
  94:Core/Src/main.c ****   MX_TIM2_Init();
 221              		.loc 1 94 3 view .LVU51
 222 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 223              	.LVL10:
  95:Core/Src/main.c ****   MX_TIM1_Init();
 224              		.loc 1 95 3 view .LVU52
 225 0016 FFF7FEFF 		bl	MX_TIM2_Init
 226              	.LVL11:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 227              		.loc 1 96 3 view .LVU53
 228 001a FFF7FEFF 		bl	MX_TIM1_Init
 229              	.LVL12:
  98:Core/Src/main.c ****   SK_CloseAll();
 230              		.loc 1 98 3 view .LVU54
  99:Core/Src/main.c ****   //HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_1, (uint32_t *)send_Buf, NUM);
 231              		.loc 1 99 3 view .LVU55
 232 001e FFF7FEFF 		bl	SK_CloseAll
 233              	.LVL13:
 234              	.L11:
 126:Core/Src/main.c ****   {
 235              		.loc 1 126 3 discriminator 1 view .LVU56
 236              	.LBB6:
 134:Core/Src/main.c ****     //HAL_TIM_PWM_Start_DMA(&htim2, TIM_CHANNEL_1, (uint32_t *)send_Buf2,5);
 237              		.loc 1 134 5 discriminator 1 view .LVU57
ARM GAS  /tmp/ccf3tJiT.s 			page 12


 238 0022 2820     		movs	r0, #40
 239 0024 FFF7FEFF 		bl	SK_Rainbow
 240              	.LVL14:
 241              	.LBE6:
 126:Core/Src/main.c ****   {
 242              		.loc 1 126 9 discriminator 1 view .LVU58
 243 0028 FBE7     		b	.L11
 244              		.cfi_endproc
 245              	.LFE65:
 247              		.text
 248              	.Letext0:
 249              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 250              		.file 4 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 251              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 252              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 253              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 254              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 255              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 256              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 257              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 258              		.file 12 "Core/Inc/gpio.h"
 259              		.file 13 "Core/Inc/dma.h"
 260              		.file 14 "Core/Inc/usart.h"
 261              		.file 15 "Core/Inc/tim.h"
 262              		.file 16 "Core/Inc/sk6812.h"
 263              		.file 17 "<built-in>"
ARM GAS  /tmp/ccf3tJiT.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccf3tJiT.s:16     .text.HAL_TIM_PWM_PulseFinishedCallback:0000000000000000 $t
     /tmp/ccf3tJiT.s:24     .text.HAL_TIM_PWM_PulseFinishedCallback:0000000000000000 HAL_TIM_PWM_PulseFinishedCallback
     /tmp/ccf3tJiT.s:39     .text.Error_Handler:0000000000000000 $t
     /tmp/ccf3tJiT.s:46     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccf3tJiT.s:78     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccf3tJiT.s:85     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccf3tJiT.s:190    .text.main:0000000000000000 $t
     /tmp/ccf3tJiT.s:197    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_TIM2_Init
MX_TIM1_Init
SK_CloseAll
SK_Rainbow
