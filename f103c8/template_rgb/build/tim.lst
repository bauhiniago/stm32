ARM GAS  /tmp/ccclXs4w.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_Base_MspInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_TIM_Base_MspInit:
  25              	.LVL0:
  26              	.LFB67:
  27              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /**
   2:Core/Src/tim.c ****   ******************************************************************************
   3:Core/Src/tim.c ****   * @file    tim.c
   4:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/tim.c ****   *          of the TIM instances.
   6:Core/Src/tim.c ****   ******************************************************************************
   7:Core/Src/tim.c ****   * @attention
   8:Core/Src/tim.c ****   *
   9:Core/Src/tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/tim.c ****   *
  12:Core/Src/tim.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/tim.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/tim.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/tim.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** 
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim2;
  29:Core/Src/tim.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  30:Core/Src/tim.c **** 
  31:Core/Src/tim.c **** /* TIM1 init function */
ARM GAS  /tmp/ccclXs4w.s 			page 2


  32:Core/Src/tim.c **** void MX_TIM1_Init(void)
  33:Core/Src/tim.c **** {
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  38:Core/Src/tim.c **** 
  39:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  40:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  41:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  42:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  45:Core/Src/tim.c **** 
  46:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  47:Core/Src/tim.c ****   htim1.Instance = TIM1;
  48:Core/Src/tim.c ****   htim1.Init.Prescaler = 72-1;
  49:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  50:Core/Src/tim.c ****   htim1.Init.Period = 1000-1;
  51:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  52:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  53:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  54:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  55:Core/Src/tim.c ****   {
  56:Core/Src/tim.c ****     Error_Handler();
  57:Core/Src/tim.c ****   }
  58:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  59:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  60:Core/Src/tim.c ****   {
  61:Core/Src/tim.c ****     Error_Handler();
  62:Core/Src/tim.c ****   }
  63:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  64:Core/Src/tim.c ****   {
  65:Core/Src/tim.c ****     Error_Handler();
  66:Core/Src/tim.c ****   }
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  70:Core/Src/tim.c ****   {
  71:Core/Src/tim.c ****     Error_Handler();
  72:Core/Src/tim.c ****   }
  73:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 500;
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  81:Core/Src/tim.c ****   {
  82:Core/Src/tim.c ****     Error_Handler();
  83:Core/Src/tim.c ****   }
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  /tmp/ccclXs4w.s 			page 3


  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  91:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  92:Core/Src/tim.c ****   {
  93:Core/Src/tim.c ****     Error_Handler();
  94:Core/Src/tim.c ****   }
  95:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  96:Core/Src/tim.c **** 
  97:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  98:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
  99:Core/Src/tim.c **** 
 100:Core/Src/tim.c **** }
 101:Core/Src/tim.c **** /* TIM2 init function */
 102:Core/Src/tim.c **** void MX_TIM2_Init(void)
 103:Core/Src/tim.c **** {
 104:Core/Src/tim.c **** 
 105:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 106:Core/Src/tim.c **** 
 107:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 0 */
 108:Core/Src/tim.c **** 
 109:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 110:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 111:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 112:Core/Src/tim.c **** 
 113:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 114:Core/Src/tim.c **** 
 115:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 1 */
 116:Core/Src/tim.c ****   htim2.Instance = TIM2;
 117:Core/Src/tim.c ****   htim2.Init.Prescaler = 18-1;
 118:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 119:Core/Src/tim.c ****   htim2.Init.Period = 5-1;
 120:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 121:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 122:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 123:Core/Src/tim.c ****   {
 124:Core/Src/tim.c ****     Error_Handler();
 125:Core/Src/tim.c ****   }
 126:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 127:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 128:Core/Src/tim.c ****   {
 129:Core/Src/tim.c ****     Error_Handler();
 130:Core/Src/tim.c ****   }
 131:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 132:Core/Src/tim.c ****   {
 133:Core/Src/tim.c ****     Error_Handler();
 134:Core/Src/tim.c ****   }
 135:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 136:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 137:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 138:Core/Src/tim.c ****   {
 139:Core/Src/tim.c ****     Error_Handler();
 140:Core/Src/tim.c ****   }
 141:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 142:Core/Src/tim.c ****   sConfigOC.Pulse = 1000;
 143:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 144:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 145:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /tmp/ccclXs4w.s 			page 4


 146:Core/Src/tim.c ****   {
 147:Core/Src/tim.c ****     Error_Handler();
 148:Core/Src/tim.c ****   }
 149:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 150:Core/Src/tim.c **** 
 151:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 2 */
 152:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim2);
 153:Core/Src/tim.c **** 
 154:Core/Src/tim.c **** }
 155:Core/Src/tim.c **** 
 156:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 157:Core/Src/tim.c **** {
  28              		.loc 1 157 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 157 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
 158:Core/Src/tim.c **** 
 159:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
  41              		.loc 1 159 3 is_stmt 1 view .LVU2
  42              		.loc 1 159 20 is_stmt 0 view .LVU3
  43 0004 0368     		ldr	r3, [r0]
  44              		.loc 1 159 5 view .LVU4
  45 0006 1D4A     		ldr	r2, .L9
  46 0008 9342     		cmp	r3, r2
  47 000a 05D0     		beq	.L6
  48 000c 0446     		mov	r4, r0
 160:Core/Src/tim.c ****   {
 161:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 162:Core/Src/tim.c **** 
 163:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 164:Core/Src/tim.c ****     /* TIM1 clock enable */
 165:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 166:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 167:Core/Src/tim.c **** 
 168:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 169:Core/Src/tim.c ****   }
 170:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
  49              		.loc 1 170 8 is_stmt 1 view .LVU5
  50              		.loc 1 170 10 is_stmt 0 view .LVU6
  51 000e B3F1804F 		cmp	r3, #1073741824
  52 0012 0CD0     		beq	.L7
  53              	.LVL1:
  54              	.L1:
 171:Core/Src/tim.c ****   {
 172:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 173:Core/Src/tim.c **** 
 174:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 0 */
 175:Core/Src/tim.c ****     /* TIM2 clock enable */
ARM GAS  /tmp/ccclXs4w.s 			page 5


 176:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 177:Core/Src/tim.c **** 
 178:Core/Src/tim.c ****     /* TIM2 DMA Init */
 179:Core/Src/tim.c ****     /* TIM2_CH1 Init */
 180:Core/Src/tim.c ****     hdma_tim2_ch1.Instance = DMA1_Channel5;
 181:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 182:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 183:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 184:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 185:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 186:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;
 187:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_LOW;
 188:Core/Src/tim.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 189:Core/Src/tim.c ****     {
 190:Core/Src/tim.c ****       Error_Handler();
 191:Core/Src/tim.c ****     }
 192:Core/Src/tim.c **** 
 193:Core/Src/tim.c ****     __HAL_LINKDMA(tim_baseHandle,hdma[TIM_DMA_ID_CC1],hdma_tim2_ch1);
 194:Core/Src/tim.c **** 
 195:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 196:Core/Src/tim.c **** 
 197:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 1 */
 198:Core/Src/tim.c ****   }
 199:Core/Src/tim.c **** }
  55              		.loc 1 199 1 view .LVU7
  56 0014 02B0     		add	sp, sp, #8
  57              	.LCFI2:
  58              		.cfi_remember_state
  59              		.cfi_def_cfa_offset 8
  60              		@ sp needed
  61 0016 10BD     		pop	{r4, pc}
  62              	.LVL2:
  63              	.L6:
  64              	.LCFI3:
  65              		.cfi_restore_state
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  66              		.loc 1 165 5 is_stmt 1 view .LVU8
  67              	.LBB2:
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  68              		.loc 1 165 5 view .LVU9
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  69              		.loc 1 165 5 view .LVU10
  70 0018 194B     		ldr	r3, .L9+4
  71 001a 9A69     		ldr	r2, [r3, #24]
  72 001c 42F40062 		orr	r2, r2, #2048
  73 0020 9A61     		str	r2, [r3, #24]
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  74              		.loc 1 165 5 view .LVU11
  75 0022 9B69     		ldr	r3, [r3, #24]
  76 0024 03F40063 		and	r3, r3, #2048
  77 0028 0093     		str	r3, [sp]
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  78              		.loc 1 165 5 view .LVU12
  79 002a 009B     		ldr	r3, [sp]
  80              	.LBE2:
 165:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  81              		.loc 1 165 5 view .LVU13
ARM GAS  /tmp/ccclXs4w.s 			page 6


  82 002c F2E7     		b	.L1
  83              	.L7:
 176:Core/Src/tim.c **** 
  84              		.loc 1 176 5 view .LVU14
  85              	.LBB3:
 176:Core/Src/tim.c **** 
  86              		.loc 1 176 5 view .LVU15
 176:Core/Src/tim.c **** 
  87              		.loc 1 176 5 view .LVU16
  88 002e 03F50433 		add	r3, r3, #135168
  89 0032 DA69     		ldr	r2, [r3, #28]
  90 0034 42F00102 		orr	r2, r2, #1
  91 0038 DA61     		str	r2, [r3, #28]
 176:Core/Src/tim.c **** 
  92              		.loc 1 176 5 view .LVU17
  93 003a DB69     		ldr	r3, [r3, #28]
  94 003c 03F00103 		and	r3, r3, #1
  95 0040 0193     		str	r3, [sp, #4]
 176:Core/Src/tim.c **** 
  96              		.loc 1 176 5 view .LVU18
  97 0042 019B     		ldr	r3, [sp, #4]
  98              	.LBE3:
 176:Core/Src/tim.c **** 
  99              		.loc 1 176 5 view .LVU19
 180:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 100              		.loc 1 180 5 view .LVU20
 180:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 101              		.loc 1 180 28 is_stmt 0 view .LVU21
 102 0044 0F48     		ldr	r0, .L9+8
 103              	.LVL3:
 180:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 104              		.loc 1 180 28 view .LVU22
 105 0046 104B     		ldr	r3, .L9+12
 106 0048 0360     		str	r3, [r0]
 181:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 107              		.loc 1 181 5 is_stmt 1 view .LVU23
 181:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 108              		.loc 1 181 34 is_stmt 0 view .LVU24
 109 004a 1023     		movs	r3, #16
 110 004c 4360     		str	r3, [r0, #4]
 182:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 111              		.loc 1 182 5 is_stmt 1 view .LVU25
 182:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 112              		.loc 1 182 34 is_stmt 0 view .LVU26
 113 004e 0023     		movs	r3, #0
 114 0050 8360     		str	r3, [r0, #8]
 183:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 115              		.loc 1 183 5 is_stmt 1 view .LVU27
 183:Core/Src/tim.c ****     hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 116              		.loc 1 183 31 is_stmt 0 view .LVU28
 117 0052 8022     		movs	r2, #128
 118 0054 C260     		str	r2, [r0, #12]
 184:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 119              		.loc 1 184 5 is_stmt 1 view .LVU29
 184:Core/Src/tim.c ****     hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 120              		.loc 1 184 44 is_stmt 0 view .LVU30
 121 0056 4FF48072 		mov	r2, #256
ARM GAS  /tmp/ccclXs4w.s 			page 7


 122 005a 0261     		str	r2, [r0, #16]
 185:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;
 123              		.loc 1 185 5 is_stmt 1 view .LVU31
 185:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;
 124              		.loc 1 185 41 is_stmt 0 view .LVU32
 125 005c 4FF48062 		mov	r2, #1024
 126 0060 4261     		str	r2, [r0, #20]
 186:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_LOW;
 127              		.loc 1 186 5 is_stmt 1 view .LVU33
 186:Core/Src/tim.c ****     hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_LOW;
 128              		.loc 1 186 29 is_stmt 0 view .LVU34
 129 0062 2022     		movs	r2, #32
 130 0064 8261     		str	r2, [r0, #24]
 187:Core/Src/tim.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 131              		.loc 1 187 5 is_stmt 1 view .LVU35
 187:Core/Src/tim.c ****     if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 132              		.loc 1 187 33 is_stmt 0 view .LVU36
 133 0066 C361     		str	r3, [r0, #28]
 188:Core/Src/tim.c ****     {
 134              		.loc 1 188 5 is_stmt 1 view .LVU37
 188:Core/Src/tim.c ****     {
 135              		.loc 1 188 9 is_stmt 0 view .LVU38
 136 0068 FFF7FEFF 		bl	HAL_DMA_Init
 137              	.LVL4:
 188:Core/Src/tim.c ****     {
 138              		.loc 1 188 8 view .LVU39
 139 006c 18B9     		cbnz	r0, .L8
 140              	.L4:
 193:Core/Src/tim.c **** 
 141              		.loc 1 193 5 is_stmt 1 view .LVU40
 193:Core/Src/tim.c **** 
 142              		.loc 1 193 5 view .LVU41
 143 006e 054B     		ldr	r3, .L9+8
 144 0070 6362     		str	r3, [r4, #36]
 193:Core/Src/tim.c **** 
 145              		.loc 1 193 5 view .LVU42
 146 0072 5C62     		str	r4, [r3, #36]
 193:Core/Src/tim.c **** 
 147              		.loc 1 193 5 view .LVU43
 148              		.loc 1 199 1 is_stmt 0 view .LVU44
 149 0074 CEE7     		b	.L1
 150              	.L8:
 190:Core/Src/tim.c ****     }
 151              		.loc 1 190 7 is_stmt 1 view .LVU45
 152 0076 FFF7FEFF 		bl	Error_Handler
 153              	.LVL5:
 154 007a F8E7     		b	.L4
 155              	.L10:
 156              		.align	2
 157              	.L9:
 158 007c 002C0140 		.word	1073818624
 159 0080 00100240 		.word	1073876992
 160 0084 00000000 		.word	.LANCHOR0
 161 0088 58000240 		.word	1073872984
 162              		.cfi_endproc
 163              	.LFE67:
 165              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
ARM GAS  /tmp/ccclXs4w.s 			page 8


 166              		.align	1
 167              		.global	HAL_TIM_MspPostInit
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	HAL_TIM_MspPostInit:
 174              	.LVL6:
 175              	.LFB68:
 200:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 201:Core/Src/tim.c **** {
 176              		.loc 1 201 1 view -0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 24
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		.loc 1 201 1 is_stmt 0 view .LVU47
 181 0000 00B5     		push	{lr}
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 14, -4
 185 0002 87B0     		sub	sp, sp, #28
 186              	.LCFI5:
 187              		.cfi_def_cfa_offset 32
 202:Core/Src/tim.c **** 
 203:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 188              		.loc 1 203 3 is_stmt 1 view .LVU48
 189              		.loc 1 203 20 is_stmt 0 view .LVU49
 190 0004 0023     		movs	r3, #0
 191 0006 0293     		str	r3, [sp, #8]
 192 0008 0393     		str	r3, [sp, #12]
 193 000a 0493     		str	r3, [sp, #16]
 194 000c 0593     		str	r3, [sp, #20]
 204:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 195              		.loc 1 204 3 is_stmt 1 view .LVU50
 196              		.loc 1 204 15 is_stmt 0 view .LVU51
 197 000e 0368     		ldr	r3, [r0]
 198              		.loc 1 204 5 view .LVU52
 199 0010 194A     		ldr	r2, .L17
 200 0012 9342     		cmp	r3, r2
 201 0014 05D0     		beq	.L15
 205:Core/Src/tim.c ****   {
 206:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 207:Core/Src/tim.c **** 
 208:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 209:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 210:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 211:Core/Src/tim.c ****     PA8     ------> TIM1_CH1
 212:Core/Src/tim.c ****     */
 213:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 214:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 215:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 216:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 217:Core/Src/tim.c **** 
 218:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 219:Core/Src/tim.c **** 
 220:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 221:Core/Src/tim.c ****   }
ARM GAS  /tmp/ccclXs4w.s 			page 9


 222:Core/Src/tim.c ****   else if(timHandle->Instance==TIM2)
 202              		.loc 1 222 8 is_stmt 1 view .LVU53
 203              		.loc 1 222 10 is_stmt 0 view .LVU54
 204 0016 B3F1804F 		cmp	r3, #1073741824
 205 001a 17D0     		beq	.L16
 206              	.LVL7:
 207              	.L11:
 223:Core/Src/tim.c ****   {
 224:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 225:Core/Src/tim.c **** 
 226:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 0 */
 227:Core/Src/tim.c **** 
 228:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 229:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 230:Core/Src/tim.c ****     PA0-WKUP     ------> TIM2_CH1
 231:Core/Src/tim.c ****     */
 232:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 233:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 234:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 235:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 236:Core/Src/tim.c **** 
 237:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 238:Core/Src/tim.c **** 
 239:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 1 */
 240:Core/Src/tim.c ****   }
 241:Core/Src/tim.c **** 
 242:Core/Src/tim.c **** }
 208              		.loc 1 242 1 view .LVU55
 209 001c 07B0     		add	sp, sp, #28
 210              	.LCFI6:
 211              		.cfi_remember_state
 212              		.cfi_def_cfa_offset 4
 213              		@ sp needed
 214 001e 5DF804FB 		ldr	pc, [sp], #4
 215              	.LVL8:
 216              	.L15:
 217              	.LCFI7:
 218              		.cfi_restore_state
 209:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 219              		.loc 1 209 5 is_stmt 1 view .LVU56
 220              	.LBB4:
 209:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 221              		.loc 1 209 5 view .LVU57
 209:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 222              		.loc 1 209 5 view .LVU58
 223 0022 164B     		ldr	r3, .L17+4
 224 0024 9A69     		ldr	r2, [r3, #24]
 225 0026 42F00402 		orr	r2, r2, #4
 226 002a 9A61     		str	r2, [r3, #24]
 209:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 227              		.loc 1 209 5 view .LVU59
 228 002c 9B69     		ldr	r3, [r3, #24]
 229 002e 03F00403 		and	r3, r3, #4
 230 0032 0093     		str	r3, [sp]
 209:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 231              		.loc 1 209 5 view .LVU60
 232 0034 009B     		ldr	r3, [sp]
ARM GAS  /tmp/ccclXs4w.s 			page 10


 233              	.LBE4:
 209:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 234              		.loc 1 209 5 view .LVU61
 213:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 235              		.loc 1 213 5 view .LVU62
 213:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 236              		.loc 1 213 25 is_stmt 0 view .LVU63
 237 0036 4FF48073 		mov	r3, #256
 238 003a 0293     		str	r3, [sp, #8]
 214:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 239              		.loc 1 214 5 is_stmt 1 view .LVU64
 214:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 240              		.loc 1 214 26 is_stmt 0 view .LVU65
 241 003c 0223     		movs	r3, #2
 242 003e 0393     		str	r3, [sp, #12]
 215:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 243              		.loc 1 215 5 is_stmt 1 view .LVU66
 215:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 244              		.loc 1 215 27 is_stmt 0 view .LVU67
 245 0040 0593     		str	r3, [sp, #20]
 216:Core/Src/tim.c **** 
 246              		.loc 1 216 5 is_stmt 1 view .LVU68
 247 0042 02A9     		add	r1, sp, #8
 248 0044 0E48     		ldr	r0, .L17+8
 249              	.LVL9:
 216:Core/Src/tim.c **** 
 250              		.loc 1 216 5 is_stmt 0 view .LVU69
 251 0046 FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL10:
 253 004a E7E7     		b	.L11
 254              	.LVL11:
 255              	.L16:
 228:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 256              		.loc 1 228 5 is_stmt 1 view .LVU70
 257              	.LBB5:
 228:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 258              		.loc 1 228 5 view .LVU71
 228:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 259              		.loc 1 228 5 view .LVU72
 260 004c 03F50433 		add	r3, r3, #135168
 261 0050 9A69     		ldr	r2, [r3, #24]
 262 0052 42F00402 		orr	r2, r2, #4
 263 0056 9A61     		str	r2, [r3, #24]
 228:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 264              		.loc 1 228 5 view .LVU73
 265 0058 9B69     		ldr	r3, [r3, #24]
 266 005a 03F00403 		and	r3, r3, #4
 267 005e 0193     		str	r3, [sp, #4]
 228:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 268              		.loc 1 228 5 view .LVU74
 269 0060 019B     		ldr	r3, [sp, #4]
 270              	.LBE5:
 228:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 271              		.loc 1 228 5 view .LVU75
 232:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 272              		.loc 1 232 5 view .LVU76
 232:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccclXs4w.s 			page 11


 273              		.loc 1 232 25 is_stmt 0 view .LVU77
 274 0062 0123     		movs	r3, #1
 275 0064 0293     		str	r3, [sp, #8]
 233:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 276              		.loc 1 233 5 is_stmt 1 view .LVU78
 233:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 277              		.loc 1 233 26 is_stmt 0 view .LVU79
 278 0066 0223     		movs	r3, #2
 279 0068 0393     		str	r3, [sp, #12]
 234:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 280              		.loc 1 234 5 is_stmt 1 view .LVU80
 234:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 281              		.loc 1 234 27 is_stmt 0 view .LVU81
 282 006a 0593     		str	r3, [sp, #20]
 235:Core/Src/tim.c **** 
 283              		.loc 1 235 5 is_stmt 1 view .LVU82
 284 006c 02A9     		add	r1, sp, #8
 285 006e 0448     		ldr	r0, .L17+8
 286              	.LVL12:
 235:Core/Src/tim.c **** 
 287              		.loc 1 235 5 is_stmt 0 view .LVU83
 288 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 289              	.LVL13:
 290              		.loc 1 242 1 view .LVU84
 291 0074 D2E7     		b	.L11
 292              	.L18:
 293 0076 00BF     		.align	2
 294              	.L17:
 295 0078 002C0140 		.word	1073818624
 296 007c 00100240 		.word	1073876992
 297 0080 00080140 		.word	1073809408
 298              		.cfi_endproc
 299              	.LFE68:
 301              		.section	.text.MX_TIM1_Init,"ax",%progbits
 302              		.align	1
 303              		.global	MX_TIM1_Init
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu softvfp
 309              	MX_TIM1_Init:
 310              	.LFB65:
  33:Core/Src/tim.c **** 
 311              		.loc 1 33 1 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 88
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 10B5     		push	{r4, lr}
 316              	.LCFI8:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
 320 0002 96B0     		sub	sp, sp, #88
 321              	.LCFI9:
 322              		.cfi_def_cfa_offset 96
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 323              		.loc 1 39 3 view .LVU86
ARM GAS  /tmp/ccclXs4w.s 			page 12


  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 324              		.loc 1 39 26 is_stmt 0 view .LVU87
 325 0004 0024     		movs	r4, #0
 326 0006 1294     		str	r4, [sp, #72]
 327 0008 1394     		str	r4, [sp, #76]
 328 000a 1494     		str	r4, [sp, #80]
 329 000c 1594     		str	r4, [sp, #84]
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 330              		.loc 1 40 3 is_stmt 1 view .LVU88
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 331              		.loc 1 40 27 is_stmt 0 view .LVU89
 332 000e 1094     		str	r4, [sp, #64]
 333 0010 1194     		str	r4, [sp, #68]
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 334              		.loc 1 41 3 is_stmt 1 view .LVU90
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 335              		.loc 1 41 22 is_stmt 0 view .LVU91
 336 0012 0994     		str	r4, [sp, #36]
 337 0014 0A94     		str	r4, [sp, #40]
 338 0016 0B94     		str	r4, [sp, #44]
 339 0018 0C94     		str	r4, [sp, #48]
 340 001a 0D94     		str	r4, [sp, #52]
 341 001c 0E94     		str	r4, [sp, #56]
 342 001e 0F94     		str	r4, [sp, #60]
  42:Core/Src/tim.c **** 
 343              		.loc 1 42 3 is_stmt 1 view .LVU92
  42:Core/Src/tim.c **** 
 344              		.loc 1 42 34 is_stmt 0 view .LVU93
 345 0020 2022     		movs	r2, #32
 346 0022 2146     		mov	r1, r4
 347 0024 01A8     		add	r0, sp, #4
 348 0026 FFF7FEFF 		bl	memset
 349              	.LVL14:
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 72-1;
 350              		.loc 1 47 3 is_stmt 1 view .LVU94
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 72-1;
 351              		.loc 1 47 18 is_stmt 0 view .LVU95
 352 002a 2E48     		ldr	r0, .L33
 353 002c 2E4B     		ldr	r3, .L33+4
 354 002e 0360     		str	r3, [r0]
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 355              		.loc 1 48 3 is_stmt 1 view .LVU96
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 356              		.loc 1 48 24 is_stmt 0 view .LVU97
 357 0030 4723     		movs	r3, #71
 358 0032 4360     		str	r3, [r0, #4]
  49:Core/Src/tim.c ****   htim1.Init.Period = 1000-1;
 359              		.loc 1 49 3 is_stmt 1 view .LVU98
  49:Core/Src/tim.c ****   htim1.Init.Period = 1000-1;
 360              		.loc 1 49 26 is_stmt 0 view .LVU99
 361 0034 8460     		str	r4, [r0, #8]
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 362              		.loc 1 50 3 is_stmt 1 view .LVU100
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 363              		.loc 1 50 21 is_stmt 0 view .LVU101
 364 0036 40F2E733 		movw	r3, #999
 365 003a C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccclXs4w.s 			page 13


  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 366              		.loc 1 51 3 is_stmt 1 view .LVU102
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 367              		.loc 1 51 28 is_stmt 0 view .LVU103
 368 003c 0461     		str	r4, [r0, #16]
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 369              		.loc 1 52 3 is_stmt 1 view .LVU104
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 370              		.loc 1 52 32 is_stmt 0 view .LVU105
 371 003e 4461     		str	r4, [r0, #20]
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 372              		.loc 1 53 3 is_stmt 1 view .LVU106
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 373              		.loc 1 53 32 is_stmt 0 view .LVU107
 374 0040 8461     		str	r4, [r0, #24]
  54:Core/Src/tim.c ****   {
 375              		.loc 1 54 3 is_stmt 1 view .LVU108
  54:Core/Src/tim.c ****   {
 376              		.loc 1 54 7 is_stmt 0 view .LVU109
 377 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 378              	.LVL15:
  54:Core/Src/tim.c ****   {
 379              		.loc 1 54 6 view .LVU110
 380 0046 0028     		cmp	r0, #0
 381 0048 3AD1     		bne	.L27
 382              	.L20:
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 383              		.loc 1 58 3 is_stmt 1 view .LVU111
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 384              		.loc 1 58 34 is_stmt 0 view .LVU112
 385 004a 4FF48053 		mov	r3, #4096
 386 004e 1293     		str	r3, [sp, #72]
  59:Core/Src/tim.c ****   {
 387              		.loc 1 59 3 is_stmt 1 view .LVU113
  59:Core/Src/tim.c ****   {
 388              		.loc 1 59 7 is_stmt 0 view .LVU114
 389 0050 12A9     		add	r1, sp, #72
 390 0052 2448     		ldr	r0, .L33
 391 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 392              	.LVL16:
  59:Core/Src/tim.c ****   {
 393              		.loc 1 59 6 view .LVU115
 394 0058 0028     		cmp	r0, #0
 395 005a 34D1     		bne	.L28
 396              	.L21:
  63:Core/Src/tim.c ****   {
 397              		.loc 1 63 3 is_stmt 1 view .LVU116
  63:Core/Src/tim.c ****   {
 398              		.loc 1 63 7 is_stmt 0 view .LVU117
 399 005c 2148     		ldr	r0, .L33
 400 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 401              	.LVL17:
  63:Core/Src/tim.c ****   {
 402              		.loc 1 63 6 view .LVU118
 403 0062 0028     		cmp	r0, #0
 404 0064 32D1     		bne	.L29
 405              	.L22:
ARM GAS  /tmp/ccclXs4w.s 			page 14


  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 406              		.loc 1 67 3 is_stmt 1 view .LVU119
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 407              		.loc 1 67 37 is_stmt 0 view .LVU120
 408 0066 0023     		movs	r3, #0
 409 0068 1093     		str	r3, [sp, #64]
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 410              		.loc 1 68 3 is_stmt 1 view .LVU121
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 411              		.loc 1 68 33 is_stmt 0 view .LVU122
 412 006a 1193     		str	r3, [sp, #68]
  69:Core/Src/tim.c ****   {
 413              		.loc 1 69 3 is_stmt 1 view .LVU123
  69:Core/Src/tim.c ****   {
 414              		.loc 1 69 7 is_stmt 0 view .LVU124
 415 006c 10A9     		add	r1, sp, #64
 416 006e 1D48     		ldr	r0, .L33
 417 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 418              	.LVL18:
  69:Core/Src/tim.c ****   {
 419              		.loc 1 69 6 view .LVU125
 420 0074 0028     		cmp	r0, #0
 421 0076 2CD1     		bne	.L30
 422              	.L23:
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 500;
 423              		.loc 1 73 3 is_stmt 1 view .LVU126
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 500;
 424              		.loc 1 73 20 is_stmt 0 view .LVU127
 425 0078 6023     		movs	r3, #96
 426 007a 0993     		str	r3, [sp, #36]
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 427              		.loc 1 74 3 is_stmt 1 view .LVU128
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 428              		.loc 1 74 19 is_stmt 0 view .LVU129
 429 007c 4FF4FA73 		mov	r3, #500
 430 0080 0A93     		str	r3, [sp, #40]
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 431              		.loc 1 75 3 is_stmt 1 view .LVU130
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 432              		.loc 1 75 24 is_stmt 0 view .LVU131
 433 0082 0022     		movs	r2, #0
 434 0084 0B92     		str	r2, [sp, #44]
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 435              		.loc 1 76 3 is_stmt 1 view .LVU132
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 436              		.loc 1 76 25 is_stmt 0 view .LVU133
 437 0086 0C92     		str	r2, [sp, #48]
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 438              		.loc 1 77 3 is_stmt 1 view .LVU134
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 439              		.loc 1 77 24 is_stmt 0 view .LVU135
 440 0088 0D92     		str	r2, [sp, #52]
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 441              		.loc 1 78 3 is_stmt 1 view .LVU136
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 442              		.loc 1 78 25 is_stmt 0 view .LVU137
 443 008a 0E92     		str	r2, [sp, #56]
ARM GAS  /tmp/ccclXs4w.s 			page 15


  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 444              		.loc 1 79 3 is_stmt 1 view .LVU138
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 445              		.loc 1 79 26 is_stmt 0 view .LVU139
 446 008c 0F92     		str	r2, [sp, #60]
  80:Core/Src/tim.c ****   {
 447              		.loc 1 80 3 is_stmt 1 view .LVU140
  80:Core/Src/tim.c ****   {
 448              		.loc 1 80 7 is_stmt 0 view .LVU141
 449 008e 09A9     		add	r1, sp, #36
 450 0090 1448     		ldr	r0, .L33
 451 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 452              	.LVL19:
  80:Core/Src/tim.c ****   {
 453              		.loc 1 80 6 view .LVU142
 454 0096 F8B9     		cbnz	r0, .L31
 455              	.L24:
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 456              		.loc 1 84 3 is_stmt 1 view .LVU143
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 457              		.loc 1 84 40 is_stmt 0 view .LVU144
 458 0098 0023     		movs	r3, #0
 459 009a 0193     		str	r3, [sp, #4]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 460              		.loc 1 85 3 is_stmt 1 view .LVU145
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 461              		.loc 1 85 41 is_stmt 0 view .LVU146
 462 009c 0293     		str	r3, [sp, #8]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 463              		.loc 1 86 3 is_stmt 1 view .LVU147
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 464              		.loc 1 86 34 is_stmt 0 view .LVU148
 465 009e 0393     		str	r3, [sp, #12]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 466              		.loc 1 87 3 is_stmt 1 view .LVU149
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 467              		.loc 1 87 33 is_stmt 0 view .LVU150
 468 00a0 0493     		str	r3, [sp, #16]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 469              		.loc 1 88 3 is_stmt 1 view .LVU151
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 470              		.loc 1 88 35 is_stmt 0 view .LVU152
 471 00a2 0593     		str	r3, [sp, #20]
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 472              		.loc 1 89 3 is_stmt 1 view .LVU153
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 473              		.loc 1 89 38 is_stmt 0 view .LVU154
 474 00a4 4FF40052 		mov	r2, #8192
 475 00a8 0692     		str	r2, [sp, #24]
  90:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 476              		.loc 1 90 3 is_stmt 1 view .LVU155
  90:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 477              		.loc 1 90 40 is_stmt 0 view .LVU156
 478 00aa 0893     		str	r3, [sp, #32]
  91:Core/Src/tim.c ****   {
 479              		.loc 1 91 3 is_stmt 1 view .LVU157
  91:Core/Src/tim.c ****   {
ARM GAS  /tmp/ccclXs4w.s 			page 16


 480              		.loc 1 91 7 is_stmt 0 view .LVU158
 481 00ac 01A9     		add	r1, sp, #4
 482 00ae 0D48     		ldr	r0, .L33
 483 00b0 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 484              	.LVL20:
  91:Core/Src/tim.c ****   {
 485              		.loc 1 91 6 view .LVU159
 486 00b4 98B9     		cbnz	r0, .L32
 487              	.L25:
  98:Core/Src/tim.c **** 
 488              		.loc 1 98 3 is_stmt 1 view .LVU160
 489 00b6 0B48     		ldr	r0, .L33
 490 00b8 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 491              	.LVL21:
 100:Core/Src/tim.c **** /* TIM2 init function */
 492              		.loc 1 100 1 is_stmt 0 view .LVU161
 493 00bc 16B0     		add	sp, sp, #88
 494              	.LCFI10:
 495              		.cfi_remember_state
 496              		.cfi_def_cfa_offset 8
 497              		@ sp needed
 498 00be 10BD     		pop	{r4, pc}
 499              	.L27:
 500              	.LCFI11:
 501              		.cfi_restore_state
  56:Core/Src/tim.c ****   }
 502              		.loc 1 56 5 is_stmt 1 view .LVU162
 503 00c0 FFF7FEFF 		bl	Error_Handler
 504              	.LVL22:
 505 00c4 C1E7     		b	.L20
 506              	.L28:
  61:Core/Src/tim.c ****   }
 507              		.loc 1 61 5 view .LVU163
 508 00c6 FFF7FEFF 		bl	Error_Handler
 509              	.LVL23:
 510 00ca C7E7     		b	.L21
 511              	.L29:
  65:Core/Src/tim.c ****   }
 512              		.loc 1 65 5 view .LVU164
 513 00cc FFF7FEFF 		bl	Error_Handler
 514              	.LVL24:
 515 00d0 C9E7     		b	.L22
 516              	.L30:
  71:Core/Src/tim.c ****   }
 517              		.loc 1 71 5 view .LVU165
 518 00d2 FFF7FEFF 		bl	Error_Handler
 519              	.LVL25:
 520 00d6 CFE7     		b	.L23
 521              	.L31:
  82:Core/Src/tim.c ****   }
 522              		.loc 1 82 5 view .LVU166
 523 00d8 FFF7FEFF 		bl	Error_Handler
 524              	.LVL26:
 525 00dc DCE7     		b	.L24
 526              	.L32:
  93:Core/Src/tim.c ****   }
 527              		.loc 1 93 5 view .LVU167
ARM GAS  /tmp/ccclXs4w.s 			page 17


 528 00de FFF7FEFF 		bl	Error_Handler
 529              	.LVL27:
 530 00e2 E8E7     		b	.L25
 531              	.L34:
 532              		.align	2
 533              	.L33:
 534 00e4 00000000 		.word	.LANCHOR1
 535 00e8 002C0140 		.word	1073818624
 536              		.cfi_endproc
 537              	.LFE65:
 539              		.section	.text.MX_TIM2_Init,"ax",%progbits
 540              		.align	1
 541              		.global	MX_TIM2_Init
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu softvfp
 547              	MX_TIM2_Init:
 548              	.LFB66:
 103:Core/Src/tim.c **** 
 549              		.loc 1 103 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 56
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553 0000 00B5     		push	{lr}
 554              	.LCFI12:
 555              		.cfi_def_cfa_offset 4
 556              		.cfi_offset 14, -4
 557 0002 8FB0     		sub	sp, sp, #60
 558              	.LCFI13:
 559              		.cfi_def_cfa_offset 64
 109:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 560              		.loc 1 109 3 view .LVU169
 109:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 561              		.loc 1 109 26 is_stmt 0 view .LVU170
 562 0004 0023     		movs	r3, #0
 563 0006 0A93     		str	r3, [sp, #40]
 564 0008 0B93     		str	r3, [sp, #44]
 565 000a 0C93     		str	r3, [sp, #48]
 566 000c 0D93     		str	r3, [sp, #52]
 110:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 567              		.loc 1 110 3 is_stmt 1 view .LVU171
 110:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 568              		.loc 1 110 27 is_stmt 0 view .LVU172
 569 000e 0893     		str	r3, [sp, #32]
 570 0010 0993     		str	r3, [sp, #36]
 111:Core/Src/tim.c **** 
 571              		.loc 1 111 3 is_stmt 1 view .LVU173
 111:Core/Src/tim.c **** 
 572              		.loc 1 111 22 is_stmt 0 view .LVU174
 573 0012 0193     		str	r3, [sp, #4]
 574 0014 0293     		str	r3, [sp, #8]
 575 0016 0393     		str	r3, [sp, #12]
 576 0018 0493     		str	r3, [sp, #16]
 577 001a 0593     		str	r3, [sp, #20]
 578 001c 0693     		str	r3, [sp, #24]
 579 001e 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccclXs4w.s 			page 18


 116:Core/Src/tim.c ****   htim2.Init.Prescaler = 18-1;
 580              		.loc 1 116 3 is_stmt 1 view .LVU175
 116:Core/Src/tim.c ****   htim2.Init.Prescaler = 18-1;
 581              		.loc 1 116 18 is_stmt 0 view .LVU176
 582 0020 2148     		ldr	r0, .L47
 583 0022 4FF08042 		mov	r2, #1073741824
 584 0026 0260     		str	r2, [r0]
 117:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 585              		.loc 1 117 3 is_stmt 1 view .LVU177
 117:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 586              		.loc 1 117 24 is_stmt 0 view .LVU178
 587 0028 1122     		movs	r2, #17
 588 002a 4260     		str	r2, [r0, #4]
 118:Core/Src/tim.c ****   htim2.Init.Period = 5-1;
 589              		.loc 1 118 3 is_stmt 1 view .LVU179
 118:Core/Src/tim.c ****   htim2.Init.Period = 5-1;
 590              		.loc 1 118 26 is_stmt 0 view .LVU180
 591 002c 8360     		str	r3, [r0, #8]
 119:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 592              		.loc 1 119 3 is_stmt 1 view .LVU181
 119:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 593              		.loc 1 119 21 is_stmt 0 view .LVU182
 594 002e 0422     		movs	r2, #4
 595 0030 C260     		str	r2, [r0, #12]
 120:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 596              		.loc 1 120 3 is_stmt 1 view .LVU183
 120:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 597              		.loc 1 120 28 is_stmt 0 view .LVU184
 598 0032 0361     		str	r3, [r0, #16]
 121:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 599              		.loc 1 121 3 is_stmt 1 view .LVU185
 121:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 600              		.loc 1 121 32 is_stmt 0 view .LVU186
 601 0034 8361     		str	r3, [r0, #24]
 122:Core/Src/tim.c ****   {
 602              		.loc 1 122 3 is_stmt 1 view .LVU187
 122:Core/Src/tim.c ****   {
 603              		.loc 1 122 7 is_stmt 0 view .LVU188
 604 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 605              	.LVL28:
 122:Core/Src/tim.c ****   {
 606              		.loc 1 122 6 view .LVU189
 607 003a 30BB     		cbnz	r0, .L42
 608              	.L36:
 126:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 609              		.loc 1 126 3 is_stmt 1 view .LVU190
 126:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 610              		.loc 1 126 34 is_stmt 0 view .LVU191
 611 003c 4FF48053 		mov	r3, #4096
 612 0040 0A93     		str	r3, [sp, #40]
 127:Core/Src/tim.c ****   {
 613              		.loc 1 127 3 is_stmt 1 view .LVU192
 127:Core/Src/tim.c ****   {
 614              		.loc 1 127 7 is_stmt 0 view .LVU193
 615 0042 0AA9     		add	r1, sp, #40
 616 0044 1848     		ldr	r0, .L47
 617 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
ARM GAS  /tmp/ccclXs4w.s 			page 19


 618              	.LVL29:
 127:Core/Src/tim.c ****   {
 619              		.loc 1 127 6 view .LVU194
 620 004a 08BB     		cbnz	r0, .L43
 621              	.L37:
 131:Core/Src/tim.c ****   {
 622              		.loc 1 131 3 is_stmt 1 view .LVU195
 131:Core/Src/tim.c ****   {
 623              		.loc 1 131 7 is_stmt 0 view .LVU196
 624 004c 1648     		ldr	r0, .L47
 625 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 626              	.LVL30:
 131:Core/Src/tim.c ****   {
 627              		.loc 1 131 6 view .LVU197
 628 0052 00BB     		cbnz	r0, .L44
 629              	.L38:
 135:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 630              		.loc 1 135 3 is_stmt 1 view .LVU198
 135:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 631              		.loc 1 135 37 is_stmt 0 view .LVU199
 632 0054 0023     		movs	r3, #0
 633 0056 0893     		str	r3, [sp, #32]
 136:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 634              		.loc 1 136 3 is_stmt 1 view .LVU200
 136:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 635              		.loc 1 136 33 is_stmt 0 view .LVU201
 636 0058 0993     		str	r3, [sp, #36]
 137:Core/Src/tim.c ****   {
 637              		.loc 1 137 3 is_stmt 1 view .LVU202
 137:Core/Src/tim.c ****   {
 638              		.loc 1 137 7 is_stmt 0 view .LVU203
 639 005a 08A9     		add	r1, sp, #32
 640 005c 1248     		ldr	r0, .L47
 641 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 642              	.LVL31:
 137:Core/Src/tim.c ****   {
 643              		.loc 1 137 6 view .LVU204
 644 0062 D8B9     		cbnz	r0, .L45
 645              	.L39:
 141:Core/Src/tim.c ****   sConfigOC.Pulse = 1000;
 646              		.loc 1 141 3 is_stmt 1 view .LVU205
 141:Core/Src/tim.c ****   sConfigOC.Pulse = 1000;
 647              		.loc 1 141 20 is_stmt 0 view .LVU206
 648 0064 6023     		movs	r3, #96
 649 0066 0193     		str	r3, [sp, #4]
 142:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 650              		.loc 1 142 3 is_stmt 1 view .LVU207
 142:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 651              		.loc 1 142 19 is_stmt 0 view .LVU208
 652 0068 4FF47A73 		mov	r3, #1000
 653 006c 0293     		str	r3, [sp, #8]
 143:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 654              		.loc 1 143 3 is_stmt 1 view .LVU209
 143:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 655              		.loc 1 143 24 is_stmt 0 view .LVU210
 656 006e 0022     		movs	r2, #0
 657 0070 0392     		str	r2, [sp, #12]
ARM GAS  /tmp/ccclXs4w.s 			page 20


 144:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 658              		.loc 1 144 3 is_stmt 1 view .LVU211
 144:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 659              		.loc 1 144 24 is_stmt 0 view .LVU212
 660 0072 0592     		str	r2, [sp, #20]
 145:Core/Src/tim.c ****   {
 661              		.loc 1 145 3 is_stmt 1 view .LVU213
 145:Core/Src/tim.c ****   {
 662              		.loc 1 145 7 is_stmt 0 view .LVU214
 663 0074 01A9     		add	r1, sp, #4
 664 0076 0C48     		ldr	r0, .L47
 665 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 666              	.LVL32:
 145:Core/Src/tim.c ****   {
 667              		.loc 1 145 6 view .LVU215
 668 007c 88B9     		cbnz	r0, .L46
 669              	.L40:
 152:Core/Src/tim.c **** 
 670              		.loc 1 152 3 is_stmt 1 view .LVU216
 671 007e 0A48     		ldr	r0, .L47
 672 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 673              	.LVL33:
 154:Core/Src/tim.c **** 
 674              		.loc 1 154 1 is_stmt 0 view .LVU217
 675 0084 0FB0     		add	sp, sp, #60
 676              	.LCFI14:
 677              		.cfi_remember_state
 678              		.cfi_def_cfa_offset 4
 679              		@ sp needed
 680 0086 5DF804FB 		ldr	pc, [sp], #4
 681              	.L42:
 682              	.LCFI15:
 683              		.cfi_restore_state
 124:Core/Src/tim.c ****   }
 684              		.loc 1 124 5 is_stmt 1 view .LVU218
 685 008a FFF7FEFF 		bl	Error_Handler
 686              	.LVL34:
 687 008e D5E7     		b	.L36
 688              	.L43:
 129:Core/Src/tim.c ****   }
 689              		.loc 1 129 5 view .LVU219
 690 0090 FFF7FEFF 		bl	Error_Handler
 691              	.LVL35:
 692 0094 DAE7     		b	.L37
 693              	.L44:
 133:Core/Src/tim.c ****   }
 694              		.loc 1 133 5 view .LVU220
 695 0096 FFF7FEFF 		bl	Error_Handler
 696              	.LVL36:
 697 009a DBE7     		b	.L38
 698              	.L45:
 139:Core/Src/tim.c ****   }
 699              		.loc 1 139 5 view .LVU221
 700 009c FFF7FEFF 		bl	Error_Handler
 701              	.LVL37:
 702 00a0 E0E7     		b	.L39
 703              	.L46:
ARM GAS  /tmp/ccclXs4w.s 			page 21


 147:Core/Src/tim.c ****   }
 704              		.loc 1 147 5 view .LVU222
 705 00a2 FFF7FEFF 		bl	Error_Handler
 706              	.LVL38:
 707 00a6 EAE7     		b	.L40
 708              	.L48:
 709              		.align	2
 710              	.L47:
 711 00a8 00000000 		.word	.LANCHOR2
 712              		.cfi_endproc
 713              	.LFE66:
 715              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 716              		.align	1
 717              		.global	HAL_TIM_Base_MspDeInit
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu softvfp
 723              	HAL_TIM_Base_MspDeInit:
 724              	.LVL39:
 725              	.LFB69:
 243:Core/Src/tim.c **** 
 244:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 245:Core/Src/tim.c **** {
 726              		.loc 1 245 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		.loc 1 245 1 is_stmt 0 view .LVU224
 731 0000 08B5     		push	{r3, lr}
 732              	.LCFI16:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 3, -8
 735              		.cfi_offset 14, -4
 246:Core/Src/tim.c **** 
 247:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 736              		.loc 1 247 3 is_stmt 1 view .LVU225
 737              		.loc 1 247 20 is_stmt 0 view .LVU226
 738 0002 0368     		ldr	r3, [r0]
 739              		.loc 1 247 5 view .LVU227
 740 0004 0B4A     		ldr	r2, .L55
 741 0006 9342     		cmp	r3, r2
 742 0008 03D0     		beq	.L53
 248:Core/Src/tim.c ****   {
 249:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 250:Core/Src/tim.c **** 
 251:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 252:Core/Src/tim.c ****     /* Peripheral clock disable */
 253:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 254:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 255:Core/Src/tim.c **** 
 256:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 257:Core/Src/tim.c ****   }
 258:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
 743              		.loc 1 258 8 is_stmt 1 view .LVU228
 744              		.loc 1 258 10 is_stmt 0 view .LVU229
 745 000a B3F1804F 		cmp	r3, #1073741824
ARM GAS  /tmp/ccclXs4w.s 			page 22


 746 000e 07D0     		beq	.L54
 747              	.LVL40:
 748              	.L49:
 259:Core/Src/tim.c ****   {
 260:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 261:Core/Src/tim.c **** 
 262:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 263:Core/Src/tim.c ****     /* Peripheral clock disable */
 264:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 265:Core/Src/tim.c **** 
 266:Core/Src/tim.c ****     /* TIM2 DMA DeInit */
 267:Core/Src/tim.c ****     HAL_DMA_DeInit(tim_baseHandle->hdma[TIM_DMA_ID_CC1]);
 268:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 269:Core/Src/tim.c **** 
 270:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 271:Core/Src/tim.c ****   }
 272:Core/Src/tim.c **** }
 749              		.loc 1 272 1 view .LVU230
 750 0010 08BD     		pop	{r3, pc}
 751              	.LVL41:
 752              	.L53:
 253:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 753              		.loc 1 253 5 is_stmt 1 view .LVU231
 754 0012 02F56442 		add	r2, r2, #58368
 755 0016 9369     		ldr	r3, [r2, #24]
 756 0018 23F40063 		bic	r3, r3, #2048
 757 001c 9361     		str	r3, [r2, #24]
 758 001e F7E7     		b	.L49
 759              	.L54:
 264:Core/Src/tim.c **** 
 760              		.loc 1 264 5 view .LVU232
 761 0020 054A     		ldr	r2, .L55+4
 762 0022 D369     		ldr	r3, [r2, #28]
 763 0024 23F00103 		bic	r3, r3, #1
 764 0028 D361     		str	r3, [r2, #28]
 267:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 765              		.loc 1 267 5 view .LVU233
 766 002a 406A     		ldr	r0, [r0, #36]
 767              	.LVL42:
 267:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 768              		.loc 1 267 5 is_stmt 0 view .LVU234
 769 002c FFF7FEFF 		bl	HAL_DMA_DeInit
 770              	.LVL43:
 771              		.loc 1 272 1 view .LVU235
 772 0030 EEE7     		b	.L49
 773              	.L56:
 774 0032 00BF     		.align	2
 775              	.L55:
 776 0034 002C0140 		.word	1073818624
 777 0038 00100240 		.word	1073876992
 778              		.cfi_endproc
 779              	.LFE69:
 781              		.global	hdma_tim2_ch1
 782              		.global	htim2
 783              		.global	htim1
 784              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 785              		.align	2
ARM GAS  /tmp/ccclXs4w.s 			page 23


 786              		.set	.LANCHOR0,. + 0
 789              	hdma_tim2_ch1:
 790 0000 00000000 		.space	68
 790      00000000 
 790      00000000 
 790      00000000 
 790      00000000 
 791              		.section	.bss.htim1,"aw",%nobits
 792              		.align	2
 793              		.set	.LANCHOR1,. + 0
 796              	htim1:
 797 0000 00000000 		.space	72
 797      00000000 
 797      00000000 
 797      00000000 
 797      00000000 
 798              		.section	.bss.htim2,"aw",%nobits
 799              		.align	2
 800              		.set	.LANCHOR2,. + 0
 803              	htim2:
 804 0000 00000000 		.space	72
 804      00000000 
 804      00000000 
 804      00000000 
 804      00000000 
 805              		.text
 806              	.Letext0:
 807              		.file 2 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 808              		.file 3 "/home/akinya/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 809              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 810              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 811              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 812              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 813              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 814              		.file 9 "Core/Inc/tim.h"
 815              		.file 10 "Core/Inc/main.h"
 816              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 817              		.file 12 "<built-in>"
ARM GAS  /tmp/ccclXs4w.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccclXs4w.s:16     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccclXs4w.s:24     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccclXs4w.s:158    .text.HAL_TIM_Base_MspInit:000000000000007c $d
     /tmp/ccclXs4w.s:166    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccclXs4w.s:173    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccclXs4w.s:295    .text.HAL_TIM_MspPostInit:0000000000000078 $d
     /tmp/ccclXs4w.s:302    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccclXs4w.s:309    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccclXs4w.s:534    .text.MX_TIM1_Init:00000000000000e4 $d
     /tmp/ccclXs4w.s:540    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccclXs4w.s:547    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccclXs4w.s:711    .text.MX_TIM2_Init:00000000000000a8 $d
     /tmp/ccclXs4w.s:716    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccclXs4w.s:723    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccclXs4w.s:776    .text.HAL_TIM_Base_MspDeInit:0000000000000034 $d
     /tmp/ccclXs4w.s:789    .bss.hdma_tim2_ch1:0000000000000000 hdma_tim2_ch1
     /tmp/ccclXs4w.s:803    .bss.htim2:0000000000000000 htim2
     /tmp/ccclXs4w.s:796    .bss.htim1:0000000000000000 htim1
     /tmp/ccclXs4w.s:785    .bss.hdma_tim2_ch1:0000000000000000 $d
     /tmp/ccclXs4w.s:792    .bss.htim1:0000000000000000 $d
     /tmp/ccclXs4w.s:799    .bss.htim2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_DMA_Init
Error_Handler
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_DMA_DeInit
